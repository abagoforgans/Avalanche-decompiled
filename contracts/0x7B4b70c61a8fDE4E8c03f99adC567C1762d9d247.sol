contract main {




// =====================  Runtime code  =====================


#
#  - swapTokensForExactETH(uint256 arg1, uint256 arg2, address[] arg3, address arg4, address arg5)
#  - swapTokensForExactTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, address arg5)
#  - addLiquidityETH(address arg1, uint256 arg2, uint256 arg3, uint256 arg4, address arg5)
#  - swapExactTokensForETH(uint256 arg1, address[] arg2, address arg3, address arg4)
#  - swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, address arg5)
#  - addLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5, uint256 arg6, address arg7)
#
address factoryAddress;
address WETHAddress;
uint256 stor1;

function WETH() {
    return address(WETHAddress)
}

function factory() {
    return factoryAddress
}

function _fallback() payable {
    revert
}

function tokenToIERC(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not arg1:
        return address(WETHAddress)
    return arg1
}

function getLiquidity(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    require ext_code.size(factoryAddress)
    staticcall factoryAddress.0x901754d7 with:
            gas gas_remaining wei
           args address(arg1), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    staticcall address(ext_call.return_data[0]).0x70a08231 with:
            gas gas_remaining wei
           args msg.sender
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function getReservesByPool(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    require ext_code.size(arg1)
    staticcall arg1.tokens(uint256 rg1) with:
            gas gas_remaining wei
           args 0
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(arg1)
    staticcall arg1.getBalanceForAddition(address rg1) with:
            gas gas_remaining wei
           args address(ext_call.return_data[0])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(arg1)
    staticcall arg1.tokens(uint256 rg1) with:
            gas gas_remaining wei
           args 1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(arg1)
    staticcall arg1.getBalanceForAddition(address rg1) with:
            gas gas_remaining wei
           args address(ext_call.return_data[0])
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0], ext_call.return_data[0]
}

function resetAllowance(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    require ext_code.size(arg1)
    staticcall arg1.0xdd62ed3e with:
            gas gas_remaining wei
           args address(this.address), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] > 0:
        mem[ceil32(return_data.size) + 196 len 96] = approve(address rg1, uint256 rg2), address(arg2) << 64, 0, 0, mem[ceil32(return_data.size) + 196 len 28]
        call arg1.mem[ceil32(return_data.size) + 196 len 4] with:
             gas gas_remaining wei
            args mem[ceil32(return_data.size) + 200 len 64]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if ext_call.return_data[0]:
                require ext_call.return_data[0] >= 32
                require 0, address(arg2) << 64 == bool(0, address(arg2) << 64)
                if not 0, address(arg2) << 64:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
        else:
            mem[ceil32(return_data.size) + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if return_data.size:
                require return_data.size >= 32
                require mem[ceil32(return_data.size) + 228] == bool(mem[ceil32(return_data.size) + 228])
                if not mem[ceil32(return_data.size) + 228]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
}

function getReserves(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    require ext_code.size(factoryAddress)
    if not arg1:
        if not arg2:
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args address(WETHAddress), address(WETHAddress)
        else:
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args address(WETHAddress), arg2
    else:
        if not arg2:
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args address(arg1), address(WETHAddress)
        else:
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args address(arg1), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if not ext_call.return_data[12 len 20]:
        return 0
    require ext_code.size(factoryAddress)
    if not arg1:
        if not arg2:
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args address(WETHAddress), address(WETHAddress)
        else:
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args address(WETHAddress), arg2
    else:
        if not arg2:
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args address(arg1), address(WETHAddress)
        else:
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args address(arg1), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    if not arg1:
        staticcall address(ext_call.return_data[0]).getBalanceForAddition(address rg1) with:
                gas gas_remaining wei
               args address(WETHAddress)
    else:
        staticcall address(ext_call.return_data[0]).getBalanceForAddition(address rg1) with:
                gas gas_remaining wei
               args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(factoryAddress)
    if not arg1:
        if not arg2:
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args address(WETHAddress), address(WETHAddress)
        else:
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args address(WETHAddress), arg2
    else:
        if not arg2:
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args address(arg1), address(WETHAddress)
        else:
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args address(arg1), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    require ext_code.size(address(ext_call.return_data[0]))
    if not arg2:
        staticcall address(ext_call.return_data[0]).getBalanceForAddition(address rg1) with:
                gas gas_remaining wei
               args address(WETHAddress)
    else:
        staticcall address(ext_call.return_data[0]).getBalanceForAddition(address rg1) with:
                gas gas_remaining wei
               args arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(factoryAddress)
    if not arg1:
        if not arg2:
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args address(WETHAddress), address(WETHAddress)
        else:
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args address(WETHAddress), arg2
    else:
        if not arg2:
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args address(arg1), address(WETHAddress)
        else:
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args address(arg1), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    return ext_call.return_data[0], ext_call.return_data[0], address(ext_call.return_data[0])
}

function removeLiquidityETH(address arg1, uint256 arg2, uint256 arg3, uint256 arg4) {
    require calldata.size - 4 >= 128
    require arg1 == arg1
    require ext_code.size(factoryAddress)
    staticcall factoryAddress.0x901754d7 with:
            gas gas_remaining wei
           args address(arg1), address(WETHAddress)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    mem[ceil32(return_data.size) + 228 len 128] = unknown_0x23b872dd(?????), msg.sender, address(this.address), arg2, mem[ceil32(return_data.size) + 228 len 28]
    call address(ext_call.return_data[0]).mem[ceil32(return_data.size) + 228 len 4] with:
         gas gas_remaining wei
        args mem[ceil32(return_data.size) + 232 len 96]
    if not return_data.size:
        if not ext_call.success:
            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
        if ext_call.return_data[0]:
            require ext_call.return_data[0] >= 32
            require 0, Mask(224, 0, stor1) == bool(0, Mask(224, 0, stor1))
            if not 0, Mask(224, 0, stor1):
                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
        require ext_code.size(arg1)
        staticcall arg1.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(WETHAddress))
        staticcall address(WETHAddress).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if arg1 >= address(WETHAddress):
            mem[(4 * ceil32(return_data.size)) + 424 len 64] = arg4, arg3
            require ext_code.size(address(ext_call.return_data[0]))
            call address(ext_call.return_data[0]).withdraw(uint256 rg1, uint256[] rg2) with:
                 gas gas_remaining wei
                args arg2, Array(len=2, data=arg4, arg3)
        else:
            mem[(4 * ceil32(return_data.size)) + 424 len 64] = arg3, arg4
            require ext_code.size(address(ext_call.return_data[0]))
            call address(ext_call.return_data[0]).withdraw(uint256 rg1, uint256[] rg2) with:
                 gas gas_remaining wei
                args arg2, Array(len=2, data=arg3, arg4)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(arg1)
        staticcall arg1.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > ext_call.return_data[0]:
            revert with 0, 'SafeMath: subtraction overflow', mem[(6 * ceil32(return_data.size)) + 424 len 9 * ceil32(return_data.size)]
        require ext_code.size(address(WETHAddress))
        staticcall address(WETHAddress).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > ext_call.return_data[0]:
            revert with 0, 'SafeMath: subtraction overflow'
        mem[(7 * ceil32(return_data.size)) + 424 len 96] = 0, msg.sender, 0, mem[(7 * ceil32(return_data.size)) + 424 len 28]
        call arg1.mem[(7 * ceil32(return_data.size)) + 424 len 4] with:
             gas gas_remaining wei
            args mem[(7 * ceil32(return_data.size)) + 428 len 64]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            if ext_call.return_data[0]:
                require ext_call.return_data[0] >= 32
                require 0, Mask(224, 0, stor1) == bool(0, Mask(224, 0, stor1))
                if not 0, Mask(224, 0, stor1):
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
        else:
            mem[(7 * ceil32(return_data.size)) + 456 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            if return_data.size:
                require return_data.size >= 32
                require mem[(7 * ceil32(return_data.size)) + 456] == bool(mem[(7 * ceil32(return_data.size)) + 456])
                if not mem[(7 * ceil32(return_data.size)) + 456]:
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
        require ext_code.size(address(WETHAddress))
        call address(WETHAddress).0x2e1a7d4d with:
             gas gas_remaining wei
            args 0
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        call msg.sender with:
             gas gas_remaining wei
        if not ext_call.success:
            revert with 0, 'TransferHelper: ETH_TRANSFER_FAILED'
    else:
        mem[ceil32(return_data.size) + 260 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
        if return_data.size:
            require return_data.size >= 32
            require mem[ceil32(return_data.size) + 260] == bool(mem[ceil32(return_data.size) + 260])
            if not mem[ceil32(return_data.size) + 260]:
                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
        require ext_code.size(arg1)
        staticcall arg1.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(address(WETHAddress))
        staticcall address(WETHAddress).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if arg1 >= address(WETHAddress):
            mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 64] = arg4, arg3
            require ext_code.size(address(ext_call.return_data[0]))
            call address(ext_call.return_data[0]).withdraw(uint256 rg1, uint256[] rg2) with:
                 gas gas_remaining wei
                args arg2, Array(len=2, data=arg4, arg3)
        else:
            mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 64] = arg3, arg4
            require ext_code.size(address(ext_call.return_data[0]))
            call address(ext_call.return_data[0]).withdraw(uint256 rg1, uint256[] rg2) with:
                 gas gas_remaining wei
                args arg2, Array(len=2, data=arg3, arg4)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(arg1)
        staticcall arg1.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > ext_call.return_data[0]:
            revert with 0, 
                        'SafeMath: subtraction overflow',
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 9 * ceil32(return_data.size)]
        require ext_code.size(address(WETHAddress))
        staticcall address(WETHAddress).0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > ext_call.return_data[0]:
            revert with 0, 'SafeMath: subtraction overflow'
        mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 96] = 0, msg.sender, 0, mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 28]
        mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = 0
        call arg1.mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 4] with:
             gas gas_remaining wei
            args mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429 len 64]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            if ext_call.return_data[0]:
                require ext_call.return_data[0] >= 32
                require 0, Mask(224, 0, stor1) == bool(0, Mask(224, 0, stor1))
                if not 0, Mask(224, 0, stor1):
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
            require ext_code.size(address(WETHAddress))
            call address(WETHAddress).0x2e1a7d4d with:
                 gas gas_remaining wei
                args 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            call msg.sender with:
                 gas gas_remaining wei
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: ETH_TRANSFER_FAILED'
            else:
                if not ext_call.success:
                    revert with 0, 
                                'TransferHelper: ETH_TRANSFER_FAILED',
                                mem[(10 * ceil32(return_data.size)) + 590 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
        else:
            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 
                            'TransferHelper: TRANSFER_FAILED',
                            mem[(10 * ceil32(return_data.size)) + 526 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
            if return_data.size:
                require return_data.size >= 32
                require mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] == bool(mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457])
                if not mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457]:
                    revert with 0, 
                                'TransferHelper: TRANSFER_FAILED',
                                mem[(10 * ceil32(return_data.size)) + 526 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
            require ext_code.size(address(WETHAddress))
            call address(WETHAddress).0x2e1a7d4d with:
                 gas gas_remaining wei
                args 0
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            call msg.sender with:
                 gas gas_remaining wei
                args mem[(10 * ceil32(return_data.size)) + 462 len (3 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) - 4]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 
                                'TransferHelper: ETH_TRANSFER_FAILED',
                                mem[(10 * ceil32(return_data.size)) + 590 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
            else:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: ETH_TRANSFER_FAILED'
    ('bool', 'ext_call.success')
}

function removeLiquidity(address arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5) {
    require calldata.size - 4 >= 160
    require arg1 == arg1
    require arg2 == arg2
    require ext_code.size(factoryAddress)
    staticcall factoryAddress.0x901754d7 with:
            gas gas_remaining wei
           args address(arg1), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    mem[ceil32(return_data.size) + 228 len 128] = unknown_0x23b872dd(?????), msg.sender, address(this.address), arg3, mem[ceil32(return_data.size) + 228 len 28]
    call address(ext_call.return_data[0]).mem[ceil32(return_data.size) + 228 len 4] with:
         gas gas_remaining wei
        args mem[ceil32(return_data.size) + 232 len 96]
    if not return_data.size:
        if not ext_call.success:
            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
        if ext_call.return_data[0]:
            require ext_call.return_data[0] >= 32
            require 0, address(arg2) << 64 == bool(0, address(arg2) << 64)
            if not 0, address(arg2) << 64:
                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
        require ext_code.size(arg1)
        staticcall arg1.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(arg2)
        staticcall arg2.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if arg1 >= arg2:
            mem[(4 * ceil32(return_data.size)) + 424 len 64] = arg5, arg4
            require ext_code.size(address(ext_call.return_data[0]))
            call address(ext_call.return_data[0]).withdraw(uint256 rg1, uint256[] rg2) with:
                 gas gas_remaining wei
                args arg3, Array(len=2, data=arg5, arg4)
        else:
            mem[(4 * ceil32(return_data.size)) + 424 len 64] = arg4, arg5
            require ext_code.size(address(ext_call.return_data[0]))
            call address(ext_call.return_data[0]).withdraw(uint256 rg1, uint256[] rg2) with:
                 gas gas_remaining wei
                args arg3, Array(len=2, data=arg4, arg5)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(arg1)
        staticcall arg1.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > ext_call.return_data[0]:
            revert with 0, 'SafeMath: subtraction overflow', mem[(6 * ceil32(return_data.size)) + 424 len 9 * ceil32(return_data.size)]
        require ext_code.size(arg2)
        staticcall arg2.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > ext_call.return_data[0]:
            revert with 0, 'SafeMath: subtraction overflow'
        mem[(7 * ceil32(return_data.size)) + 424 len 96] = 0, msg.sender, 0, mem[(7 * ceil32(return_data.size)) + 424 len 28]
        call arg1.mem[(7 * ceil32(return_data.size)) + 424 len 4] with:
             gas gas_remaining wei
            args mem[(7 * ceil32(return_data.size)) + 428 len 64]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            if ext_call.return_data[0]:
                require ext_call.return_data[0] >= 32
                require 0, address(arg2) << 64 == bool(0, address(arg2) << 64)
                if not 0, address(arg2) << 64:
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
            mem[(7 * ceil32(return_data.size)) + 524 len 96] = 0, msg.sender, 0, mem[(7 * ceil32(return_data.size)) + 524 len 28]
            call arg2.mem[(7 * ceil32(return_data.size)) + 524 len 4] with:
                 gas gas_remaining wei
                args mem[(7 * ceil32(return_data.size)) + 528 len 64]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
                if ext_call.return_data[0]:
                    require ext_call.return_data[0] >= 32
                    require 0, address(arg2) << 64 == bool(0, address(arg2) << 64)
                    if not 0, address(arg2) << 64:
                        revert with 0, 'TransferHelper: TRANSFER_FAILED'
            else:
                mem[(7 * ceil32(return_data.size)) + 556 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
                if return_data.size:
                    require return_data.size >= 32
                    require mem[(7 * ceil32(return_data.size)) + 556] == bool(mem[(7 * ceil32(return_data.size)) + 556])
                    if not mem[(7 * ceil32(return_data.size)) + 556]:
                        revert with 0, 'TransferHelper: TRANSFER_FAILED'
        else:
            mem[(7 * ceil32(return_data.size)) + 456 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            if return_data.size:
                require return_data.size >= 32
                require mem[(7 * ceil32(return_data.size)) + 456] == bool(mem[(7 * ceil32(return_data.size)) + 456])
                if not mem[(7 * ceil32(return_data.size)) + 456]:
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 525 len 96] = 0, msg.sender, 0, mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 525 len 28]
            call arg2.mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 525 len 4] with:
                 gas gas_remaining wei
                args mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 529 len 64]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
                if ext_call.return_data[0]:
                    require ext_call.return_data[0] >= 32
                    require 0, address(arg2) << 64 == bool(0, address(arg2) << 64)
                    if not 0, address(arg2) << 64:
                        revert with 0, 'TransferHelper: TRANSFER_FAILED'
            else:
                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
                if return_data.size:
                    require return_data.size >= 32
                    require mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] == bool(mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 557])
                    if not mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 557]:
                        revert with 0, 'TransferHelper: TRANSFER_FAILED'
    else:
        mem[ceil32(return_data.size) + 260 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
        if return_data.size:
            require return_data.size >= 32
            require mem[ceil32(return_data.size) + 260] == bool(mem[ceil32(return_data.size) + 260])
            if not mem[ceil32(return_data.size) + 260]:
                revert with 0, 'TransferHelper: TRANSFER_FROM_FAILED'
        require ext_code.size(arg1)
        staticcall arg1.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_code.size(arg2)
        staticcall arg2.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if arg1 >= arg2:
            mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 64] = arg5, arg4
            require ext_code.size(address(ext_call.return_data[0]))
            call address(ext_call.return_data[0]).withdraw(uint256 rg1, uint256[] rg2) with:
                 gas gas_remaining wei
                args arg3, Array(len=2, data=arg5, arg4)
        else:
            mem[(4 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 64] = arg4, arg5
            require ext_code.size(address(ext_call.return_data[0]))
            call address(ext_call.return_data[0]).withdraw(uint256 rg1, uint256[] rg2) with:
                 gas gas_remaining wei
                args arg3, Array(len=2, data=arg4, arg5)
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require ext_code.size(arg1)
        staticcall arg1.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > ext_call.return_data[0]:
            revert with 0, 
                        'SafeMath: subtraction overflow',
                        mem[(6 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 9 * ceil32(return_data.size)]
        require ext_code.size(arg2)
        staticcall arg2.0x70a08231 with:
                gas gas_remaining wei
               args this.address
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        if ext_call.return_data[0] > ext_call.return_data[0]:
            revert with 0, 'SafeMath: subtraction overflow'
        mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 96] = 0, msg.sender, 0, mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 28]
        call arg1.mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 425 len 4] with:
             gas gas_remaining wei
            args mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 429 len 64]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper: TRANSFER_FAILED'
            if ext_call.return_data[0]:
                require ext_call.return_data[0] >= 32
                require 0, address(arg2) << 64 == bool(0, address(arg2) << 64)
                if not 0, address(arg2) << 64:
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 525 len 96] = 0, msg.sender, 0, mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 525 len 28]
            call arg2.mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 525 len 4] with:
                 gas gas_remaining wei
                args mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 529 len 64]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
                if ext_call.return_data[0]:
                    require ext_call.return_data[0] >= 32
                    require 0, address(arg2) << 64 == bool(0, address(arg2) << 64)
                    if not 0, address(arg2) << 64:
                        revert with 0, 'TransferHelper: TRANSFER_FAILED'
            else:
                mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 557 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 
                                'TransferHelper: TRANSFER_FAILED',
                                mem[(10 * ceil32(return_data.size)) + 626 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                if return_data.size:
                    require return_data.size >= 32
                    require mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 557] == bool(mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 557])
                    if not mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 557]:
                        revert with 0, 
                                    'TransferHelper: TRANSFER_FAILED',
                                    mem[(10 * ceil32(return_data.size)) + 626 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
        else:
            mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 
                            'TransferHelper: TRANSFER_FAILED',
                            mem[(10 * ceil32(return_data.size)) + 526 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
            if return_data.size:
                require return_data.size >= 32
                require mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457] == bool(mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457])
                if not mem[(7 * ceil32(return_data.size)) + ceil32(return_data.size) + 457]:
                    revert with 0, 
                                'TransferHelper: TRANSFER_FAILED',
                                mem[(10 * ceil32(return_data.size)) + 526 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
            mem[(10 * ceil32(return_data.size)) + 526 len 96] = 0, msg.sender, 0, mem[(10 * ceil32(return_data.size)) + 526 len 28]
            call arg2.mem[(10 * ceil32(return_data.size)) + 526 len 4] with:
                 gas gas_remaining wei
                args mem[(10 * ceil32(return_data.size)) + 530 len (3 * ceil32(return_data.size)) + (-2 * ceil32(return_data.size)) + 64]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 
                                'TransferHelper: TRANSFER_FAILED',
                                mem[(10 * ceil32(return_data.size)) + 626 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
                if ext_call.return_data[0]:
                    require ext_call.return_data[0] >= 32
                    require 0, address(arg2) << 64 == bool(0, address(arg2) << 64)
                    if not 0, address(arg2) << 64:
                        revert with 0, 
                                    'TransferHelper: TRANSFER_FAILED',
                                    mem[(10 * ceil32(return_data.size)) + 626 len (3 * ceil32(return_data.size)) - (2 * ceil32(return_data.size))]
            else:
                mem[(10 * ceil32(return_data.size)) + 558 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: TRANSFER_FAILED'
                if return_data.size:
                    require return_data.size >= 32
                    require mem[(10 * ceil32(return_data.size)) + 558] == bool(mem[(10 * ceil32(return_data.size)) + 558])
                    if not mem[(10 * ceil32(return_data.size)) + 558]:
                        revert with 0, 'TransferHelper: TRANSFER_FAILED'
}

function getAmountsIn(uint256 arg1, address[] arg2) {
    require calldata.size - 4 >= 64
    require arg2 <= test266151307()
    require calldata.size > arg2 + 35
    require arg2.length <= test266151307()
    require (32 * arg2.length) + 128 >= 96 and (32 * arg2.length) + 128 <= test266151307()
    mem[96] = arg2.length
    require calldata.size >= arg2 + (32 * arg2.length) + 36
    s = arg2 + 36
    t = 128
    idx = 0
    while idx < arg2.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        s = s + 32
        t = t + 32
        idx = idx + 1
        continue 
    if arg2.length < 2:
        revert with 0, 'EmiswapLibrary: INVALID_PATH'
    require arg2.length <= test266151307()
    mem[(32 * arg2.length) + 128] = arg2.length
    mem[64] = (64 * arg2.length) + 160
    if not arg2.length:
        require arg2.length - 1 < arg2.length
        mem[(32 * arg2.length - 1) + (32 * arg2.length) + 160] = arg1
        idx = mem[96] - 1
        while idx:
            require idx < mem[96]
            require idx - 1 < mem[96]
            _354 = mem[(32 * idx - 1) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            mem[mem[64] + 36] = address(_354)
            require ext_code.size(factoryAddress)
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], address(_354)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _364 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _368 = mem[_364]
            require mem[_364] == mem[_364 + 12 len 20]
            if not mem[_364 + 12 len 20]:
                require idx < mem[(32 * arg2.length) + 128]
                if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                    revert with 0, 'EmiswapLibrary: INSUFFICIENT_OUTPUT_AMOUNT'
                revert with 0, 'EmiswapLibrary: INSUFFICIENT_LIQUIDITY'
            require idx - 1 < mem[96]
            _377 = mem[(32 * idx - 1) + 128]
            mem[mem[64] + 4] = mem[(32 * idx - 1) + 140 len 20]
            require ext_code.size(address(_368))
            staticcall address(_368).getBalanceForAddition(address rg1) with:
                    gas gas_remaining wei
                   args address(_377)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _388 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _393 = mem[_388]
            require idx < mem[96]
            _398 = mem[(32 * idx) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            require ext_code.size(address(_368))
            staticcall address(_368).getBalanceForRemoval(address rg1) with:
                    gas gas_remaining wei
                   args address(_398)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _404 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _406 = mem[_404]
            require idx < mem[(32 * arg2.length) + 128]
            _410 = mem[(32 * idx) + (32 * arg2.length) + 160]
            if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                revert with 0, 'EmiswapLibrary: INSUFFICIENT_OUTPUT_AMOUNT'
            if _393 <= 0:
                revert with 0, 'EmiswapLibrary: INSUFFICIENT_LIQUIDITY'
            if mem[_404] <= 0:
                revert with 0, 'EmiswapLibrary: INSUFFICIENT_LIQUIDITY'
            if not _393:
                require ext_code.size(factoryAddress)
                staticcall factoryAddress.0xddca3f43 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _436 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_436] > 10^18:
                    revert with 0, 'SafeMath: subtraction overflow'
                if _410 > _406:
                    revert with 0, 'SafeMath: subtraction overflow'
                require _406 - _410
                if (_406 * -mem[_436] + 10^18 / 10^15) - (_410 * -mem[_436] + 10^18 / 10^15) / _406 - _410 != -mem[_436] + 10^18 / 10^15:
                    revert with 0, 'SafeMath: multiplication overflow'
                require (_406 * -mem[_436] + 10^18 / 10^15) - (_410 * -mem[_436] + 10^18 / 10^15)
                if (0 / (_406 * -mem[_436] + 10^18 / 10^15) - (_410 * -mem[_436] + 10^18 / 10^15)) + 1 < 0 / (_406 * -mem[_436] + 10^18 / 10^15) - (_410 * -mem[_436] + 10^18 / 10^15):
                    revert with 0, 'SafeMath: addition overflow'
                require idx - 1 < mem[(32 * arg2.length) + 128]
                mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (_406 * -mem[_436] + 10^18 / 10^15) - (_410 * -mem[_436] + 10^18 / 10^15)) + 1
            else:
                if mem[(32 * idx) + (32 * arg2.length) + 160] * _393 / _393 != mem[(32 * idx) + (32 * arg2.length) + 160]:
                    revert with 0, 'SafeMath: multiplication overflow'
                if not mem[(32 * idx) + (32 * arg2.length) + 160] * _393:
                    require ext_code.size(factoryAddress)
                    staticcall factoryAddress.0xddca3f43 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _444 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if mem[_444] > 10^18:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if _410 > _406:
                        revert with 0, 'SafeMath: subtraction overflow'
                    require _406 - _410
                    if (_406 * -mem[_444] + 10^18 / 10^15) - (_410 * -mem[_444] + 10^18 / 10^15) / _406 - _410 != -mem[_444] + 10^18 / 10^15:
                        revert with 0, 'SafeMath: multiplication overflow'
                    require (_406 * -mem[_444] + 10^18 / 10^15) - (_410 * -mem[_444] + 10^18 / 10^15)
                    if (0 / (_406 * -mem[_444] + 10^18 / 10^15) - (_410 * -mem[_444] + 10^18 / 10^15)) + 1 < 0 / (_406 * -mem[_444] + 10^18 / 10^15) - (_410 * -mem[_444] + 10^18 / 10^15):
                        revert with 0, 'SafeMath: addition overflow'
                    require idx - 1 < mem[(32 * arg2.length) + 128]
                    mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (_406 * -mem[_444] + 10^18 / 10^15) - (_410 * -mem[_444] + 10^18 / 10^15)) + 1
                else:
                    if 1000 * mem[(32 * idx) + (32 * arg2.length) + 160] * _393 / mem[(32 * idx) + (32 * arg2.length) + 160] * _393 != 1000:
                        revert with 0, 'SafeMath: multiplication overflow'
                    require ext_code.size(factoryAddress)
                    staticcall factoryAddress.0xddca3f43 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _450 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if mem[_450] > 10^18:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if _410 > _406:
                        revert with 0, 'SafeMath: subtraction overflow'
                    require _406 - _410
                    if (_406 * -mem[_450] + 10^18 / 10^15) - (_410 * -mem[_450] + 10^18 / 10^15) / _406 - _410 != -mem[_450] + 10^18 / 10^15:
                        revert with 0, 'SafeMath: multiplication overflow'
                    require (_406 * -mem[_450] + 10^18 / 10^15) - (_410 * -mem[_450] + 10^18 / 10^15)
                    if (1000 * _410 * _393 / (_406 * -mem[_450] + 10^18 / 10^15) - (_410 * -mem[_450] + 10^18 / 10^15)) + 1 < 1000 * _410 * _393 / (_406 * -mem[_450] + 10^18 / 10^15) - (_410 * -mem[_450] + 10^18 / 10^15):
                        revert with 0, 'SafeMath: addition overflow'
                    require idx - 1 < mem[(32 * arg2.length) + 128]
                    mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (1000 * _410 * _393 / (_406 * -mem[_450] + 10^18 / 10^15) - (_410 * -mem[_450] + 10^18 / 10^15)) + 1
            idx = idx - 1
            continue 
        mem[mem[64]] = 32
        _362 = mem[(32 * arg2.length) + 128]
        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
        mem[mem[64] + 64 len 32 * _362] = mem[(32 * arg2.length) + 160 len 32 * _362]
        return 32, mem[mem[64] + 32 len (32 * _362) + 32]
    mem[(32 * arg2.length) + 160 len 32 * arg2.length] = call.data[calldata.size len 32 * arg2.length]
    require arg2.length - 1 < arg2.length
    mem[(32 * arg2.length - 1) + (32 * arg2.length) + 160] = arg1
    idx = mem[96] - 1
    while idx:
        require idx < mem[96]
        require idx - 1 < mem[96]
        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
        mem[mem[64] + 36] = mem[(32 * idx - 1) + 140 len 20]
        require ext_code.size(factoryAddress)
        staticcall factoryAddress.0x901754d7 with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len 64]
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _365 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _369 = mem[_365]
        require mem[_365] == mem[_365 + 12 len 20]
        if not mem[_365 + 12 len 20]:
            require idx < mem[(32 * arg2.length) + 128]
            if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                revert with 0, 'EmiswapLibrary: INSUFFICIENT_OUTPUT_AMOUNT'
            revert with 0, 'EmiswapLibrary: INSUFFICIENT_LIQUIDITY'
        require idx - 1 < mem[96]
        mem[mem[64] + 4] = mem[(32 * idx - 1) + 140 len 20]
        require ext_code.size(address(_369))
        staticcall address(_369).getBalanceForAddition(address rg1) with:
                gas gas_remaining wei
               args mem[(32 * idx - 1) + 140 len 20]
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _391 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _395 = mem[_391]
        require idx < mem[96]
        _400 = mem[(32 * idx) + 128]
        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
        require ext_code.size(address(_369))
        staticcall address(_369).getBalanceForRemoval(address rg1) with:
                gas gas_remaining wei
               args address(_400)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _405 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _407 = mem[_405]
        require idx < mem[(32 * arg2.length) + 128]
        _411 = mem[(32 * idx) + (32 * arg2.length) + 160]
        if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
            revert with 0, 'EmiswapLibrary: INSUFFICIENT_OUTPUT_AMOUNT'
        if _395 <= 0:
            revert with 0, 'EmiswapLibrary: INSUFFICIENT_LIQUIDITY'
        if mem[_405] <= 0:
            revert with 0, 'EmiswapLibrary: INSUFFICIENT_LIQUIDITY'
        if not _395:
            require ext_code.size(factoryAddress)
            staticcall factoryAddress.0xddca3f43 with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _439 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_439] > 10^18:
                revert with 0, 'SafeMath: subtraction overflow'
            if _411 > _407:
                revert with 0, 'SafeMath: subtraction overflow'
            require _407 - _411
            if (_407 * -mem[_439] + 10^18 / 10^15) - (_411 * -mem[_439] + 10^18 / 10^15) / _407 - _411 != -mem[_439] + 10^18 / 10^15:
                revert with 0, 'SafeMath: multiplication overflow'
            require (_407 * -mem[_439] + 10^18 / 10^15) - (_411 * -mem[_439] + 10^18 / 10^15)
            if (0 / (_407 * -mem[_439] + 10^18 / 10^15) - (_411 * -mem[_439] + 10^18 / 10^15)) + 1 < 0 / (_407 * -mem[_439] + 10^18 / 10^15) - (_411 * -mem[_439] + 10^18 / 10^15):
                revert with 0, 'SafeMath: addition overflow'
            require idx - 1 < mem[(32 * arg2.length) + 128]
            mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (_407 * -mem[_439] + 10^18 / 10^15) - (_411 * -mem[_439] + 10^18 / 10^15)) + 1
        else:
            if mem[(32 * idx) + (32 * arg2.length) + 160] * _395 / _395 != mem[(32 * idx) + (32 * arg2.length) + 160]:
                revert with 0, 'SafeMath: multiplication overflow'
            if not mem[(32 * idx) + (32 * arg2.length) + 160] * _395:
                require ext_code.size(factoryAddress)
                staticcall factoryAddress.0xddca3f43 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _448 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_448] > 10^18:
                    revert with 0, 'SafeMath: subtraction overflow'
                if _411 > _407:
                    revert with 0, 'SafeMath: subtraction overflow'
                require _407 - _411
                if (_407 * -mem[_448] + 10^18 / 10^15) - (_411 * -mem[_448] + 10^18 / 10^15) / _407 - _411 != -mem[_448] + 10^18 / 10^15:
                    revert with 0, 'SafeMath: multiplication overflow'
                require (_407 * -mem[_448] + 10^18 / 10^15) - (_411 * -mem[_448] + 10^18 / 10^15)
                if (0 / (_407 * -mem[_448] + 10^18 / 10^15) - (_411 * -mem[_448] + 10^18 / 10^15)) + 1 < 0 / (_407 * -mem[_448] + 10^18 / 10^15) - (_411 * -mem[_448] + 10^18 / 10^15):
                    revert with 0, 'SafeMath: addition overflow'
                require idx - 1 < mem[(32 * arg2.length) + 128]
                mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (_407 * -mem[_448] + 10^18 / 10^15) - (_411 * -mem[_448] + 10^18 / 10^15)) + 1
            else:
                if 1000 * mem[(32 * idx) + (32 * arg2.length) + 160] * _395 / mem[(32 * idx) + (32 * arg2.length) + 160] * _395 != 1000:
                    revert with 0, 'SafeMath: multiplication overflow'
                require ext_code.size(factoryAddress)
                staticcall factoryAddress.0xddca3f43 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _452 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_452] > 10^18:
                    revert with 0, 'SafeMath: subtraction overflow'
                if _411 > _407:
                    revert with 0, 'SafeMath: subtraction overflow'
                require _407 - _411
                if (_407 * -mem[_452] + 10^18 / 10^15) - (_411 * -mem[_452] + 10^18 / 10^15) / _407 - _411 != -mem[_452] + 10^18 / 10^15:
                    revert with 0, 'SafeMath: multiplication overflow'
                require (_407 * -mem[_452] + 10^18 / 10^15) - (_411 * -mem[_452] + 10^18 / 10^15)
                if (1000 * _411 * _395 / (_407 * -mem[_452] + 10^18 / 10^15) - (_411 * -mem[_452] + 10^18 / 10^15)) + 1 < 1000 * _411 * _395 / (_407 * -mem[_452] + 10^18 / 10^15) - (_411 * -mem[_452] + 10^18 / 10^15):
                    revert with 0, 'SafeMath: addition overflow'
                require idx - 1 < mem[(32 * arg2.length) + 128]
                mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (1000 * _411 * _395 / (_407 * -mem[_452] + 10^18 / 10^15) - (_411 * -mem[_452] + 10^18 / 10^15)) + 1
        idx = idx - 1
        continue 
    mem[mem[64]] = 32
    _363 = mem[(32 * arg2.length) + 128]
    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
    mem[mem[64] + 64 len 32 * _363] = mem[(32 * arg2.length) + 160 len 32 * _363]
    return 32, mem[mem[64] + 32 len (32 * _363) + 32]
}

function getAmountsOut(uint256 arg1, address[] arg2) {
    require calldata.size - 4 >= 64
    require arg2 <= test266151307()
    require calldata.size > arg2 + 35
    require arg2.length <= test266151307()
    require (32 * arg2.length) + 128 >= 96 and (32 * arg2.length) + 128 <= test266151307()
    mem[96] = arg2.length
    require calldata.size >= arg2 + (32 * arg2.length) + 36
    s = arg2 + 36
    t = 128
    idx = 0
    while idx < arg2.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        s = s + 32
        t = t + 32
        idx = idx + 1
        continue 
    if arg2.length < 2:
        revert with 0, 'EmiswapLibrary: INVALID_PATH'
    require arg2.length <= test266151307()
    mem[(32 * arg2.length) + 128] = arg2.length
    mem[64] = (64 * arg2.length) + 160
    if not arg2.length:
        require 0 < arg2.length
        mem[(32 * arg2.length) + 160] = arg1
        idx = 0
        while idx < arg2.length - 1:
            require idx < mem[96]
            require idx + 1 < mem[96]
            _308 = mem[(32 * idx + 1) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            mem[mem[64] + 36] = address(_308)
            require ext_code.size(factoryAddress)
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], address(_308)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _318 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _322 = mem[_318]
            require mem[_318] == mem[_318 + 12 len 20]
            if not mem[_318 + 12 len 20]:
                require idx < mem[(32 * arg2.length) + 128]
                require idx + 1 < mem[(32 * arg2.length) + 128]
                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
            else:
                require idx < mem[96]
                _331 = mem[(32 * idx) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                require ext_code.size(address(_322))
                staticcall address(_322).getBalanceForAddition(address rg1) with:
                        gas gas_remaining wei
                       args address(_331)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _338 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _341 = mem[_338]
                require idx + 1 < mem[96]
                _348 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                require ext_code.size(address(_322))
                staticcall address(_322).getBalanceForRemoval(address rg1) with:
                        gas gas_remaining wei
                       args address(_348)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _354 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _356 = mem[_354]
                require idx < mem[(32 * arg2.length) + 128]
                _360 = mem[(32 * idx) + (32 * arg2.length) + 160]
                if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                    require idx + 1 < mem[(32 * arg2.length) + 128]
                    mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                else:
                    if not _341:
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                    else:
                        if not mem[_354]:
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                        else:
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0xddca3f43 with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _372 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_372] > 10^18:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not _360:
                                if not _341:
                                    require idx + 1 < mem[(32 * arg2.length) + 128]
                                    mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                else:
                                    if 1000 * _341 / _341 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if 1000 * _341 < 1000 * _341:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not 1000 * _341:
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                    else:
                                        require 1000 * _341
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 1000 * _341
                            else:
                                if -mem[_372] + 10^18 / 10^15 * _360 / _360 != -mem[_372] + 10^18 / 10^15:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not -mem[_372] + 10^18 / 10^15 * _360:
                                    if not _341:
                                        if -mem[_372] + 10^18 / 10^15 * _360 < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not -mem[_372] + 10^18 / 10^15 * _360:
                                            require idx + 1 < mem[(32 * arg2.length) + 128]
                                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                        else:
                                            require -mem[_372] + 10^18 / 10^15 * _360
                                            require idx + 1 < mem[(32 * arg2.length) + 128]
                                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / -mem[_372] + 10^18 / 10^15 * _360
                                    else:
                                        if 1000 * _341 / _341 != 1000:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if (-mem[_372] + 10^18 / 10^15 * _360) + (1000 * _341) < 1000 * _341:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not (-mem[_372] + 10^18 / 10^15 * _360) + (1000 * _341):
                                            require idx + 1 < mem[(32 * arg2.length) + 128]
                                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                        else:
                                            require (-mem[_372] + 10^18 / 10^15 * _360) + (1000 * _341)
                                            require idx + 1 < mem[(32 * arg2.length) + 128]
                                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (-mem[_372] + 10^18 / 10^15 * _360) + (1000 * _341)
                                else:
                                    if _356 * -mem[_372] + 10^18 / 10^15 * _360 / -mem[_372] + 10^18 / 10^15 * _360 != _356:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not _341:
                                        if -mem[_372] + 10^18 / 10^15 * _360 < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not -mem[_372] + 10^18 / 10^15 * _360:
                                            require idx + 1 < mem[(32 * arg2.length) + 128]
                                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                        else:
                                            require -mem[_372] + 10^18 / 10^15 * _360
                                            require idx + 1 < mem[(32 * arg2.length) + 128]
                                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = _356 * -mem[_372] + 10^18 / 10^15 * _360 / -mem[_372] + 10^18 / 10^15 * _360
                                    else:
                                        if 1000 * _341 / _341 != 1000:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if (-mem[_372] + 10^18 / 10^15 * _360) + (1000 * _341) < 1000 * _341:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not (-mem[_372] + 10^18 / 10^15 * _360) + (1000 * _341):
                                            require idx + 1 < mem[(32 * arg2.length) + 128]
                                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                        else:
                                            require (-mem[_372] + 10^18 / 10^15 * _360) + (1000 * _341)
                                            require idx + 1 < mem[(32 * arg2.length) + 128]
                                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = _356 * -mem[_372] + 10^18 / 10^15 * _360 / (-mem[_372] + 10^18 / 10^15 * _360) + (1000 * _341)
            idx = idx + 1
            continue 
        mem[mem[64]] = 32
        _316 = mem[(32 * arg2.length) + 128]
        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
        mem[mem[64] + 64 len 32 * _316] = mem[(32 * arg2.length) + 160 len 32 * _316]
        return 32, mem[mem[64] + 32 len (32 * _316) + 32]
    mem[(32 * arg2.length) + 160 len 32 * arg2.length] = call.data[calldata.size len 32 * arg2.length]
    require 0 < arg2.length
    mem[(32 * arg2.length) + 160] = arg1
    idx = 0
    while idx < arg2.length - 1:
        require idx < mem[96]
        require idx + 1 < mem[96]
        _310 = mem[(32 * idx + 1) + 128]
        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
        mem[mem[64] + 36] = address(_310)
        require ext_code.size(factoryAddress)
        staticcall factoryAddress.0x901754d7 with:
                gas gas_remaining wei
               args mem[mem[64] + 4], address(_310)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _319 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _323 = mem[_319]
        require mem[_319] == mem[_319 + 12 len 20]
        if not mem[_319 + 12 len 20]:
            require idx < mem[(32 * arg2.length) + 128]
            require idx + 1 < mem[(32 * arg2.length) + 128]
            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
        else:
            require idx < mem[96]
            _334 = mem[(32 * idx) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            require ext_code.size(address(_323))
            staticcall address(_323).getBalanceForAddition(address rg1) with:
                    gas gas_remaining wei
                   args address(_334)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _339 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _343 = mem[_339]
            require idx + 1 < mem[96]
            _350 = mem[(32 * idx + 1) + 128]
            mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
            require ext_code.size(address(_323))
            staticcall address(_323).getBalanceForRemoval(address rg1) with:
                    gas gas_remaining wei
                   args address(_350)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _355 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _357 = mem[_355]
            require idx < mem[(32 * arg2.length) + 128]
            _361 = mem[(32 * idx) + (32 * arg2.length) + 160]
            if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                require idx + 1 < mem[(32 * arg2.length) + 128]
                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
            else:
                if not _343:
                    require idx + 1 < mem[(32 * arg2.length) + 128]
                    mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                else:
                    if not mem[_355]:
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                    else:
                        require ext_code.size(factoryAddress)
                        staticcall factoryAddress.0xddca3f43 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _373 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_373] > 10^18:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not _361:
                            if not _343:
                                require idx + 1 < mem[(32 * arg2.length) + 128]
                                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                            else:
                                if 1000 * _343 / _343 != 1000:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if 1000 * _343 < 1000 * _343:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not 1000 * _343:
                                    require idx + 1 < mem[(32 * arg2.length) + 128]
                                    mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                else:
                                    require 1000 * _343
                                    require idx + 1 < mem[(32 * arg2.length) + 128]
                                    mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 1000 * _343
                        else:
                            if -mem[_373] + 10^18 / 10^15 * _361 / _361 != -mem[_373] + 10^18 / 10^15:
                                revert with 0, 'SafeMath: multiplication overflow'
                            if not -mem[_373] + 10^18 / 10^15 * _361:
                                if not _343:
                                    if -mem[_373] + 10^18 / 10^15 * _361 < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not -mem[_373] + 10^18 / 10^15 * _361:
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                    else:
                                        require -mem[_373] + 10^18 / 10^15 * _361
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / -mem[_373] + 10^18 / 10^15 * _361
                                else:
                                    if 1000 * _343 / _343 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if (-mem[_373] + 10^18 / 10^15 * _361) + (1000 * _343) < 1000 * _343:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not (-mem[_373] + 10^18 / 10^15 * _361) + (1000 * _343):
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                    else:
                                        require (-mem[_373] + 10^18 / 10^15 * _361) + (1000 * _343)
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (-mem[_373] + 10^18 / 10^15 * _361) + (1000 * _343)
                            else:
                                if _357 * -mem[_373] + 10^18 / 10^15 * _361 / -mem[_373] + 10^18 / 10^15 * _361 != _357:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not _343:
                                    if -mem[_373] + 10^18 / 10^15 * _361 < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not -mem[_373] + 10^18 / 10^15 * _361:
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                    else:
                                        require -mem[_373] + 10^18 / 10^15 * _361
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = _357 * -mem[_373] + 10^18 / 10^15 * _361 / -mem[_373] + 10^18 / 10^15 * _361
                                else:
                                    if 1000 * _343 / _343 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if (-mem[_373] + 10^18 / 10^15 * _361) + (1000 * _343) < 1000 * _343:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not (-mem[_373] + 10^18 / 10^15 * _361) + (1000 * _343):
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                    else:
                                        require (-mem[_373] + 10^18 / 10^15 * _361) + (1000 * _343)
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = _357 * -mem[_373] + 10^18 / 10^15 * _361 / (-mem[_373] + 10^18 / 10^15 * _361) + (1000 * _343)
        idx = idx + 1
        continue 
    mem[mem[64]] = 32
    _317 = mem[(32 * arg2.length) + 128]
    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
    mem[mem[64] + 64 len 32 * _317] = mem[(32 * arg2.length) + 160 len 32 * _317]
    return 32, mem[mem[64] + 32 len (32 * _317) + 32]
}

function getExpectedReturn(address arg1, address arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    mem[96] = 2
    if not arg1:
        mem[128] = address(WETHAddress)
        if not arg2:
            mem[160] = address(WETHAddress)
            mem[192] = 2
            mem[64] = 288
            mem[224 len 64] = call.data[calldata.size len 64]
            mem[224] = arg3
            idx = 0
            while idx < 1:
                require idx < mem[96]
                require idx + 1 < mem[96]
                _670 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_670)
                require ext_code.size(factoryAddress)
                staticcall factoryAddress.0x901754d7 with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_670)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _717 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _733 = mem[_717]
                require mem[_717] == mem[_717 + 12 len 20]
                if not mem[_717 + 12 len 20]:
                    require idx < mem[192]
                    require idx + 1 < mem[192]
                    mem[(32 * idx + 1) + 224] = 0
                else:
                    require idx < mem[96]
                    _786 = mem[(32 * idx) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                    require ext_code.size(address(_733))
                    staticcall address(_733).getBalanceForAddition(address rg1) with:
                            gas gas_remaining wei
                           args address(_786)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _821 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _831 = mem[_821]
                    require idx + 1 < mem[96]
                    _862 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    require ext_code.size(address(_733))
                    staticcall address(_733).getBalanceForRemoval(address rg1) with:
                            gas gas_remaining wei
                           args address(_862)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _885 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _893 = mem[_885]
                    require idx < mem[192]
                    _909 = mem[(32 * idx) + 224]
                    if not mem[(32 * idx) + 224]:
                        require idx + 1 < mem[192]
                        mem[(32 * idx + 1) + 224] = 0
                    else:
                        if not _831:
                            require idx + 1 < mem[192]
                            mem[(32 * idx + 1) + 224] = 0
                        else:
                            if not mem[_885]:
                                require idx + 1 < mem[192]
                                mem[(32 * idx + 1) + 224] = 0
                            else:
                                require ext_code.size(factoryAddress)
                                staticcall factoryAddress.0xddca3f43 with:
                                        gas gas_remaining wei
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _957 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if mem[_957] > 10^18:
                                    revert with 0, 'SafeMath: subtraction overflow'
                                if not _909:
                                    if not _831:
                                        require idx + 1 < mem[192]
                                        mem[(32 * idx + 1) + 224] = 0
                                    else:
                                        if 1000 * _831 / _831 != 1000:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if 1000 * _831 < 1000 * _831:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not 1000 * _831:
                                            require idx + 1 < mem[192]
                                            mem[(32 * idx + 1) + 224] = 0
                                        else:
                                            require 1000 * _831
                                            require idx + 1 < mem[192]
                                            mem[(32 * idx + 1) + 224] = 0 / 1000 * _831
                                else:
                                    if -mem[_957] + 10^18 / 10^15 * _909 / _909 != -mem[_957] + 10^18 / 10^15:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not -mem[_957] + 10^18 / 10^15 * _909:
                                        if not _831:
                                            if -mem[_957] + 10^18 / 10^15 * _909 < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not -mem[_957] + 10^18 / 10^15 * _909:
                                                require idx + 1 < mem[192]
                                                mem[(32 * idx + 1) + 224] = 0
                                            else:
                                                require -mem[_957] + 10^18 / 10^15 * _909
                                                require idx + 1 < mem[192]
                                                mem[(32 * idx + 1) + 224] = 0 / -mem[_957] + 10^18 / 10^15 * _909
                                        else:
                                            if 1000 * _831 / _831 != 1000:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if (-mem[_957] + 10^18 / 10^15 * _909) + (1000 * _831) < 1000 * _831:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not (-mem[_957] + 10^18 / 10^15 * _909) + (1000 * _831):
                                                require idx + 1 < mem[192]
                                                mem[(32 * idx + 1) + 224] = 0
                                            else:
                                                require (-mem[_957] + 10^18 / 10^15 * _909) + (1000 * _831)
                                                require idx + 1 < mem[192]
                                                mem[(32 * idx + 1) + 224] = 0 / (-mem[_957] + 10^18 / 10^15 * _909) + (1000 * _831)
                                    else:
                                        if _893 * -mem[_957] + 10^18 / 10^15 * _909 / -mem[_957] + 10^18 / 10^15 * _909 != _893:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if not _831:
                                            if -mem[_957] + 10^18 / 10^15 * _909 < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not -mem[_957] + 10^18 / 10^15 * _909:
                                                require idx + 1 < mem[192]
                                                mem[(32 * idx + 1) + 224] = 0
                                            else:
                                                require -mem[_957] + 10^18 / 10^15 * _909
                                                require idx + 1 < mem[192]
                                                mem[(32 * idx + 1) + 224] = _893 * -mem[_957] + 10^18 / 10^15 * _909 / -mem[_957] + 10^18 / 10^15 * _909
                                        else:
                                            if 1000 * _831 / _831 != 1000:
                                                revert with 0, 'SafeMath: multiplication overflow'
                                            if (-mem[_957] + 10^18 / 10^15 * _909) + (1000 * _831) < 1000 * _831:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if not (-mem[_957] + 10^18 / 10^15 * _909) + (1000 * _831):
                                                require idx + 1 < mem[192]
                                                mem[(32 * idx + 1) + 224] = 0
                                            else:
                                                require (-mem[_957] + 10^18 / 10^15 * _909) + (1000 * _831)
                                                require idx + 1 < mem[192]
                                                mem[(32 * idx + 1) + 224] = _893 * -mem[_957] + 10^18 / 10^15 * _909 / (-mem[_957] + 10^18 / 10^15 * _909) + (1000 * _831)
                idx = idx + 1
                continue 
            require 1 < mem[192]
            _694 = mem[256]
            _709 = mem[64]
            mem[mem[64]] = 34
            mem[64] = mem[64] + 1120
            mem[_709 + 32 len 1088] = call.data[calldata.size len 1088]
            require 12 < mem[_709]
            mem[_709 + 416] = 1
            mem[_709 + 1120] = _694
            mem[_709 + 1152] = 64
            mem[_709 + 1184] = mem[_709]
            mem[_709 + 1216 len 32 * mem[_709]] = mem[_709 + 32 len 32 * mem[_709]]
            return memory
              from mem[64]
               len _709 + (32 * mem[_709]) + -mem[64] + 1216
        mem[160] = arg2
        mem[192] = 2
        mem[64] = 288
        mem[224 len 64] = call.data[calldata.size len 64]
        mem[224] = arg3
        idx = 0
        while idx < 1:
            require idx < mem[96]
            require idx + 1 < mem[96]
            _674 = mem[(32 * idx + 1) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            mem[mem[64] + 36] = address(_674)
            require ext_code.size(factoryAddress)
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], address(_674)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _719 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _735 = mem[_719]
            require mem[_719] == mem[_719 + 12 len 20]
            if not mem[_719 + 12 len 20]:
                require idx < mem[192]
                require idx + 1 < mem[192]
                mem[(32 * idx + 1) + 224] = 0
            else:
                require idx < mem[96]
                _794 = mem[(32 * idx) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                require ext_code.size(address(_735))
                staticcall address(_735).getBalanceForAddition(address rg1) with:
                        gas gas_remaining wei
                       args address(_794)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _823 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _835 = mem[_823]
                require idx + 1 < mem[96]
                _866 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                require ext_code.size(address(_735))
                staticcall address(_735).getBalanceForRemoval(address rg1) with:
                        gas gas_remaining wei
                       args address(_866)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _887 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _895 = mem[_887]
                require idx < mem[192]
                _911 = mem[(32 * idx) + 224]
                if not mem[(32 * idx) + 224]:
                    require idx + 1 < mem[192]
                    mem[(32 * idx + 1) + 224] = 0
                else:
                    if not _835:
                        require idx + 1 < mem[192]
                        mem[(32 * idx + 1) + 224] = 0
                    else:
                        if not mem[_887]:
                            require idx + 1 < mem[192]
                            mem[(32 * idx + 1) + 224] = 0
                        else:
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0xddca3f43 with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _959 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_959] > 10^18:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not _911:
                                if not _835:
                                    require idx + 1 < mem[192]
                                    mem[(32 * idx + 1) + 224] = 0
                                else:
                                    if 1000 * _835 / _835 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if 1000 * _835 < 1000 * _835:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not 1000 * _835:
                                        require idx + 1 < mem[192]
                                        mem[(32 * idx + 1) + 224] = 0
                                    else:
                                        require 1000 * _835
                                        require idx + 1 < mem[192]
                                        mem[(32 * idx + 1) + 224] = 0 / 1000 * _835
                            else:
                                if -mem[_959] + 10^18 / 10^15 * _911 / _911 != -mem[_959] + 10^18 / 10^15:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not -mem[_959] + 10^18 / 10^15 * _911:
                                    if not _835:
                                        if -mem[_959] + 10^18 / 10^15 * _911 < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not -mem[_959] + 10^18 / 10^15 * _911:
                                            require idx + 1 < mem[192]
                                            mem[(32 * idx + 1) + 224] = 0
                                        else:
                                            require -mem[_959] + 10^18 / 10^15 * _911
                                            require idx + 1 < mem[192]
                                            mem[(32 * idx + 1) + 224] = 0 / -mem[_959] + 10^18 / 10^15 * _911
                                    else:
                                        if 1000 * _835 / _835 != 1000:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if (-mem[_959] + 10^18 / 10^15 * _911) + (1000 * _835) < 1000 * _835:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not (-mem[_959] + 10^18 / 10^15 * _911) + (1000 * _835):
                                            require idx + 1 < mem[192]
                                            mem[(32 * idx + 1) + 224] = 0
                                        else:
                                            require (-mem[_959] + 10^18 / 10^15 * _911) + (1000 * _835)
                                            require idx + 1 < mem[192]
                                            mem[(32 * idx + 1) + 224] = 0 / (-mem[_959] + 10^18 / 10^15 * _911) + (1000 * _835)
                                else:
                                    if _895 * -mem[_959] + 10^18 / 10^15 * _911 / -mem[_959] + 10^18 / 10^15 * _911 != _895:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not _835:
                                        if -mem[_959] + 10^18 / 10^15 * _911 < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not -mem[_959] + 10^18 / 10^15 * _911:
                                            require idx + 1 < mem[192]
                                            mem[(32 * idx + 1) + 224] = 0
                                        else:
                                            require -mem[_959] + 10^18 / 10^15 * _911
                                            require idx + 1 < mem[192]
                                            mem[(32 * idx + 1) + 224] = _895 * -mem[_959] + 10^18 / 10^15 * _911 / -mem[_959] + 10^18 / 10^15 * _911
                                    else:
                                        if 1000 * _835 / _835 != 1000:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if (-mem[_959] + 10^18 / 10^15 * _911) + (1000 * _835) < 1000 * _835:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not (-mem[_959] + 10^18 / 10^15 * _911) + (1000 * _835):
                                            require idx + 1 < mem[192]
                                            mem[(32 * idx + 1) + 224] = 0
                                        else:
                                            require (-mem[_959] + 10^18 / 10^15 * _911) + (1000 * _835)
                                            require idx + 1 < mem[192]
                                            mem[(32 * idx + 1) + 224] = _895 * -mem[_959] + 10^18 / 10^15 * _911 / (-mem[_959] + 10^18 / 10^15 * _911) + (1000 * _835)
            idx = idx + 1
            continue 
        require 1 < mem[192]
        _698 = mem[256]
        _711 = mem[64]
        mem[mem[64]] = 34
        mem[64] = mem[64] + 1120
        mem[_711 + 32 len 1088] = call.data[calldata.size len 1088]
        require 12 < mem[_711]
        mem[_711 + 416] = 1
        mem[_711 + 1120] = _698
        mem[_711 + 1152] = 64
        mem[_711 + 1184] = mem[_711]
        mem[_711 + 1216 len 32 * mem[_711]] = mem[_711 + 32 len 32 * mem[_711]]
        return memory
          from mem[64]
           len _711 + (32 * mem[_711]) + -mem[64] + 1216
    mem[128] = arg1
    if not arg2:
        mem[160] = address(WETHAddress)
        mem[192] = 2
        mem[64] = 288
        mem[224 len 64] = call.data[calldata.size len 64]
        mem[224] = arg3
        idx = 0
        while idx < 1:
            require idx < mem[96]
            require idx + 1 < mem[96]
            _678 = mem[(32 * idx + 1) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            mem[mem[64] + 36] = address(_678)
            require ext_code.size(factoryAddress)
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], address(_678)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _721 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _737 = mem[_721]
            require mem[_721] == mem[_721 + 12 len 20]
            if not mem[_721 + 12 len 20]:
                require idx < mem[192]
                require idx + 1 < mem[192]
                mem[(32 * idx + 1) + 224] = 0
            else:
                require idx < mem[96]
                _802 = mem[(32 * idx) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                require ext_code.size(address(_737))
                staticcall address(_737).getBalanceForAddition(address rg1) with:
                        gas gas_remaining wei
                       args address(_802)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _825 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _839 = mem[_825]
                require idx + 1 < mem[96]
                _870 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                require ext_code.size(address(_737))
                staticcall address(_737).getBalanceForRemoval(address rg1) with:
                        gas gas_remaining wei
                       args address(_870)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _889 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _897 = mem[_889]
                require idx < mem[192]
                _913 = mem[(32 * idx) + 224]
                if not mem[(32 * idx) + 224]:
                    require idx + 1 < mem[192]
                    mem[(32 * idx + 1) + 224] = 0
                else:
                    if not _839:
                        require idx + 1 < mem[192]
                        mem[(32 * idx + 1) + 224] = 0
                    else:
                        if not mem[_889]:
                            require idx + 1 < mem[192]
                            mem[(32 * idx + 1) + 224] = 0
                        else:
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0xddca3f43 with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _961 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_961] > 10^18:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not _913:
                                if not _839:
                                    require idx + 1 < mem[192]
                                    mem[(32 * idx + 1) + 224] = 0
                                else:
                                    if 1000 * _839 / _839 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if 1000 * _839 < 1000 * _839:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not 1000 * _839:
                                        require idx + 1 < mem[192]
                                        mem[(32 * idx + 1) + 224] = 0
                                    else:
                                        require 1000 * _839
                                        require idx + 1 < mem[192]
                                        mem[(32 * idx + 1) + 224] = 0 / 1000 * _839
                            else:
                                if -mem[_961] + 10^18 / 10^15 * _913 / _913 != -mem[_961] + 10^18 / 10^15:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not -mem[_961] + 10^18 / 10^15 * _913:
                                    if not _839:
                                        if -mem[_961] + 10^18 / 10^15 * _913 < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not -mem[_961] + 10^18 / 10^15 * _913:
                                            require idx + 1 < mem[192]
                                            mem[(32 * idx + 1) + 224] = 0
                                        else:
                                            require -mem[_961] + 10^18 / 10^15 * _913
                                            require idx + 1 < mem[192]
                                            mem[(32 * idx + 1) + 224] = 0 / -mem[_961] + 10^18 / 10^15 * _913
                                    else:
                                        if 1000 * _839 / _839 != 1000:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if (-mem[_961] + 10^18 / 10^15 * _913) + (1000 * _839) < 1000 * _839:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not (-mem[_961] + 10^18 / 10^15 * _913) + (1000 * _839):
                                            require idx + 1 < mem[192]
                                            mem[(32 * idx + 1) + 224] = 0
                                        else:
                                            require (-mem[_961] + 10^18 / 10^15 * _913) + (1000 * _839)
                                            require idx + 1 < mem[192]
                                            mem[(32 * idx + 1) + 224] = 0 / (-mem[_961] + 10^18 / 10^15 * _913) + (1000 * _839)
                                else:
                                    if _897 * -mem[_961] + 10^18 / 10^15 * _913 / -mem[_961] + 10^18 / 10^15 * _913 != _897:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not _839:
                                        if -mem[_961] + 10^18 / 10^15 * _913 < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not -mem[_961] + 10^18 / 10^15 * _913:
                                            require idx + 1 < mem[192]
                                            mem[(32 * idx + 1) + 224] = 0
                                        else:
                                            require -mem[_961] + 10^18 / 10^15 * _913
                                            require idx + 1 < mem[192]
                                            mem[(32 * idx + 1) + 224] = _897 * -mem[_961] + 10^18 / 10^15 * _913 / -mem[_961] + 10^18 / 10^15 * _913
                                    else:
                                        if 1000 * _839 / _839 != 1000:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if (-mem[_961] + 10^18 / 10^15 * _913) + (1000 * _839) < 1000 * _839:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not (-mem[_961] + 10^18 / 10^15 * _913) + (1000 * _839):
                                            require idx + 1 < mem[192]
                                            mem[(32 * idx + 1) + 224] = 0
                                        else:
                                            require (-mem[_961] + 10^18 / 10^15 * _913) + (1000 * _839)
                                            require idx + 1 < mem[192]
                                            mem[(32 * idx + 1) + 224] = _897 * -mem[_961] + 10^18 / 10^15 * _913 / (-mem[_961] + 10^18 / 10^15 * _913) + (1000 * _839)
            idx = idx + 1
            continue 
        require 1 < mem[192]
        _702 = mem[256]
        _713 = mem[64]
        mem[mem[64]] = 34
        mem[64] = mem[64] + 1120
        mem[_713 + 32 len 1088] = call.data[calldata.size len 1088]
        require 12 < mem[_713]
        mem[_713 + 416] = 1
        mem[_713 + 1120] = _702
        mem[_713 + 1152] = 64
        mem[_713 + 1184] = mem[_713]
        mem[_713 + 1216 len 32 * mem[_713]] = mem[_713 + 32 len 32 * mem[_713]]
        return memory
          from mem[64]
           len _713 + (32 * mem[_713]) + -mem[64] + 1216
    mem[160] = arg2
    mem[192] = 2
    mem[64] = 288
    mem[224 len 64] = call.data[calldata.size len 64]
    mem[224] = arg3
    idx = 0
    while idx < 1:
        require idx < mem[96]
        require idx + 1 < mem[96]
        _682 = mem[(32 * idx + 1) + 128]
        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
        mem[mem[64] + 36] = address(_682)
        require ext_code.size(factoryAddress)
        staticcall factoryAddress.0x901754d7 with:
                gas gas_remaining wei
               args mem[mem[64] + 4], address(_682)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _723 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _739 = mem[_723]
        require mem[_723] == mem[_723 + 12 len 20]
        if not mem[_723 + 12 len 20]:
            require idx < mem[192]
            require idx + 1 < mem[192]
            mem[(32 * idx + 1) + 224] = 0
        else:
            require idx < mem[96]
            _810 = mem[(32 * idx) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            require ext_code.size(address(_739))
            staticcall address(_739).getBalanceForAddition(address rg1) with:
                    gas gas_remaining wei
                   args address(_810)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _827 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _843 = mem[_827]
            require idx + 1 < mem[96]
            _874 = mem[(32 * idx + 1) + 128]
            mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
            require ext_code.size(address(_739))
            staticcall address(_739).getBalanceForRemoval(address rg1) with:
                    gas gas_remaining wei
                   args address(_874)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _891 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _899 = mem[_891]
            require idx < mem[192]
            _915 = mem[(32 * idx) + 224]
            if not mem[(32 * idx) + 224]:
                require idx + 1 < mem[192]
                mem[(32 * idx + 1) + 224] = 0
            else:
                if not _843:
                    require idx + 1 < mem[192]
                    mem[(32 * idx + 1) + 224] = 0
                else:
                    if not mem[_891]:
                        require idx + 1 < mem[192]
                        mem[(32 * idx + 1) + 224] = 0
                    else:
                        require ext_code.size(factoryAddress)
                        staticcall factoryAddress.0xddca3f43 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _963 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_963] > 10^18:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not _915:
                            if not _843:
                                require idx + 1 < mem[192]
                                mem[(32 * idx + 1) + 224] = 0
                            else:
                                if 1000 * _843 / _843 != 1000:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if 1000 * _843 < 1000 * _843:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not 1000 * _843:
                                    require idx + 1 < mem[192]
                                    mem[(32 * idx + 1) + 224] = 0
                                else:
                                    require 1000 * _843
                                    require idx + 1 < mem[192]
                                    mem[(32 * idx + 1) + 224] = 0 / 1000 * _843
                        else:
                            if -mem[_963] + 10^18 / 10^15 * _915 / _915 != -mem[_963] + 10^18 / 10^15:
                                revert with 0, 'SafeMath: multiplication overflow'
                            if not -mem[_963] + 10^18 / 10^15 * _915:
                                if not _843:
                                    if -mem[_963] + 10^18 / 10^15 * _915 < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not -mem[_963] + 10^18 / 10^15 * _915:
                                        require idx + 1 < mem[192]
                                        mem[(32 * idx + 1) + 224] = 0
                                    else:
                                        require -mem[_963] + 10^18 / 10^15 * _915
                                        require idx + 1 < mem[192]
                                        mem[(32 * idx + 1) + 224] = 0 / -mem[_963] + 10^18 / 10^15 * _915
                                else:
                                    if 1000 * _843 / _843 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if (-mem[_963] + 10^18 / 10^15 * _915) + (1000 * _843) < 1000 * _843:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not (-mem[_963] + 10^18 / 10^15 * _915) + (1000 * _843):
                                        require idx + 1 < mem[192]
                                        mem[(32 * idx + 1) + 224] = 0
                                    else:
                                        require (-mem[_963] + 10^18 / 10^15 * _915) + (1000 * _843)
                                        require idx + 1 < mem[192]
                                        mem[(32 * idx + 1) + 224] = 0 / (-mem[_963] + 10^18 / 10^15 * _915) + (1000 * _843)
                            else:
                                if _899 * -mem[_963] + 10^18 / 10^15 * _915 / -mem[_963] + 10^18 / 10^15 * _915 != _899:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not _843:
                                    if -mem[_963] + 10^18 / 10^15 * _915 < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not -mem[_963] + 10^18 / 10^15 * _915:
                                        require idx + 1 < mem[192]
                                        mem[(32 * idx + 1) + 224] = 0
                                    else:
                                        require -mem[_963] + 10^18 / 10^15 * _915
                                        require idx + 1 < mem[192]
                                        mem[(32 * idx + 1) + 224] = _899 * -mem[_963] + 10^18 / 10^15 * _915 / -mem[_963] + 10^18 / 10^15 * _915
                                else:
                                    if 1000 * _843 / _843 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if (-mem[_963] + 10^18 / 10^15 * _915) + (1000 * _843) < 1000 * _843:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not (-mem[_963] + 10^18 / 10^15 * _915) + (1000 * _843):
                                        require idx + 1 < mem[192]
                                        mem[(32 * idx + 1) + 224] = 0
                                    else:
                                        require (-mem[_963] + 10^18 / 10^15 * _915) + (1000 * _843)
                                        require idx + 1 < mem[192]
                                        mem[(32 * idx + 1) + 224] = _899 * -mem[_963] + 10^18 / 10^15 * _915 / (-mem[_963] + 10^18 / 10^15 * _915) + (1000 * _843)
        idx = idx + 1
        continue 
    require 1 < mem[192]
    _706 = mem[256]
    _715 = mem[64]
    mem[mem[64]] = 34
    mem[64] = mem[64] + 1120
    mem[_715 + 32 len 1088] = call.data[calldata.size len 1088]
    require 12 < mem[_715]
    mem[_715 + 416] = 1
    mem[_715 + 1120] = _706
    mem[_715 + 1152] = 64
    mem[_715 + 1184] = mem[_715]
    mem[_715 + 1216 len 32 * mem[_715]] = mem[_715 + 32 len 32 * mem[_715]]
    return memory
      from mem[64]
       len _715 + (32 * mem[_715]) + -mem[64] + 1216
}

function getPoolDataList(address[] arg1, address[] arg2) {
    require calldata.size - 4 >= 64
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require (32 * arg1.length) + 128 >= 96 and (32 * arg1.length) + 128 <= test266151307()
    mem[96] = arg1.length
    require calldata.size >= arg1 + (32 * arg1.length) + 36
    idx = 0
    s = arg1 + 36
    t = 128
    while idx < arg1.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    require arg2.length <= test266151307()
    require (32 * arg2.length) + 160 >= 128 and (32 * arg1.length) + (32 * arg2.length) + 160 <= test266151307()
    mem[(32 * arg1.length) + 128] = arg2.length
    require calldata.size >= arg2 + (32 * arg2.length) + 36
    idx = 0
    s = arg2 + 36
    t = (32 * arg1.length) + 160
    while idx < arg2.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if arg1.length <= 0:
        mem[64] = (32 * arg1.length) + (32 * arg2.length) + 320
        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = 0
        mem[(32 * arg1.length) + (32 * arg2.length) + 256] = 0
        mem[(32 * arg1.length) + (32 * arg2.length) + 288] = 0
        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = (32 * arg1.length) + (32 * arg2.length) + 224
        mem[(32 * arg1.length) + (32 * arg2.length) + 320] = 32
        _3930 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
        mem[(32 * arg1.length) + (32 * arg2.length) + 352] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
        idx = 0
        s = (32 * arg1.length) + (32 * arg2.length) + 192
        t = (32 * arg1.length) + (32 * arg2.length) + 384
        while idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]:
            _5873 = mem[s]
            mem[t] = mem[mem[s] + 12 len 20]
            mem[t + 32] = mem[_5873 + 32]
            mem[t + 64] = mem[_5873 + 64]
            idx = idx + 1
            s = s + 32
            t = t + 96
            continue 
        return memory
          from mem[64]
           len (32 * arg1.length) + (32 * arg2.length) + (96 * _3930) + -mem[64] + 384
    if arg1.length != arg2.length:
        mem[64] = (32 * arg1.length) + (32 * arg2.length) + 320
        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = 0
        mem[(32 * arg1.length) + (32 * arg2.length) + 256] = 0
        mem[(32 * arg1.length) + (32 * arg2.length) + 288] = 0
        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = (32 * arg1.length) + (32 * arg2.length) + 224
        mem[(32 * arg1.length) + (32 * arg2.length) + 320] = 32
        _3933 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
        mem[(32 * arg1.length) + (32 * arg2.length) + 352] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
        idx = 0
        s = (32 * arg1.length) + (32 * arg2.length) + 192
        t = (32 * arg1.length) + (32 * arg2.length) + 384
        while idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]:
            _5877 = mem[s]
            mem[t] = mem[mem[s] + 12 len 20]
            mem[t + 32] = mem[_5877 + 32]
            mem[t + 64] = mem[_5877 + 64]
            idx = idx + 1
            s = s + 32
            t = t + 96
            continue 
        return memory
          from mem[64]
           len (32 * arg1.length) + (32 * arg2.length) + (96 * _3933) + -mem[64] + 384
    require arg1.length <= test266151307()
    mem[(32 * arg1.length) + (32 * arg2.length) + 160] = arg1.length
    mem[64] = (64 * arg1.length) + (32 * arg2.length) + 192
    if not arg1.length:
        idx = 0
        while idx < arg1.length:
            require idx < mem[96]
            require idx < mem[(32 * arg1.length) + 128]
            if not mem[(32 * idx) + 140 len 20]:
                _5894 = mem[(32 * idx) + (32 * arg1.length) + 160]
                mem[mem[64] + 4] = address(WETHAddress)
                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                    mem[mem[64] + 36] = address(WETHAddress)
                    require ext_code.size(factoryAddress)
                    staticcall factoryAddress.0x901754d7 with:
                            gas gas_remaining wei
                           args address(WETHAddress), address(WETHAddress)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5918 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_5918] == mem[_5918 + 12 len 20]
                    if mem[_5918 + 12 len 20]:
                        require idx < mem[96]
                        require idx < mem[(32 * arg1.length) + 128]
                        if not mem[(32 * idx) + 140 len 20]:
                            _5952 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            mem[mem[64] + 4] = address(WETHAddress)
                            if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                mem[mem[64] + 36] = address(WETHAddress)
                                require ext_code.size(factoryAddress)
                                staticcall factoryAddress.0x901754d7 with:
                                        gas gas_remaining wei
                                       args address(WETHAddress), address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6006 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6006] == mem[_6006 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_6006 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _6115 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[96]
                                _6138 = mem[(32 * idx) + 128]
                                if not mem[(32 * idx) + 140 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_6115))
                                    staticcall address(_6115).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6347 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6347]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6495 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6544 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6495))
                                        staticcall address(_6495).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7009 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7009]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6495))
                                        staticcall address(_6495).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6544)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7091 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7091]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                    require ext_code.size(address(_6115))
                                    staticcall address(_6115).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_6138)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6383 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6383]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6546 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6611 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6546))
                                        staticcall address(_6546).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7092 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7092]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6546))
                                        staticcall address(_6546).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6611)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7152 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7152]
                            else:
                                mem[mem[64] + 36] = address(_5952)
                                require ext_code.size(factoryAddress)
                                staticcall factoryAddress.0x901754d7 with:
                                        gas gas_remaining wei
                                       args address(WETHAddress), address(_5952)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6018 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6018] == mem[_6018 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_6018 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _6140 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[96]
                                _6171 = mem[(32 * idx) + 128]
                                if not mem[(32 * idx) + 140 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_6140))
                                    staticcall address(_6140).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6384 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6384]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6549 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6612 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6549))
                                        staticcall address(_6549).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7093 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7093]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6549))
                                        staticcall address(_6549).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6612)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7153 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7153]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                    require ext_code.size(address(_6140))
                                    staticcall address(_6140).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_6171)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6408 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6408]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6614 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6688 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6614))
                                        staticcall address(_6614).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7154 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7154]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6614))
                                        staticcall address(_6614).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6688)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7201 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7201]
                        else:
                            _5957 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                            if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                mem[mem[64] + 36] = address(WETHAddress)
                                require ext_code.size(factoryAddress)
                                staticcall factoryAddress.0x901754d7 with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4], address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6019 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6019] == mem[_6019 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_6019 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _6143 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[96]
                                _6172 = mem[(32 * idx) + 128]
                                if not mem[(32 * idx) + 140 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_6143))
                                    staticcall address(_6143).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6385 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6385]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6554 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6616 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6554))
                                        staticcall address(_6554).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7095 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7095]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6554))
                                        staticcall address(_6554).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6616)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7155 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7155]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                    require ext_code.size(address(_6143))
                                    staticcall address(_6143).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_6172)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6409 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6409]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6618 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6689 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6618))
                                        staticcall address(_6618).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7156 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7156]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6618))
                                        staticcall address(_6618).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6689)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7203 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7203]
                            else:
                                mem[mem[64] + 36] = address(_5957)
                                require ext_code.size(factoryAddress)
                                staticcall factoryAddress.0x901754d7 with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4], address(_5957)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6029 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6029] == mem[_6029 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_6029 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _6174 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[96]
                                _6203 = mem[(32 * idx) + 128]
                                if not mem[(32 * idx) + 140 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_6174))
                                    staticcall address(_6174).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6410 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6410]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6621 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6690 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6621))
                                        staticcall address(_6621).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7157 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7157]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6621))
                                        staticcall address(_6621).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6690)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7204 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7204]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                    require ext_code.size(address(_6174))
                                    staticcall address(_6174).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_6203)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6433 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6433]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6692 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6757 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6692))
                                        staticcall address(_6692).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7205 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7205]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6692))
                                        staticcall address(_6692).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6757)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7258 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7258]
                else:
                    mem[mem[64] + 36] = address(_5894)
                    require ext_code.size(factoryAddress)
                    staticcall factoryAddress.0x901754d7 with:
                            gas gas_remaining wei
                           args address(WETHAddress), address(_5894)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5920 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_5920] == mem[_5920 + 12 len 20]
                    if mem[_5920 + 12 len 20]:
                        require idx < mem[96]
                        require idx < mem[(32 * arg1.length) + 128]
                        if not mem[(32 * idx) + 140 len 20]:
                            _5958 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            mem[mem[64] + 4] = address(WETHAddress)
                            if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                mem[mem[64] + 36] = address(WETHAddress)
                                require ext_code.size(factoryAddress)
                                staticcall factoryAddress.0x901754d7 with:
                                        gas gas_remaining wei
                                       args address(WETHAddress), address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6020 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6020] == mem[_6020 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_6020 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _6148 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[96]
                                _6176 = mem[(32 * idx) + 128]
                                if not mem[(32 * idx) + 140 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_6148))
                                    staticcall address(_6148).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6387 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6387]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6562 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6625 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6562))
                                        staticcall address(_6562).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7099 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7099]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6562))
                                        staticcall address(_6562).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6625)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7159 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7159]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                    require ext_code.size(address(_6148))
                                    staticcall address(_6148).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_6176)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6411 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6411]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6627 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6694 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6627))
                                        staticcall address(_6627).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7160 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7160]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6627))
                                        staticcall address(_6627).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6694)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7207 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7207]
                            else:
                                mem[mem[64] + 36] = address(_5958)
                                require ext_code.size(factoryAddress)
                                staticcall factoryAddress.0x901754d7 with:
                                        gas gas_remaining wei
                                       args address(WETHAddress), address(_5958)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6030 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6030] == mem[_6030 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_6030 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _6178 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[96]
                                _6204 = mem[(32 * idx) + 128]
                                if not mem[(32 * idx) + 140 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_6178))
                                    staticcall address(_6178).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6412 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6412]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6630 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6695 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6630))
                                        staticcall address(_6630).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7161 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7161]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6630))
                                        staticcall address(_6630).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6695)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7208 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7208]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                    require ext_code.size(address(_6178))
                                    staticcall address(_6178).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_6204)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6435 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6435]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6697 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6758 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6697))
                                        staticcall address(_6697).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7209 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7209]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6697))
                                        staticcall address(_6697).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6758)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7263 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7263]
                        else:
                            _5966 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                            if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                mem[mem[64] + 36] = address(WETHAddress)
                                require ext_code.size(factoryAddress)
                                staticcall factoryAddress.0x901754d7 with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4], address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6031 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6031] == mem[_6031 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_6031 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _6181 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[96]
                                _6205 = mem[(32 * idx) + 128]
                                if not mem[(32 * idx) + 140 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_6181))
                                    staticcall address(_6181).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6413 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6413]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6635 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6699 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6635))
                                        staticcall address(_6635).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7163 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7163]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6635))
                                        staticcall address(_6635).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6699)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7210 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7210]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                    require ext_code.size(address(_6181))
                                    staticcall address(_6181).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_6205)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6436 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6436]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6701 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6759 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6701))
                                        staticcall address(_6701).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7211 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7211]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6701))
                                        staticcall address(_6701).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6759)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7265 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7265]
                            else:
                                mem[mem[64] + 36] = address(_5966)
                                require ext_code.size(factoryAddress)
                                staticcall factoryAddress.0x901754d7 with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4], address(_5966)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6043 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6043] == mem[_6043 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_6043 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _6207 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[96]
                                _6225 = mem[(32 * idx) + 128]
                                if not mem[(32 * idx) + 140 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_6207))
                                    staticcall address(_6207).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6437 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6437]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6704 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6760 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6704))
                                        staticcall address(_6704).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7212 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7212]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6704))
                                        staticcall address(_6704).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6760)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7266 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7266]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                    require ext_code.size(address(_6207))
                                    staticcall address(_6207).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_6225)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6469 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6469]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6762 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6811 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6762))
                                        staticcall address(_6762).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7267 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7267]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6762))
                                        staticcall address(_6762).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6811)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7336 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7336]
            else:
                _5898 = mem[(32 * idx) + (32 * arg1.length) + 160]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                    mem[mem[64] + 36] = address(WETHAddress)
                    require ext_code.size(factoryAddress)
                    staticcall factoryAddress.0x901754d7 with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(WETHAddress)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5921 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_5921] == mem[_5921 + 12 len 20]
                    if mem[_5921 + 12 len 20]:
                        require idx < mem[96]
                        require idx < mem[(32 * arg1.length) + 128]
                        if not mem[(32 * idx) + 140 len 20]:
                            _5960 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            mem[mem[64] + 4] = address(WETHAddress)
                            if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                mem[mem[64] + 36] = address(WETHAddress)
                                require ext_code.size(factoryAddress)
                                staticcall factoryAddress.0x901754d7 with:
                                        gas gas_remaining wei
                                       args address(WETHAddress), address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6022 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6022] == mem[_6022 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_6022 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _6156 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[96]
                                _6185 = mem[(32 * idx) + 128]
                                if not mem[(32 * idx) + 140 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_6156))
                                    staticcall address(_6156).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6391 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6391]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6575 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6642 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6575))
                                        staticcall address(_6575).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7107 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7107]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6575))
                                        staticcall address(_6575).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6642)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7167 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7167]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                    require ext_code.size(address(_6156))
                                    staticcall address(_6156).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_6185)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6415 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6415]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6644 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6708 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6644))
                                        staticcall address(_6644).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7168 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7168]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6644))
                                        staticcall address(_6644).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6708)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7215 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7215]
                            else:
                                mem[mem[64] + 36] = address(_5960)
                                require ext_code.size(factoryAddress)
                                staticcall factoryAddress.0x901754d7 with:
                                        gas gas_remaining wei
                                       args address(WETHAddress), address(_5960)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6032 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6032] == mem[_6032 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_6032 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _6187 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[96]
                                _6209 = mem[(32 * idx) + 128]
                                if not mem[(32 * idx) + 140 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_6187))
                                    staticcall address(_6187).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6416 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6416]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6647 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6709 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6647))
                                        staticcall address(_6647).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7169 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7169]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6647))
                                        staticcall address(_6647).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6709)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7216 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7216]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                    require ext_code.size(address(_6187))
                                    staticcall address(_6187).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_6209)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6439 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6439]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6711 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6764 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6711))
                                        staticcall address(_6711).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7217 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7217]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6711))
                                        staticcall address(_6711).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6764)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7272 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7272]
                        else:
                            _5967 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                            if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                mem[mem[64] + 36] = address(WETHAddress)
                                require ext_code.size(factoryAddress)
                                staticcall factoryAddress.0x901754d7 with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4], address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6033 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6033] == mem[_6033 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_6033 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _6190 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[96]
                                _6210 = mem[(32 * idx) + 128]
                                if not mem[(32 * idx) + 140 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_6190))
                                    staticcall address(_6190).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6417 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6417]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6652 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6713 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6652))
                                        staticcall address(_6652).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7171 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7171]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6652))
                                        staticcall address(_6652).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6713)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7218 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7218]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                    require ext_code.size(address(_6190))
                                    staticcall address(_6190).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_6210)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6440 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6440]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6715 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6765 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6715))
                                        staticcall address(_6715).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7219 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7219]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6715))
                                        staticcall address(_6715).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6765)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7274 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7274]
                            else:
                                mem[mem[64] + 36] = address(_5967)
                                require ext_code.size(factoryAddress)
                                staticcall factoryAddress.0x901754d7 with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4], address(_5967)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6045 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6045] == mem[_6045 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_6045 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _6212 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[96]
                                _6226 = mem[(32 * idx) + 128]
                                if not mem[(32 * idx) + 140 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_6212))
                                    staticcall address(_6212).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6441 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6441]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6718 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6766 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6718))
                                        staticcall address(_6718).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7220 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7220]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6718))
                                        staticcall address(_6718).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6766)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7275 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7275]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                    require ext_code.size(address(_6212))
                                    staticcall address(_6212).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_6226)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6474 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6474]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6768 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6813 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6768))
                                        staticcall address(_6768).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7276 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7276]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6768))
                                        staticcall address(_6768).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6813)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7348 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7348]
                else:
                    mem[mem[64] + 36] = address(_5898)
                    require ext_code.size(factoryAddress)
                    staticcall factoryAddress.0x901754d7 with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_5898)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _5924 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_5924] == mem[_5924 + 12 len 20]
                    if mem[_5924 + 12 len 20]:
                        require idx < mem[96]
                        require idx < mem[(32 * arg1.length) + 128]
                        if not mem[(32 * idx) + 140 len 20]:
                            _5968 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            mem[mem[64] + 4] = address(WETHAddress)
                            if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                mem[mem[64] + 36] = address(WETHAddress)
                                require ext_code.size(factoryAddress)
                                staticcall factoryAddress.0x901754d7 with:
                                        gas gas_remaining wei
                                       args address(WETHAddress), address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6034 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6034] == mem[_6034 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_6034 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _6195 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[96]
                                _6214 = mem[(32 * idx) + 128]
                                if not mem[(32 * idx) + 140 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_6195))
                                    staticcall address(_6195).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6419 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6419]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6660 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6722 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6660))
                                        staticcall address(_6660).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7175 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7175]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6660))
                                        staticcall address(_6660).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6722)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7222 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7222]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                    require ext_code.size(address(_6195))
                                    staticcall address(_6195).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_6214)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6442 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6442]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6724 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6770 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6724))
                                        staticcall address(_6724).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7223 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7223]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6724))
                                        staticcall address(_6724).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6770)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7278 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7278]
                            else:
                                mem[mem[64] + 36] = address(_5968)
                                require ext_code.size(factoryAddress)
                                staticcall factoryAddress.0x901754d7 with:
                                        gas gas_remaining wei
                                       args address(WETHAddress), address(_5968)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6046 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6046] == mem[_6046 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_6046 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _6216 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[96]
                                _6227 = mem[(32 * idx) + 128]
                                if not mem[(32 * idx) + 140 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_6216))
                                    staticcall address(_6216).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6443 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6443]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6727 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6771 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6727))
                                        staticcall address(_6727).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7224 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7224]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6727))
                                        staticcall address(_6727).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6771)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7279 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7279]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                    require ext_code.size(address(_6216))
                                    staticcall address(_6216).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_6227)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6476 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6476]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6773 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6814 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6773))
                                        staticcall address(_6773).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7280 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7280]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6773))
                                        staticcall address(_6773).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6814)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7353 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7353]
                        else:
                            _5974 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                            if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                mem[mem[64] + 36] = address(WETHAddress)
                                require ext_code.size(factoryAddress)
                                staticcall factoryAddress.0x901754d7 with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4], address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6047 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6047] == mem[_6047 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_6047 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _6219 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[96]
                                _6228 = mem[(32 * idx) + 128]
                                if not mem[(32 * idx) + 140 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_6219))
                                    staticcall address(_6219).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6444 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6444]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6732 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6775 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6732))
                                        staticcall address(_6732).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7226 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7226]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6732))
                                        staticcall address(_6732).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6775)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7281 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7281]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                    require ext_code.size(address(_6219))
                                    staticcall address(_6219).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_6228)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6477 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6477]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6777 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6815 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6777))
                                        staticcall address(_6777).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7282 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7282]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6777))
                                        staticcall address(_6777).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6815)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7355 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7355]
                            else:
                                mem[mem[64] + 36] = address(_5974)
                                require ext_code.size(factoryAddress)
                                staticcall factoryAddress.0x901754d7 with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4], address(_5974)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _6061 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_6061] == mem[_6061 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_6061 + 12 len 20]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _6230 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[96]
                                _6243 = mem[(32 * idx) + 128]
                                if not mem[(32 * idx) + 140 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_6230))
                                    staticcall address(_6230).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6478 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6478]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6780 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6816 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6780))
                                        staticcall address(_6780).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7283 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7283]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6780))
                                        staticcall address(_6780).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6816)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7356 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7356]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                    require ext_code.size(address(_6230))
                                    staticcall address(_6230).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_6243)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _6527 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_6527]
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    _6818 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                    require idx < mem[(32 * arg1.length) + 128]
                                    _6870 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                    if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                        mem[mem[64] + 4] = address(WETHAddress)
                                        require ext_code.size(address(_6818))
                                        staticcall address(_6818).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(WETHAddress)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7357 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7357]
                                    else:
                                        mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                        require ext_code.size(address(_6818))
                                        staticcall address(_6818).getBalanceForAddition(address rg1) with:
                                                gas gas_remaining wei
                                               args address(_6870)
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _7439 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                        mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_7439]
            idx = idx + 1
            continue 
        _5886 = mem[64]
        mem[mem[64]] = 32
        _5887 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
        mem[mem[64] + 32] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
        idx = 0
        s = (32 * arg1.length) + (32 * arg2.length) + 192
        t = mem[64] + 64
        while idx < _5887:
            _7816 = mem[s]
            mem[t] = mem[mem[s] + 12 len 20]
            mem[t + 32] = mem[_7816 + 32]
            mem[t + 64] = mem[_7816 + 64]
            idx = idx + 1
            s = s + 32
            t = t + 96
            continue 
        return memory
          from mem[64]
           len _5886 + (96 * _5887) + -mem[64] + 64
    mem[64] = (64 * arg1.length) + (32 * arg2.length) + 288
    mem[(64 * arg1.length) + (32 * arg2.length) + 192] = 0
    mem[(64 * arg1.length) + (32 * arg2.length) + 224] = 0
    mem[(64 * arg1.length) + (32 * arg2.length) + 256] = 0
    mem[var43001] = (64 * arg1.length) + (32 * arg2.length) + 192
    s = var43001
    idx = var43002
    while idx - 1:
        mem[64] = mem[64] + 96
        mem[(64 * arg1.length) + (32 * arg2.length) + 192] = 0
        mem[(64 * arg1.length) + (32 * arg2.length) + 224] = 0
        mem[(64 * arg1.length) + (32 * arg2.length) + 256] = 0
        mem[s + 32] = (64 * arg1.length) + (32 * arg2.length) + 192
        s = s + 32
        idx = idx - 1
        continue 
    _8787 = mem[96]
    idx = 0
    while idx < _8787:
        require idx < mem[96]
        require idx < mem[(32 * arg1.length) + 128]
        if not mem[(32 * idx) + 140 len 20]:
            _8797 = mem[(32 * idx) + (32 * arg1.length) + 160]
            mem[mem[64] + 4] = address(WETHAddress)
            if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                mem[mem[64] + 36] = address(WETHAddress)
                require ext_code.size(factoryAddress)
                staticcall factoryAddress.0x901754d7 with:
                        gas gas_remaining wei
                       args address(WETHAddress), address(WETHAddress)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8808 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_8808] == mem[_8808 + 12 len 20]
                if mem[_8808 + 12 len 20]:
                    require idx < mem[96]
                    require idx < mem[(32 * arg1.length) + 128]
                    if not mem[(32 * idx) + 140 len 20]:
                        _8826 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        mem[mem[64] + 4] = address(WETHAddress)
                        if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                            mem[mem[64] + 36] = address(WETHAddress)
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0x901754d7 with:
                                    gas gas_remaining wei
                                   args address(WETHAddress), address(WETHAddress)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8861 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8861] == mem[_8861 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_8861 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            _8913 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                            require idx < mem[96]
                            _8929 = mem[(32 * idx) + 128]
                            if not mem[(32 * idx) + 140 len 20]:
                                mem[mem[64] + 4] = address(WETHAddress)
                                require ext_code.size(address(_8913))
                                staticcall address(_8913).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9049 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9049]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9137 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9170 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9137))
                                    staticcall address(_9137).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9418 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9418]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9137))
                                    staticcall address(_9137).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9170)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9449 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9449]
                            else:
                                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                require ext_code.size(address(_8913))
                                staticcall address(_8913).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8929)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9065 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9065]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9172 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9221 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9172))
                                    staticcall address(_9172).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9450 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9450]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9172))
                                    staticcall address(_9172).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9221)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9482 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9482]
                        else:
                            mem[mem[64] + 36] = address(_8826)
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0x901754d7 with:
                                    gas gas_remaining wei
                                   args address(WETHAddress), address(_8826)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8869 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8869] == mem[_8869 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_8869 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            _8931 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                            require idx < mem[96]
                            _8958 = mem[(32 * idx) + 128]
                            if not mem[(32 * idx) + 140 len 20]:
                                mem[mem[64] + 4] = address(WETHAddress)
                                require ext_code.size(address(_8931))
                                staticcall address(_8931).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9066 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9066]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9175 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9222 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9175))
                                    staticcall address(_9175).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9451 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9451]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9175))
                                    staticcall address(_9175).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9222)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9483 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9483]
                            else:
                                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                require ext_code.size(address(_8931))
                                staticcall address(_8931).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8958)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9082 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9082]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9224 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9282 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9224))
                                    staticcall address(_9224).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9484 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9484]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9224))
                                    staticcall address(_9224).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9282)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9517 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9517]
                    else:
                        _8830 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                        if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                            mem[mem[64] + 36] = address(WETHAddress)
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0x901754d7 with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4], address(WETHAddress)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8870 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8870] == mem[_8870 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_8870 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            _8934 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                            require idx < mem[96]
                            _8959 = mem[(32 * idx) + 128]
                            if not mem[(32 * idx) + 140 len 20]:
                                mem[mem[64] + 4] = address(WETHAddress)
                                require ext_code.size(address(_8934))
                                staticcall address(_8934).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9067 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9067]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9180 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9226 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9180))
                                    staticcall address(_9180).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9453 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9453]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9180))
                                    staticcall address(_9180).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9226)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9485 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9485]
                            else:
                                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                require ext_code.size(address(_8934))
                                staticcall address(_8934).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8959)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9083 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9083]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9228 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9283 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9228))
                                    staticcall address(_9228).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9486 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9486]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9228))
                                    staticcall address(_9228).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9283)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9519 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9519]
                        else:
                            mem[mem[64] + 36] = address(_8830)
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0x901754d7 with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4], address(_8830)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8878 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8878] == mem[_8878 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_8878 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            _8961 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                            require idx < mem[96]
                            _8989 = mem[(32 * idx) + 128]
                            if not mem[(32 * idx) + 140 len 20]:
                                mem[mem[64] + 4] = address(WETHAddress)
                                require ext_code.size(address(_8961))
                                staticcall address(_8961).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9084 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9084]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9231 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9284 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9231))
                                    staticcall address(_9231).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9487 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9487]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9231))
                                    staticcall address(_9231).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9284)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9520 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9520]
                            else:
                                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                require ext_code.size(address(_8961))
                                staticcall address(_8961).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8989)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9101 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9101]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9286 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9334 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9286))
                                    staticcall address(_9286).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9521 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9521]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9286))
                                    staticcall address(_9286).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9334)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9557 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9557]
            else:
                mem[mem[64] + 36] = address(_8797)
                require ext_code.size(factoryAddress)
                staticcall factoryAddress.0x901754d7 with:
                        gas gas_remaining wei
                       args address(WETHAddress), address(_8797)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8810 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_8810] == mem[_8810 + 12 len 20]
                if mem[_8810 + 12 len 20]:
                    require idx < mem[96]
                    require idx < mem[(32 * arg1.length) + 128]
                    if not mem[(32 * idx) + 140 len 20]:
                        _8831 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        mem[mem[64] + 4] = address(WETHAddress)
                        if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                            mem[mem[64] + 36] = address(WETHAddress)
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0x901754d7 with:
                                    gas gas_remaining wei
                                   args address(WETHAddress), address(WETHAddress)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8871 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8871] == mem[_8871 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_8871 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            _8939 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                            require idx < mem[96]
                            _8963 = mem[(32 * idx) + 128]
                            if not mem[(32 * idx) + 140 len 20]:
                                mem[mem[64] + 4] = address(WETHAddress)
                                require ext_code.size(address(_8939))
                                staticcall address(_8939).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9069 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9069]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9188 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9235 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9188))
                                    staticcall address(_9188).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9457 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9457]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9188))
                                    staticcall address(_9188).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9235)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9489 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9489]
                            else:
                                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                require ext_code.size(address(_8939))
                                staticcall address(_8939).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8963)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9085 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9085]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9237 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9288 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9237))
                                    staticcall address(_9237).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9490 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9490]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9237))
                                    staticcall address(_9237).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9288)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9523 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9523]
                        else:
                            mem[mem[64] + 36] = address(_8831)
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0x901754d7 with:
                                    gas gas_remaining wei
                                   args address(WETHAddress), address(_8831)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8879 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8879] == mem[_8879 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_8879 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            _8965 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                            require idx < mem[96]
                            _8990 = mem[(32 * idx) + 128]
                            if not mem[(32 * idx) + 140 len 20]:
                                mem[mem[64] + 4] = address(WETHAddress)
                                require ext_code.size(address(_8965))
                                staticcall address(_8965).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9086 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9086]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9240 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9289 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9240))
                                    staticcall address(_9240).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9491 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9491]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9240))
                                    staticcall address(_9240).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9289)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9524 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9524]
                            else:
                                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                require ext_code.size(address(_8965))
                                staticcall address(_8965).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8990)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9103 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9103]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9291 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9335 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9291))
                                    staticcall address(_9291).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9525 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9525]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9291))
                                    staticcall address(_9291).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9335)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9562 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9562]
                    else:
                        _8836 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                        if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                            mem[mem[64] + 36] = address(WETHAddress)
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0x901754d7 with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4], address(WETHAddress)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8880 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8880] == mem[_8880 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_8880 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            _8968 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                            require idx < mem[96]
                            _8991 = mem[(32 * idx) + 128]
                            if not mem[(32 * idx) + 140 len 20]:
                                mem[mem[64] + 4] = address(WETHAddress)
                                require ext_code.size(address(_8968))
                                staticcall address(_8968).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9087 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9087]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9245 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9293 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9245))
                                    staticcall address(_9245).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9493 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9493]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9245))
                                    staticcall address(_9245).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9293)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9526 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9526]
                            else:
                                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                require ext_code.size(address(_8968))
                                staticcall address(_8968).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8991)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9104 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9104]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9295 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9336 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9295))
                                    staticcall address(_9295).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9527 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9527]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9295))
                                    staticcall address(_9295).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9336)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9564 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9564]
                        else:
                            mem[mem[64] + 36] = address(_8836)
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0x901754d7 with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4], address(_8836)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8888 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8888] == mem[_8888 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_8888 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            _8993 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                            require idx < mem[96]
                            _9010 = mem[(32 * idx) + 128]
                            if not mem[(32 * idx) + 140 len 20]:
                                mem[mem[64] + 4] = address(WETHAddress)
                                require ext_code.size(address(_8993))
                                staticcall address(_8993).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9105 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9105]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9298 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9337 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9298))
                                    staticcall address(_9298).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9528 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9528]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9298))
                                    staticcall address(_9298).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9337)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9565 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9565]
                            else:
                                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                require ext_code.size(address(_8993))
                                staticcall address(_8993).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_9010)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9126 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9126]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9339 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9366 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9339))
                                    staticcall address(_9339).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9566 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9566]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9339))
                                    staticcall address(_9339).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9366)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9609 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9609]
        else:
            _8800 = mem[(32 * idx) + (32 * arg1.length) + 160]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                mem[mem[64] + 36] = address(WETHAddress)
                require ext_code.size(factoryAddress)
                staticcall factoryAddress.0x901754d7 with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(WETHAddress)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8811 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_8811] == mem[_8811 + 12 len 20]
                if mem[_8811 + 12 len 20]:
                    require idx < mem[96]
                    require idx < mem[(32 * arg1.length) + 128]
                    if not mem[(32 * idx) + 140 len 20]:
                        _8833 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        mem[mem[64] + 4] = address(WETHAddress)
                        if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                            mem[mem[64] + 36] = address(WETHAddress)
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0x901754d7 with:
                                    gas gas_remaining wei
                                   args address(WETHAddress), address(WETHAddress)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8873 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8873] == mem[_8873 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_8873 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            _8947 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                            require idx < mem[96]
                            _8972 = mem[(32 * idx) + 128]
                            if not mem[(32 * idx) + 140 len 20]:
                                mem[mem[64] + 4] = address(WETHAddress)
                                require ext_code.size(address(_8947))
                                staticcall address(_8947).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9073 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9073]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9201 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9252 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9201))
                                    staticcall address(_9201).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9465 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9465]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9201))
                                    staticcall address(_9201).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9252)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9497 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9497]
                            else:
                                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                require ext_code.size(address(_8947))
                                staticcall address(_8947).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8972)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9089 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9089]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9254 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9302 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9254))
                                    staticcall address(_9254).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9498 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9498]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9254))
                                    staticcall address(_9254).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9302)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9531 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9531]
                        else:
                            mem[mem[64] + 36] = address(_8833)
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0x901754d7 with:
                                    gas gas_remaining wei
                                   args address(WETHAddress), address(_8833)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8881 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8881] == mem[_8881 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_8881 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            _8974 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                            require idx < mem[96]
                            _8995 = mem[(32 * idx) + 128]
                            if not mem[(32 * idx) + 140 len 20]:
                                mem[mem[64] + 4] = address(WETHAddress)
                                require ext_code.size(address(_8974))
                                staticcall address(_8974).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9090 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9090]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9257 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9303 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9257))
                                    staticcall address(_9257).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9499 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9499]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9257))
                                    staticcall address(_9257).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9303)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9532 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9532]
                            else:
                                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                require ext_code.size(address(_8974))
                                staticcall address(_8974).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8995)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9107 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9107]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9305 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9341 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9305))
                                    staticcall address(_9305).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9533 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9533]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9305))
                                    staticcall address(_9305).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9341)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9571 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9571]
                    else:
                        _8837 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                        if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                            mem[mem[64] + 36] = address(WETHAddress)
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0x901754d7 with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4], address(WETHAddress)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8882 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8882] == mem[_8882 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_8882 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            _8977 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                            require idx < mem[96]
                            _8996 = mem[(32 * idx) + 128]
                            if not mem[(32 * idx) + 140 len 20]:
                                mem[mem[64] + 4] = address(WETHAddress)
                                require ext_code.size(address(_8977))
                                staticcall address(_8977).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9091 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9091]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9262 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9307 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9262))
                                    staticcall address(_9262).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9501 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9501]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9262))
                                    staticcall address(_9262).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9307)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9534 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9534]
                            else:
                                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                require ext_code.size(address(_8977))
                                staticcall address(_8977).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_8996)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9108 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9108]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9309 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9342 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9309))
                                    staticcall address(_9309).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9535 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9535]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9309))
                                    staticcall address(_9309).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9342)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9573 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9573]
                        else:
                            mem[mem[64] + 36] = address(_8837)
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0x901754d7 with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4], address(_8837)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8890 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8890] == mem[_8890 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_8890 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            _8998 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                            require idx < mem[96]
                            _9011 = mem[(32 * idx) + 128]
                            if not mem[(32 * idx) + 140 len 20]:
                                mem[mem[64] + 4] = address(WETHAddress)
                                require ext_code.size(address(_8998))
                                staticcall address(_8998).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9109 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9109]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9312 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9343 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9312))
                                    staticcall address(_9312).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9536 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9536]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9312))
                                    staticcall address(_9312).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9343)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9574 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9574]
                            else:
                                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                require ext_code.size(address(_8998))
                                staticcall address(_8998).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_9011)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9131 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9131]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9345 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9368 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9345))
                                    staticcall address(_9345).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9575 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9575]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9345))
                                    staticcall address(_9345).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9368)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9621 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9621]
            else:
                mem[mem[64] + 36] = address(_8800)
                require ext_code.size(factoryAddress)
                staticcall factoryAddress.0x901754d7 with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_8800)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8813 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_8813] == mem[_8813 + 12 len 20]
                if mem[_8813 + 12 len 20]:
                    require idx < mem[96]
                    require idx < mem[(32 * arg1.length) + 128]
                    if not mem[(32 * idx) + 140 len 20]:
                        _8838 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        mem[mem[64] + 4] = address(WETHAddress)
                        if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                            mem[mem[64] + 36] = address(WETHAddress)
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0x901754d7 with:
                                    gas gas_remaining wei
                                   args address(WETHAddress), address(WETHAddress)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8883 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8883] == mem[_8883 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_8883 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            _8982 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                            require idx < mem[96]
                            _9000 = mem[(32 * idx) + 128]
                            if not mem[(32 * idx) + 140 len 20]:
                                mem[mem[64] + 4] = address(WETHAddress)
                                require ext_code.size(address(_8982))
                                staticcall address(_8982).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9093 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9093]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9270 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9316 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9270))
                                    staticcall address(_9270).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9505 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9505]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9270))
                                    staticcall address(_9270).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9316)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9538 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9538]
                            else:
                                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                require ext_code.size(address(_8982))
                                staticcall address(_8982).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_9000)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9110 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9110]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9318 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9347 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9318))
                                    staticcall address(_9318).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9539 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9539]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9318))
                                    staticcall address(_9318).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9347)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9577 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9577]
                        else:
                            mem[mem[64] + 36] = address(_8838)
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0x901754d7 with:
                                    gas gas_remaining wei
                                   args address(WETHAddress), address(_8838)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8891 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8891] == mem[_8891 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_8891 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            _9002 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                            require idx < mem[96]
                            _9012 = mem[(32 * idx) + 128]
                            if not mem[(32 * idx) + 140 len 20]:
                                mem[mem[64] + 4] = address(WETHAddress)
                                require ext_code.size(address(_9002))
                                staticcall address(_9002).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9111 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9111]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9321 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9348 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9321))
                                    staticcall address(_9321).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9540 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9540]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9321))
                                    staticcall address(_9321).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9348)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9578 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9578]
                            else:
                                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                require ext_code.size(address(_9002))
                                staticcall address(_9002).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_9012)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9133 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9133]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9350 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9369 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9350))
                                    staticcall address(_9350).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9579 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9579]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9350))
                                    staticcall address(_9350).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9369)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9626 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9626]
                    else:
                        _8841 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                        if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                            mem[mem[64] + 36] = address(WETHAddress)
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0x901754d7 with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4], address(WETHAddress)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8892 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8892] == mem[_8892 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_8892 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            _9005 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                            require idx < mem[96]
                            _9013 = mem[(32 * idx) + 128]
                            if not mem[(32 * idx) + 140 len 20]:
                                mem[mem[64] + 4] = address(WETHAddress)
                                require ext_code.size(address(_9005))
                                staticcall address(_9005).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9112 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9112]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9326 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9352 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9326))
                                    staticcall address(_9326).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9542 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9542]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9326))
                                    staticcall address(_9326).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9352)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9580 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9580]
                            else:
                                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                require ext_code.size(address(_9005))
                                staticcall address(_9005).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_9013)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9134 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9134]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9354 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9370 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9354))
                                    staticcall address(_9354).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9581 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9581]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9354))
                                    staticcall address(_9354).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9370)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9628 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9628]
                        else:
                            mem[mem[64] + 36] = address(_8841)
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0x901754d7 with:
                                    gas gas_remaining wei
                                   args mem[mem[64] + 4], address(_8841)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _8899 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_8899] == mem[_8899 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]] = mem[_8899 + 12 len 20]
                            require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            _9015 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                            require idx < mem[96]
                            _9022 = mem[(32 * idx) + 128]
                            if not mem[(32 * idx) + 140 len 20]:
                                mem[mem[64] + 4] = address(WETHAddress)
                                require ext_code.size(address(_9015))
                                staticcall address(_9015).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(WETHAddress)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9135 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9135]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9357 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9371 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9357))
                                    staticcall address(_9357).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9582 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9582]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9357))
                                    staticcall address(_9357).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9371)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9629 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9629]
                            else:
                                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                                require ext_code.size(address(_9015))
                                staticcall address(_9015).getBalanceForAddition(address rg1) with:
                                        gas gas_remaining wei
                                       args address(_9022)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _9169 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 32] = mem[_9169]
                                require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                _9373 = mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]]
                                require idx < mem[(32 * arg1.length) + 128]
                                _9391 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if not mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                    mem[mem[64] + 4] = address(WETHAddress)
                                    require ext_code.size(address(_9373))
                                    staticcall address(_9373).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(WETHAddress)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9630 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9630]
                                else:
                                    mem[mem[64] + 4] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                    require ext_code.size(address(_9373))
                                    staticcall address(_9373).getBalanceForAddition(address rg1) with:
                                            gas gas_remaining wei
                                           args address(_9391)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _9681 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192] + 64] = mem[_9681]
        _8787 = mem[96]
        idx = idx + 1
        continue 
    _8790 = mem[64]
    mem[mem[64]] = 32
    _8791 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
    mem[mem[64] + 32] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
    idx = 0
    s = (32 * arg1.length) + (32 * arg2.length) + 192
    t = mem[64] + 64
    while idx < _8791:
        _9753 = mem[s]
        mem[t] = mem[mem[s] + 12 len 20]
        mem[t + 32] = mem[_9753 + 32]
        mem[t + 64] = mem[_9753 + 64]
        idx = idx + 1
        s = s + 32
        t = t + 96
        continue 
    return memory
      from mem[64]
       len _8790 + (96 * _8791) + -mem[64] + 64
}

function swapETHForExactTokens(uint256 arg1, address[] arg2, address arg3, address arg4) payable {
    require calldata.size - 4 >= 128
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    require arg2.length <= test266151307()
    require arg2 + (32 * arg2.length) + 36 <= calldata.size
    require arg3 == arg3
    require arg4 == arg4
    require arg2.length
    require cd[(arg2 + 36)] == address(cd[(arg2 + 36)])
    if address(cd[(arg2 + 36)]) != address(WETHAddress):
        revert with 0, 'EmiRouter:INVALID_PATH'
    mem[96] = arg2.length
    mem[128 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
    if arg2.length < 2:
        revert with 0, 'EmiswapLibrary: INVALID_PATH'
    require arg2.length <= test266151307()
    mem[(32 * arg2.length) + 128] = arg2.length
    mem[64] = (64 * arg2.length) + 160
    if not arg2.length:
        require arg2.length - 1 < arg2.length
        mem[(32 * arg2.length - 1) + (32 * arg2.length) + 160] = arg1
        idx = mem[96] - 1
        while idx:
            require idx < mem[96]
            require idx - 1 < mem[96]
            _4403 = mem[(32 * idx - 1) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            mem[mem[64] + 36] = address(_4403)
            require ext_code.size(factoryAddress)
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], address(_4403)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4420 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4429 = mem[_4420]
            require mem[_4420] == mem[_4420 + 12 len 20]
            if not mem[_4420 + 12 len 20]:
                require idx < mem[(32 * arg2.length) + 128]
                if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                    revert with 0, 'EmiswapLibrary: INSUFFICIENT_OUTPUT_AMOUNT'
                revert with 0, 'EmiswapLibrary: INSUFFICIENT_LIQUIDITY'
            require idx - 1 < mem[96]
            _4453 = mem[(32 * idx - 1) + 128]
            mem[mem[64] + 4] = mem[(32 * idx - 1) + 140 len 20]
            require ext_code.size(address(_4429))
            staticcall address(_4429).getBalanceForAddition(address rg1) with:
                    gas gas_remaining wei
                   args address(_4453)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4474 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4484 = mem[_4474]
            require idx < mem[96]
            _4495 = mem[(32 * idx) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            require ext_code.size(address(_4429))
            staticcall address(_4429).getBalanceForRemoval(address rg1) with:
                    gas gas_remaining wei
                   args address(_4495)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4505 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4509 = mem[_4505]
            require idx < mem[(32 * arg2.length) + 128]
            _4519 = mem[(32 * idx) + (32 * arg2.length) + 160]
            if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                revert with 0, 'EmiswapLibrary: INSUFFICIENT_OUTPUT_AMOUNT'
            if _4484 <= 0:
                revert with 0, 'EmiswapLibrary: INSUFFICIENT_LIQUIDITY'
            if mem[_4505] <= 0:
                revert with 0, 'EmiswapLibrary: INSUFFICIENT_LIQUIDITY'
            if not _4484:
                require ext_code.size(factoryAddress)
                staticcall factoryAddress.0xddca3f43 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4595 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_4595] > 10^18:
                    revert with 0, 'SafeMath: subtraction overflow'
                if _4519 > _4509:
                    revert with 0, 'SafeMath: subtraction overflow'
                require _4509 - _4519
                if (_4509 * -mem[_4595] + 10^18 / 10^15) - (_4519 * -mem[_4595] + 10^18 / 10^15) / _4509 - _4519 != -mem[_4595] + 10^18 / 10^15:
                    revert with 0, 'SafeMath: multiplication overflow'
                require (_4509 * -mem[_4595] + 10^18 / 10^15) - (_4519 * -mem[_4595] + 10^18 / 10^15)
                if (0 / (_4509 * -mem[_4595] + 10^18 / 10^15) - (_4519 * -mem[_4595] + 10^18 / 10^15)) + 1 < 0 / (_4509 * -mem[_4595] + 10^18 / 10^15) - (_4519 * -mem[_4595] + 10^18 / 10^15):
                    revert with 0, 'SafeMath: addition overflow'
                require idx - 1 < mem[(32 * arg2.length) + 128]
                mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (_4509 * -mem[_4595] + 10^18 / 10^15) - (_4519 * -mem[_4595] + 10^18 / 10^15)) + 1
            else:
                if mem[(32 * idx) + (32 * arg2.length) + 160] * _4484 / _4484 != mem[(32 * idx) + (32 * arg2.length) + 160]:
                    revert with 0, 'SafeMath: multiplication overflow'
                if not mem[(32 * idx) + (32 * arg2.length) + 160] * _4484:
                    require ext_code.size(factoryAddress)
                    staticcall factoryAddress.0xddca3f43 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4629 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if mem[_4629] > 10^18:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if _4519 > _4509:
                        revert with 0, 'SafeMath: subtraction overflow'
                    require _4509 - _4519
                    if (_4509 * -mem[_4629] + 10^18 / 10^15) - (_4519 * -mem[_4629] + 10^18 / 10^15) / _4509 - _4519 != -mem[_4629] + 10^18 / 10^15:
                        revert with 0, 'SafeMath: multiplication overflow'
                    require (_4509 * -mem[_4629] + 10^18 / 10^15) - (_4519 * -mem[_4629] + 10^18 / 10^15)
                    if (0 / (_4509 * -mem[_4629] + 10^18 / 10^15) - (_4519 * -mem[_4629] + 10^18 / 10^15)) + 1 < 0 / (_4509 * -mem[_4629] + 10^18 / 10^15) - (_4519 * -mem[_4629] + 10^18 / 10^15):
                        revert with 0, 'SafeMath: addition overflow'
                    require idx - 1 < mem[(32 * arg2.length) + 128]
                    mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (_4509 * -mem[_4629] + 10^18 / 10^15) - (_4519 * -mem[_4629] + 10^18 / 10^15)) + 1
                else:
                    if 1000 * mem[(32 * idx) + (32 * arg2.length) + 160] * _4484 / mem[(32 * idx) + (32 * arg2.length) + 160] * _4484 != 1000:
                        revert with 0, 'SafeMath: multiplication overflow'
                    require ext_code.size(factoryAddress)
                    staticcall factoryAddress.0xddca3f43 with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _4649 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if mem[_4649] > 10^18:
                        revert with 0, 'SafeMath: subtraction overflow'
                    if _4519 > _4509:
                        revert with 0, 'SafeMath: subtraction overflow'
                    require _4509 - _4519
                    if (_4509 * -mem[_4649] + 10^18 / 10^15) - (_4519 * -mem[_4649] + 10^18 / 10^15) / _4509 - _4519 != -mem[_4649] + 10^18 / 10^15:
                        revert with 0, 'SafeMath: multiplication overflow'
                    require (_4509 * -mem[_4649] + 10^18 / 10^15) - (_4519 * -mem[_4649] + 10^18 / 10^15)
                    if (1000 * _4519 * _4484 / (_4509 * -mem[_4649] + 10^18 / 10^15) - (_4519 * -mem[_4649] + 10^18 / 10^15)) + 1 < 1000 * _4519 * _4484 / (_4509 * -mem[_4649] + 10^18 / 10^15) - (_4519 * -mem[_4649] + 10^18 / 10^15):
                        revert with 0, 'SafeMath: addition overflow'
                    require idx - 1 < mem[(32 * arg2.length) + 128]
                    mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (1000 * _4519 * _4484 / (_4509 * -mem[_4649] + 10^18 / 10^15) - (_4519 * -mem[_4649] + 10^18 / 10^15)) + 1
            idx = idx - 1
            continue 
        require 0 < mem[(32 * arg2.length) + 128]
        if mem[(32 * arg2.length) + 160] > msg.value:
            revert with 0, 'EmiRouter:EXCESSIVE_INPUT_AMOUNT'
        require mem[(32 * arg2.length) + 128]
        _4417 = mem[(32 * arg2.length) + 160]
        mem[mem[64]] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
        require ext_code.size(address(WETHAddress))
        call address(WETHAddress).0xd0e30db0 with:
           value _4417 wei
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4427 = mem[64]
        mem[64] = mem[64] + (32 * arg2.length) + 32
        mem[_4427] = arg2.length
        mem[_4427 + 32 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
        mem[_4427 + (32 * arg2.length) + 32] = 0
        require mem[(32 * arg2.length) + 128]
        s = 0
        t = mem[(32 * arg2.length) + 160]
        while s < arg2.length - 1:
            if mem[_4427] < 2:
                s = s + 1
                t = t
                continue 
            require s < mem[_4427]
            _8785 = mem[(32 * s) + _4427 + 32]
            require s + 1 < mem[_4427]
            _8790 = mem[(32 * s + 1) + _4427 + 32]
            mem[mem[64] + 4] = mem[(32 * s) + _4427 + 44 len 20]
            mem[mem[64] + 36] = address(_8790)
            require ext_code.size(factoryAddress)
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], address(_8790)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if s == mem[_4427] - 2:
                _8808 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8813 = mem[_8808]
                require mem[_8808] == mem[_8808 + 12 len 20]
                mem[mem[64] + 36] = address(_8790)
                mem[mem[64] + 68] = t
                require ext_code.size(address(_8813))
                staticcall address(_8813).getReturn(address rg1, address rg2, uint256 rg3) with:
                        gas gas_remaining wei
                       args address(_8785), address(_8790), t
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8825 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if not mem[_8825 + 32]:
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = 0
                        continue 
                    _8849 = mem[64]
                    mem[mem[64]] = 32
                    _8857 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _8857:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _8849 + (32 * _8857) + -mem[64] + 64
                mem[mem[64] + 4] = this.address
                mem[mem[64] + 36] = address(_8813)
                require ext_code.size(address(_8785))
                staticcall address(_8785).0xdd62ed3e with:
                        gas gas_remaining wei
                       args address(this.address), address(_8813)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8850 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_8850] <= 0:
                    _8873 = mem[64]
                    mem[mem[64] + 36] = address(_8813)
                    mem[mem[64] + 68] = t
                    _8893 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_8893 + 32] = mem[_8893 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _8909 = mem[_8893]
                    idx = 0
                    while idx < _8909:
                        mem[idx + _8873 + 100] = mem[_8893 + idx + 32]
                        idx = idx + 32
                        continue 
                    if ceil32(_8909) <= _8909:
                        call address(_8785).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _8909 + _8873 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8813))
                                call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13245 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_13245]
                                    continue 
                                _13669 = mem[64]
                                mem[mem[64]] = 32
                                _13853 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _13853:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _13669 + (32 * _13853) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13470 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_13470]
                                continue 
                            _14197 = mem[64]
                            mem[mem[64]] = 32
                            _14446 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _14446:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _14197 + (32 * _14446) + -mem[64] + 64
                        _13009 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_13009] = return_data.size
                        mem[_13009 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13247 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_13247]
                                continue 
                            _13670 = mem[64]
                            mem[mem[64]] = 32
                            _13854 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _13854:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _13670 + (32 * _13854) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_13009 + 32] == bool(mem[_13009 + 32])
                        if not mem[_13009 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8813))
                        call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13472 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_13472]
                            continue 
                        _14198 = mem[64]
                        mem[mem[64]] = 32
                        _14448 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _14448:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _14198 + (32 * _14448) + -mem[64] + 64
                    mem[_8873 + _8909 + 100] = 0
                    call address(_8785).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _8909 + _8873 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13295 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_13295]
                                continue 
                            _13751 = mem[64]
                            mem[mem[64]] = 32
                            _13973 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _13973:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _13751 + (32 * _13973) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8813))
                        call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13518 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_13518]
                            continue 
                        _14309 = mem[64]
                        mem[mem[64]] = 32
                        _14622 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _14622:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _14309 + (32 * _14622) + -mem[64] + 64
                    _13029 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_13029] = return_data.size
                    mem[_13029 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8813))
                        call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13297 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_13297]
                            continue 
                        _13752 = mem[64]
                        mem[mem[64]] = 32
                        _13974 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _13974:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _13752 + (32 * _13974) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_13029 + 32] == bool(mem[_13029 + 32])
                    if not mem[_13029 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8813))
                    call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13520 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_13520]
                        continue 
                    _14310 = mem[64]
                    mem[mem[64]] = 32
                    _14624 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _14624:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _14310 + (32 * _14624) + -mem[64] + 64
                _8869 = mem[64]
                mem[mem[64] + 36] = address(_8813)
                mem[mem[64] + 68] = 0
                _8878 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_8878 + 32] = mem[_8878 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _8896 = mem[_8878]
                u = 0
                while u < _8896:
                    mem[u + _8869 + 100] = mem[_8878 + u + 32]
                    u = u + 32
                    continue 
                if ceil32(_8896) <= _8896:
                    call address(_8785).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _8896 + _8869 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            _13215 = mem[64]
                            mem[mem[64] + 36] = address(_8813)
                            mem[mem[64] + 68] = t
                            _13249 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_13249 + 32] = mem[_13249 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                            _13299 = mem[_13249]
                            idx = 0
                            while idx < _13299:
                                mem[idx + _13215 + 100] = mem[_13249 + idx + 32]
                                idx = idx + 32
                                continue 
                            if ceil32(_13299) <= _13299:
                                call address(_8785).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _13299 + _13215 + -mem[64] + 96]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                                    if not mem[96]:
                                        mem[mem[64] + 4] = address(_8785)
                                        mem[mem[64] + 36] = address(_8790)
                                        mem[mem[64] + 68] = t
                                        mem[mem[64] + 100] = 0
                                        mem[mem[64] + 132] = arg3
                                        mem[mem[64] + 164] = arg4
                                        require ext_code.size(address(_8813))
                                        call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                             gas gas_remaining wei
                                            args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _18189 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if s != mem[_4427] - 2:
                                            s = s + 1
                                            t = mem[_18189]
                                            continue 
                                        _19341 = mem[64]
                                        mem[mem[64]] = 32
                                        _19533 = mem[(32 * arg2.length) + 128]
                                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                        idx = 0
                                        s = (32 * arg2.length) + 160
                                        t = mem[64] + 64
                                        while idx < _19533:
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        return memory
                                          from mem[64]
                                           len _19341 + (32 * _19533) + -mem[64] + 64
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                                    mem[mem[64] + 4] = address(_8785)
                                    mem[mem[64] + 36] = address(_8790)
                                    mem[mem[64] + 68] = t
                                    mem[mem[64] + 100] = 0
                                    mem[mem[64] + 132] = arg3
                                    mem[mem[64] + 164] = arg4
                                    require ext_code.size(address(_8813))
                                    call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                         gas gas_remaining wei
                                        args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _18958 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if s != mem[_4427] - 2:
                                        s = s + 1
                                        t = mem[_18958]
                                        continue 
                                    _19789 = mem[64]
                                    mem[mem[64]] = 32
                                    _19982 = mem[(32 * arg2.length) + 128]
                                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                    idx = 0
                                    s = (32 * arg2.length) + 160
                                    t = mem[64] + 64
                                    while idx < _19982:
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    return memory
                                      from mem[64]
                                       len _19789 + (32 * _19982) + -mem[64] + 64
                                _17173 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_17173] = return_data.size
                                mem[_17173 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                if not return_data.size:
                                    mem[mem[64] + 4] = address(_8785)
                                    mem[mem[64] + 36] = address(_8790)
                                    mem[mem[64] + 68] = t
                                    mem[mem[64] + 100] = 0
                                    mem[mem[64] + 132] = arg3
                                    mem[mem[64] + 164] = arg4
                                    require ext_code.size(address(_8813))
                                    call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                         gas gas_remaining wei
                                        args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _18191 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if s != mem[_4427] - 2:
                                        s = s + 1
                                        t = mem[_18191]
                                        continue 
                                    _19342 = mem[64]
                                    mem[mem[64]] = 32
                                    _19534 = mem[(32 * arg2.length) + 128]
                                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                    idx = 0
                                    s = (32 * arg2.length) + 160
                                    t = mem[64] + 64
                                    while idx < _19534:
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    return memory
                                      from mem[64]
                                       len _19342 + (32 * _19534) + -mem[64] + 64
                                require return_data.size >= 32
                                require mem[_17173 + 32] == bool(mem[_17173 + 32])
                                if not mem[_17173 + 32]:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8813))
                                call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18960 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18960]
                                    continue 
                                _19790 = mem[64]
                                mem[mem[64]] = 32
                                _19984 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19984:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19790 + (32 * _19984) + -mem[64] + 64
                            mem[_13215 + _13299 + 100] = 0
                            call address(_8785).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13299 + _13215 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                if not mem[96]:
                                    mem[mem[64] + 4] = address(_8785)
                                    mem[mem[64] + 36] = address(_8790)
                                    mem[mem[64] + 68] = t
                                    mem[mem[64] + 100] = 0
                                    mem[mem[64] + 132] = arg3
                                    mem[mem[64] + 164] = arg4
                                    require ext_code.size(address(_8813))
                                    call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                         gas gas_remaining wei
                                        args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _18319 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if s != mem[_4427] - 2:
                                        s = s + 1
                                        t = mem[_18319]
                                        continue 
                                    _19407 = mem[64]
                                    mem[mem[64]] = 32
                                    _19661 = mem[(32 * arg2.length) + 128]
                                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                    idx = 0
                                    s = (32 * arg2.length) + 160
                                    t = mem[64] + 64
                                    while idx < _19661:
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    return memory
                                      from mem[64]
                                       len _19407 + (32 * _19661) + -mem[64] + 64
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8813))
                                call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19086 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_19086]
                                    continue 
                                _19917 = mem[64]
                                mem[mem[64]] = 32
                                _20110 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _20110:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19917 + (32 * _20110) + -mem[64] + 64
                            _17261 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_17261] = return_data.size
                            mem[_17261 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not return_data.size:
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8813))
                                call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18321 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18321]
                                    continue 
                                _19408 = mem[64]
                                mem[mem[64]] = 32
                                _19662 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19662:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19408 + (32 * _19662) + -mem[64] + 64
                            require return_data.size >= 32
                            require mem[_17261 + 32] == bool(mem[_17261 + 32])
                            if not mem[_17261 + 32]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19088 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_19088]
                                continue 
                            _19918 = mem[64]
                            mem[mem[64]] = 32
                            _20112 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20112:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19918 + (32 * _20112) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        _13404 = mem[64]
                        mem[mem[64] + 36] = address(_8813)
                        mem[mem[64] + 68] = t
                        _13474 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_13474 + 32] = mem[_13474 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                        _13523 = mem[_13474]
                        u = 0
                        while u < _13523:
                            mem[u + _13404 + 100] = mem[_13474 + u + 32]
                            u = u + 32
                            continue 
                        if ceil32(_13523) <= _13523:
                            call address(_8785).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13523 + _13404 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                if not mem[96]:
                                    mem[mem[64] + 4] = address(_8785)
                                    mem[mem[64] + 36] = address(_8790)
                                    mem[mem[64] + 68] = t
                                    mem[mem[64] + 100] = 0
                                    mem[mem[64] + 132] = arg3
                                    mem[mem[64] + 164] = arg4
                                    require ext_code.size(address(_8813))
                                    call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                         gas gas_remaining wei
                                        args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _18193 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if s != mem[_4427] - 2:
                                        s = s + 1
                                        t = mem[_18193]
                                        continue 
                                    _19343 = mem[64]
                                    mem[mem[64]] = 32
                                    _19537 = mem[(32 * arg2.length) + 128]
                                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                    idx = 0
                                    s = (32 * arg2.length) + 160
                                    t = mem[64] + 64
                                    while idx < _19537:
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    return memory
                                      from mem[64]
                                       len _19343 + (32 * _19537) + -mem[64] + 64
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8813))
                                call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18962 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18962]
                                    continue 
                                _19793 = mem[64]
                                mem[mem[64]] = 32
                                _19986 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19986:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19793 + (32 * _19986) + -mem[64] + 64
                            _17175 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_17175] = return_data.size
                            mem[_17175 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not return_data.size:
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8813))
                                call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18195 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18195]
                                    continue 
                                _19344 = mem[64]
                                mem[mem[64]] = 32
                                _19538 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19538:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19344 + (32 * _19538) + -mem[64] + 64
                            require return_data.size >= 32
                            require mem[_17175 + 32] == bool(mem[_17175 + 32])
                            if not mem[_17175 + 32]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18964 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18964]
                                continue 
                            _19794 = mem[64]
                            mem[mem[64]] = 32
                            _19988 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19988:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19794 + (32 * _19988) + -mem[64] + 64
                        mem[_13404 + _13523 + 100] = 0
                        call address(_8785).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13523 + _13404 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8813))
                                call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18325 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18325]
                                    continue 
                                _19411 = mem[64]
                                mem[mem[64]] = 32
                                _19663 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19663:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19411 + (32 * _19663) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19090 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_19090]
                                continue 
                            _19919 = mem[64]
                            mem[mem[64]] = 32
                            _20114 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20114:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19919 + (32 * _20114) + -mem[64] + 64
                        _17262 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17262] = return_data.size
                        mem[_17262 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18327 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18327]
                                continue 
                            _19412 = mem[64]
                            mem[mem[64]] = 32
                            _19664 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19664:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19412 + (32 * _19664) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17262 + 32] == bool(mem[_17262 + 32])
                        if not mem[_17262 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8813))
                        call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19092 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_19092]
                            continue 
                        _19920 = mem[64]
                        mem[mem[64]] = 32
                        _20116 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20116:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19920 + (32 * _20116) + -mem[64] + 64
                    _13011 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_13011] = return_data.size
                    mem[_13011 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        _13216 = mem[64]
                        mem[mem[64] + 36] = address(_8813)
                        mem[mem[64] + 68] = t
                        _13253 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_13253 + 32] = mem[_13253 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                        _13300 = mem[_13253]
                        idx = 0
                        while idx < _13300:
                            mem[idx + _13216 + 100] = mem[_13253 + idx + 32]
                            idx = idx + 32
                            continue 
                        if ceil32(_13300) <= _13300:
                            call address(_8785).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13300 + _13216 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                if not mem[96]:
                                    mem[mem[64] + 4] = address(_8785)
                                    mem[mem[64] + 36] = address(_8790)
                                    mem[mem[64] + 68] = t
                                    mem[mem[64] + 100] = 0
                                    mem[mem[64] + 132] = arg3
                                    mem[mem[64] + 164] = arg4
                                    require ext_code.size(address(_8813))
                                    call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                         gas gas_remaining wei
                                        args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _18197 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if s != mem[_4427] - 2:
                                        s = s + 1
                                        t = mem[_18197]
                                        continue 
                                    _19345 = mem[64]
                                    mem[mem[64]] = 32
                                    _19541 = mem[(32 * arg2.length) + 128]
                                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                    idx = 0
                                    s = (32 * arg2.length) + 160
                                    t = mem[64] + 64
                                    while idx < _19541:
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    return memory
                                      from mem[64]
                                       len _19345 + (32 * _19541) + -mem[64] + 64
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8813))
                                call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18966 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18966]
                                    continue 
                                _19797 = mem[64]
                                mem[mem[64]] = 32
                                _19990 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19990:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19797 + (32 * _19990) + -mem[64] + 64
                            _17177 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_17177] = return_data.size
                            mem[_17177 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not return_data.size:
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8813))
                                call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18199 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18199]
                                    continue 
                                _19346 = mem[64]
                                mem[mem[64]] = 32
                                _19542 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19542:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19346 + (32 * _19542) + -mem[64] + 64
                            require return_data.size >= 32
                            require mem[_17177 + 32] == bool(mem[_17177 + 32])
                            if not mem[_17177 + 32]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18968 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18968]
                                continue 
                            _19798 = mem[64]
                            mem[mem[64]] = 32
                            _19992 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19992:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19798 + (32 * _19992) + -mem[64] + 64
                        mem[_13216 + _13300 + 100] = 0
                        call address(_8785).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13300 + _13216 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8813))
                                call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18331 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18331]
                                    continue 
                                _19415 = mem[64]
                                mem[mem[64]] = 32
                                _19665 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19665:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19415 + (32 * _19665) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19094 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_19094]
                                continue 
                            _19921 = mem[64]
                            mem[mem[64]] = 32
                            _20118 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20118:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19921 + (32 * _20118) + -mem[64] + 64
                        _17263 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17263] = return_data.size
                        mem[_17263 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18333 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18333]
                                continue 
                            _19416 = mem[64]
                            mem[mem[64]] = 32
                            _19666 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19666:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19416 + (32 * _19666) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17263 + 32] == bool(mem[_17263 + 32])
                        if not mem[_17263 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8813))
                        call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19096 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_19096]
                            continue 
                        _19922 = mem[64]
                        mem[mem[64]] = 32
                        _20120 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20120:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19922 + (32 * _20120) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_13011 + 32] == bool(mem[_13011 + 32])
                    if not mem[_13011 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    _13406 = mem[64]
                    mem[mem[64] + 36] = address(_8813)
                    mem[mem[64] + 68] = t
                    _13478 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13478 + 32] = mem[_13478 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13526 = mem[_13478]
                    u = 0
                    while u < _13526:
                        mem[u + _13406 + 100] = mem[_13478 + u + 32]
                        u = u + 32
                        continue 
                    if ceil32(_13526) <= _13526:
                        call address(_8785).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13526 + _13406 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8813))
                                call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18201 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18201]
                                    continue 
                                _19347 = mem[64]
                                mem[mem[64]] = 32
                                _19545 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19545:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19347 + (32 * _19545) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18970 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18970]
                                continue 
                            _19801 = mem[64]
                            mem[mem[64]] = 32
                            _19994 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19994:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19801 + (32 * _19994) + -mem[64] + 64
                        _17179 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17179] = return_data.size
                        mem[_17179 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18203 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18203]
                                continue 
                            _19348 = mem[64]
                            mem[mem[64]] = 32
                            _19546 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19546:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19348 + (32 * _19546) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17179 + 32] == bool(mem[_17179 + 32])
                        if not mem[_17179 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8813))
                        call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18972 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18972]
                            continue 
                        _19802 = mem[64]
                        mem[mem[64]] = 32
                        _19996 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19996:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19802 + (32 * _19996) + -mem[64] + 64
                    mem[_13406 + _13526 + 100] = 0
                    call address(_8785).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13526 + _13406 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18337 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18337]
                                continue 
                            _19419 = mem[64]
                            mem[mem[64]] = 32
                            _19667 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19667:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19419 + (32 * _19667) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8813))
                        call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19098 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_19098]
                            continue 
                        _19923 = mem[64]
                        mem[mem[64]] = 32
                        _20122 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20122:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19923 + (32 * _20122) + -mem[64] + 64
                    _17264 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17264] = return_data.size
                    mem[_17264 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8813))
                        call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18339 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18339]
                            continue 
                        _19420 = mem[64]
                        mem[mem[64]] = 32
                        _19668 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19668:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19420 + (32 * _19668) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17264 + 32] == bool(mem[_17264 + 32])
                    if not mem[_17264 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8813))
                    call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19100 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_19100]
                        continue 
                    _19924 = mem[64]
                    mem[mem[64]] = 32
                    _20124 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20124:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19924 + (32 * _20124) + -mem[64] + 64
                mem[_8869 + _8896 + 100] = 0
                call address(_8785).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _8896 + _8869 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        _13231 = mem[64]
                        mem[mem[64] + 36] = address(_8813)
                        mem[mem[64] + 68] = t
                        _13301 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_13301 + 32] = mem[_13301 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                        _13365 = mem[_13301]
                        idx = 0
                        while idx < _13365:
                            mem[idx + _13231 + 100] = mem[_13301 + idx + 32]
                            idx = idx + 32
                            continue 
                        if ceil32(_13365) <= _13365:
                            call address(_8785).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13365 + _13231 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                if not mem[96]:
                                    mem[mem[64] + 4] = address(_8785)
                                    mem[mem[64] + 36] = address(_8790)
                                    mem[mem[64] + 68] = t
                                    mem[mem[64] + 100] = 0
                                    mem[mem[64] + 132] = arg3
                                    mem[mem[64] + 164] = arg4
                                    require ext_code.size(address(_8813))
                                    call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                         gas gas_remaining wei
                                        args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _18205 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if s != mem[_4427] - 2:
                                        s = s + 1
                                        t = mem[_18205]
                                        continue 
                                    _19349 = mem[64]
                                    mem[mem[64]] = 32
                                    _19549 = mem[(32 * arg2.length) + 128]
                                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                    idx = 0
                                    s = (32 * arg2.length) + 160
                                    t = mem[64] + 64
                                    while idx < _19549:
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    return memory
                                      from mem[64]
                                       len _19349 + (32 * _19549) + -mem[64] + 64
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8813))
                                call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18974 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18974]
                                    continue 
                                _19805 = mem[64]
                                mem[mem[64]] = 32
                                _19998 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19998:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19805 + (32 * _19998) + -mem[64] + 64
                            _17181 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_17181] = return_data.size
                            mem[_17181 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not return_data.size:
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8813))
                                call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18207 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18207]
                                    continue 
                                _19350 = mem[64]
                                mem[mem[64]] = 32
                                _19550 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19550:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19350 + (32 * _19550) + -mem[64] + 64
                            require return_data.size >= 32
                            require mem[_17181 + 32] == bool(mem[_17181 + 32])
                            if not mem[_17181 + 32]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18976 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18976]
                                continue 
                            _19806 = mem[64]
                            mem[mem[64]] = 32
                            _20000 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20000:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19806 + (32 * _20000) + -mem[64] + 64
                        mem[_13231 + _13365 + 100] = 0
                        call address(_8785).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13365 + _13231 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8813))
                                call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18343 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18343]
                                    continue 
                                _19423 = mem[64]
                                mem[mem[64]] = 32
                                _19669 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19669:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19423 + (32 * _19669) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19102 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_19102]
                                continue 
                            _19925 = mem[64]
                            mem[mem[64]] = 32
                            _20126 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20126:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19925 + (32 * _20126) + -mem[64] + 64
                        _17265 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17265] = return_data.size
                        mem[_17265 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18345 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18345]
                                continue 
                            _19424 = mem[64]
                            mem[mem[64]] = 32
                            _19670 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19670:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19424 + (32 * _19670) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17265 + 32] == bool(mem[_17265 + 32])
                        if not mem[_17265 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8813))
                        call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19104 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_19104]
                            continue 
                        _19926 = mem[64]
                        mem[mem[64]] = 32
                        _20128 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20128:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19926 + (32 * _20128) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    _13448 = mem[64]
                    mem[mem[64] + 36] = address(_8813)
                    mem[mem[64] + 68] = t
                    _13528 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13528 + 32] = mem[_13528 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13595 = mem[_13528]
                    idx = 0
                    while idx < _13595:
                        mem[idx + _13448 + 100] = mem[_13528 + idx + 32]
                        idx = idx + 32
                        continue 
                    if ceil32(_13595) <= _13595:
                        call address(_8785).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13595 + _13448 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8813))
                                call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18209 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18209]
                                    continue 
                                _19351 = mem[64]
                                mem[mem[64]] = 32
                                _19553 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19553:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19351 + (32 * _19553) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18978 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18978]
                                continue 
                            _19809 = mem[64]
                            mem[mem[64]] = 32
                            _20002 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20002:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19809 + (32 * _20002) + -mem[64] + 64
                        _17183 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17183] = return_data.size
                        mem[_17183 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18211 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18211]
                                continue 
                            _19352 = mem[64]
                            mem[mem[64]] = 32
                            _19554 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19554:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19352 + (32 * _19554) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17183 + 32] == bool(mem[_17183 + 32])
                        if not mem[_17183 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8813))
                        call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18980 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18980]
                            continue 
                        _19810 = mem[64]
                        mem[mem[64]] = 32
                        _20004 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20004:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19810 + (32 * _20004) + -mem[64] + 64
                    mem[_13448 + _13595 + 100] = 0
                    call address(_8785).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13595 + _13448 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18349 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18349]
                                continue 
                            _19427 = mem[64]
                            mem[mem[64]] = 32
                            _19671 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19671:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19427 + (32 * _19671) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8813))
                        call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19106 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_19106]
                            continue 
                        _19927 = mem[64]
                        mem[mem[64]] = 32
                        _20130 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20130:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19927 + (32 * _20130) + -mem[64] + 64
                    _17266 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17266] = return_data.size
                    mem[_17266 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8813))
                        call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18351 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18351]
                            continue 
                        _19428 = mem[64]
                        mem[mem[64]] = 32
                        _19672 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19672:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19428 + (32 * _19672) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17266 + 32] == bool(mem[_17266 + 32])
                    if not mem[_17266 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8813))
                    call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19108 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_19108]
                        continue 
                    _19928 = mem[64]
                    mem[mem[64]] = 32
                    _20132 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20132:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19928 + (32 * _20132) + -mem[64] + 64
                _13030 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_13030] = return_data.size
                mem[_13030 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    _13232 = mem[64]
                    mem[mem[64] + 36] = address(_8813)
                    mem[mem[64] + 68] = t
                    _13305 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13305 + 32] = mem[_13305 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13366 = mem[_13305]
                    idx = 0
                    while idx < _13366:
                        mem[idx + _13232 + 100] = mem[_13305 + idx + 32]
                        idx = idx + 32
                        continue 
                    if ceil32(_13366) <= _13366:
                        call address(_8785).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13366 + _13232 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8813))
                                call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18213 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18213]
                                    continue 
                                _19353 = mem[64]
                                mem[mem[64]] = 32
                                _19557 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19557:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19353 + (32 * _19557) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18982 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18982]
                                continue 
                            _19813 = mem[64]
                            mem[mem[64]] = 32
                            _20006 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20006:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19813 + (32 * _20006) + -mem[64] + 64
                        _17185 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17185] = return_data.size
                        mem[_17185 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18215 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18215]
                                continue 
                            _19354 = mem[64]
                            mem[mem[64]] = 32
                            _19558 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19558:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19354 + (32 * _19558) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17185 + 32] == bool(mem[_17185 + 32])
                        if not mem[_17185 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8813))
                        call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18984 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18984]
                            continue 
                        _19814 = mem[64]
                        mem[mem[64]] = 32
                        _20008 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20008:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19814 + (32 * _20008) + -mem[64] + 64
                    mem[_13232 + _13366 + 100] = 0
                    call address(_8785).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13366 + _13232 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18355 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18355]
                                continue 
                            _19431 = mem[64]
                            mem[mem[64]] = 32
                            _19673 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19673:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19431 + (32 * _19673) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8813))
                        call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19110 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_19110]
                            continue 
                        _19929 = mem[64]
                        mem[mem[64]] = 32
                        _20134 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20134:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19929 + (32 * _20134) + -mem[64] + 64
                    _17267 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17267] = return_data.size
                    mem[_17267 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8813))
                        call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18357 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18357]
                            continue 
                        _19432 = mem[64]
                        mem[mem[64]] = 32
                        _19674 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19674:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19432 + (32 * _19674) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17267 + 32] == bool(mem[_17267 + 32])
                    if not mem[_17267 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8813))
                    call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19112 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_19112]
                        continue 
                    _19930 = mem[64]
                    mem[mem[64]] = 32
                    _20136 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20136:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19930 + (32 * _20136) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_13030 + 32] == bool(mem[_13030 + 32])
                if not mem[_13030 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                _13450 = mem[64]
                mem[mem[64] + 36] = address(_8813)
                mem[mem[64] + 68] = t
                _13532 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13532 + 32] = mem[_13532 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13598 = mem[_13532]
                idx = 0
                while idx < _13598:
                    mem[idx + _13450 + 100] = mem[_13532 + idx + 32]
                    idx = idx + 32
                    continue 
                if ceil32(_13598) <= _13598:
                    call address(_8785).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13598 + _13450 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8813))
                            call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18217 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18217]
                                continue 
                            _19355 = mem[64]
                            mem[mem[64]] = 32
                            _19561 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19561:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19355 + (32 * _19561) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8813))
                        call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18986 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18986]
                            continue 
                        _19817 = mem[64]
                        mem[mem[64]] = 32
                        _20010 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20010:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19817 + (32 * _20010) + -mem[64] + 64
                    _17187 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17187] = return_data.size
                    mem[_17187 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8813))
                        call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18219 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18219]
                            continue 
                        _19356 = mem[64]
                        mem[mem[64]] = 32
                        _19562 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19562:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19356 + (32 * _19562) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17187 + 32] == bool(mem[_17187 + 32])
                    if not mem[_17187 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8813))
                    call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18988 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_18988]
                        continue 
                    _19818 = mem[64]
                    mem[mem[64]] = 32
                    _20012 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20012:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19818 + (32 * _20012) + -mem[64] + 64
                mem[_13450 + _13598 + 100] = 0
                call address(_8785).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13598 + _13450 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8813))
                        call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18361 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18361]
                            continue 
                        _19435 = mem[64]
                        mem[mem[64]] = 32
                        _19675 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19675:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19435 + (32 * _19675) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8813))
                    call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19114 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_19114]
                        continue 
                    _19931 = mem[64]
                    mem[mem[64]] = 32
                    _20138 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20138:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19931 + (32 * _20138) + -mem[64] + 64
                _17268 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17268] = return_data.size
                mem[_17268 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8813))
                    call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18363 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_18363]
                        continue 
                    _19436 = mem[64]
                    mem[mem[64]] = 32
                    _19676 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19676:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19436 + (32 * _19676) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17268 + 32] == bool(mem[_17268 + 32])
                if not mem[_17268 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8785)
                mem[mem[64] + 36] = address(_8790)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = arg3
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8813))
                call address(_8813).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8785), address(_8790), t, 0, address(arg3), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19116 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4427] - 2:
                    s = s + 1
                    t = mem[_19116]
                    continue 
                _19932 = mem[64]
                mem[mem[64]] = 32
                _20140 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20140:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19932 + (32 * _20140) + -mem[64] + 64
            _8809 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _8814 = mem[_8809]
            require mem[_8809] == mem[_8809 + 12 len 20]
            mem[mem[64] + 36] = address(_8790)
            mem[mem[64] + 68] = t
            require ext_code.size(address(_8814))
            staticcall address(_8814).getReturn(address rg1, address rg2, uint256 rg3) with:
                    gas gas_remaining wei
                   args address(_8785), address(_8790), t
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8826 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            if not mem[_8826 + 32]:
                if s != mem[_4427] - 2:
                    s = s + 1
                    t = 0
                    continue 
                _8851 = mem[64]
                mem[mem[64]] = 32
                _8859 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _8859:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _8851 + (32 * _8859) + -mem[64] + 64
            mem[mem[64] + 4] = this.address
            mem[mem[64] + 36] = address(_8814)
            require ext_code.size(address(_8785))
            staticcall address(_8785).0xdd62ed3e with:
                    gas gas_remaining wei
                   args address(this.address), address(_8814)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8852 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_8852] <= 0:
                _8874 = mem[64]
                mem[mem[64] + 36] = address(_8814)
                mem[mem[64] + 68] = t
                _8897 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_8897 + 32] = mem[_8897 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _8910 = mem[_8897]
                idx = 0
                while idx < _8910:
                    mem[idx + _8874 + 100] = mem[_8897 + idx + 32]
                    idx = idx + 32
                    continue 
                if ceil32(_8910) <= _8910:
                    call address(_8785).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _8910 + _8874 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8814))
                            call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13257 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_13257]
                                continue 
                            _13689 = mem[64]
                            mem[mem[64]] = 32
                            _13883 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _13883:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _13689 + (32 * _13883) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13482 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_13482]
                            continue 
                        _14225 = mem[64]
                        mem[mem[64]] = 32
                        _14490 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _14490:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _14225 + (32 * _14490) + -mem[64] + 64
                    _13014 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_13014] = return_data.size
                    mem[_13014 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13259 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_13259]
                            continue 
                        _13690 = mem[64]
                        mem[mem[64]] = 32
                        _13884 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _13884:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _13690 + (32 * _13884) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_13014 + 32] == bool(mem[_13014 + 32])
                    if not mem[_13014 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8814))
                    call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13484 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_13484]
                        continue 
                    _14226 = mem[64]
                    mem[mem[64]] = 32
                    _14492 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _14492:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _14226 + (32 * _14492) + -mem[64] + 64
                mem[_8874 + _8910 + 100] = 0
                call address(_8785).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _8910 + _8874 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13311 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_13311]
                            continue 
                        _13777 = mem[64]
                        mem[mem[64]] = 32
                        _14005 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _14005:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _13777 + (32 * _14005) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8814))
                    call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13536 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_13536]
                        continue 
                    _14343 = mem[64]
                    mem[mem[64]] = 32
                    _14674 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _14674:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _14343 + (32 * _14674) + -mem[64] + 64
                _13031 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_13031] = return_data.size
                mem[_13031 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8814))
                    call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13313 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_13313]
                        continue 
                    _13778 = mem[64]
                    mem[mem[64]] = 32
                    _14006 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _14006:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _13778 + (32 * _14006) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_13031 + 32] == bool(mem[_13031 + 32])
                if not mem[_13031 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8785)
                mem[mem[64] + 36] = address(_8790)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8814))
                call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8785), address(_8790), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13538 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4427] - 2:
                    s = s + 1
                    t = mem[_13538]
                    continue 
                _14344 = mem[64]
                mem[mem[64]] = 32
                _14676 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _14676:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _14344 + (32 * _14676) + -mem[64] + 64
            _8870 = mem[64]
            mem[mem[64] + 36] = address(_8814)
            mem[mem[64] + 68] = 0
            _8882 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_8882 + 32] = mem[_8882 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
            _8900 = mem[_8882]
            u = 0
            while u < _8900:
                mem[u + _8870 + 100] = mem[_8882 + u + 32]
                u = u + 32
                continue 
            if ceil32(_8900) <= _8900:
                call address(_8785).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _8900 + _8870 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        _13219 = mem[64]
                        mem[mem[64] + 36] = address(_8814)
                        mem[mem[64] + 68] = t
                        _13261 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_13261 + 32] = mem[_13261 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                        _13315 = mem[_13261]
                        idx = 0
                        while idx < _13315:
                            mem[idx + _13219 + 100] = mem[_13261 + idx + 32]
                            idx = idx + 32
                            continue 
                        if ceil32(_13315) <= _13315:
                            call address(_8785).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13315 + _13219 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                if not mem[96]:
                                    mem[mem[64] + 4] = address(_8785)
                                    mem[mem[64] + 36] = address(_8790)
                                    mem[mem[64] + 68] = t
                                    mem[mem[64] + 100] = 0
                                    mem[mem[64] + 132] = this.address
                                    mem[mem[64] + 164] = arg4
                                    require ext_code.size(address(_8814))
                                    call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                         gas gas_remaining wei
                                        args address(_8785), address(_8790), t, 0, address(this.address), arg4
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _18221 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if s != mem[_4427] - 2:
                                        s = s + 1
                                        t = mem[_18221]
                                        continue 
                                    _19357 = mem[64]
                                    mem[mem[64]] = 32
                                    _19565 = mem[(32 * arg2.length) + 128]
                                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                    idx = 0
                                    s = (32 * arg2.length) + 160
                                    t = mem[64] + 64
                                    while idx < _19565:
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    return memory
                                      from mem[64]
                                       len _19357 + (32 * _19565) + -mem[64] + 64
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = this.address
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8814))
                                call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(this.address), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18990 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18990]
                                    continue 
                                _19821 = mem[64]
                                mem[mem[64]] = 32
                                _20014 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _20014:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19821 + (32 * _20014) + -mem[64] + 64
                            _17197 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_17197] = return_data.size
                            mem[_17197 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not return_data.size:
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = this.address
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8814))
                                call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(this.address), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18223 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18223]
                                    continue 
                                _19358 = mem[64]
                                mem[mem[64]] = 32
                                _19566 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19566:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19358 + (32 * _19566) + -mem[64] + 64
                            require return_data.size >= 32
                            require mem[_17197 + 32] == bool(mem[_17197 + 32])
                            if not mem[_17197 + 32]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8814))
                            call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18992 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18992]
                                continue 
                            _19822 = mem[64]
                            mem[mem[64]] = 32
                            _20016 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20016:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19822 + (32 * _20016) + -mem[64] + 64
                        mem[_13219 + _13315 + 100] = 0
                        call address(_8785).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13315 + _13219 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = this.address
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8814))
                                call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(this.address), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18367 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18367]
                                    continue 
                                _19439 = mem[64]
                                mem[mem[64]] = 32
                                _19677 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19677:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19439 + (32 * _19677) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8814))
                            call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19118 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_19118]
                                continue 
                            _19933 = mem[64]
                            mem[mem[64]] = 32
                            _20142 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20142:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19933 + (32 * _20142) + -mem[64] + 64
                        _17269 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17269] = return_data.size
                        mem[_17269 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8814))
                            call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18369 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18369]
                                continue 
                            _19440 = mem[64]
                            mem[mem[64]] = 32
                            _19678 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19678:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19440 + (32 * _19678) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17269 + 32] == bool(mem[_17269 + 32])
                        if not mem[_17269 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19120 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_19120]
                            continue 
                        _19934 = mem[64]
                        mem[mem[64]] = 32
                        _20144 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20144:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19934 + (32 * _20144) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    _13416 = mem[64]
                    mem[mem[64] + 36] = address(_8814)
                    mem[mem[64] + 68] = t
                    _13486 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13486 + 32] = mem[_13486 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13541 = mem[_13486]
                    u = 0
                    while u < _13541:
                        mem[u + _13416 + 100] = mem[_13486 + u + 32]
                        u = u + 32
                        continue 
                    if ceil32(_13541) <= _13541:
                        call address(_8785).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13541 + _13416 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = this.address
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8814))
                                call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(this.address), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18225 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18225]
                                    continue 
                                _19359 = mem[64]
                                mem[mem[64]] = 32
                                _19569 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19569:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19359 + (32 * _19569) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8814))
                            call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18994 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18994]
                                continue 
                            _19825 = mem[64]
                            mem[mem[64]] = 32
                            _20018 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20018:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19825 + (32 * _20018) + -mem[64] + 64
                        _17199 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17199] = return_data.size
                        mem[_17199 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8814))
                            call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18227 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18227]
                                continue 
                            _19360 = mem[64]
                            mem[mem[64]] = 32
                            _19570 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19570:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19360 + (32 * _19570) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17199 + 32] == bool(mem[_17199 + 32])
                        if not mem[_17199 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18996 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18996]
                            continue 
                        _19826 = mem[64]
                        mem[mem[64]] = 32
                        _20020 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20020:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19826 + (32 * _20020) + -mem[64] + 64
                    mem[_13416 + _13541 + 100] = 0
                    call address(_8785).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13541 + _13416 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8814))
                            call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18373 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18373]
                                continue 
                            _19443 = mem[64]
                            mem[mem[64]] = 32
                            _19679 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19679:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19443 + (32 * _19679) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19122 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_19122]
                            continue 
                        _19935 = mem[64]
                        mem[mem[64]] = 32
                        _20146 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20146:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19935 + (32 * _20146) + -mem[64] + 64
                    _17270 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17270] = return_data.size
                    mem[_17270 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18375 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18375]
                            continue 
                        _19444 = mem[64]
                        mem[mem[64]] = 32
                        _19680 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19680:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19444 + (32 * _19680) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17270 + 32] == bool(mem[_17270 + 32])
                    if not mem[_17270 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8814))
                    call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19124 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_19124]
                        continue 
                    _19936 = mem[64]
                    mem[mem[64]] = 32
                    _20148 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20148:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19936 + (32 * _20148) + -mem[64] + 64
                _13016 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_13016] = return_data.size
                mem[_13016 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    _13220 = mem[64]
                    mem[mem[64] + 36] = address(_8814)
                    mem[mem[64] + 68] = t
                    _13265 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13265 + 32] = mem[_13265 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13316 = mem[_13265]
                    idx = 0
                    while idx < _13316:
                        mem[idx + _13220 + 100] = mem[_13265 + idx + 32]
                        idx = idx + 32
                        continue 
                    if ceil32(_13316) <= _13316:
                        call address(_8785).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13316 + _13220 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = this.address
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8814))
                                call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(this.address), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18229 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18229]
                                    continue 
                                _19361 = mem[64]
                                mem[mem[64]] = 32
                                _19573 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19573:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19361 + (32 * _19573) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8814))
                            call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18998 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18998]
                                continue 
                            _19829 = mem[64]
                            mem[mem[64]] = 32
                            _20022 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20022:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19829 + (32 * _20022) + -mem[64] + 64
                        _17201 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17201] = return_data.size
                        mem[_17201 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8814))
                            call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18231 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18231]
                                continue 
                            _19362 = mem[64]
                            mem[mem[64]] = 32
                            _19574 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19574:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19362 + (32 * _19574) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17201 + 32] == bool(mem[_17201 + 32])
                        if not mem[_17201 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19000 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_19000]
                            continue 
                        _19830 = mem[64]
                        mem[mem[64]] = 32
                        _20024 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20024:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19830 + (32 * _20024) + -mem[64] + 64
                    mem[_13220 + _13316 + 100] = 0
                    call address(_8785).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13316 + _13220 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8814))
                            call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18379 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18379]
                                continue 
                            _19447 = mem[64]
                            mem[mem[64]] = 32
                            _19681 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19681:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19447 + (32 * _19681) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19126 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_19126]
                            continue 
                        _19937 = mem[64]
                        mem[mem[64]] = 32
                        _20150 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20150:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19937 + (32 * _20150) + -mem[64] + 64
                    _17271 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17271] = return_data.size
                    mem[_17271 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18381 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18381]
                            continue 
                        _19448 = mem[64]
                        mem[mem[64]] = 32
                        _19682 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19682:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19448 + (32 * _19682) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17271 + 32] == bool(mem[_17271 + 32])
                    if not mem[_17271 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8814))
                    call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19128 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_19128]
                        continue 
                    _19938 = mem[64]
                    mem[mem[64]] = 32
                    _20152 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20152:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19938 + (32 * _20152) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_13016 + 32] == bool(mem[_13016 + 32])
                if not mem[_13016 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                _13418 = mem[64]
                mem[mem[64] + 36] = address(_8814)
                mem[mem[64] + 68] = t
                _13490 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13490 + 32] = mem[_13490 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13544 = mem[_13490]
                u = 0
                while u < _13544:
                    mem[u + _13418 + 100] = mem[_13490 + u + 32]
                    u = u + 32
                    continue 
                if ceil32(_13544) <= _13544:
                    call address(_8785).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13544 + _13418 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8814))
                            call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18233 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18233]
                                continue 
                            _19363 = mem[64]
                            mem[mem[64]] = 32
                            _19577 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19577:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19363 + (32 * _19577) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19002 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_19002]
                            continue 
                        _19833 = mem[64]
                        mem[mem[64]] = 32
                        _20026 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20026:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19833 + (32 * _20026) + -mem[64] + 64
                    _17203 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17203] = return_data.size
                    mem[_17203 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18235 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18235]
                            continue 
                        _19364 = mem[64]
                        mem[mem[64]] = 32
                        _19578 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19578:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19364 + (32 * _19578) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17203 + 32] == bool(mem[_17203 + 32])
                    if not mem[_17203 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8814))
                    call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19004 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_19004]
                        continue 
                    _19834 = mem[64]
                    mem[mem[64]] = 32
                    _20028 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20028:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19834 + (32 * _20028) + -mem[64] + 64
                mem[_13418 + _13544 + 100] = 0
                call address(_8785).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13544 + _13418 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18385 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18385]
                            continue 
                        _19451 = mem[64]
                        mem[mem[64]] = 32
                        _19683 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19683:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19451 + (32 * _19683) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8814))
                    call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19130 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_19130]
                        continue 
                    _19939 = mem[64]
                    mem[mem[64]] = 32
                    _20154 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20154:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19939 + (32 * _20154) + -mem[64] + 64
                _17272 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17272] = return_data.size
                mem[_17272 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8814))
                    call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18387 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_18387]
                        continue 
                    _19452 = mem[64]
                    mem[mem[64]] = 32
                    _19684 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19684:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19452 + (32 * _19684) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17272 + 32] == bool(mem[_17272 + 32])
                if not mem[_17272 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8785)
                mem[mem[64] + 36] = address(_8790)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8814))
                call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8785), address(_8790), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19132 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4427] - 2:
                    s = s + 1
                    t = mem[_19132]
                    continue 
                _19940 = mem[64]
                mem[mem[64]] = 32
                _20156 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20156:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19940 + (32 * _20156) + -mem[64] + 64
            mem[_8870 + _8900 + 100] = 0
            call address(_8785).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _8900 + _8870 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    _13235 = mem[64]
                    mem[mem[64] + 36] = address(_8814)
                    mem[mem[64] + 68] = t
                    _13317 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13317 + 32] = mem[_13317 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13375 = mem[_13317]
                    idx = 0
                    while idx < _13375:
                        mem[idx + _13235 + 100] = mem[_13317 + idx + 32]
                        idx = idx + 32
                        continue 
                    if ceil32(_13375) <= _13375:
                        call address(_8785).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13375 + _13235 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8785)
                                mem[mem[64] + 36] = address(_8790)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = this.address
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8814))
                                call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8785), address(_8790), t, 0, address(this.address), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18237 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4427] - 2:
                                    s = s + 1
                                    t = mem[_18237]
                                    continue 
                                _19365 = mem[64]
                                mem[mem[64]] = 32
                                _19581 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19581:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19365 + (32 * _19581) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8814))
                            call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19006 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_19006]
                                continue 
                            _19837 = mem[64]
                            mem[mem[64]] = 32
                            _20030 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20030:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19837 + (32 * _20030) + -mem[64] + 64
                        _17205 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17205] = return_data.size
                        mem[_17205 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8814))
                            call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18239 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18239]
                                continue 
                            _19366 = mem[64]
                            mem[mem[64]] = 32
                            _19582 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19582:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19366 + (32 * _19582) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17205 + 32] == bool(mem[_17205 + 32])
                        if not mem[_17205 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19008 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_19008]
                            continue 
                        _19838 = mem[64]
                        mem[mem[64]] = 32
                        _20032 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20032:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19838 + (32 * _20032) + -mem[64] + 64
                    mem[_13235 + _13375 + 100] = 0
                    call address(_8785).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13375 + _13235 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8814))
                            call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18391 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18391]
                                continue 
                            _19455 = mem[64]
                            mem[mem[64]] = 32
                            _19685 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19685:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19455 + (32 * _19685) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19134 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_19134]
                            continue 
                        _19941 = mem[64]
                        mem[mem[64]] = 32
                        _20158 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20158:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19941 + (32 * _20158) + -mem[64] + 64
                    _17273 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17273] = return_data.size
                    mem[_17273 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18393 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18393]
                            continue 
                        _19456 = mem[64]
                        mem[mem[64]] = 32
                        _19686 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19686:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19456 + (32 * _19686) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17273 + 32] == bool(mem[_17273 + 32])
                    if not mem[_17273 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8814))
                    call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19136 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_19136]
                        continue 
                    _19942 = mem[64]
                    mem[mem[64]] = 32
                    _20160 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20160:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19942 + (32 * _20160) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                _13454 = mem[64]
                mem[mem[64] + 36] = address(_8814)
                mem[mem[64] + 68] = t
                _13546 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13546 + 32] = mem[_13546 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13605 = mem[_13546]
                idx = 0
                while idx < _13605:
                    mem[idx + _13454 + 100] = mem[_13546 + idx + 32]
                    idx = idx + 32
                    continue 
                if ceil32(_13605) <= _13605:
                    call address(_8785).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13605 + _13454 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8814))
                            call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18241 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18241]
                                continue 
                            _19367 = mem[64]
                            mem[mem[64]] = 32
                            _19585 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19585:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19367 + (32 * _19585) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19010 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_19010]
                            continue 
                        _19841 = mem[64]
                        mem[mem[64]] = 32
                        _20034 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20034:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19841 + (32 * _20034) + -mem[64] + 64
                    _17207 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17207] = return_data.size
                    mem[_17207 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18243 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18243]
                            continue 
                        _19368 = mem[64]
                        mem[mem[64]] = 32
                        _19586 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19586:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19368 + (32 * _19586) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17207 + 32] == bool(mem[_17207 + 32])
                    if not mem[_17207 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8814))
                    call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19012 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_19012]
                        continue 
                    _19842 = mem[64]
                    mem[mem[64]] = 32
                    _20036 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20036:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19842 + (32 * _20036) + -mem[64] + 64
                mem[_13454 + _13605 + 100] = 0
                call address(_8785).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13605 + _13454 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18397 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18397]
                            continue 
                        _19459 = mem[64]
                        mem[mem[64]] = 32
                        _19687 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19687:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19459 + (32 * _19687) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8814))
                    call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19138 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_19138]
                        continue 
                    _19943 = mem[64]
                    mem[mem[64]] = 32
                    _20162 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20162:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19943 + (32 * _20162) + -mem[64] + 64
                _17274 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17274] = return_data.size
                mem[_17274 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8814))
                    call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18399 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_18399]
                        continue 
                    _19460 = mem[64]
                    mem[mem[64]] = 32
                    _19688 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19688:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19460 + (32 * _19688) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17274 + 32] == bool(mem[_17274 + 32])
                if not mem[_17274 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8785)
                mem[mem[64] + 36] = address(_8790)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8814))
                call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8785), address(_8790), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19140 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4427] - 2:
                    s = s + 1
                    t = mem[_19140]
                    continue 
                _19944 = mem[64]
                mem[mem[64]] = 32
                _20164 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20164:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19944 + (32 * _20164) + -mem[64] + 64
            _13032 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_13032] = return_data.size
            mem[_13032 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                _13236 = mem[64]
                mem[mem[64] + 36] = address(_8814)
                mem[mem[64] + 68] = t
                _13321 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13321 + 32] = mem[_13321 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13376 = mem[_13321]
                idx = 0
                while idx < _13376:
                    mem[idx + _13236 + 100] = mem[_13321 + idx + 32]
                    idx = idx + 32
                    continue 
                if ceil32(_13376) <= _13376:
                    call address(_8785).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13376 + _13236 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8785)
                            mem[mem[64] + 36] = address(_8790)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8814))
                            call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8785), address(_8790), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18245 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4427] - 2:
                                s = s + 1
                                t = mem[_18245]
                                continue 
                            _19369 = mem[64]
                            mem[mem[64]] = 32
                            _19589 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19589:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19369 + (32 * _19589) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19014 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_19014]
                            continue 
                        _19845 = mem[64]
                        mem[mem[64]] = 32
                        _20038 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20038:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19845 + (32 * _20038) + -mem[64] + 64
                    _17209 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17209] = return_data.size
                    mem[_17209 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18247 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18247]
                            continue 
                        _19370 = mem[64]
                        mem[mem[64]] = 32
                        _19590 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19590:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19370 + (32 * _19590) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17209 + 32] == bool(mem[_17209 + 32])
                    if not mem[_17209 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8814))
                    call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19016 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_19016]
                        continue 
                    _19846 = mem[64]
                    mem[mem[64]] = 32
                    _20040 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20040:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19846 + (32 * _20040) + -mem[64] + 64
                mem[_13236 + _13376 + 100] = 0
                call address(_8785).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13376 + _13236 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18403 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18403]
                            continue 
                        _19463 = mem[64]
                        mem[mem[64]] = 32
                        _19689 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19689:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19463 + (32 * _19689) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8814))
                    call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19142 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_19142]
                        continue 
                    _19945 = mem[64]
                    mem[mem[64]] = 32
                    _20166 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20166:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19945 + (32 * _20166) + -mem[64] + 64
                _17275 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17275] = return_data.size
                mem[_17275 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8814))
                    call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18405 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_18405]
                        continue 
                    _19464 = mem[64]
                    mem[mem[64]] = 32
                    _19690 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19690:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19464 + (32 * _19690) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17275 + 32] == bool(mem[_17275 + 32])
                if not mem[_17275 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8785)
                mem[mem[64] + 36] = address(_8790)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8814))
                call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8785), address(_8790), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19144 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4427] - 2:
                    s = s + 1
                    t = mem[_19144]
                    continue 
                _19946 = mem[64]
                mem[mem[64]] = 32
                _20168 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20168:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19946 + (32 * _20168) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_13032 + 32] == bool(mem[_13032 + 32])
            if not mem[_13032 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            _13456 = mem[64]
            mem[mem[64] + 36] = address(_8814)
            mem[mem[64] + 68] = t
            _13550 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_13550 + 32] = mem[_13550 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
            _13608 = mem[_13550]
            idx = 0
            while idx < _13608:
                mem[idx + _13456 + 100] = mem[_13550 + idx + 32]
                idx = idx + 32
                continue 
            if ceil32(_13608) <= _13608:
                call address(_8785).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13608 + _13456 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8785)
                        mem[mem[64] + 36] = address(_8790)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8814))
                        call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8785), address(_8790), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18249 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4427] - 2:
                            s = s + 1
                            t = mem[_18249]
                            continue 
                        _19371 = mem[64]
                        mem[mem[64]] = 32
                        _19593 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19593:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19371 + (32 * _19593) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8814))
                    call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19018 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_19018]
                        continue 
                    _19849 = mem[64]
                    mem[mem[64]] = 32
                    _20042 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20042:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19849 + (32 * _20042) + -mem[64] + 64
                _17211 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17211] = return_data.size
                mem[_17211 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8814))
                    call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18251 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_18251]
                        continue 
                    _19372 = mem[64]
                    mem[mem[64]] = 32
                    _19594 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19594:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19372 + (32 * _19594) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17211 + 32] == bool(mem[_17211 + 32])
                if not mem[_17211 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8785)
                mem[mem[64] + 36] = address(_8790)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8814))
                call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8785), address(_8790), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19020 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4427] - 2:
                    s = s + 1
                    t = mem[_19020]
                    continue 
                _19850 = mem[64]
                mem[mem[64]] = 32
                _20044 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20044:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19850 + (32 * _20044) + -mem[64] + 64
            mem[_13456 + _13608 + 100] = 0
            call address(_8785).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _13608 + _13456 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    mem[mem[64] + 4] = address(_8785)
                    mem[mem[64] + 36] = address(_8790)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8814))
                    call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8785), address(_8790), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18409 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4427] - 2:
                        s = s + 1
                        t = mem[_18409]
                        continue 
                    _19467 = mem[64]
                    mem[mem[64]] = 32
                    _19691 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19691:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19467 + (32 * _19691) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8785)
                mem[mem[64] + 36] = address(_8790)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8814))
                call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8785), address(_8790), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19146 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4427] - 2:
                    s = s + 1
                    t = mem[_19146]
                    continue 
                _19947 = mem[64]
                mem[mem[64]] = 32
                _20170 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20170:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19947 + (32 * _20170) + -mem[64] + 64
            _17276 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_17276] = return_data.size
            mem[_17276 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                mem[mem[64] + 4] = address(_8785)
                mem[mem[64] + 36] = address(_8790)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8814))
                call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8785), address(_8790), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _18411 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4427] - 2:
                    s = s + 1
                    t = mem[_18411]
                    continue 
                _19468 = mem[64]
                mem[mem[64]] = 32
                _19692 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _19692:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19468 + (32 * _19692) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_17276 + 32] == bool(mem[_17276 + 32])
            if not mem[_17276 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            mem[mem[64] + 4] = address(_8785)
            mem[mem[64] + 36] = address(_8790)
            mem[mem[64] + 68] = t
            mem[mem[64] + 100] = 0
            mem[mem[64] + 132] = this.address
            mem[mem[64] + 164] = arg4
            require ext_code.size(address(_8814))
            call address(_8814).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                 gas gas_remaining wei
                args address(_8785), address(_8790), t, 0, address(this.address), arg4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19148 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if s != mem[_4427] - 2:
                s = s + 1
                t = mem[_19148]
                continue 
            _19948 = mem[64]
            mem[mem[64]] = 32
            _20172 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _20172:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _19948 + (32 * _20172) + -mem[64] + 64
        mem[mem[64]] = 32
        _8795 = mem[(32 * arg2.length) + 128]
        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
        mem[mem[64] + 64 len 32 * _8795] = mem[(32 * arg2.length) + 160 len 32 * _8795]
        return 32, mem[mem[64] + 32 len (32 * _8795) + 32]
    mem[(32 * arg2.length) + 160 len 32 * arg2.length] = call.data[calldata.size len 32 * arg2.length]
    require arg2.length - 1 < arg2.length
    mem[(32 * arg2.length - 1) + (32 * arg2.length) + 160] = arg1
    idx = mem[96] - 1
    while idx:
        require idx < mem[96]
        require idx - 1 < mem[96]
        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
        mem[mem[64] + 36] = mem[(32 * idx - 1) + 140 len 20]
        require ext_code.size(factoryAddress)
        staticcall factoryAddress.0x901754d7 with:
                gas gas_remaining wei
               args mem[mem[64] + 4 len 64]
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4424 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4432 = mem[_4424]
        require mem[_4424] == mem[_4424 + 12 len 20]
        if not mem[_4424 + 12 len 20]:
            require idx < mem[(32 * arg2.length) + 128]
            if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
                revert with 0, 'EmiswapLibrary: INSUFFICIENT_OUTPUT_AMOUNT'
            revert with 0, 'EmiswapLibrary: INSUFFICIENT_LIQUIDITY'
        require idx - 1 < mem[96]
        mem[mem[64] + 4] = mem[(32 * idx - 1) + 140 len 20]
        require ext_code.size(address(_4432))
        staticcall address(_4432).getBalanceForAddition(address rg1) with:
                gas gas_remaining wei
               args mem[(32 * idx - 1) + 140 len 20]
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4478 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4486 = mem[_4478]
        require idx < mem[96]
        _4497 = mem[(32 * idx) + 128]
        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
        require ext_code.size(address(_4432))
        staticcall address(_4432).getBalanceForRemoval(address rg1) with:
                gas gas_remaining wei
               args address(_4497)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4506 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4512 = mem[_4506]
        require idx < mem[(32 * arg2.length) + 128]
        _4520 = mem[(32 * idx) + (32 * arg2.length) + 160]
        if mem[(32 * idx) + (32 * arg2.length) + 160] <= 0:
            revert with 0, 'EmiswapLibrary: INSUFFICIENT_OUTPUT_AMOUNT'
        if _4486 <= 0:
            revert with 0, 'EmiswapLibrary: INSUFFICIENT_LIQUIDITY'
        if mem[_4506] <= 0:
            revert with 0, 'EmiswapLibrary: INSUFFICIENT_LIQUIDITY'
        if not _4486:
            require ext_code.size(factoryAddress)
            staticcall factoryAddress.0xddca3f43 with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4600 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_4600] > 10^18:
                revert with 0, 'SafeMath: subtraction overflow'
            if _4520 > _4512:
                revert with 0, 'SafeMath: subtraction overflow'
            require _4512 - _4520
            if (_4512 * -mem[_4600] + 10^18 / 10^15) - (_4520 * -mem[_4600] + 10^18 / 10^15) / _4512 - _4520 != -mem[_4600] + 10^18 / 10^15:
                revert with 0, 'SafeMath: multiplication overflow'
            require (_4512 * -mem[_4600] + 10^18 / 10^15) - (_4520 * -mem[_4600] + 10^18 / 10^15)
            if (0 / (_4512 * -mem[_4600] + 10^18 / 10^15) - (_4520 * -mem[_4600] + 10^18 / 10^15)) + 1 < 0 / (_4512 * -mem[_4600] + 10^18 / 10^15) - (_4520 * -mem[_4600] + 10^18 / 10^15):
                revert with 0, 'SafeMath: addition overflow'
            require idx - 1 < mem[(32 * arg2.length) + 128]
            mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (_4512 * -mem[_4600] + 10^18 / 10^15) - (_4520 * -mem[_4600] + 10^18 / 10^15)) + 1
        else:
            if mem[(32 * idx) + (32 * arg2.length) + 160] * _4486 / _4486 != mem[(32 * idx) + (32 * arg2.length) + 160]:
                revert with 0, 'SafeMath: multiplication overflow'
            if not mem[(32 * idx) + (32 * arg2.length) + 160] * _4486:
                require ext_code.size(factoryAddress)
                staticcall factoryAddress.0xddca3f43 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4641 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_4641] > 10^18:
                    revert with 0, 'SafeMath: subtraction overflow'
                if _4520 > _4512:
                    revert with 0, 'SafeMath: subtraction overflow'
                require _4512 - _4520
                if (_4512 * -mem[_4641] + 10^18 / 10^15) - (_4520 * -mem[_4641] + 10^18 / 10^15) / _4512 - _4520 != -mem[_4641] + 10^18 / 10^15:
                    revert with 0, 'SafeMath: multiplication overflow'
                require (_4512 * -mem[_4641] + 10^18 / 10^15) - (_4520 * -mem[_4641] + 10^18 / 10^15)
                if (0 / (_4512 * -mem[_4641] + 10^18 / 10^15) - (_4520 * -mem[_4641] + 10^18 / 10^15)) + 1 < 0 / (_4512 * -mem[_4641] + 10^18 / 10^15) - (_4520 * -mem[_4641] + 10^18 / 10^15):
                    revert with 0, 'SafeMath: addition overflow'
                require idx - 1 < mem[(32 * arg2.length) + 128]
                mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (0 / (_4512 * -mem[_4641] + 10^18 / 10^15) - (_4520 * -mem[_4641] + 10^18 / 10^15)) + 1
            else:
                if 1000 * mem[(32 * idx) + (32 * arg2.length) + 160] * _4486 / mem[(32 * idx) + (32 * arg2.length) + 160] * _4486 != 1000:
                    revert with 0, 'SafeMath: multiplication overflow'
                require ext_code.size(factoryAddress)
                staticcall factoryAddress.0xddca3f43 with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4653 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_4653] > 10^18:
                    revert with 0, 'SafeMath: subtraction overflow'
                if _4520 > _4512:
                    revert with 0, 'SafeMath: subtraction overflow'
                require _4512 - _4520
                if (_4512 * -mem[_4653] + 10^18 / 10^15) - (_4520 * -mem[_4653] + 10^18 / 10^15) / _4512 - _4520 != -mem[_4653] + 10^18 / 10^15:
                    revert with 0, 'SafeMath: multiplication overflow'
                require (_4512 * -mem[_4653] + 10^18 / 10^15) - (_4520 * -mem[_4653] + 10^18 / 10^15)
                if (1000 * _4520 * _4486 / (_4512 * -mem[_4653] + 10^18 / 10^15) - (_4520 * -mem[_4653] + 10^18 / 10^15)) + 1 < 1000 * _4520 * _4486 / (_4512 * -mem[_4653] + 10^18 / 10^15) - (_4520 * -mem[_4653] + 10^18 / 10^15):
                    revert with 0, 'SafeMath: addition overflow'
                require idx - 1 < mem[(32 * arg2.length) + 128]
                mem[(32 * idx - 1) + (32 * arg2.length) + 160] = (1000 * _4520 * _4486 / (_4512 * -mem[_4653] + 10^18 / 10^15) - (_4520 * -mem[_4653] + 10^18 / 10^15)) + 1
        idx = idx - 1
        continue 
    require 0 < mem[(32 * arg2.length) + 128]
    if mem[(32 * arg2.length) + 160] > msg.value:
        revert with 0, 'EmiRouter:EXCESSIVE_INPUT_AMOUNT'
    require mem[(32 * arg2.length) + 128]
    _4421 = mem[(32 * arg2.length) + 160]
    mem[mem[64]] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
    require ext_code.size(address(WETHAddress))
    call address(WETHAddress).0xd0e30db0 with:
       value _4421 wei
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _4430 = mem[64]
    mem[64] = mem[64] + (32 * arg2.length) + 32
    mem[_4430] = arg2.length
    mem[_4430 + 32 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
    mem[_4430 + (32 * arg2.length) + 32] = 0
    require mem[(32 * arg2.length) + 128]
    s = 0
    t = mem[(32 * arg2.length) + 160]
    while s < arg2.length - 1:
        if mem[_4430] < 2:
            s = s + 1
            t = t
            continue 
        require s < mem[_4430]
        _8787 = mem[(32 * s) + _4430 + 32]
        require s + 1 < mem[_4430]
        _8793 = mem[(32 * s + 1) + _4430 + 32]
        mem[mem[64] + 4] = mem[(32 * s) + _4430 + 44 len 20]
        mem[mem[64] + 36] = address(_8793)
        require ext_code.size(factoryAddress)
        staticcall factoryAddress.0x901754d7 with:
                gas gas_remaining wei
               args mem[mem[64] + 4], address(_8793)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if s == mem[_4430] - 2:
            _8811 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _8815 = mem[_8811]
            require mem[_8811] == mem[_8811 + 12 len 20]
            mem[mem[64] + 36] = address(_8793)
            mem[mem[64] + 68] = t
            require ext_code.size(address(_8815))
            staticcall address(_8815).getReturn(address rg1, address rg2, uint256 rg3) with:
                    gas gas_remaining wei
                   args address(_8787), address(_8793), t
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8827 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            if not mem[_8827 + 32]:
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = 0
                    continue 
                _8853 = mem[64]
                mem[mem[64]] = 32
                _8861 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _8861:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _8853 + (32 * _8861) + -mem[64] + 64
            mem[mem[64] + 4] = this.address
            mem[mem[64] + 36] = address(_8815)
            require ext_code.size(address(_8787))
            staticcall address(_8787).0xdd62ed3e with:
                    gas gas_remaining wei
                   args address(this.address), address(_8815)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8854 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_8854] <= 0:
                _8875 = mem[64]
                mem[mem[64] + 36] = address(_8815)
                mem[mem[64] + 68] = t
                _8901 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_8901 + 32] = mem[_8901 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _8911 = mem[_8901]
                idx = 0
                while idx < _8911:
                    mem[idx + _8875 + 100] = mem[_8901 + idx + 32]
                    idx = idx + 32
                    continue 
                if ceil32(_8911) <= _8911:
                    call address(_8787).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _8911 + _8875 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8815))
                            call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13269 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_13269]
                                continue 
                            _13709 = mem[64]
                            mem[mem[64]] = 32
                            _13913 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _13913:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _13709 + (32 * _13913) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13494 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_13494]
                            continue 
                        _14253 = mem[64]
                        mem[mem[64]] = 32
                        _14534 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _14534:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _14253 + (32 * _14534) + -mem[64] + 64
                    _13020 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_13020] = return_data.size
                    mem[_13020 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13271 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_13271]
                            continue 
                        _13710 = mem[64]
                        mem[mem[64]] = 32
                        _13914 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _13914:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _13710 + (32 * _13914) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_13020 + 32] == bool(mem[_13020 + 32])
                    if not mem[_13020 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8815))
                    call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13496 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_13496]
                        continue 
                    _14254 = mem[64]
                    mem[mem[64]] = 32
                    _14536 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _14536:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _14254 + (32 * _14536) + -mem[64] + 64
                mem[_8875 + _8911 + 100] = 0
                call address(_8787).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _8911 + _8875 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13327 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_13327]
                            continue 
                        _13803 = mem[64]
                        mem[mem[64]] = 32
                        _14037 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _14037:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _13803 + (32 * _14037) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8815))
                    call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13554 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_13554]
                        continue 
                    _14377 = mem[64]
                    mem[mem[64]] = 32
                    _14726 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _14726:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _14377 + (32 * _14726) + -mem[64] + 64
                _13033 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_13033] = return_data.size
                mem[_13033 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8815))
                    call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13329 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_13329]
                        continue 
                    _13804 = mem[64]
                    mem[mem[64]] = 32
                    _14038 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _14038:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _13804 + (32 * _14038) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_13033 + 32] == bool(mem[_13033 + 32])
                if not mem[_13033 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = arg3
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8815))
                call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(arg3), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13556 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_13556]
                    continue 
                _14378 = mem[64]
                mem[mem[64]] = 32
                _14728 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _14728:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _14378 + (32 * _14728) + -mem[64] + 64
            _8871 = mem[64]
            mem[mem[64] + 36] = address(_8815)
            mem[mem[64] + 68] = 0
            _8886 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_8886 + 32] = mem[_8886 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
            _8904 = mem[_8886]
            u = 0
            while u < _8904:
                mem[u + _8871 + 100] = mem[_8886 + u + 32]
                u = u + 32
                continue 
            if ceil32(_8904) <= _8904:
                call address(_8787).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _8904 + _8871 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        _13223 = mem[64]
                        mem[mem[64] + 36] = address(_8815)
                        mem[mem[64] + 68] = t
                        _13273 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_13273 + 32] = mem[_13273 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                        _13331 = mem[_13273]
                        idx = 0
                        while idx < _13331:
                            mem[idx + _13223 + 100] = mem[_13273 + idx + 32]
                            idx = idx + 32
                            continue 
                        if ceil32(_13331) <= _13331:
                            call address(_8787).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13331 + _13223 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                if not mem[96]:
                                    mem[mem[64] + 4] = address(_8787)
                                    mem[mem[64] + 36] = address(_8793)
                                    mem[mem[64] + 68] = t
                                    mem[mem[64] + 100] = 0
                                    mem[mem[64] + 132] = arg3
                                    mem[mem[64] + 164] = arg4
                                    require ext_code.size(address(_8815))
                                    call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                         gas gas_remaining wei
                                        args address(_8787), address(_8793), t, 0, address(arg3), arg4
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _18253 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if s != mem[_4430] - 2:
                                        s = s + 1
                                        t = mem[_18253]
                                        continue 
                                    _19373 = mem[64]
                                    mem[mem[64]] = 32
                                    _19597 = mem[(32 * arg2.length) + 128]
                                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                    idx = 0
                                    s = (32 * arg2.length) + 160
                                    t = mem[64] + 64
                                    while idx < _19597:
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    return memory
                                      from mem[64]
                                       len _19373 + (32 * _19597) + -mem[64] + 64
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                mem[mem[64] + 4] = address(_8787)
                                mem[mem[64] + 36] = address(_8793)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8815))
                                call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8787), address(_8793), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19022 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4430] - 2:
                                    s = s + 1
                                    t = mem[_19022]
                                    continue 
                                _19853 = mem[64]
                                mem[mem[64]] = 32
                                _20046 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _20046:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19853 + (32 * _20046) + -mem[64] + 64
                            _17221 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_17221] = return_data.size
                            mem[_17221 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not return_data.size:
                                mem[mem[64] + 4] = address(_8787)
                                mem[mem[64] + 36] = address(_8793)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8815))
                                call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8787), address(_8793), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18255 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4430] - 2:
                                    s = s + 1
                                    t = mem[_18255]
                                    continue 
                                _19374 = mem[64]
                                mem[mem[64]] = 32
                                _19598 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19598:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19374 + (32 * _19598) + -mem[64] + 64
                            require return_data.size >= 32
                            require mem[_17221 + 32] == bool(mem[_17221 + 32])
                            if not mem[_17221 + 32]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8815))
                            call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19024 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_19024]
                                continue 
                            _19854 = mem[64]
                            mem[mem[64]] = 32
                            _20048 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20048:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19854 + (32 * _20048) + -mem[64] + 64
                        mem[_13223 + _13331 + 100] = 0
                        call address(_8787).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13331 + _13223 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8787)
                                mem[mem[64] + 36] = address(_8793)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8815))
                                call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8787), address(_8793), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18415 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4430] - 2:
                                    s = s + 1
                                    t = mem[_18415]
                                    continue 
                                _19471 = mem[64]
                                mem[mem[64]] = 32
                                _19693 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19693:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19471 + (32 * _19693) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8815))
                            call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19150 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_19150]
                                continue 
                            _19949 = mem[64]
                            mem[mem[64]] = 32
                            _20174 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20174:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19949 + (32 * _20174) + -mem[64] + 64
                        _17277 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17277] = return_data.size
                        mem[_17277 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8815))
                            call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18417 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_18417]
                                continue 
                            _19472 = mem[64]
                            mem[mem[64]] = 32
                            _19694 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19694:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19472 + (32 * _19694) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17277 + 32] == bool(mem[_17277 + 32])
                        if not mem[_17277 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19152 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_19152]
                            continue 
                        _19950 = mem[64]
                        mem[mem[64]] = 32
                        _20176 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20176:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19950 + (32 * _20176) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    _13428 = mem[64]
                    mem[mem[64] + 36] = address(_8815)
                    mem[mem[64] + 68] = t
                    _13498 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13498 + 32] = mem[_13498 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13559 = mem[_13498]
                    u = 0
                    while u < _13559:
                        mem[u + _13428 + 100] = mem[_13498 + u + 32]
                        u = u + 32
                        continue 
                    if ceil32(_13559) <= _13559:
                        call address(_8787).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13559 + _13428 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8787)
                                mem[mem[64] + 36] = address(_8793)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8815))
                                call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8787), address(_8793), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18257 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4430] - 2:
                                    s = s + 1
                                    t = mem[_18257]
                                    continue 
                                _19375 = mem[64]
                                mem[mem[64]] = 32
                                _19601 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19601:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19375 + (32 * _19601) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8815))
                            call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19026 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_19026]
                                continue 
                            _19857 = mem[64]
                            mem[mem[64]] = 32
                            _20050 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20050:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19857 + (32 * _20050) + -mem[64] + 64
                        _17223 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17223] = return_data.size
                        mem[_17223 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8815))
                            call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18259 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_18259]
                                continue 
                            _19376 = mem[64]
                            mem[mem[64]] = 32
                            _19602 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19602:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19376 + (32 * _19602) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17223 + 32] == bool(mem[_17223 + 32])
                        if not mem[_17223 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19028 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_19028]
                            continue 
                        _19858 = mem[64]
                        mem[mem[64]] = 32
                        _20052 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20052:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19858 + (32 * _20052) + -mem[64] + 64
                    mem[_13428 + _13559 + 100] = 0
                    call address(_8787).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13559 + _13428 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8815))
                            call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18421 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_18421]
                                continue 
                            _19475 = mem[64]
                            mem[mem[64]] = 32
                            _19695 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19695:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19475 + (32 * _19695) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19154 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_19154]
                            continue 
                        _19951 = mem[64]
                        mem[mem[64]] = 32
                        _20178 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20178:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19951 + (32 * _20178) + -mem[64] + 64
                    _17278 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17278] = return_data.size
                    mem[_17278 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18423 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18423]
                            continue 
                        _19476 = mem[64]
                        mem[mem[64]] = 32
                        _19696 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19696:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19476 + (32 * _19696) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17278 + 32] == bool(mem[_17278 + 32])
                    if not mem[_17278 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8815))
                    call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19156 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19156]
                        continue 
                    _19952 = mem[64]
                    mem[mem[64]] = 32
                    _20180 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20180:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19952 + (32 * _20180) + -mem[64] + 64
                _13022 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_13022] = return_data.size
                mem[_13022 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    _13224 = mem[64]
                    mem[mem[64] + 36] = address(_8815)
                    mem[mem[64] + 68] = t
                    _13277 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13277 + 32] = mem[_13277 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13332 = mem[_13277]
                    idx = 0
                    while idx < _13332:
                        mem[idx + _13224 + 100] = mem[_13277 + idx + 32]
                        idx = idx + 32
                        continue 
                    if ceil32(_13332) <= _13332:
                        call address(_8787).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13332 + _13224 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8787)
                                mem[mem[64] + 36] = address(_8793)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8815))
                                call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8787), address(_8793), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18261 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4430] - 2:
                                    s = s + 1
                                    t = mem[_18261]
                                    continue 
                                _19377 = mem[64]
                                mem[mem[64]] = 32
                                _19605 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19605:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19377 + (32 * _19605) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8815))
                            call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19030 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_19030]
                                continue 
                            _19861 = mem[64]
                            mem[mem[64]] = 32
                            _20054 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20054:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19861 + (32 * _20054) + -mem[64] + 64
                        _17225 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17225] = return_data.size
                        mem[_17225 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8815))
                            call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18263 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_18263]
                                continue 
                            _19378 = mem[64]
                            mem[mem[64]] = 32
                            _19606 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19606:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19378 + (32 * _19606) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17225 + 32] == bool(mem[_17225 + 32])
                        if not mem[_17225 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19032 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_19032]
                            continue 
                        _19862 = mem[64]
                        mem[mem[64]] = 32
                        _20056 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20056:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19862 + (32 * _20056) + -mem[64] + 64
                    mem[_13224 + _13332 + 100] = 0
                    call address(_8787).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13332 + _13224 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8815))
                            call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18427 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_18427]
                                continue 
                            _19479 = mem[64]
                            mem[mem[64]] = 32
                            _19697 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19697:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19479 + (32 * _19697) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19158 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_19158]
                            continue 
                        _19953 = mem[64]
                        mem[mem[64]] = 32
                        _20182 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20182:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19953 + (32 * _20182) + -mem[64] + 64
                    _17279 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17279] = return_data.size
                    mem[_17279 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18429 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18429]
                            continue 
                        _19480 = mem[64]
                        mem[mem[64]] = 32
                        _19698 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19698:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19480 + (32 * _19698) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17279 + 32] == bool(mem[_17279 + 32])
                    if not mem[_17279 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8815))
                    call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19160 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19160]
                        continue 
                    _19954 = mem[64]
                    mem[mem[64]] = 32
                    _20184 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20184:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19954 + (32 * _20184) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_13022 + 32] == bool(mem[_13022 + 32])
                if not mem[_13022 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                _13430 = mem[64]
                mem[mem[64] + 36] = address(_8815)
                mem[mem[64] + 68] = t
                _13502 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13502 + 32] = mem[_13502 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13562 = mem[_13502]
                u = 0
                while u < _13562:
                    mem[u + _13430 + 100] = mem[_13502 + u + 32]
                    u = u + 32
                    continue 
                if ceil32(_13562) <= _13562:
                    call address(_8787).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13562 + _13430 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8815))
                            call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18265 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_18265]
                                continue 
                            _19379 = mem[64]
                            mem[mem[64]] = 32
                            _19609 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19609:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19379 + (32 * _19609) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19034 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_19034]
                            continue 
                        _19865 = mem[64]
                        mem[mem[64]] = 32
                        _20058 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20058:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19865 + (32 * _20058) + -mem[64] + 64
                    _17227 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17227] = return_data.size
                    mem[_17227 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18267 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18267]
                            continue 
                        _19380 = mem[64]
                        mem[mem[64]] = 32
                        _19610 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19610:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19380 + (32 * _19610) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17227 + 32] == bool(mem[_17227 + 32])
                    if not mem[_17227 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8815))
                    call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19036 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19036]
                        continue 
                    _19866 = mem[64]
                    mem[mem[64]] = 32
                    _20060 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20060:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19866 + (32 * _20060) + -mem[64] + 64
                mem[_13430 + _13562 + 100] = 0
                call address(_8787).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13562 + _13430 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18433 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18433]
                            continue 
                        _19483 = mem[64]
                        mem[mem[64]] = 32
                        _19699 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19699:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19483 + (32 * _19699) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8815))
                    call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19162 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19162]
                        continue 
                    _19955 = mem[64]
                    mem[mem[64]] = 32
                    _20186 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20186:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19955 + (32 * _20186) + -mem[64] + 64
                _17280 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17280] = return_data.size
                mem[_17280 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8815))
                    call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18435 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_18435]
                        continue 
                    _19484 = mem[64]
                    mem[mem[64]] = 32
                    _19700 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19700:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19484 + (32 * _19700) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17280 + 32] == bool(mem[_17280 + 32])
                if not mem[_17280 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = arg3
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8815))
                call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(arg3), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19164 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_19164]
                    continue 
                _19956 = mem[64]
                mem[mem[64]] = 32
                _20188 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20188:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19956 + (32 * _20188) + -mem[64] + 64
            mem[_8871 + _8904 + 100] = 0
            call address(_8787).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _8904 + _8871 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    _13239 = mem[64]
                    mem[mem[64] + 36] = address(_8815)
                    mem[mem[64] + 68] = t
                    _13333 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13333 + 32] = mem[_13333 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13385 = mem[_13333]
                    idx = 0
                    while idx < _13385:
                        mem[idx + _13239 + 100] = mem[_13333 + idx + 32]
                        idx = idx + 32
                        continue 
                    if ceil32(_13385) <= _13385:
                        call address(_8787).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13385 + _13239 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8787)
                                mem[mem[64] + 36] = address(_8793)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8815))
                                call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8787), address(_8793), t, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18269 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4430] - 2:
                                    s = s + 1
                                    t = mem[_18269]
                                    continue 
                                _19381 = mem[64]
                                mem[mem[64]] = 32
                                _19613 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19613:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19381 + (32 * _19613) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8815))
                            call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19038 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_19038]
                                continue 
                            _19869 = mem[64]
                            mem[mem[64]] = 32
                            _20062 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20062:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19869 + (32 * _20062) + -mem[64] + 64
                        _17229 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17229] = return_data.size
                        mem[_17229 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8815))
                            call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18271 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_18271]
                                continue 
                            _19382 = mem[64]
                            mem[mem[64]] = 32
                            _19614 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19614:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19382 + (32 * _19614) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17229 + 32] == bool(mem[_17229 + 32])
                        if not mem[_17229 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19040 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_19040]
                            continue 
                        _19870 = mem[64]
                        mem[mem[64]] = 32
                        _20064 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20064:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19870 + (32 * _20064) + -mem[64] + 64
                    mem[_13239 + _13385 + 100] = 0
                    call address(_8787).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13385 + _13239 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8815))
                            call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18439 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_18439]
                                continue 
                            _19487 = mem[64]
                            mem[mem[64]] = 32
                            _19701 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19701:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19487 + (32 * _19701) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19166 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_19166]
                            continue 
                        _19957 = mem[64]
                        mem[mem[64]] = 32
                        _20190 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20190:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19957 + (32 * _20190) + -mem[64] + 64
                    _17281 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17281] = return_data.size
                    mem[_17281 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18441 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18441]
                            continue 
                        _19488 = mem[64]
                        mem[mem[64]] = 32
                        _19702 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19702:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19488 + (32 * _19702) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17281 + 32] == bool(mem[_17281 + 32])
                    if not mem[_17281 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8815))
                    call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19168 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19168]
                        continue 
                    _19958 = mem[64]
                    mem[mem[64]] = 32
                    _20192 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20192:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19958 + (32 * _20192) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                _13460 = mem[64]
                mem[mem[64] + 36] = address(_8815)
                mem[mem[64] + 68] = t
                _13564 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13564 + 32] = mem[_13564 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13615 = mem[_13564]
                idx = 0
                while idx < _13615:
                    mem[idx + _13460 + 100] = mem[_13564 + idx + 32]
                    idx = idx + 32
                    continue 
                if ceil32(_13615) <= _13615:
                    call address(_8787).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13615 + _13460 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8815))
                            call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18273 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_18273]
                                continue 
                            _19383 = mem[64]
                            mem[mem[64]] = 32
                            _19617 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19617:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19383 + (32 * _19617) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19042 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_19042]
                            continue 
                        _19873 = mem[64]
                        mem[mem[64]] = 32
                        _20066 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20066:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19873 + (32 * _20066) + -mem[64] + 64
                    _17231 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17231] = return_data.size
                    mem[_17231 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18275 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18275]
                            continue 
                        _19384 = mem[64]
                        mem[mem[64]] = 32
                        _19618 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19618:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19384 + (32 * _19618) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17231 + 32] == bool(mem[_17231 + 32])
                    if not mem[_17231 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8815))
                    call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19044 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19044]
                        continue 
                    _19874 = mem[64]
                    mem[mem[64]] = 32
                    _20068 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20068:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19874 + (32 * _20068) + -mem[64] + 64
                mem[_13460 + _13615 + 100] = 0
                call address(_8787).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13615 + _13460 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18445 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18445]
                            continue 
                        _19491 = mem[64]
                        mem[mem[64]] = 32
                        _19703 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19703:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19491 + (32 * _19703) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8815))
                    call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19170 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19170]
                        continue 
                    _19959 = mem[64]
                    mem[mem[64]] = 32
                    _20194 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20194:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19959 + (32 * _20194) + -mem[64] + 64
                _17282 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17282] = return_data.size
                mem[_17282 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8815))
                    call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18447 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_18447]
                        continue 
                    _19492 = mem[64]
                    mem[mem[64]] = 32
                    _19704 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19704:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19492 + (32 * _19704) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17282 + 32] == bool(mem[_17282 + 32])
                if not mem[_17282 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = arg3
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8815))
                call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(arg3), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19172 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_19172]
                    continue 
                _19960 = mem[64]
                mem[mem[64]] = 32
                _20196 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20196:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19960 + (32 * _20196) + -mem[64] + 64
            _13034 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_13034] = return_data.size
            mem[_13034 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                _13240 = mem[64]
                mem[mem[64] + 36] = address(_8815)
                mem[mem[64] + 68] = t
                _13337 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13337 + 32] = mem[_13337 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13386 = mem[_13337]
                idx = 0
                while idx < _13386:
                    mem[idx + _13240 + 100] = mem[_13337 + idx + 32]
                    idx = idx + 32
                    continue 
                if ceil32(_13386) <= _13386:
                    call address(_8787).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13386 + _13240 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8815))
                            call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18277 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_18277]
                                continue 
                            _19385 = mem[64]
                            mem[mem[64]] = 32
                            _19621 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19621:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19385 + (32 * _19621) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19046 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_19046]
                            continue 
                        _19877 = mem[64]
                        mem[mem[64]] = 32
                        _20070 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20070:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19877 + (32 * _20070) + -mem[64] + 64
                    _17233 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17233] = return_data.size
                    mem[_17233 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18279 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18279]
                            continue 
                        _19386 = mem[64]
                        mem[mem[64]] = 32
                        _19622 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19622:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19386 + (32 * _19622) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17233 + 32] == bool(mem[_17233 + 32])
                    if not mem[_17233 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8815))
                    call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19048 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19048]
                        continue 
                    _19878 = mem[64]
                    mem[mem[64]] = 32
                    _20072 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20072:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19878 + (32 * _20072) + -mem[64] + 64
                mem[_13240 + _13386 + 100] = 0
                call address(_8787).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13386 + _13240 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18451 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18451]
                            continue 
                        _19495 = mem[64]
                        mem[mem[64]] = 32
                        _19705 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19705:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19495 + (32 * _19705) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8815))
                    call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19174 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19174]
                        continue 
                    _19961 = mem[64]
                    mem[mem[64]] = 32
                    _20198 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20198:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19961 + (32 * _20198) + -mem[64] + 64
                _17283 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17283] = return_data.size
                mem[_17283 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8815))
                    call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18453 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_18453]
                        continue 
                    _19496 = mem[64]
                    mem[mem[64]] = 32
                    _19706 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19706:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19496 + (32 * _19706) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17283 + 32] == bool(mem[_17283 + 32])
                if not mem[_17283 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = arg3
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8815))
                call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(arg3), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19176 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_19176]
                    continue 
                _19962 = mem[64]
                mem[mem[64]] = 32
                _20200 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20200:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19962 + (32 * _20200) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_13034 + 32] == bool(mem[_13034 + 32])
            if not mem[_13034 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            _13462 = mem[64]
            mem[mem[64] + 36] = address(_8815)
            mem[mem[64] + 68] = t
            _13568 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_13568 + 32] = mem[_13568 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
            _13618 = mem[_13568]
            idx = 0
            while idx < _13618:
                mem[idx + _13462 + 100] = mem[_13568 + idx + 32]
                idx = idx + 32
                continue 
            if ceil32(_13618) <= _13618:
                call address(_8787).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13618 + _13462 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8815))
                        call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18281 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18281]
                            continue 
                        _19387 = mem[64]
                        mem[mem[64]] = 32
                        _19625 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19625:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19387 + (32 * _19625) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8815))
                    call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19050 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19050]
                        continue 
                    _19881 = mem[64]
                    mem[mem[64]] = 32
                    _20074 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20074:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19881 + (32 * _20074) + -mem[64] + 64
                _17235 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17235] = return_data.size
                mem[_17235 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8815))
                    call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18283 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_18283]
                        continue 
                    _19388 = mem[64]
                    mem[mem[64]] = 32
                    _19626 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19626:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19388 + (32 * _19626) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17235 + 32] == bool(mem[_17235 + 32])
                if not mem[_17235 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = arg3
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8815))
                call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(arg3), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19052 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_19052]
                    continue 
                _19882 = mem[64]
                mem[mem[64]] = 32
                _20076 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20076:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19882 + (32 * _20076) + -mem[64] + 64
            mem[_13462 + _13618 + 100] = 0
            call address(_8787).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _13618 + _13462 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8815))
                    call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18457 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_18457]
                        continue 
                    _19499 = mem[64]
                    mem[mem[64]] = 32
                    _19707 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19707:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19499 + (32 * _19707) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = arg3
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8815))
                call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(arg3), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19178 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_19178]
                    continue 
                _19963 = mem[64]
                mem[mem[64]] = 32
                _20202 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20202:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19963 + (32 * _20202) + -mem[64] + 64
            _17284 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_17284] = return_data.size
            mem[_17284 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = arg3
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8815))
                call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(arg3), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _18459 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_18459]
                    continue 
                _19500 = mem[64]
                mem[mem[64]] = 32
                _19708 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _19708:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19500 + (32 * _19708) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_17284 + 32] == bool(mem[_17284 + 32])
            if not mem[_17284 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            mem[mem[64] + 4] = address(_8787)
            mem[mem[64] + 36] = address(_8793)
            mem[mem[64] + 68] = t
            mem[mem[64] + 100] = 0
            mem[mem[64] + 132] = arg3
            mem[mem[64] + 164] = arg4
            require ext_code.size(address(_8815))
            call address(_8815).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                 gas gas_remaining wei
                args address(_8787), address(_8793), t, 0, address(arg3), arg4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19180 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if s != mem[_4430] - 2:
                s = s + 1
                t = mem[_19180]
                continue 
            _19964 = mem[64]
            mem[mem[64]] = 32
            _20204 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _20204:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _19964 + (32 * _20204) + -mem[64] + 64
        _8812 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _8816 = mem[_8812]
        require mem[_8812] == mem[_8812 + 12 len 20]
        mem[mem[64] + 36] = address(_8793)
        mem[mem[64] + 68] = t
        require ext_code.size(address(_8816))
        staticcall address(_8816).getReturn(address rg1, address rg2, uint256 rg3) with:
                gas gas_remaining wei
               args address(_8787), address(_8793), t
        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _8828 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 64
        if not mem[_8828 + 32]:
            if s != mem[_4430] - 2:
                s = s + 1
                t = 0
                continue 
            _8855 = mem[64]
            mem[mem[64]] = 32
            _8863 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _8863:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _8855 + (32 * _8863) + -mem[64] + 64
        mem[mem[64] + 4] = this.address
        mem[mem[64] + 36] = address(_8816)
        require ext_code.size(address(_8787))
        staticcall address(_8787).0xdd62ed3e with:
                gas gas_remaining wei
               args address(this.address), address(_8816)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _8856 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if mem[_8856] <= 0:
            _8876 = mem[64]
            mem[mem[64] + 36] = address(_8816)
            mem[mem[64] + 68] = t
            _8905 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_8905 + 32] = mem[_8905 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
            _8912 = mem[_8905]
            idx = 0
            while idx < _8912:
                mem[idx + _8876 + 100] = mem[_8905 + idx + 32]
                idx = idx + 32
                continue 
            if ceil32(_8912) <= _8912:
                call address(_8787).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _8912 + _8876 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8816))
                        call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13281 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_13281]
                            continue 
                        _13729 = mem[64]
                        mem[mem[64]] = 32
                        _13943 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _13943:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _13729 + (32 * _13943) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13506 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_13506]
                        continue 
                    _14281 = mem[64]
                    mem[mem[64]] = 32
                    _14578 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _14578:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _14281 + (32 * _14578) + -mem[64] + 64
                _13025 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_13025] = return_data.size
                mem[_13025 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13283 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_13283]
                        continue 
                    _13730 = mem[64]
                    mem[mem[64]] = 32
                    _13944 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _13944:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _13730 + (32 * _13944) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_13025 + 32] == bool(mem[_13025 + 32])
                if not mem[_13025 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8816))
                call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13508 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_13508]
                    continue 
                _14282 = mem[64]
                mem[mem[64]] = 32
                _14580 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _14580:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _14282 + (32 * _14580) + -mem[64] + 64
            mem[_8876 + _8912 + 100] = 0
            call address(_8787).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _8912 + _8876 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13343 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_13343]
                        continue 
                    _13829 = mem[64]
                    mem[mem[64]] = 32
                    _14069 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _14069:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _13829 + (32 * _14069) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8816))
                call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13572 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_13572]
                    continue 
                _14411 = mem[64]
                mem[mem[64]] = 32
                _14778 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _14778:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _14411 + (32 * _14778) + -mem[64] + 64
            _13035 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_13035] = return_data.size
            mem[_13035 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8816))
                call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13345 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_13345]
                    continue 
                _13830 = mem[64]
                mem[mem[64]] = 32
                _14070 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _14070:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _13830 + (32 * _14070) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_13035 + 32] == bool(mem[_13035 + 32])
            if not mem[_13035 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            mem[mem[64] + 4] = address(_8787)
            mem[mem[64] + 36] = address(_8793)
            mem[mem[64] + 68] = t
            mem[mem[64] + 100] = 0
            mem[mem[64] + 132] = this.address
            mem[mem[64] + 164] = arg4
            require ext_code.size(address(_8816))
            call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                 gas gas_remaining wei
                args address(_8787), address(_8793), t, 0, address(this.address), arg4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _13574 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if s != mem[_4430] - 2:
                s = s + 1
                t = mem[_13574]
                continue 
            _14412 = mem[64]
            mem[mem[64]] = 32
            _14780 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _14780:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _14412 + (32 * _14780) + -mem[64] + 64
        _8872 = mem[64]
        mem[mem[64] + 36] = address(_8816)
        mem[mem[64] + 68] = 0
        _8890 = mem[64]
        mem[mem[64]] = 68
        mem[64] = mem[64] + 100
        mem[_8890 + 32] = mem[_8890 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
        _8908 = mem[_8890]
        u = 0
        while u < _8908:
            mem[u + _8872 + 100] = mem[_8890 + u + 32]
            u = u + 32
            continue 
        if ceil32(_8908) <= _8908:
            call address(_8787).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _8908 + _8872 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    _13227 = mem[64]
                    mem[mem[64] + 36] = address(_8816)
                    mem[mem[64] + 68] = t
                    _13285 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13285 + 32] = mem[_13285 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13347 = mem[_13285]
                    idx = 0
                    while idx < _13347:
                        mem[idx + _13227 + 100] = mem[_13285 + idx + 32]
                        idx = idx + 32
                        continue 
                    if ceil32(_13347) <= _13347:
                        call address(_8787).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13347 + _13227 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8787)
                                mem[mem[64] + 36] = address(_8793)
                                mem[mem[64] + 68] = t
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = this.address
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8816))
                                call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8787), address(_8793), t, 0, address(this.address), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18285 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if s != mem[_4430] - 2:
                                    s = s + 1
                                    t = mem[_18285]
                                    continue 
                                _19389 = mem[64]
                                mem[mem[64]] = 32
                                _19629 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19629:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19389 + (32 * _19629) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8816))
                            call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19054 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_19054]
                                continue 
                            _19885 = mem[64]
                            mem[mem[64]] = 32
                            _20078 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20078:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19885 + (32 * _20078) + -mem[64] + 64
                        _17245 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17245] = return_data.size
                        mem[_17245 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8816))
                            call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18287 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_18287]
                                continue 
                            _19390 = mem[64]
                            mem[mem[64]] = 32
                            _19630 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19630:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19390 + (32 * _19630) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17245 + 32] == bool(mem[_17245 + 32])
                        if not mem[_17245 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8816))
                        call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19056 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_19056]
                            continue 
                        _19886 = mem[64]
                        mem[mem[64]] = 32
                        _20080 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20080:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19886 + (32 * _20080) + -mem[64] + 64
                    mem[_13227 + _13347 + 100] = 0
                    call address(_8787).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13347 + _13227 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8816))
                            call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18463 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_18463]
                                continue 
                            _19503 = mem[64]
                            mem[mem[64]] = 32
                            _19709 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19709:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19503 + (32 * _19709) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8816))
                        call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19182 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_19182]
                            continue 
                        _19965 = mem[64]
                        mem[mem[64]] = 32
                        _20206 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20206:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19965 + (32 * _20206) + -mem[64] + 64
                    _17285 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17285] = return_data.size
                    mem[_17285 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8816))
                        call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18465 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18465]
                            continue 
                        _19504 = mem[64]
                        mem[mem[64]] = 32
                        _19710 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19710:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19504 + (32 * _19710) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17285 + 32] == bool(mem[_17285 + 32])
                    if not mem[_17285 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19184 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19184]
                        continue 
                    _19966 = mem[64]
                    mem[mem[64]] = 32
                    _20208 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20208:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19966 + (32 * _20208) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                _13440 = mem[64]
                mem[mem[64] + 36] = address(_8816)
                mem[mem[64] + 68] = t
                _13510 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13510 + 32] = mem[_13510 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13577 = mem[_13510]
                u = 0
                while u < _13577:
                    mem[u + _13440 + 100] = mem[_13510 + u + 32]
                    u = u + 32
                    continue 
                if ceil32(_13577) <= _13577:
                    call address(_8787).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13577 + _13440 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8816))
                            call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18289 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_18289]
                                continue 
                            _19391 = mem[64]
                            mem[mem[64]] = 32
                            _19633 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19633:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19391 + (32 * _19633) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8816))
                        call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19058 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_19058]
                            continue 
                        _19889 = mem[64]
                        mem[mem[64]] = 32
                        _20082 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20082:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19889 + (32 * _20082) + -mem[64] + 64
                    _17247 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17247] = return_data.size
                    mem[_17247 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8816))
                        call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18291 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18291]
                            continue 
                        _19392 = mem[64]
                        mem[mem[64]] = 32
                        _19634 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19634:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19392 + (32 * _19634) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17247 + 32] == bool(mem[_17247 + 32])
                    if not mem[_17247 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19060 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19060]
                        continue 
                    _19890 = mem[64]
                    mem[mem[64]] = 32
                    _20084 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20084:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19890 + (32 * _20084) + -mem[64] + 64
                mem[_13440 + _13577 + 100] = 0
                call address(_8787).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13577 + _13440 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8816))
                        call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18469 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18469]
                            continue 
                        _19507 = mem[64]
                        mem[mem[64]] = 32
                        _19711 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19711:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19507 + (32 * _19711) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19186 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19186]
                        continue 
                    _19967 = mem[64]
                    mem[mem[64]] = 32
                    _20210 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20210:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19967 + (32 * _20210) + -mem[64] + 64
                _17286 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17286] = return_data.size
                mem[_17286 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18471 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_18471]
                        continue 
                    _19508 = mem[64]
                    mem[mem[64]] = 32
                    _19712 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19712:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19508 + (32 * _19712) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17286 + 32] == bool(mem[_17286 + 32])
                if not mem[_17286 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8816))
                call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19188 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_19188]
                    continue 
                _19968 = mem[64]
                mem[mem[64]] = 32
                _20212 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20212:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19968 + (32 * _20212) + -mem[64] + 64
            _13027 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_13027] = return_data.size
            mem[_13027 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                _13228 = mem[64]
                mem[mem[64] + 36] = address(_8816)
                mem[mem[64] + 68] = t
                _13289 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13289 + 32] = mem[_13289 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13348 = mem[_13289]
                idx = 0
                while idx < _13348:
                    mem[idx + _13228 + 100] = mem[_13289 + idx + 32]
                    idx = idx + 32
                    continue 
                if ceil32(_13348) <= _13348:
                    call address(_8787).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13348 + _13228 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8816))
                            call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18293 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_18293]
                                continue 
                            _19393 = mem[64]
                            mem[mem[64]] = 32
                            _19637 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19637:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19393 + (32 * _19637) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8816))
                        call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19062 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_19062]
                            continue 
                        _19893 = mem[64]
                        mem[mem[64]] = 32
                        _20086 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20086:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19893 + (32 * _20086) + -mem[64] + 64
                    _17249 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17249] = return_data.size
                    mem[_17249 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8816))
                        call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18295 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18295]
                            continue 
                        _19394 = mem[64]
                        mem[mem[64]] = 32
                        _19638 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19638:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19394 + (32 * _19638) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17249 + 32] == bool(mem[_17249 + 32])
                    if not mem[_17249 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19064 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19064]
                        continue 
                    _19894 = mem[64]
                    mem[mem[64]] = 32
                    _20088 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20088:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19894 + (32 * _20088) + -mem[64] + 64
                mem[_13228 + _13348 + 100] = 0
                call address(_8787).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13348 + _13228 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8816))
                        call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18475 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18475]
                            continue 
                        _19511 = mem[64]
                        mem[mem[64]] = 32
                        _19713 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19713:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19511 + (32 * _19713) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19190 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19190]
                        continue 
                    _19969 = mem[64]
                    mem[mem[64]] = 32
                    _20214 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20214:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19969 + (32 * _20214) + -mem[64] + 64
                _17287 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17287] = return_data.size
                mem[_17287 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18477 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_18477]
                        continue 
                    _19512 = mem[64]
                    mem[mem[64]] = 32
                    _19714 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19714:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19512 + (32 * _19714) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17287 + 32] == bool(mem[_17287 + 32])
                if not mem[_17287 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8816))
                call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19192 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_19192]
                    continue 
                _19970 = mem[64]
                mem[mem[64]] = 32
                _20216 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20216:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19970 + (32 * _20216) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_13027 + 32] == bool(mem[_13027 + 32])
            if not mem[_13027 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            _13442 = mem[64]
            mem[mem[64] + 36] = address(_8816)
            mem[mem[64] + 68] = t
            _13514 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_13514 + 32] = mem[_13514 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
            _13580 = mem[_13514]
            u = 0
            while u < _13580:
                mem[u + _13442 + 100] = mem[_13514 + u + 32]
                u = u + 32
                continue 
            if ceil32(_13580) <= _13580:
                call address(_8787).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13580 + _13442 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8816))
                        call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18297 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18297]
                            continue 
                        _19395 = mem[64]
                        mem[mem[64]] = 32
                        _19641 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19641:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19395 + (32 * _19641) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19066 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19066]
                        continue 
                    _19897 = mem[64]
                    mem[mem[64]] = 32
                    _20090 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20090:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19897 + (32 * _20090) + -mem[64] + 64
                _17251 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17251] = return_data.size
                mem[_17251 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18299 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_18299]
                        continue 
                    _19396 = mem[64]
                    mem[mem[64]] = 32
                    _19642 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19642:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19396 + (32 * _19642) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17251 + 32] == bool(mem[_17251 + 32])
                if not mem[_17251 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8816))
                call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19068 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_19068]
                    continue 
                _19898 = mem[64]
                mem[mem[64]] = 32
                _20092 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20092:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19898 + (32 * _20092) + -mem[64] + 64
            mem[_13442 + _13580 + 100] = 0
            call address(_8787).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _13580 + _13442 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18481 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_18481]
                        continue 
                    _19515 = mem[64]
                    mem[mem[64]] = 32
                    _19715 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19715:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19515 + (32 * _19715) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8816))
                call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19194 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_19194]
                    continue 
                _19971 = mem[64]
                mem[mem[64]] = 32
                _20218 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20218:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19971 + (32 * _20218) + -mem[64] + 64
            _17288 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_17288] = return_data.size
            mem[_17288 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8816))
                call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _18483 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_18483]
                    continue 
                _19516 = mem[64]
                mem[mem[64]] = 32
                _19716 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _19716:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19516 + (32 * _19716) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_17288 + 32] == bool(mem[_17288 + 32])
            if not mem[_17288 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            mem[mem[64] + 4] = address(_8787)
            mem[mem[64] + 36] = address(_8793)
            mem[mem[64] + 68] = t
            mem[mem[64] + 100] = 0
            mem[mem[64] + 132] = this.address
            mem[mem[64] + 164] = arg4
            require ext_code.size(address(_8816))
            call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                 gas gas_remaining wei
                args address(_8787), address(_8793), t, 0, address(this.address), arg4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19196 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if s != mem[_4430] - 2:
                s = s + 1
                t = mem[_19196]
                continue 
            _19972 = mem[64]
            mem[mem[64]] = 32
            _20220 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _20220:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _19972 + (32 * _20220) + -mem[64] + 64
        mem[_8872 + _8908 + 100] = 0
        call address(_8787).mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _8908 + _8872 + -mem[64] + 96]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not mem[96]:
                _13243 = mem[64]
                mem[mem[64] + 36] = address(_8816)
                mem[mem[64] + 68] = t
                _13349 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13349 + 32] = mem[_13349 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13395 = mem[_13349]
                idx = 0
                while idx < _13395:
                    mem[idx + _13243 + 100] = mem[_13349 + idx + 32]
                    idx = idx + 32
                    continue 
                if ceil32(_13395) <= _13395:
                    call address(_8787).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13395 + _13243 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8787)
                            mem[mem[64] + 36] = address(_8793)
                            mem[mem[64] + 68] = t
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8816))
                            call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8787), address(_8793), t, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18301 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if s != mem[_4430] - 2:
                                s = s + 1
                                t = mem[_18301]
                                continue 
                            _19397 = mem[64]
                            mem[mem[64]] = 32
                            _19645 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19645:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19397 + (32 * _19645) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8816))
                        call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19070 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_19070]
                            continue 
                        _19901 = mem[64]
                        mem[mem[64]] = 32
                        _20094 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20094:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19901 + (32 * _20094) + -mem[64] + 64
                    _17253 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17253] = return_data.size
                    mem[_17253 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8816))
                        call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18303 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18303]
                            continue 
                        _19398 = mem[64]
                        mem[mem[64]] = 32
                        _19646 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19646:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19398 + (32 * _19646) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17253 + 32] == bool(mem[_17253 + 32])
                    if not mem[_17253 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19072 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19072]
                        continue 
                    _19902 = mem[64]
                    mem[mem[64]] = 32
                    _20096 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20096:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19902 + (32 * _20096) + -mem[64] + 64
                mem[_13243 + _13395 + 100] = 0
                call address(_8787).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13395 + _13243 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8816))
                        call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18487 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18487]
                            continue 
                        _19519 = mem[64]
                        mem[mem[64]] = 32
                        _19717 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19717:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19519 + (32 * _19717) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19198 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19198]
                        continue 
                    _19973 = mem[64]
                    mem[mem[64]] = 32
                    _20222 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20222:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19973 + (32 * _20222) + -mem[64] + 64
                _17289 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17289] = return_data.size
                mem[_17289 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18489 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_18489]
                        continue 
                    _19520 = mem[64]
                    mem[mem[64]] = 32
                    _19718 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19718:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19520 + (32 * _19718) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17289 + 32] == bool(mem[_17289 + 32])
                if not mem[_17289 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8816))
                call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19200 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_19200]
                    continue 
                _19974 = mem[64]
                mem[mem[64]] = 32
                _20224 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20224:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19974 + (32 * _20224) + -mem[64] + 64
            require mem[96] >= 32
            require mem[128] == bool(mem[128])
            if not mem[128]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            _13466 = mem[64]
            mem[mem[64] + 36] = address(_8816)
            mem[mem[64] + 68] = t
            _13582 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_13582 + 32] = mem[_13582 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
            _13625 = mem[_13582]
            idx = 0
            while idx < _13625:
                mem[idx + _13466 + 100] = mem[_13582 + idx + 32]
                idx = idx + 32
                continue 
            if ceil32(_13625) <= _13625:
                call address(_8787).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13625 + _13466 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8816))
                        call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18305 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18305]
                            continue 
                        _19399 = mem[64]
                        mem[mem[64]] = 32
                        _19649 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19649:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19399 + (32 * _19649) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19074 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19074]
                        continue 
                    _19905 = mem[64]
                    mem[mem[64]] = 32
                    _20098 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20098:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19905 + (32 * _20098) + -mem[64] + 64
                _17255 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17255] = return_data.size
                mem[_17255 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18307 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_18307]
                        continue 
                    _19400 = mem[64]
                    mem[mem[64]] = 32
                    _19650 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19650:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19400 + (32 * _19650) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17255 + 32] == bool(mem[_17255 + 32])
                if not mem[_17255 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8816))
                call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19076 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_19076]
                    continue 
                _19906 = mem[64]
                mem[mem[64]] = 32
                _20100 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20100:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19906 + (32 * _20100) + -mem[64] + 64
            mem[_13466 + _13625 + 100] = 0
            call address(_8787).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _13625 + _13466 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18493 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_18493]
                        continue 
                    _19523 = mem[64]
                    mem[mem[64]] = 32
                    _19719 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19719:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19523 + (32 * _19719) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8816))
                call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19202 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_19202]
                    continue 
                _19975 = mem[64]
                mem[mem[64]] = 32
                _20226 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20226:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19975 + (32 * _20226) + -mem[64] + 64
            _17290 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_17290] = return_data.size
            mem[_17290 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8816))
                call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _18495 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_18495]
                    continue 
                _19524 = mem[64]
                mem[mem[64]] = 32
                _19720 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _19720:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19524 + (32 * _19720) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_17290 + 32] == bool(mem[_17290 + 32])
            if not mem[_17290 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            mem[mem[64] + 4] = address(_8787)
            mem[mem[64] + 36] = address(_8793)
            mem[mem[64] + 68] = t
            mem[mem[64] + 100] = 0
            mem[mem[64] + 132] = this.address
            mem[mem[64] + 164] = arg4
            require ext_code.size(address(_8816))
            call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                 gas gas_remaining wei
                args address(_8787), address(_8793), t, 0, address(this.address), arg4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19204 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if s != mem[_4430] - 2:
                s = s + 1
                t = mem[_19204]
                continue 
            _19976 = mem[64]
            mem[mem[64]] = 32
            _20228 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _20228:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _19976 + (32 * _20228) + -mem[64] + 64
        _13036 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size) + 1
        mem[_13036] = return_data.size
        mem[_13036 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper: APPROVE_FAILED'
        if not return_data.size:
            _13244 = mem[64]
            mem[mem[64] + 36] = address(_8816)
            mem[mem[64] + 68] = t
            _13353 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_13353 + 32] = mem[_13353 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
            _13396 = mem[_13353]
            idx = 0
            while idx < _13396:
                mem[idx + _13244 + 100] = mem[_13353 + idx + 32]
                idx = idx + 32
                continue 
            if ceil32(_13396) <= _13396:
                call address(_8787).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13396 + _13244 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8787)
                        mem[mem[64] + 36] = address(_8793)
                        mem[mem[64] + 68] = t
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8816))
                        call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8787), address(_8793), t, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18309 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if s != mem[_4430] - 2:
                            s = s + 1
                            t = mem[_18309]
                            continue 
                        _19401 = mem[64]
                        mem[mem[64]] = 32
                        _19653 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19653:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19401 + (32 * _19653) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19078 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_19078]
                        continue 
                    _19909 = mem[64]
                    mem[mem[64]] = 32
                    _20102 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20102:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19909 + (32 * _20102) + -mem[64] + 64
                _17257 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17257] = return_data.size
                mem[_17257 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18311 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_18311]
                        continue 
                    _19402 = mem[64]
                    mem[mem[64]] = 32
                    _19654 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19654:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19402 + (32 * _19654) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17257 + 32] == bool(mem[_17257 + 32])
                if not mem[_17257 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8816))
                call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19080 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_19080]
                    continue 
                _19910 = mem[64]
                mem[mem[64]] = 32
                _20104 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20104:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19910 + (32 * _20104) + -mem[64] + 64
            mem[_13244 + _13396 + 100] = 0
            call address(_8787).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _13396 + _13244 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18499 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_18499]
                        continue 
                    _19527 = mem[64]
                    mem[mem[64]] = 32
                    _19721 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19721:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19527 + (32 * _19721) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8816))
                call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19206 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_19206]
                    continue 
                _19977 = mem[64]
                mem[mem[64]] = 32
                _20230 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20230:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19977 + (32 * _20230) + -mem[64] + 64
            _17291 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_17291] = return_data.size
            mem[_17291 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8816))
                call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _18501 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_18501]
                    continue 
                _19528 = mem[64]
                mem[mem[64]] = 32
                _19722 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _19722:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19528 + (32 * _19722) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_17291 + 32] == bool(mem[_17291 + 32])
            if not mem[_17291 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            mem[mem[64] + 4] = address(_8787)
            mem[mem[64] + 36] = address(_8793)
            mem[mem[64] + 68] = t
            mem[mem[64] + 100] = 0
            mem[mem[64] + 132] = this.address
            mem[mem[64] + 164] = arg4
            require ext_code.size(address(_8816))
            call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                 gas gas_remaining wei
                args address(_8787), address(_8793), t, 0, address(this.address), arg4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19208 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if s != mem[_4430] - 2:
                s = s + 1
                t = mem[_19208]
                continue 
            _19978 = mem[64]
            mem[mem[64]] = 32
            _20232 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _20232:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _19978 + (32 * _20232) + -mem[64] + 64
        require return_data.size >= 32
        require mem[_13036 + 32] == bool(mem[_13036 + 32])
        if not mem[_13036 + 32]:
            revert with 0, 'TransferHelper: APPROVE_FAILED'
        _13468 = mem[64]
        mem[mem[64] + 36] = address(_8816)
        mem[mem[64] + 68] = t
        _13586 = mem[64]
        mem[mem[64]] = 68
        mem[64] = mem[64] + 100
        mem[_13586 + 32] = mem[_13586 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
        _13628 = mem[_13586]
        idx = 0
        while idx < _13628:
            mem[idx + _13468 + 100] = mem[_13586 + idx + 32]
            idx = idx + 32
            continue 
        if ceil32(_13628) <= _13628:
            call address(_8787).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _13628 + _13468 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    mem[mem[64] + 4] = address(_8787)
                    mem[mem[64] + 36] = address(_8793)
                    mem[mem[64] + 68] = t
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8816))
                    call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8787), address(_8793), t, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18313 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if s != mem[_4430] - 2:
                        s = s + 1
                        t = mem[_18313]
                        continue 
                    _19403 = mem[64]
                    mem[mem[64]] = 32
                    _19657 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19657:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19403 + (32 * _19657) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8816))
                call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19082 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_19082]
                    continue 
                _19913 = mem[64]
                mem[mem[64]] = 32
                _20106 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20106:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19913 + (32 * _20106) + -mem[64] + 64
            _17259 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_17259] = return_data.size
            mem[_17259 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8816))
                call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _18315 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_18315]
                    continue 
                _19404 = mem[64]
                mem[mem[64]] = 32
                _19658 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _19658:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19404 + (32 * _19658) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_17259 + 32] == bool(mem[_17259 + 32])
            if not mem[_17259 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            mem[mem[64] + 4] = address(_8787)
            mem[mem[64] + 36] = address(_8793)
            mem[mem[64] + 68] = t
            mem[mem[64] + 100] = 0
            mem[mem[64] + 132] = this.address
            mem[mem[64] + 164] = arg4
            require ext_code.size(address(_8816))
            call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                 gas gas_remaining wei
                args address(_8787), address(_8793), t, 0, address(this.address), arg4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19084 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if s != mem[_4430] - 2:
                s = s + 1
                t = mem[_19084]
                continue 
            _19914 = mem[64]
            mem[mem[64]] = 32
            _20108 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _20108:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _19914 + (32 * _20108) + -mem[64] + 64
        mem[_13468 + _13628 + 100] = 0
        call address(_8787).mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _13628 + _13468 + -mem[64] + 96]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not mem[96]:
                mem[mem[64] + 4] = address(_8787)
                mem[mem[64] + 36] = address(_8793)
                mem[mem[64] + 68] = t
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8816))
                call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8787), address(_8793), t, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _18505 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if s != mem[_4430] - 2:
                    s = s + 1
                    t = mem[_18505]
                    continue 
                _19531 = mem[64]
                mem[mem[64]] = 32
                _19723 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _19723:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19531 + (32 * _19723) + -mem[64] + 64
            require mem[96] >= 32
            require mem[128] == bool(mem[128])
            if not mem[128]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            mem[mem[64] + 4] = address(_8787)
            mem[mem[64] + 36] = address(_8793)
            mem[mem[64] + 68] = t
            mem[mem[64] + 100] = 0
            mem[mem[64] + 132] = this.address
            mem[mem[64] + 164] = arg4
            require ext_code.size(address(_8816))
            call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                 gas gas_remaining wei
                args address(_8787), address(_8793), t, 0, address(this.address), arg4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19210 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if s != mem[_4430] - 2:
                s = s + 1
                t = mem[_19210]
                continue 
            _19979 = mem[64]
            mem[mem[64]] = 32
            _20234 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _20234:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _19979 + (32 * _20234) + -mem[64] + 64
        _17292 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size) + 1
        mem[_17292] = return_data.size
        mem[_17292 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper: APPROVE_FAILED'
        if not return_data.size:
            mem[mem[64] + 4] = address(_8787)
            mem[mem[64] + 36] = address(_8793)
            mem[mem[64] + 68] = t
            mem[mem[64] + 100] = 0
            mem[mem[64] + 132] = this.address
            mem[mem[64] + 164] = arg4
            require ext_code.size(address(_8816))
            call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                 gas gas_remaining wei
                args address(_8787), address(_8793), t, 0, address(this.address), arg4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _18507 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if s != mem[_4430] - 2:
                s = s + 1
                t = mem[_18507]
                continue 
            _19532 = mem[64]
            mem[mem[64]] = 32
            _19724 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _19724:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _19532 + (32 * _19724) + -mem[64] + 64
        require return_data.size >= 32
        require mem[_17292 + 32] == bool(mem[_17292 + 32])
        if not mem[_17292 + 32]:
            revert with 0, 'TransferHelper: APPROVE_FAILED'
        mem[mem[64] + 4] = address(_8787)
        mem[mem[64] + 36] = address(_8793)
        mem[mem[64] + 68] = t
        mem[mem[64] + 100] = 0
        mem[mem[64] + 132] = this.address
        mem[mem[64] + 164] = arg4
        require ext_code.size(address(_8816))
        call address(_8816).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
             gas gas_remaining wei
            args address(_8787), address(_8793), t, 0, address(this.address), arg4
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _19212 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if s != mem[_4430] - 2:
            s = s + 1
            t = mem[_19212]
            continue 
        _19980 = mem[64]
        mem[mem[64]] = 32
        _20236 = mem[(32 * arg2.length) + 128]
        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
        idx = 0
        s = (32 * arg2.length) + 160
        t = mem[64] + 64
        while idx < _20236:
            mem[t] = mem[s]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _19980 + (32 * _20236) + -mem[64] + 64
    mem[mem[64]] = 32
    _8796 = mem[(32 * arg2.length) + 128]
    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
    mem[mem[64] + 64 len 32 * _8796] = mem[(32 * arg2.length) + 160 len 32 * _8796]
    return 32, mem[mem[64] + 32 len (32 * _8796) + 32]
}

function swapExactETHForTokens(uint256 arg1, address[] arg2, address arg3, address arg4) payable {
    require calldata.size - 4 >= 128
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    require arg2.length <= test266151307()
    require arg2 + (32 * arg2.length) + 36 <= calldata.size
    require arg3 == arg3
    require arg4 == arg4
    require arg2.length
    require cd[(arg2 + 36)] == address(cd[(arg2 + 36)])
    if address(cd[(arg2 + 36)]) != address(WETHAddress):
        revert with 0, 'EmiRouter:INVALID_PATH'
    mem[96] = arg2.length
    mem[128 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
    if arg2.length < 2:
        revert with 0, 'EmiswapLibrary: INVALID_PATH'
    require arg2.length <= test266151307()
    mem[(32 * arg2.length) + 128] = arg2.length
    mem[64] = (64 * arg2.length) + 160
    if not arg2.length:
        require 0 < arg2.length
        mem[(32 * arg2.length) + 160] = msg.value
        idx = 0
        while idx < arg2.length - 1:
            require idx < mem[96]
            require idx + 1 < mem[96]
            _4383 = mem[(32 * idx + 1) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            mem[mem[64] + 36] = address(_4383)
            require ext_code.size(factoryAddress)
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], address(_4383)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4402 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4411 = mem[_4402]
            require mem[_4402] == mem[_4402 + 12 len 20]
            if not mem[_4402 + 12 len 20]:
                require idx < mem[(32 * arg2.length) + 128]
                require idx + 1 < mem[(32 * arg2.length) + 128]
                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
            else:
                require idx < mem[96]
                _4435 = mem[(32 * idx) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                require ext_code.size(address(_4411))
                staticcall address(_4411).getBalanceForAddition(address rg1) with:
                        gas gas_remaining wei
                       args address(_4435)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4452 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4460 = mem[_4452]
                require idx + 1 < mem[96]
                _4473 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                require ext_code.size(address(_4411))
                staticcall address(_4411).getBalanceForRemoval(address rg1) with:
                        gas gas_remaining wei
                       args address(_4473)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _4483 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _4487 = mem[_4483]
                require idx < mem[(32 * arg2.length) + 128]
                _4497 = mem[(32 * idx) + (32 * arg2.length) + 160]
                if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                    require idx + 1 < mem[(32 * arg2.length) + 128]
                    mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                else:
                    if not _4460:
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                    else:
                        if not mem[_4483]:
                            require idx + 1 < mem[(32 * arg2.length) + 128]
                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                        else:
                            require ext_code.size(factoryAddress)
                            staticcall factoryAddress.0xddca3f43 with:
                                    gas gas_remaining wei
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _4533 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if mem[_4533] > 10^18:
                                revert with 0, 'SafeMath: subtraction overflow'
                            if not _4497:
                                if not _4460:
                                    require idx + 1 < mem[(32 * arg2.length) + 128]
                                    mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                else:
                                    if 1000 * _4460 / _4460 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if 1000 * _4460 < 1000 * _4460:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not 1000 * _4460:
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                    else:
                                        require 1000 * _4460
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 1000 * _4460
                            else:
                                if -mem[_4533] + 10^18 / 10^15 * _4497 / _4497 != -mem[_4533] + 10^18 / 10^15:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not -mem[_4533] + 10^18 / 10^15 * _4497:
                                    if not _4460:
                                        if -mem[_4533] + 10^18 / 10^15 * _4497 < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not -mem[_4533] + 10^18 / 10^15 * _4497:
                                            require idx + 1 < mem[(32 * arg2.length) + 128]
                                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                        else:
                                            require -mem[_4533] + 10^18 / 10^15 * _4497
                                            require idx + 1 < mem[(32 * arg2.length) + 128]
                                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / -mem[_4533] + 10^18 / 10^15 * _4497
                                    else:
                                        if 1000 * _4460 / _4460 != 1000:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if (-mem[_4533] + 10^18 / 10^15 * _4497) + (1000 * _4460) < 1000 * _4460:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not (-mem[_4533] + 10^18 / 10^15 * _4497) + (1000 * _4460):
                                            require idx + 1 < mem[(32 * arg2.length) + 128]
                                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                        else:
                                            require (-mem[_4533] + 10^18 / 10^15 * _4497) + (1000 * _4460)
                                            require idx + 1 < mem[(32 * arg2.length) + 128]
                                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (-mem[_4533] + 10^18 / 10^15 * _4497) + (1000 * _4460)
                                else:
                                    if _4487 * -mem[_4533] + 10^18 / 10^15 * _4497 / -mem[_4533] + 10^18 / 10^15 * _4497 != _4487:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if not _4460:
                                        if -mem[_4533] + 10^18 / 10^15 * _4497 < 0:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not -mem[_4533] + 10^18 / 10^15 * _4497:
                                            require idx + 1 < mem[(32 * arg2.length) + 128]
                                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                        else:
                                            require -mem[_4533] + 10^18 / 10^15 * _4497
                                            require idx + 1 < mem[(32 * arg2.length) + 128]
                                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = _4487 * -mem[_4533] + 10^18 / 10^15 * _4497 / -mem[_4533] + 10^18 / 10^15 * _4497
                                    else:
                                        if 1000 * _4460 / _4460 != 1000:
                                            revert with 0, 'SafeMath: multiplication overflow'
                                        if (-mem[_4533] + 10^18 / 10^15 * _4497) + (1000 * _4460) < 1000 * _4460:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if not (-mem[_4533] + 10^18 / 10^15 * _4497) + (1000 * _4460):
                                            require idx + 1 < mem[(32 * arg2.length) + 128]
                                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                        else:
                                            require (-mem[_4533] + 10^18 / 10^15 * _4497) + (1000 * _4460)
                                            require idx + 1 < mem[(32 * arg2.length) + 128]
                                            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = _4487 * -mem[_4533] + 10^18 / 10^15 * _4497 / (-mem[_4533] + 10^18 / 10^15 * _4497) + (1000 * _4460)
            idx = idx + 1
            continue 
        require mem[(32 * arg2.length) + 128] - 1 < mem[(32 * arg2.length) + 128]
        if mem[(32 * mem[(32 * arg2.length) + 128] - 1) + (32 * arg2.length) + 160] < arg1:
            revert with 0, 'EmiRouter:INSUFFICIENT_OUTPUT_AMOUNT'
        require mem[(32 * arg2.length) + 128]
        _4399 = mem[(32 * arg2.length) + 160]
        mem[mem[64]] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
        require ext_code.size(address(WETHAddress))
        call address(WETHAddress).0xd0e30db0 with:
           value _4399 wei
             gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4409 = mem[64]
        mem[64] = mem[64] + (32 * arg2.length) + 32
        mem[_4409] = arg2.length
        mem[_4409 + 32 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
        mem[_4409 + (32 * arg2.length) + 32] = 0
        require mem[(32 * arg2.length) + 128]
        idx = 0
        s = mem[(32 * arg2.length) + 160]
        while idx < arg2.length - 1:
            if mem[_4409] < 2:
                idx = idx + 1
                s = s
                continue 
            require idx < mem[_4409]
            _8745 = mem[(32 * idx) + _4409 + 32]
            require idx + 1 < mem[_4409]
            _8750 = mem[(32 * idx + 1) + _4409 + 32]
            mem[mem[64] + 4] = mem[(32 * idx) + _4409 + 44 len 20]
            mem[mem[64] + 36] = address(_8750)
            require ext_code.size(factoryAddress)
            staticcall factoryAddress.0x901754d7 with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], address(_8750)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            if idx == mem[_4409] - 2:
                _8768 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8773 = mem[_8768]
                require mem[_8768] == mem[_8768 + 12 len 20]
                mem[mem[64] + 36] = address(_8750)
                mem[mem[64] + 68] = s
                require ext_code.size(address(_8773))
                staticcall address(_8773).getReturn(address rg1, address rg2, uint256 rg3) with:
                        gas gas_remaining wei
                       args address(_8745), address(_8750), s
                mem[mem[64] len 64] = ext_call.return_data[0 len 64]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8785 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 64
                if not mem[_8785 + 32]:
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = 0
                        continue 
                    _8809 = mem[64]
                    mem[mem[64]] = 32
                    _8817 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _8817:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _8809 + (32 * _8817) + -mem[64] + 64
                mem[mem[64] + 4] = this.address
                mem[mem[64] + 36] = address(_8773)
                require ext_code.size(address(_8745))
                staticcall address(_8745).0xdd62ed3e with:
                        gas gas_remaining wei
                       args address(this.address), address(_8773)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _8810 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if mem[_8810] <= 0:
                    _8833 = mem[64]
                    mem[mem[64] + 36] = address(_8773)
                    mem[mem[64] + 68] = s
                    _8853 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_8853 + 32] = mem[_8853 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _8869 = mem[_8853]
                    t = 0
                    while t < _8869:
                        mem[t + _8833 + 100] = mem[_8853 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_8869) <= _8869:
                        call address(_8745).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _8869 + _8833 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8773))
                                call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _13205 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_13205]
                                    continue 
                                _13629 = mem[64]
                                mem[mem[64]] = 32
                                _13813 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _13813:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _13629 + (32 * _13813) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13430 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_13430]
                                continue 
                            _14157 = mem[64]
                            mem[mem[64]] = 32
                            _14406 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _14406:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _14157 + (32 * _14406) + -mem[64] + 64
                        _12969 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_12969] = return_data.size
                        mem[_12969 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13207 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_13207]
                                continue 
                            _13630 = mem[64]
                            mem[mem[64]] = 32
                            _13814 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _13814:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _13630 + (32 * _13814) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_12969 + 32] == bool(mem[_12969 + 32])
                        if not mem[_12969 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8773))
                        call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13432 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_13432]
                            continue 
                        _14158 = mem[64]
                        mem[mem[64]] = 32
                        _14408 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _14408:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _14158 + (32 * _14408) + -mem[64] + 64
                    mem[_8833 + _8869 + 100] = 0
                    call address(_8745).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _8869 + _8833 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13255 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_13255]
                                continue 
                            _13711 = mem[64]
                            mem[mem[64]] = 32
                            _13933 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _13933:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _13711 + (32 * _13933) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8773))
                        call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13478 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_13478]
                            continue 
                        _14269 = mem[64]
                        mem[mem[64]] = 32
                        _14582 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _14582:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _14269 + (32 * _14582) + -mem[64] + 64
                    _12989 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_12989] = return_data.size
                    mem[_12989 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8773))
                        call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13257 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_13257]
                            continue 
                        _13712 = mem[64]
                        mem[mem[64]] = 32
                        _13934 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _13934:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _13712 + (32 * _13934) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_12989 + 32] == bool(mem[_12989 + 32])
                    if not mem[_12989 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8773))
                    call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13480 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_13480]
                        continue 
                    _14270 = mem[64]
                    mem[mem[64]] = 32
                    _14584 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _14584:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _14270 + (32 * _14584) + -mem[64] + 64
                _8829 = mem[64]
                mem[mem[64] + 36] = address(_8773)
                mem[mem[64] + 68] = 0
                _8838 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_8838 + 32] = mem[_8838 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _8856 = mem[_8838]
                t = 0
                while t < _8856:
                    mem[t + _8829 + 100] = mem[_8838 + t + 32]
                    t = t + 32
                    continue 
                if ceil32(_8856) <= _8856:
                    call address(_8745).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _8856 + _8829 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            _13175 = mem[64]
                            mem[mem[64] + 36] = address(_8773)
                            mem[mem[64] + 68] = s
                            _13209 = mem[64]
                            mem[mem[64]] = 68
                            mem[64] = mem[64] + 100
                            mem[_13209 + 32] = mem[_13209 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                            _13259 = mem[_13209]
                            t = 0
                            while t < _13259:
                                mem[t + _13175 + 100] = mem[_13209 + t + 32]
                                t = t + 32
                                continue 
                            if ceil32(_13259) <= _13259:
                                call address(_8745).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _13259 + _13175 + -mem[64] + 96]
                                if not return_data.size:
                                    if not ext_call.success:
                                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                                    if not mem[96]:
                                        mem[mem[64] + 4] = address(_8745)
                                        mem[mem[64] + 36] = address(_8750)
                                        mem[mem[64] + 68] = s
                                        mem[mem[64] + 100] = 0
                                        mem[mem[64] + 132] = arg3
                                        mem[mem[64] + 164] = arg4
                                        require ext_code.size(address(_8773))
                                        call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                             gas gas_remaining wei
                                            args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                        mem[mem[64]] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        _18149 = mem[64]
                                        mem[64] = mem[64] + ceil32(return_data.size)
                                        require return_data.size >= 32
                                        if idx != mem[_4409] - 2:
                                            idx = idx + 1
                                            s = mem[_18149]
                                            continue 
                                        _19301 = mem[64]
                                        mem[mem[64]] = 32
                                        _19493 = mem[(32 * arg2.length) + 128]
                                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                        idx = 0
                                        s = (32 * arg2.length) + 160
                                        t = mem[64] + 64
                                        while idx < _19493:
                                            mem[t] = mem[s]
                                            idx = idx + 1
                                            s = s + 32
                                            t = t + 32
                                            continue 
                                        return memory
                                          from mem[64]
                                           len _19301 + (32 * _19493) + -mem[64] + 64
                                    require mem[96] >= 32
                                    require mem[128] == bool(mem[128])
                                    if not mem[128]:
                                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                                    mem[mem[64] + 4] = address(_8745)
                                    mem[mem[64] + 36] = address(_8750)
                                    mem[mem[64] + 68] = s
                                    mem[mem[64] + 100] = 0
                                    mem[mem[64] + 132] = arg3
                                    mem[mem[64] + 164] = arg4
                                    require ext_code.size(address(_8773))
                                    call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                         gas gas_remaining wei
                                        args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _18918 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if idx != mem[_4409] - 2:
                                        idx = idx + 1
                                        s = mem[_18918]
                                        continue 
                                    _19749 = mem[64]
                                    mem[mem[64]] = 32
                                    _19942 = mem[(32 * arg2.length) + 128]
                                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                    idx = 0
                                    s = (32 * arg2.length) + 160
                                    t = mem[64] + 64
                                    while idx < _19942:
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    return memory
                                      from mem[64]
                                       len _19749 + (32 * _19942) + -mem[64] + 64
                                _17133 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                mem[_17133] = return_data.size
                                mem[_17133 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                if not ext_call.success:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                if not return_data.size:
                                    mem[mem[64] + 4] = address(_8745)
                                    mem[mem[64] + 36] = address(_8750)
                                    mem[mem[64] + 68] = s
                                    mem[mem[64] + 100] = 0
                                    mem[mem[64] + 132] = arg3
                                    mem[mem[64] + 164] = arg4
                                    require ext_code.size(address(_8773))
                                    call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                         gas gas_remaining wei
                                        args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _18151 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if idx != mem[_4409] - 2:
                                        idx = idx + 1
                                        s = mem[_18151]
                                        continue 
                                    _19302 = mem[64]
                                    mem[mem[64]] = 32
                                    _19494 = mem[(32 * arg2.length) + 128]
                                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                    idx = 0
                                    s = (32 * arg2.length) + 160
                                    t = mem[64] + 64
                                    while idx < _19494:
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    return memory
                                      from mem[64]
                                       len _19302 + (32 * _19494) + -mem[64] + 64
                                require return_data.size >= 32
                                require mem[_17133 + 32] == bool(mem[_17133 + 32])
                                if not mem[_17133 + 32]:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8773))
                                call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18920 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18920]
                                    continue 
                                _19750 = mem[64]
                                mem[mem[64]] = 32
                                _19944 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19944:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19750 + (32 * _19944) + -mem[64] + 64
                            mem[_13175 + _13259 + 100] = 0
                            call address(_8745).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13259 + _13175 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                if not mem[96]:
                                    mem[mem[64] + 4] = address(_8745)
                                    mem[mem[64] + 36] = address(_8750)
                                    mem[mem[64] + 68] = s
                                    mem[mem[64] + 100] = 0
                                    mem[mem[64] + 132] = arg3
                                    mem[mem[64] + 164] = arg4
                                    require ext_code.size(address(_8773))
                                    call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                         gas gas_remaining wei
                                        args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _18279 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if idx != mem[_4409] - 2:
                                        idx = idx + 1
                                        s = mem[_18279]
                                        continue 
                                    _19367 = mem[64]
                                    mem[mem[64]] = 32
                                    _19621 = mem[(32 * arg2.length) + 128]
                                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                    idx = 0
                                    s = (32 * arg2.length) + 160
                                    t = mem[64] + 64
                                    while idx < _19621:
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    return memory
                                      from mem[64]
                                       len _19367 + (32 * _19621) + -mem[64] + 64
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8773))
                                call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _19046 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_19046]
                                    continue 
                                _19877 = mem[64]
                                mem[mem[64]] = 32
                                _20070 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _20070:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19877 + (32 * _20070) + -mem[64] + 64
                            _17221 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_17221] = return_data.size
                            mem[_17221 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not return_data.size:
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8773))
                                call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18281 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18281]
                                    continue 
                                _19368 = mem[64]
                                mem[mem[64]] = 32
                                _19622 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19622:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19368 + (32 * _19622) + -mem[64] + 64
                            require return_data.size >= 32
                            require mem[_17221 + 32] == bool(mem[_17221 + 32])
                            if not mem[_17221 + 32]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19048 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_19048]
                                continue 
                            _19878 = mem[64]
                            mem[mem[64]] = 32
                            _20072 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20072:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19878 + (32 * _20072) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        _13364 = mem[64]
                        mem[mem[64] + 36] = address(_8773)
                        mem[mem[64] + 68] = s
                        _13434 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_13434 + 32] = mem[_13434 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                        _13483 = mem[_13434]
                        t = 0
                        while t < _13483:
                            mem[t + _13364 + 100] = mem[_13434 + t + 32]
                            t = t + 32
                            continue 
                        if ceil32(_13483) <= _13483:
                            call address(_8745).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13483 + _13364 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                if not mem[96]:
                                    mem[mem[64] + 4] = address(_8745)
                                    mem[mem[64] + 36] = address(_8750)
                                    mem[mem[64] + 68] = s
                                    mem[mem[64] + 100] = 0
                                    mem[mem[64] + 132] = arg3
                                    mem[mem[64] + 164] = arg4
                                    require ext_code.size(address(_8773))
                                    call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                         gas gas_remaining wei
                                        args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _18153 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if idx != mem[_4409] - 2:
                                        idx = idx + 1
                                        s = mem[_18153]
                                        continue 
                                    _19303 = mem[64]
                                    mem[mem[64]] = 32
                                    _19497 = mem[(32 * arg2.length) + 128]
                                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                    idx = 0
                                    s = (32 * arg2.length) + 160
                                    t = mem[64] + 64
                                    while idx < _19497:
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    return memory
                                      from mem[64]
                                       len _19303 + (32 * _19497) + -mem[64] + 64
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8773))
                                call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18922 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18922]
                                    continue 
                                _19753 = mem[64]
                                mem[mem[64]] = 32
                                _19946 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19946:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19753 + (32 * _19946) + -mem[64] + 64
                            _17135 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_17135] = return_data.size
                            mem[_17135 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not return_data.size:
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8773))
                                call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18155 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18155]
                                    continue 
                                _19304 = mem[64]
                                mem[mem[64]] = 32
                                _19498 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19498:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19304 + (32 * _19498) + -mem[64] + 64
                            require return_data.size >= 32
                            require mem[_17135 + 32] == bool(mem[_17135 + 32])
                            if not mem[_17135 + 32]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18924 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18924]
                                continue 
                            _19754 = mem[64]
                            mem[mem[64]] = 32
                            _19948 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19948:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19754 + (32 * _19948) + -mem[64] + 64
                        mem[_13364 + _13483 + 100] = 0
                        call address(_8745).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13483 + _13364 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8773))
                                call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18285 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18285]
                                    continue 
                                _19371 = mem[64]
                                mem[mem[64]] = 32
                                _19623 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19623:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19371 + (32 * _19623) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19050 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_19050]
                                continue 
                            _19879 = mem[64]
                            mem[mem[64]] = 32
                            _20074 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20074:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19879 + (32 * _20074) + -mem[64] + 64
                        _17222 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17222] = return_data.size
                        mem[_17222 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18287 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18287]
                                continue 
                            _19372 = mem[64]
                            mem[mem[64]] = 32
                            _19624 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19624:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19372 + (32 * _19624) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17222 + 32] == bool(mem[_17222 + 32])
                        if not mem[_17222 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8773))
                        call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19052 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_19052]
                            continue 
                        _19880 = mem[64]
                        mem[mem[64]] = 32
                        _20076 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20076:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19880 + (32 * _20076) + -mem[64] + 64
                    _12971 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_12971] = return_data.size
                    mem[_12971 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        _13176 = mem[64]
                        mem[mem[64] + 36] = address(_8773)
                        mem[mem[64] + 68] = s
                        _13213 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_13213 + 32] = mem[_13213 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                        _13260 = mem[_13213]
                        t = 0
                        while t < _13260:
                            mem[t + _13176 + 100] = mem[_13213 + t + 32]
                            t = t + 32
                            continue 
                        if ceil32(_13260) <= _13260:
                            call address(_8745).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13260 + _13176 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                if not mem[96]:
                                    mem[mem[64] + 4] = address(_8745)
                                    mem[mem[64] + 36] = address(_8750)
                                    mem[mem[64] + 68] = s
                                    mem[mem[64] + 100] = 0
                                    mem[mem[64] + 132] = arg3
                                    mem[mem[64] + 164] = arg4
                                    require ext_code.size(address(_8773))
                                    call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                         gas gas_remaining wei
                                        args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _18157 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if idx != mem[_4409] - 2:
                                        idx = idx + 1
                                        s = mem[_18157]
                                        continue 
                                    _19305 = mem[64]
                                    mem[mem[64]] = 32
                                    _19501 = mem[(32 * arg2.length) + 128]
                                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                    idx = 0
                                    s = (32 * arg2.length) + 160
                                    t = mem[64] + 64
                                    while idx < _19501:
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    return memory
                                      from mem[64]
                                       len _19305 + (32 * _19501) + -mem[64] + 64
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8773))
                                call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18926 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18926]
                                    continue 
                                _19757 = mem[64]
                                mem[mem[64]] = 32
                                _19950 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19950:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19757 + (32 * _19950) + -mem[64] + 64
                            _17137 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_17137] = return_data.size
                            mem[_17137 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not return_data.size:
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8773))
                                call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18159 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18159]
                                    continue 
                                _19306 = mem[64]
                                mem[mem[64]] = 32
                                _19502 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19502:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19306 + (32 * _19502) + -mem[64] + 64
                            require return_data.size >= 32
                            require mem[_17137 + 32] == bool(mem[_17137 + 32])
                            if not mem[_17137 + 32]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18928 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18928]
                                continue 
                            _19758 = mem[64]
                            mem[mem[64]] = 32
                            _19952 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19952:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19758 + (32 * _19952) + -mem[64] + 64
                        mem[_13176 + _13260 + 100] = 0
                        call address(_8745).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13260 + _13176 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8773))
                                call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18291 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18291]
                                    continue 
                                _19375 = mem[64]
                                mem[mem[64]] = 32
                                _19625 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19625:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19375 + (32 * _19625) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19054 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_19054]
                                continue 
                            _19881 = mem[64]
                            mem[mem[64]] = 32
                            _20078 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20078:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19881 + (32 * _20078) + -mem[64] + 64
                        _17223 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17223] = return_data.size
                        mem[_17223 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18293 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18293]
                                continue 
                            _19376 = mem[64]
                            mem[mem[64]] = 32
                            _19626 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19626:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19376 + (32 * _19626) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17223 + 32] == bool(mem[_17223 + 32])
                        if not mem[_17223 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8773))
                        call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19056 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_19056]
                            continue 
                        _19882 = mem[64]
                        mem[mem[64]] = 32
                        _20080 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20080:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19882 + (32 * _20080) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_12971 + 32] == bool(mem[_12971 + 32])
                    if not mem[_12971 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    _13366 = mem[64]
                    mem[mem[64] + 36] = address(_8773)
                    mem[mem[64] + 68] = s
                    _13438 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13438 + 32] = mem[_13438 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13486 = mem[_13438]
                    t = 0
                    while t < _13486:
                        mem[t + _13366 + 100] = mem[_13438 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_13486) <= _13486:
                        call address(_8745).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13486 + _13366 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8773))
                                call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18161 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18161]
                                    continue 
                                _19307 = mem[64]
                                mem[mem[64]] = 32
                                _19505 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19505:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19307 + (32 * _19505) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18930 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18930]
                                continue 
                            _19761 = mem[64]
                            mem[mem[64]] = 32
                            _19954 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19954:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19761 + (32 * _19954) + -mem[64] + 64
                        _17139 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17139] = return_data.size
                        mem[_17139 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18163 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18163]
                                continue 
                            _19308 = mem[64]
                            mem[mem[64]] = 32
                            _19506 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19506:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19308 + (32 * _19506) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17139 + 32] == bool(mem[_17139 + 32])
                        if not mem[_17139 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8773))
                        call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18932 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18932]
                            continue 
                        _19762 = mem[64]
                        mem[mem[64]] = 32
                        _19956 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19956:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19762 + (32 * _19956) + -mem[64] + 64
                    mem[_13366 + _13486 + 100] = 0
                    call address(_8745).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13486 + _13366 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18297 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18297]
                                continue 
                            _19379 = mem[64]
                            mem[mem[64]] = 32
                            _19627 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19627:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19379 + (32 * _19627) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8773))
                        call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19058 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_19058]
                            continue 
                        _19883 = mem[64]
                        mem[mem[64]] = 32
                        _20082 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20082:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19883 + (32 * _20082) + -mem[64] + 64
                    _17224 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17224] = return_data.size
                    mem[_17224 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8773))
                        call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18299 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18299]
                            continue 
                        _19380 = mem[64]
                        mem[mem[64]] = 32
                        _19628 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19628:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19380 + (32 * _19628) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17224 + 32] == bool(mem[_17224 + 32])
                    if not mem[_17224 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8773))
                    call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19060 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_19060]
                        continue 
                    _19884 = mem[64]
                    mem[mem[64]] = 32
                    _20084 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20084:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19884 + (32 * _20084) + -mem[64] + 64
                mem[_8829 + _8856 + 100] = 0
                call address(_8745).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _8856 + _8829 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        _13191 = mem[64]
                        mem[mem[64] + 36] = address(_8773)
                        mem[mem[64] + 68] = s
                        _13261 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_13261 + 32] = mem[_13261 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                        _13325 = mem[_13261]
                        t = 0
                        while t < _13325:
                            mem[t + _13191 + 100] = mem[_13261 + t + 32]
                            t = t + 32
                            continue 
                        if ceil32(_13325) <= _13325:
                            call address(_8745).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13325 + _13191 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                if not mem[96]:
                                    mem[mem[64] + 4] = address(_8745)
                                    mem[mem[64] + 36] = address(_8750)
                                    mem[mem[64] + 68] = s
                                    mem[mem[64] + 100] = 0
                                    mem[mem[64] + 132] = arg3
                                    mem[mem[64] + 164] = arg4
                                    require ext_code.size(address(_8773))
                                    call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                         gas gas_remaining wei
                                        args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _18165 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if idx != mem[_4409] - 2:
                                        idx = idx + 1
                                        s = mem[_18165]
                                        continue 
                                    _19309 = mem[64]
                                    mem[mem[64]] = 32
                                    _19509 = mem[(32 * arg2.length) + 128]
                                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                    idx = 0
                                    s = (32 * arg2.length) + 160
                                    t = mem[64] + 64
                                    while idx < _19509:
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    return memory
                                      from mem[64]
                                       len _19309 + (32 * _19509) + -mem[64] + 64
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8773))
                                call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18934 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18934]
                                    continue 
                                _19765 = mem[64]
                                mem[mem[64]] = 32
                                _19958 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19958:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19765 + (32 * _19958) + -mem[64] + 64
                            _17141 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_17141] = return_data.size
                            mem[_17141 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not return_data.size:
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8773))
                                call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18167 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18167]
                                    continue 
                                _19310 = mem[64]
                                mem[mem[64]] = 32
                                _19510 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19510:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19310 + (32 * _19510) + -mem[64] + 64
                            require return_data.size >= 32
                            require mem[_17141 + 32] == bool(mem[_17141 + 32])
                            if not mem[_17141 + 32]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18936 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18936]
                                continue 
                            _19766 = mem[64]
                            mem[mem[64]] = 32
                            _19960 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19960:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19766 + (32 * _19960) + -mem[64] + 64
                        mem[_13191 + _13325 + 100] = 0
                        call address(_8745).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13325 + _13191 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8773))
                                call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18303 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18303]
                                    continue 
                                _19383 = mem[64]
                                mem[mem[64]] = 32
                                _19629 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19629:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19383 + (32 * _19629) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19062 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_19062]
                                continue 
                            _19885 = mem[64]
                            mem[mem[64]] = 32
                            _20086 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20086:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19885 + (32 * _20086) + -mem[64] + 64
                        _17225 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17225] = return_data.size
                        mem[_17225 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18305 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18305]
                                continue 
                            _19384 = mem[64]
                            mem[mem[64]] = 32
                            _19630 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19630:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19384 + (32 * _19630) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17225 + 32] == bool(mem[_17225 + 32])
                        if not mem[_17225 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8773))
                        call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19064 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_19064]
                            continue 
                        _19886 = mem[64]
                        mem[mem[64]] = 32
                        _20088 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20088:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19886 + (32 * _20088) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    _13408 = mem[64]
                    mem[mem[64] + 36] = address(_8773)
                    mem[mem[64] + 68] = s
                    _13488 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13488 + 32] = mem[_13488 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13555 = mem[_13488]
                    t = 0
                    while t < _13555:
                        mem[t + _13408 + 100] = mem[_13488 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_13555) <= _13555:
                        call address(_8745).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13555 + _13408 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8773))
                                call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18169 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18169]
                                    continue 
                                _19311 = mem[64]
                                mem[mem[64]] = 32
                                _19513 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19513:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19311 + (32 * _19513) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18938 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18938]
                                continue 
                            _19769 = mem[64]
                            mem[mem[64]] = 32
                            _19962 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19962:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19769 + (32 * _19962) + -mem[64] + 64
                        _17143 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17143] = return_data.size
                        mem[_17143 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18171 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18171]
                                continue 
                            _19312 = mem[64]
                            mem[mem[64]] = 32
                            _19514 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19514:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19312 + (32 * _19514) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17143 + 32] == bool(mem[_17143 + 32])
                        if not mem[_17143 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8773))
                        call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18940 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18940]
                            continue 
                        _19770 = mem[64]
                        mem[mem[64]] = 32
                        _19964 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19964:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19770 + (32 * _19964) + -mem[64] + 64
                    mem[_13408 + _13555 + 100] = 0
                    call address(_8745).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13555 + _13408 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18309 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18309]
                                continue 
                            _19387 = mem[64]
                            mem[mem[64]] = 32
                            _19631 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19631:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19387 + (32 * _19631) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8773))
                        call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19066 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_19066]
                            continue 
                        _19887 = mem[64]
                        mem[mem[64]] = 32
                        _20090 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20090:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19887 + (32 * _20090) + -mem[64] + 64
                    _17226 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17226] = return_data.size
                    mem[_17226 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8773))
                        call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18311 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18311]
                            continue 
                        _19388 = mem[64]
                        mem[mem[64]] = 32
                        _19632 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19632:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19388 + (32 * _19632) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17226 + 32] == bool(mem[_17226 + 32])
                    if not mem[_17226 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8773))
                    call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19068 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_19068]
                        continue 
                    _19888 = mem[64]
                    mem[mem[64]] = 32
                    _20092 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20092:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19888 + (32 * _20092) + -mem[64] + 64
                _12990 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_12990] = return_data.size
                mem[_12990 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    _13192 = mem[64]
                    mem[mem[64] + 36] = address(_8773)
                    mem[mem[64] + 68] = s
                    _13265 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13265 + 32] = mem[_13265 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13326 = mem[_13265]
                    t = 0
                    while t < _13326:
                        mem[t + _13192 + 100] = mem[_13265 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_13326) <= _13326:
                        call address(_8745).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13326 + _13192 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8773))
                                call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18173 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18173]
                                    continue 
                                _19313 = mem[64]
                                mem[mem[64]] = 32
                                _19517 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19517:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19313 + (32 * _19517) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18942 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18942]
                                continue 
                            _19773 = mem[64]
                            mem[mem[64]] = 32
                            _19966 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19966:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19773 + (32 * _19966) + -mem[64] + 64
                        _17145 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17145] = return_data.size
                        mem[_17145 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18175 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18175]
                                continue 
                            _19314 = mem[64]
                            mem[mem[64]] = 32
                            _19518 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19518:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19314 + (32 * _19518) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17145 + 32] == bool(mem[_17145 + 32])
                        if not mem[_17145 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8773))
                        call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18944 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18944]
                            continue 
                        _19774 = mem[64]
                        mem[mem[64]] = 32
                        _19968 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19968:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19774 + (32 * _19968) + -mem[64] + 64
                    mem[_13192 + _13326 + 100] = 0
                    call address(_8745).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13326 + _13192 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18315 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18315]
                                continue 
                            _19391 = mem[64]
                            mem[mem[64]] = 32
                            _19633 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19633:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19391 + (32 * _19633) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8773))
                        call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19070 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_19070]
                            continue 
                        _19889 = mem[64]
                        mem[mem[64]] = 32
                        _20094 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20094:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19889 + (32 * _20094) + -mem[64] + 64
                    _17227 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17227] = return_data.size
                    mem[_17227 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8773))
                        call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18317 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18317]
                            continue 
                        _19392 = mem[64]
                        mem[mem[64]] = 32
                        _19634 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19634:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19392 + (32 * _19634) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17227 + 32] == bool(mem[_17227 + 32])
                    if not mem[_17227 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8773))
                    call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19072 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_19072]
                        continue 
                    _19890 = mem[64]
                    mem[mem[64]] = 32
                    _20096 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20096:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19890 + (32 * _20096) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_12990 + 32] == bool(mem[_12990 + 32])
                if not mem[_12990 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                _13410 = mem[64]
                mem[mem[64] + 36] = address(_8773)
                mem[mem[64] + 68] = s
                _13492 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13492 + 32] = mem[_13492 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13558 = mem[_13492]
                t = 0
                while t < _13558:
                    mem[t + _13410 + 100] = mem[_13492 + t + 32]
                    t = t + 32
                    continue 
                if ceil32(_13558) <= _13558:
                    call address(_8745).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13558 + _13410 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8773))
                            call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18177 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18177]
                                continue 
                            _19315 = mem[64]
                            mem[mem[64]] = 32
                            _19521 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19521:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19315 + (32 * _19521) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8773))
                        call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18946 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18946]
                            continue 
                        _19777 = mem[64]
                        mem[mem[64]] = 32
                        _19970 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19970:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19777 + (32 * _19970) + -mem[64] + 64
                    _17147 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17147] = return_data.size
                    mem[_17147 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8773))
                        call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18179 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18179]
                            continue 
                        _19316 = mem[64]
                        mem[mem[64]] = 32
                        _19522 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19522:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19316 + (32 * _19522) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17147 + 32] == bool(mem[_17147 + 32])
                    if not mem[_17147 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8773))
                    call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18948 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_18948]
                        continue 
                    _19778 = mem[64]
                    mem[mem[64]] = 32
                    _19972 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19972:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19778 + (32 * _19972) + -mem[64] + 64
                mem[_13410 + _13558 + 100] = 0
                call address(_8745).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13558 + _13410 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8773))
                        call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18321 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18321]
                            continue 
                        _19395 = mem[64]
                        mem[mem[64]] = 32
                        _19635 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19635:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19395 + (32 * _19635) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8773))
                    call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19074 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_19074]
                        continue 
                    _19891 = mem[64]
                    mem[mem[64]] = 32
                    _20098 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20098:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19891 + (32 * _20098) + -mem[64] + 64
                _17228 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17228] = return_data.size
                mem[_17228 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8773))
                    call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18323 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_18323]
                        continue 
                    _19396 = mem[64]
                    mem[mem[64]] = 32
                    _19636 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19636:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19396 + (32 * _19636) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17228 + 32] == bool(mem[_17228 + 32])
                if not mem[_17228 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8745)
                mem[mem[64] + 36] = address(_8750)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = arg3
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8773))
                call address(_8773).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8745), address(_8750), s, 0, address(arg3), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19076 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4409] - 2:
                    idx = idx + 1
                    s = mem[_19076]
                    continue 
                _19892 = mem[64]
                mem[mem[64]] = 32
                _20100 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20100:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19892 + (32 * _20100) + -mem[64] + 64
            _8769 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _8774 = mem[_8769]
            require mem[_8769] == mem[_8769 + 12 len 20]
            mem[mem[64] + 36] = address(_8750)
            mem[mem[64] + 68] = s
            require ext_code.size(address(_8774))
            staticcall address(_8774).getReturn(address rg1, address rg2, uint256 rg3) with:
                    gas gas_remaining wei
                   args address(_8745), address(_8750), s
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8786 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            if not mem[_8786 + 32]:
                if idx != mem[_4409] - 2:
                    idx = idx + 1
                    s = 0
                    continue 
                _8811 = mem[64]
                mem[mem[64]] = 32
                _8819 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _8819:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _8811 + (32 * _8819) + -mem[64] + 64
            mem[mem[64] + 4] = this.address
            mem[mem[64] + 36] = address(_8774)
            require ext_code.size(address(_8745))
            staticcall address(_8745).0xdd62ed3e with:
                    gas gas_remaining wei
                   args address(this.address), address(_8774)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8812 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_8812] <= 0:
                _8834 = mem[64]
                mem[mem[64] + 36] = address(_8774)
                mem[mem[64] + 68] = s
                _8857 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_8857 + 32] = mem[_8857 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _8870 = mem[_8857]
                t = 0
                while t < _8870:
                    mem[t + _8834 + 100] = mem[_8857 + t + 32]
                    t = t + 32
                    continue 
                if ceil32(_8870) <= _8870:
                    call address(_8745).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _8870 + _8834 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8774))
                            call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13217 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_13217]
                                continue 
                            _13649 = mem[64]
                            mem[mem[64]] = 32
                            _13843 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _13843:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _13649 + (32 * _13843) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13442 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_13442]
                            continue 
                        _14185 = mem[64]
                        mem[mem[64]] = 32
                        _14450 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _14450:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _14185 + (32 * _14450) + -mem[64] + 64
                    _12974 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_12974] = return_data.size
                    mem[_12974 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13219 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_13219]
                            continue 
                        _13650 = mem[64]
                        mem[mem[64]] = 32
                        _13844 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _13844:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _13650 + (32 * _13844) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_12974 + 32] == bool(mem[_12974 + 32])
                    if not mem[_12974 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8774))
                    call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13444 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_13444]
                        continue 
                    _14186 = mem[64]
                    mem[mem[64]] = 32
                    _14452 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _14452:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _14186 + (32 * _14452) + -mem[64] + 64
                mem[_8834 + _8870 + 100] = 0
                call address(_8745).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _8870 + _8834 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13271 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_13271]
                            continue 
                        _13737 = mem[64]
                        mem[mem[64]] = 32
                        _13965 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _13965:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _13737 + (32 * _13965) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8774))
                    call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13496 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_13496]
                        continue 
                    _14303 = mem[64]
                    mem[mem[64]] = 32
                    _14634 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _14634:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _14303 + (32 * _14634) + -mem[64] + 64
                _12991 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_12991] = return_data.size
                mem[_12991 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8774))
                    call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13273 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_13273]
                        continue 
                    _13738 = mem[64]
                    mem[mem[64]] = 32
                    _13966 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _13966:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _13738 + (32 * _13966) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_12991 + 32] == bool(mem[_12991 + 32])
                if not mem[_12991 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8745)
                mem[mem[64] + 36] = address(_8750)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8774))
                call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8745), address(_8750), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13498 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4409] - 2:
                    idx = idx + 1
                    s = mem[_13498]
                    continue 
                _14304 = mem[64]
                mem[mem[64]] = 32
                _14636 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _14636:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _14304 + (32 * _14636) + -mem[64] + 64
            _8830 = mem[64]
            mem[mem[64] + 36] = address(_8774)
            mem[mem[64] + 68] = 0
            _8842 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_8842 + 32] = mem[_8842 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
            _8860 = mem[_8842]
            t = 0
            while t < _8860:
                mem[t + _8830 + 100] = mem[_8842 + t + 32]
                t = t + 32
                continue 
            if ceil32(_8860) <= _8860:
                call address(_8745).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _8860 + _8830 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        _13179 = mem[64]
                        mem[mem[64] + 36] = address(_8774)
                        mem[mem[64] + 68] = s
                        _13221 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_13221 + 32] = mem[_13221 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                        _13275 = mem[_13221]
                        t = 0
                        while t < _13275:
                            mem[t + _13179 + 100] = mem[_13221 + t + 32]
                            t = t + 32
                            continue 
                        if ceil32(_13275) <= _13275:
                            call address(_8745).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13275 + _13179 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                if not mem[96]:
                                    mem[mem[64] + 4] = address(_8745)
                                    mem[mem[64] + 36] = address(_8750)
                                    mem[mem[64] + 68] = s
                                    mem[mem[64] + 100] = 0
                                    mem[mem[64] + 132] = this.address
                                    mem[mem[64] + 164] = arg4
                                    require ext_code.size(address(_8774))
                                    call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                         gas gas_remaining wei
                                        args address(_8745), address(_8750), s, 0, address(this.address), arg4
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _18181 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if idx != mem[_4409] - 2:
                                        idx = idx + 1
                                        s = mem[_18181]
                                        continue 
                                    _19317 = mem[64]
                                    mem[mem[64]] = 32
                                    _19525 = mem[(32 * arg2.length) + 128]
                                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                    idx = 0
                                    s = (32 * arg2.length) + 160
                                    t = mem[64] + 64
                                    while idx < _19525:
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    return memory
                                      from mem[64]
                                       len _19317 + (32 * _19525) + -mem[64] + 64
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = this.address
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8774))
                                call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(this.address), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18950 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18950]
                                    continue 
                                _19781 = mem[64]
                                mem[mem[64]] = 32
                                _19974 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19974:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19781 + (32 * _19974) + -mem[64] + 64
                            _17157 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_17157] = return_data.size
                            mem[_17157 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not return_data.size:
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = this.address
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8774))
                                call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(this.address), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18183 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18183]
                                    continue 
                                _19318 = mem[64]
                                mem[mem[64]] = 32
                                _19526 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19526:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19318 + (32 * _19526) + -mem[64] + 64
                            require return_data.size >= 32
                            require mem[_17157 + 32] == bool(mem[_17157 + 32])
                            if not mem[_17157 + 32]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8774))
                            call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18952 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18952]
                                continue 
                            _19782 = mem[64]
                            mem[mem[64]] = 32
                            _19976 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19976:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19782 + (32 * _19976) + -mem[64] + 64
                        mem[_13179 + _13275 + 100] = 0
                        call address(_8745).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13275 + _13179 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = this.address
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8774))
                                call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(this.address), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18327 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18327]
                                    continue 
                                _19399 = mem[64]
                                mem[mem[64]] = 32
                                _19637 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19637:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19399 + (32 * _19637) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8774))
                            call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19078 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_19078]
                                continue 
                            _19893 = mem[64]
                            mem[mem[64]] = 32
                            _20102 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20102:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19893 + (32 * _20102) + -mem[64] + 64
                        _17229 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17229] = return_data.size
                        mem[_17229 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8774))
                            call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18329 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18329]
                                continue 
                            _19400 = mem[64]
                            mem[mem[64]] = 32
                            _19638 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19638:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19400 + (32 * _19638) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17229 + 32] == bool(mem[_17229 + 32])
                        if not mem[_17229 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19080 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_19080]
                            continue 
                        _19894 = mem[64]
                        mem[mem[64]] = 32
                        _20104 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20104:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19894 + (32 * _20104) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    _13376 = mem[64]
                    mem[mem[64] + 36] = address(_8774)
                    mem[mem[64] + 68] = s
                    _13446 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13446 + 32] = mem[_13446 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13501 = mem[_13446]
                    t = 0
                    while t < _13501:
                        mem[t + _13376 + 100] = mem[_13446 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_13501) <= _13501:
                        call address(_8745).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13501 + _13376 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = this.address
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8774))
                                call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(this.address), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18185 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18185]
                                    continue 
                                _19319 = mem[64]
                                mem[mem[64]] = 32
                                _19529 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19529:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19319 + (32 * _19529) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8774))
                            call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18954 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18954]
                                continue 
                            _19785 = mem[64]
                            mem[mem[64]] = 32
                            _19978 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19978:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19785 + (32 * _19978) + -mem[64] + 64
                        _17159 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17159] = return_data.size
                        mem[_17159 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8774))
                            call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18187 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18187]
                                continue 
                            _19320 = mem[64]
                            mem[mem[64]] = 32
                            _19530 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19530:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19320 + (32 * _19530) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17159 + 32] == bool(mem[_17159 + 32])
                        if not mem[_17159 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18956 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18956]
                            continue 
                        _19786 = mem[64]
                        mem[mem[64]] = 32
                        _19980 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19980:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19786 + (32 * _19980) + -mem[64] + 64
                    mem[_13376 + _13501 + 100] = 0
                    call address(_8745).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13501 + _13376 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8774))
                            call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18333 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18333]
                                continue 
                            _19403 = mem[64]
                            mem[mem[64]] = 32
                            _19639 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19639:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19403 + (32 * _19639) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19082 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_19082]
                            continue 
                        _19895 = mem[64]
                        mem[mem[64]] = 32
                        _20106 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20106:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19895 + (32 * _20106) + -mem[64] + 64
                    _17230 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17230] = return_data.size
                    mem[_17230 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18335 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18335]
                            continue 
                        _19404 = mem[64]
                        mem[mem[64]] = 32
                        _19640 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19640:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19404 + (32 * _19640) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17230 + 32] == bool(mem[_17230 + 32])
                    if not mem[_17230 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8774))
                    call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19084 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_19084]
                        continue 
                    _19896 = mem[64]
                    mem[mem[64]] = 32
                    _20108 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20108:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19896 + (32 * _20108) + -mem[64] + 64
                _12976 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_12976] = return_data.size
                mem[_12976 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    _13180 = mem[64]
                    mem[mem[64] + 36] = address(_8774)
                    mem[mem[64] + 68] = s
                    _13225 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13225 + 32] = mem[_13225 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13276 = mem[_13225]
                    t = 0
                    while t < _13276:
                        mem[t + _13180 + 100] = mem[_13225 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_13276) <= _13276:
                        call address(_8745).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13276 + _13180 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = this.address
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8774))
                                call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(this.address), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18189 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18189]
                                    continue 
                                _19321 = mem[64]
                                mem[mem[64]] = 32
                                _19533 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19533:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19321 + (32 * _19533) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8774))
                            call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18958 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18958]
                                continue 
                            _19789 = mem[64]
                            mem[mem[64]] = 32
                            _19982 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19982:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19789 + (32 * _19982) + -mem[64] + 64
                        _17161 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17161] = return_data.size
                        mem[_17161 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8774))
                            call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18191 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18191]
                                continue 
                            _19322 = mem[64]
                            mem[mem[64]] = 32
                            _19534 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19534:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19322 + (32 * _19534) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17161 + 32] == bool(mem[_17161 + 32])
                        if not mem[_17161 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18960 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18960]
                            continue 
                        _19790 = mem[64]
                        mem[mem[64]] = 32
                        _19984 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19984:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19790 + (32 * _19984) + -mem[64] + 64
                    mem[_13180 + _13276 + 100] = 0
                    call address(_8745).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13276 + _13180 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8774))
                            call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18339 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18339]
                                continue 
                            _19407 = mem[64]
                            mem[mem[64]] = 32
                            _19641 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19641:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19407 + (32 * _19641) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19086 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_19086]
                            continue 
                        _19897 = mem[64]
                        mem[mem[64]] = 32
                        _20110 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20110:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19897 + (32 * _20110) + -mem[64] + 64
                    _17231 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17231] = return_data.size
                    mem[_17231 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18341 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18341]
                            continue 
                        _19408 = mem[64]
                        mem[mem[64]] = 32
                        _19642 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19642:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19408 + (32 * _19642) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17231 + 32] == bool(mem[_17231 + 32])
                    if not mem[_17231 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8774))
                    call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19088 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_19088]
                        continue 
                    _19898 = mem[64]
                    mem[mem[64]] = 32
                    _20112 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20112:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19898 + (32 * _20112) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_12976 + 32] == bool(mem[_12976 + 32])
                if not mem[_12976 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                _13378 = mem[64]
                mem[mem[64] + 36] = address(_8774)
                mem[mem[64] + 68] = s
                _13450 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13450 + 32] = mem[_13450 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13504 = mem[_13450]
                t = 0
                while t < _13504:
                    mem[t + _13378 + 100] = mem[_13450 + t + 32]
                    t = t + 32
                    continue 
                if ceil32(_13504) <= _13504:
                    call address(_8745).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13504 + _13378 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8774))
                            call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18193 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18193]
                                continue 
                            _19323 = mem[64]
                            mem[mem[64]] = 32
                            _19537 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19537:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19323 + (32 * _19537) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18962 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18962]
                            continue 
                        _19793 = mem[64]
                        mem[mem[64]] = 32
                        _19986 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19986:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19793 + (32 * _19986) + -mem[64] + 64
                    _17163 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17163] = return_data.size
                    mem[_17163 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18195 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18195]
                            continue 
                        _19324 = mem[64]
                        mem[mem[64]] = 32
                        _19538 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19538:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19324 + (32 * _19538) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17163 + 32] == bool(mem[_17163 + 32])
                    if not mem[_17163 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8774))
                    call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18964 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_18964]
                        continue 
                    _19794 = mem[64]
                    mem[mem[64]] = 32
                    _19988 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19988:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19794 + (32 * _19988) + -mem[64] + 64
                mem[_13378 + _13504 + 100] = 0
                call address(_8745).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13504 + _13378 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18345 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18345]
                            continue 
                        _19411 = mem[64]
                        mem[mem[64]] = 32
                        _19643 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19643:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19411 + (32 * _19643) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8774))
                    call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19090 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_19090]
                        continue 
                    _19899 = mem[64]
                    mem[mem[64]] = 32
                    _20114 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20114:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19899 + (32 * _20114) + -mem[64] + 64
                _17232 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17232] = return_data.size
                mem[_17232 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8774))
                    call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18347 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_18347]
                        continue 
                    _19412 = mem[64]
                    mem[mem[64]] = 32
                    _19644 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19644:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19412 + (32 * _19644) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17232 + 32] == bool(mem[_17232 + 32])
                if not mem[_17232 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8745)
                mem[mem[64] + 36] = address(_8750)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8774))
                call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8745), address(_8750), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19092 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4409] - 2:
                    idx = idx + 1
                    s = mem[_19092]
                    continue 
                _19900 = mem[64]
                mem[mem[64]] = 32
                _20116 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20116:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19900 + (32 * _20116) + -mem[64] + 64
            mem[_8830 + _8860 + 100] = 0
            call address(_8745).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _8860 + _8830 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    _13195 = mem[64]
                    mem[mem[64] + 36] = address(_8774)
                    mem[mem[64] + 68] = s
                    _13277 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13277 + 32] = mem[_13277 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13335 = mem[_13277]
                    t = 0
                    while t < _13335:
                        mem[t + _13195 + 100] = mem[_13277 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_13335) <= _13335:
                        call address(_8745).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13335 + _13195 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8745)
                                mem[mem[64] + 36] = address(_8750)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = this.address
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8774))
                                call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8745), address(_8750), s, 0, address(this.address), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18197 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4409] - 2:
                                    idx = idx + 1
                                    s = mem[_18197]
                                    continue 
                                _19325 = mem[64]
                                mem[mem[64]] = 32
                                _19541 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19541:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19325 + (32 * _19541) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8774))
                            call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18966 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18966]
                                continue 
                            _19797 = mem[64]
                            mem[mem[64]] = 32
                            _19990 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19990:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19797 + (32 * _19990) + -mem[64] + 64
                        _17165 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17165] = return_data.size
                        mem[_17165 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8774))
                            call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18199 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18199]
                                continue 
                            _19326 = mem[64]
                            mem[mem[64]] = 32
                            _19542 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19542:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19326 + (32 * _19542) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17165 + 32] == bool(mem[_17165 + 32])
                        if not mem[_17165 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18968 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18968]
                            continue 
                        _19798 = mem[64]
                        mem[mem[64]] = 32
                        _19992 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19992:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19798 + (32 * _19992) + -mem[64] + 64
                    mem[_13195 + _13335 + 100] = 0
                    call address(_8745).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13335 + _13195 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8774))
                            call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18351 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18351]
                                continue 
                            _19415 = mem[64]
                            mem[mem[64]] = 32
                            _19645 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19645:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19415 + (32 * _19645) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19094 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_19094]
                            continue 
                        _19901 = mem[64]
                        mem[mem[64]] = 32
                        _20118 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20118:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19901 + (32 * _20118) + -mem[64] + 64
                    _17233 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17233] = return_data.size
                    mem[_17233 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18353 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18353]
                            continue 
                        _19416 = mem[64]
                        mem[mem[64]] = 32
                        _19646 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19646:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19416 + (32 * _19646) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17233 + 32] == bool(mem[_17233 + 32])
                    if not mem[_17233 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8774))
                    call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19096 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_19096]
                        continue 
                    _19902 = mem[64]
                    mem[mem[64]] = 32
                    _20120 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20120:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19902 + (32 * _20120) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                _13414 = mem[64]
                mem[mem[64] + 36] = address(_8774)
                mem[mem[64] + 68] = s
                _13506 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13506 + 32] = mem[_13506 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13565 = mem[_13506]
                t = 0
                while t < _13565:
                    mem[t + _13414 + 100] = mem[_13506 + t + 32]
                    t = t + 32
                    continue 
                if ceil32(_13565) <= _13565:
                    call address(_8745).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13565 + _13414 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8774))
                            call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18201 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18201]
                                continue 
                            _19327 = mem[64]
                            mem[mem[64]] = 32
                            _19545 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19545:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19327 + (32 * _19545) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18970 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18970]
                            continue 
                        _19801 = mem[64]
                        mem[mem[64]] = 32
                        _19994 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19994:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19801 + (32 * _19994) + -mem[64] + 64
                    _17167 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17167] = return_data.size
                    mem[_17167 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18203 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18203]
                            continue 
                        _19328 = mem[64]
                        mem[mem[64]] = 32
                        _19546 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19546:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19328 + (32 * _19546) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17167 + 32] == bool(mem[_17167 + 32])
                    if not mem[_17167 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8774))
                    call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18972 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_18972]
                        continue 
                    _19802 = mem[64]
                    mem[mem[64]] = 32
                    _19996 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19996:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19802 + (32 * _19996) + -mem[64] + 64
                mem[_13414 + _13565 + 100] = 0
                call address(_8745).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13565 + _13414 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18357 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18357]
                            continue 
                        _19419 = mem[64]
                        mem[mem[64]] = 32
                        _19647 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19647:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19419 + (32 * _19647) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8774))
                    call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19098 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_19098]
                        continue 
                    _19903 = mem[64]
                    mem[mem[64]] = 32
                    _20122 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20122:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19903 + (32 * _20122) + -mem[64] + 64
                _17234 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17234] = return_data.size
                mem[_17234 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8774))
                    call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18359 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_18359]
                        continue 
                    _19420 = mem[64]
                    mem[mem[64]] = 32
                    _19648 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19648:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19420 + (32 * _19648) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17234 + 32] == bool(mem[_17234 + 32])
                if not mem[_17234 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8745)
                mem[mem[64] + 36] = address(_8750)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8774))
                call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8745), address(_8750), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19100 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4409] - 2:
                    idx = idx + 1
                    s = mem[_19100]
                    continue 
                _19904 = mem[64]
                mem[mem[64]] = 32
                _20124 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20124:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19904 + (32 * _20124) + -mem[64] + 64
            _12992 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_12992] = return_data.size
            mem[_12992 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                _13196 = mem[64]
                mem[mem[64] + 36] = address(_8774)
                mem[mem[64] + 68] = s
                _13281 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13281 + 32] = mem[_13281 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13336 = mem[_13281]
                t = 0
                while t < _13336:
                    mem[t + _13196 + 100] = mem[_13281 + t + 32]
                    t = t + 32
                    continue 
                if ceil32(_13336) <= _13336:
                    call address(_8745).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13336 + _13196 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8745)
                            mem[mem[64] + 36] = address(_8750)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8774))
                            call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8745), address(_8750), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18205 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4409] - 2:
                                idx = idx + 1
                                s = mem[_18205]
                                continue 
                            _19329 = mem[64]
                            mem[mem[64]] = 32
                            _19549 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19549:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19329 + (32 * _19549) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18974 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18974]
                            continue 
                        _19805 = mem[64]
                        mem[mem[64]] = 32
                        _19998 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19998:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19805 + (32 * _19998) + -mem[64] + 64
                    _17169 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17169] = return_data.size
                    mem[_17169 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18207 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18207]
                            continue 
                        _19330 = mem[64]
                        mem[mem[64]] = 32
                        _19550 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19550:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19330 + (32 * _19550) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17169 + 32] == bool(mem[_17169 + 32])
                    if not mem[_17169 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8774))
                    call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18976 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_18976]
                        continue 
                    _19806 = mem[64]
                    mem[mem[64]] = 32
                    _20000 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20000:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19806 + (32 * _20000) + -mem[64] + 64
                mem[_13196 + _13336 + 100] = 0
                call address(_8745).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13336 + _13196 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18363 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18363]
                            continue 
                        _19423 = mem[64]
                        mem[mem[64]] = 32
                        _19649 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19649:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19423 + (32 * _19649) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8774))
                    call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19102 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_19102]
                        continue 
                    _19905 = mem[64]
                    mem[mem[64]] = 32
                    _20126 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20126:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19905 + (32 * _20126) + -mem[64] + 64
                _17235 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17235] = return_data.size
                mem[_17235 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8774))
                    call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18365 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_18365]
                        continue 
                    _19424 = mem[64]
                    mem[mem[64]] = 32
                    _19650 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19650:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19424 + (32 * _19650) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17235 + 32] == bool(mem[_17235 + 32])
                if not mem[_17235 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8745)
                mem[mem[64] + 36] = address(_8750)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8774))
                call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8745), address(_8750), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19104 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4409] - 2:
                    idx = idx + 1
                    s = mem[_19104]
                    continue 
                _19906 = mem[64]
                mem[mem[64]] = 32
                _20128 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20128:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19906 + (32 * _20128) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_12992 + 32] == bool(mem[_12992 + 32])
            if not mem[_12992 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            _13416 = mem[64]
            mem[mem[64] + 36] = address(_8774)
            mem[mem[64] + 68] = s
            _13510 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_13510 + 32] = mem[_13510 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
            _13568 = mem[_13510]
            t = 0
            while t < _13568:
                mem[t + _13416 + 100] = mem[_13510 + t + 32]
                t = t + 32
                continue 
            if ceil32(_13568) <= _13568:
                call address(_8745).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13568 + _13416 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8745)
                        mem[mem[64] + 36] = address(_8750)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8774))
                        call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8745), address(_8750), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18209 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4409] - 2:
                            idx = idx + 1
                            s = mem[_18209]
                            continue 
                        _19331 = mem[64]
                        mem[mem[64]] = 32
                        _19553 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19553:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19331 + (32 * _19553) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8774))
                    call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18978 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_18978]
                        continue 
                    _19809 = mem[64]
                    mem[mem[64]] = 32
                    _20002 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20002:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19809 + (32 * _20002) + -mem[64] + 64
                _17171 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17171] = return_data.size
                mem[_17171 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8774))
                    call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18211 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_18211]
                        continue 
                    _19332 = mem[64]
                    mem[mem[64]] = 32
                    _19554 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19554:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19332 + (32 * _19554) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17171 + 32] == bool(mem[_17171 + 32])
                if not mem[_17171 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8745)
                mem[mem[64] + 36] = address(_8750)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8774))
                call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8745), address(_8750), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _18980 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4409] - 2:
                    idx = idx + 1
                    s = mem[_18980]
                    continue 
                _19810 = mem[64]
                mem[mem[64]] = 32
                _20004 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20004:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19810 + (32 * _20004) + -mem[64] + 64
            mem[_13416 + _13568 + 100] = 0
            call address(_8745).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _13568 + _13416 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    mem[mem[64] + 4] = address(_8745)
                    mem[mem[64] + 36] = address(_8750)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8774))
                    call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8745), address(_8750), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18369 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4409] - 2:
                        idx = idx + 1
                        s = mem[_18369]
                        continue 
                    _19427 = mem[64]
                    mem[mem[64]] = 32
                    _19651 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19651:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19427 + (32 * _19651) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8745)
                mem[mem[64] + 36] = address(_8750)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8774))
                call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8745), address(_8750), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19106 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4409] - 2:
                    idx = idx + 1
                    s = mem[_19106]
                    continue 
                _19907 = mem[64]
                mem[mem[64]] = 32
                _20130 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20130:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19907 + (32 * _20130) + -mem[64] + 64
            _17236 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_17236] = return_data.size
            mem[_17236 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                mem[mem[64] + 4] = address(_8745)
                mem[mem[64] + 36] = address(_8750)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8774))
                call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8745), address(_8750), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _18371 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4409] - 2:
                    idx = idx + 1
                    s = mem[_18371]
                    continue 
                _19428 = mem[64]
                mem[mem[64]] = 32
                _19652 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _19652:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19428 + (32 * _19652) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_17236 + 32] == bool(mem[_17236 + 32])
            if not mem[_17236 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            mem[mem[64] + 4] = address(_8745)
            mem[mem[64] + 36] = address(_8750)
            mem[mem[64] + 68] = s
            mem[mem[64] + 100] = 0
            mem[mem[64] + 132] = this.address
            mem[mem[64] + 164] = arg4
            require ext_code.size(address(_8774))
            call address(_8774).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                 gas gas_remaining wei
                args address(_8745), address(_8750), s, 0, address(this.address), arg4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19108 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if idx != mem[_4409] - 2:
                idx = idx + 1
                s = mem[_19108]
                continue 
            _19908 = mem[64]
            mem[mem[64]] = 32
            _20132 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _20132:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _19908 + (32 * _20132) + -mem[64] + 64
        mem[mem[64]] = 32
        _8755 = mem[(32 * arg2.length) + 128]
        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
        mem[mem[64] + 64 len 32 * _8755] = mem[(32 * arg2.length) + 160 len 32 * _8755]
        return 32, mem[mem[64] + 32 len (32 * _8755) + 32]
    mem[(32 * arg2.length) + 160 len 32 * arg2.length] = call.data[calldata.size len 32 * arg2.length]
    require 0 < arg2.length
    mem[(32 * arg2.length) + 160] = msg.value
    idx = 0
    while idx < arg2.length - 1:
        require idx < mem[96]
        require idx + 1 < mem[96]
        _4385 = mem[(32 * idx + 1) + 128]
        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
        mem[mem[64] + 36] = address(_4385)
        require ext_code.size(factoryAddress)
        staticcall factoryAddress.0x901754d7 with:
                gas gas_remaining wei
               args mem[mem[64] + 4], address(_4385)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _4406 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _4414 = mem[_4406]
        require mem[_4406] == mem[_4406 + 12 len 20]
        if not mem[_4406 + 12 len 20]:
            require idx < mem[(32 * arg2.length) + 128]
            require idx + 1 < mem[(32 * arg2.length) + 128]
            mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
        else:
            require idx < mem[96]
            _4441 = mem[(32 * idx) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            require ext_code.size(address(_4414))
            staticcall address(_4414).getBalanceForAddition(address rg1) with:
                    gas gas_remaining wei
                   args address(_4441)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4454 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4462 = mem[_4454]
            require idx + 1 < mem[96]
            _4475 = mem[(32 * idx + 1) + 128]
            mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
            require ext_code.size(address(_4414))
            staticcall address(_4414).getBalanceForRemoval(address rg1) with:
                    gas gas_remaining wei
                   args address(_4475)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _4484 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _4490 = mem[_4484]
            require idx < mem[(32 * arg2.length) + 128]
            _4498 = mem[(32 * idx) + (32 * arg2.length) + 160]
            if not mem[(32 * idx) + (32 * arg2.length) + 160]:
                require idx + 1 < mem[(32 * arg2.length) + 128]
                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
            else:
                if not _4462:
                    require idx + 1 < mem[(32 * arg2.length) + 128]
                    mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                else:
                    if not mem[_4484]:
                        require idx + 1 < mem[(32 * arg2.length) + 128]
                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                    else:
                        require ext_code.size(factoryAddress)
                        staticcall factoryAddress.0xddca3f43 with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _4534 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if mem[_4534] > 10^18:
                            revert with 0, 'SafeMath: subtraction overflow'
                        if not _4498:
                            if not _4462:
                                require idx + 1 < mem[(32 * arg2.length) + 128]
                                mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                            else:
                                if 1000 * _4462 / _4462 != 1000:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if 1000 * _4462 < 1000 * _4462:
                                    revert with 0, 'SafeMath: addition overflow'
                                if not 1000 * _4462:
                                    require idx + 1 < mem[(32 * arg2.length) + 128]
                                    mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                else:
                                    require 1000 * _4462
                                    require idx + 1 < mem[(32 * arg2.length) + 128]
                                    mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / 1000 * _4462
                        else:
                            if -mem[_4534] + 10^18 / 10^15 * _4498 / _4498 != -mem[_4534] + 10^18 / 10^15:
                                revert with 0, 'SafeMath: multiplication overflow'
                            if not -mem[_4534] + 10^18 / 10^15 * _4498:
                                if not _4462:
                                    if -mem[_4534] + 10^18 / 10^15 * _4498 < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not -mem[_4534] + 10^18 / 10^15 * _4498:
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                    else:
                                        require -mem[_4534] + 10^18 / 10^15 * _4498
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / -mem[_4534] + 10^18 / 10^15 * _4498
                                else:
                                    if 1000 * _4462 / _4462 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if (-mem[_4534] + 10^18 / 10^15 * _4498) + (1000 * _4462) < 1000 * _4462:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not (-mem[_4534] + 10^18 / 10^15 * _4498) + (1000 * _4462):
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                    else:
                                        require (-mem[_4534] + 10^18 / 10^15 * _4498) + (1000 * _4462)
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0 / (-mem[_4534] + 10^18 / 10^15 * _4498) + (1000 * _4462)
                            else:
                                if _4490 * -mem[_4534] + 10^18 / 10^15 * _4498 / -mem[_4534] + 10^18 / 10^15 * _4498 != _4490:
                                    revert with 0, 'SafeMath: multiplication overflow'
                                if not _4462:
                                    if -mem[_4534] + 10^18 / 10^15 * _4498 < 0:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not -mem[_4534] + 10^18 / 10^15 * _4498:
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                    else:
                                        require -mem[_4534] + 10^18 / 10^15 * _4498
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = _4490 * -mem[_4534] + 10^18 / 10^15 * _4498 / -mem[_4534] + 10^18 / 10^15 * _4498
                                else:
                                    if 1000 * _4462 / _4462 != 1000:
                                        revert with 0, 'SafeMath: multiplication overflow'
                                    if (-mem[_4534] + 10^18 / 10^15 * _4498) + (1000 * _4462) < 1000 * _4462:
                                        revert with 0, 'SafeMath: addition overflow'
                                    if not (-mem[_4534] + 10^18 / 10^15 * _4498) + (1000 * _4462):
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = 0
                                    else:
                                        require (-mem[_4534] + 10^18 / 10^15 * _4498) + (1000 * _4462)
                                        require idx + 1 < mem[(32 * arg2.length) + 128]
                                        mem[(32 * idx + 1) + (32 * arg2.length) + 160] = _4490 * -mem[_4534] + 10^18 / 10^15 * _4498 / (-mem[_4534] + 10^18 / 10^15 * _4498) + (1000 * _4462)
        idx = idx + 1
        continue 
    require mem[(32 * arg2.length) + 128] - 1 < mem[(32 * arg2.length) + 128]
    if mem[(32 * mem[(32 * arg2.length) + 128] - 1) + (32 * arg2.length) + 160] < arg1:
        revert with 0, 'EmiRouter:INSUFFICIENT_OUTPUT_AMOUNT'
    require mem[(32 * arg2.length) + 128]
    _4403 = mem[(32 * arg2.length) + 160]
    mem[mem[64]] = 0xd0e30db000000000000000000000000000000000000000000000000000000000
    require ext_code.size(address(WETHAddress))
    call address(WETHAddress).0xd0e30db0 with:
       value _4403 wei
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _4412 = mem[64]
    mem[64] = mem[64] + (32 * arg2.length) + 32
    mem[_4412] = arg2.length
    mem[_4412 + 32 len 32 * arg2.length] = call.data[arg2 + 36 len 32 * arg2.length]
    mem[_4412 + (32 * arg2.length) + 32] = 0
    require mem[(32 * arg2.length) + 128]
    idx = 0
    s = mem[(32 * arg2.length) + 160]
    while idx < arg2.length - 1:
        if mem[_4412] < 2:
            idx = idx + 1
            s = s
            continue 
        require idx < mem[_4412]
        _8747 = mem[(32 * idx) + _4412 + 32]
        require idx + 1 < mem[_4412]
        _8753 = mem[(32 * idx + 1) + _4412 + 32]
        mem[mem[64] + 4] = mem[(32 * idx) + _4412 + 44 len 20]
        mem[mem[64] + 36] = address(_8753)
        require ext_code.size(factoryAddress)
        staticcall factoryAddress.0x901754d7 with:
                gas gas_remaining wei
               args mem[mem[64] + 4], address(_8753)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        if idx == mem[_4412] - 2:
            _8771 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _8775 = mem[_8771]
            require mem[_8771] == mem[_8771 + 12 len 20]
            mem[mem[64] + 36] = address(_8753)
            mem[mem[64] + 68] = s
            require ext_code.size(address(_8775))
            staticcall address(_8775).getReturn(address rg1, address rg2, uint256 rg3) with:
                    gas gas_remaining wei
                   args address(_8747), address(_8753), s
            mem[mem[64] len 64] = ext_call.return_data[0 len 64]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8787 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 64
            if not mem[_8787 + 32]:
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = 0
                    continue 
                _8813 = mem[64]
                mem[mem[64]] = 32
                _8821 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _8821:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _8813 + (32 * _8821) + -mem[64] + 64
            mem[mem[64] + 4] = this.address
            mem[mem[64] + 36] = address(_8775)
            require ext_code.size(address(_8747))
            staticcall address(_8747).0xdd62ed3e with:
                    gas gas_remaining wei
                   args address(this.address), address(_8775)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8814 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_8814] <= 0:
                _8835 = mem[64]
                mem[mem[64] + 36] = address(_8775)
                mem[mem[64] + 68] = s
                _8861 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_8861 + 32] = mem[_8861 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _8871 = mem[_8861]
                t = 0
                while t < _8871:
                    mem[t + _8835 + 100] = mem[_8861 + t + 32]
                    t = t + 32
                    continue 
                if ceil32(_8871) <= _8871:
                    call address(_8747).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _8871 + _8835 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8775))
                            call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _13229 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_13229]
                                continue 
                            _13669 = mem[64]
                            mem[mem[64]] = 32
                            _13873 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _13873:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _13669 + (32 * _13873) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13454 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_13454]
                            continue 
                        _14213 = mem[64]
                        mem[mem[64]] = 32
                        _14494 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _14494:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _14213 + (32 * _14494) + -mem[64] + 64
                    _12980 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_12980] = return_data.size
                    mem[_12980 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13231 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_13231]
                            continue 
                        _13670 = mem[64]
                        mem[mem[64]] = 32
                        _13874 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _13874:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _13670 + (32 * _13874) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_12980 + 32] == bool(mem[_12980 + 32])
                    if not mem[_12980 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8775))
                    call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13456 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_13456]
                        continue 
                    _14214 = mem[64]
                    mem[mem[64]] = 32
                    _14496 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _14496:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _14214 + (32 * _14496) + -mem[64] + 64
                mem[_8835 + _8871 + 100] = 0
                call address(_8747).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _8871 + _8835 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13287 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_13287]
                            continue 
                        _13763 = mem[64]
                        mem[mem[64]] = 32
                        _13997 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _13997:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _13763 + (32 * _13997) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8775))
                    call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13514 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_13514]
                        continue 
                    _14337 = mem[64]
                    mem[mem[64]] = 32
                    _14686 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _14686:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _14337 + (32 * _14686) + -mem[64] + 64
                _12993 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_12993] = return_data.size
                mem[_12993 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8775))
                    call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13289 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_13289]
                        continue 
                    _13764 = mem[64]
                    mem[mem[64]] = 32
                    _13998 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _13998:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _13764 + (32 * _13998) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_12993 + 32] == bool(mem[_12993 + 32])
                if not mem[_12993 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = arg3
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8775))
                call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(arg3), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13516 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_13516]
                    continue 
                _14338 = mem[64]
                mem[mem[64]] = 32
                _14688 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _14688:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _14338 + (32 * _14688) + -mem[64] + 64
            _8831 = mem[64]
            mem[mem[64] + 36] = address(_8775)
            mem[mem[64] + 68] = 0
            _8846 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_8846 + 32] = mem[_8846 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
            _8864 = mem[_8846]
            t = 0
            while t < _8864:
                mem[t + _8831 + 100] = mem[_8846 + t + 32]
                t = t + 32
                continue 
            if ceil32(_8864) <= _8864:
                call address(_8747).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _8864 + _8831 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        _13183 = mem[64]
                        mem[mem[64] + 36] = address(_8775)
                        mem[mem[64] + 68] = s
                        _13233 = mem[64]
                        mem[mem[64]] = 68
                        mem[64] = mem[64] + 100
                        mem[_13233 + 32] = mem[_13233 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                        _13291 = mem[_13233]
                        t = 0
                        while t < _13291:
                            mem[t + _13183 + 100] = mem[_13233 + t + 32]
                            t = t + 32
                            continue 
                        if ceil32(_13291) <= _13291:
                            call address(_8747).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _13291 + _13183 + -mem[64] + 96]
                            if not return_data.size:
                                if not ext_call.success:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                if not mem[96]:
                                    mem[mem[64] + 4] = address(_8747)
                                    mem[mem[64] + 36] = address(_8753)
                                    mem[mem[64] + 68] = s
                                    mem[mem[64] + 100] = 0
                                    mem[mem[64] + 132] = arg3
                                    mem[mem[64] + 164] = arg4
                                    require ext_code.size(address(_8775))
                                    call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                         gas gas_remaining wei
                                        args address(_8747), address(_8753), s, 0, address(arg3), arg4
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _18213 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    if idx != mem[_4412] - 2:
                                        idx = idx + 1
                                        s = mem[_18213]
                                        continue 
                                    _19333 = mem[64]
                                    mem[mem[64]] = 32
                                    _19557 = mem[(32 * arg2.length) + 128]
                                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                    idx = 0
                                    s = (32 * arg2.length) + 160
                                    t = mem[64] + 64
                                    while idx < _19557:
                                        mem[t] = mem[s]
                                        idx = idx + 1
                                        s = s + 32
                                        t = t + 32
                                        continue 
                                    return memory
                                      from mem[64]
                                       len _19333 + (32 * _19557) + -mem[64] + 64
                                require mem[96] >= 32
                                require mem[128] == bool(mem[128])
                                if not mem[128]:
                                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                                mem[mem[64] + 4] = address(_8747)
                                mem[mem[64] + 36] = address(_8753)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8775))
                                call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8747), address(_8753), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18982 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4412] - 2:
                                    idx = idx + 1
                                    s = mem[_18982]
                                    continue 
                                _19813 = mem[64]
                                mem[mem[64]] = 32
                                _20006 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _20006:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19813 + (32 * _20006) + -mem[64] + 64
                            _17181 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                            mem[_17181] = return_data.size
                            mem[_17181 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not return_data.size:
                                mem[mem[64] + 4] = address(_8747)
                                mem[mem[64] + 36] = address(_8753)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8775))
                                call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8747), address(_8753), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18215 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4412] - 2:
                                    idx = idx + 1
                                    s = mem[_18215]
                                    continue 
                                _19334 = mem[64]
                                mem[mem[64]] = 32
                                _19558 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19558:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19334 + (32 * _19558) + -mem[64] + 64
                            require return_data.size >= 32
                            require mem[_17181 + 32] == bool(mem[_17181 + 32])
                            if not mem[_17181 + 32]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8775))
                            call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18984 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_18984]
                                continue 
                            _19814 = mem[64]
                            mem[mem[64]] = 32
                            _20008 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20008:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19814 + (32 * _20008) + -mem[64] + 64
                        mem[_13183 + _13291 + 100] = 0
                        call address(_8747).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13291 + _13183 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8747)
                                mem[mem[64] + 36] = address(_8753)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8775))
                                call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8747), address(_8753), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18375 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4412] - 2:
                                    idx = idx + 1
                                    s = mem[_18375]
                                    continue 
                                _19431 = mem[64]
                                mem[mem[64]] = 32
                                _19653 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19653:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19431 + (32 * _19653) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8775))
                            call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19110 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_19110]
                                continue 
                            _19909 = mem[64]
                            mem[mem[64]] = 32
                            _20134 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20134:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19909 + (32 * _20134) + -mem[64] + 64
                        _17237 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17237] = return_data.size
                        mem[_17237 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8775))
                            call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18377 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_18377]
                                continue 
                            _19432 = mem[64]
                            mem[mem[64]] = 32
                            _19654 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19654:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19432 + (32 * _19654) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17237 + 32] == bool(mem[_17237 + 32])
                        if not mem[_17237 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19112 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_19112]
                            continue 
                        _19910 = mem[64]
                        mem[mem[64]] = 32
                        _20136 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20136:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19910 + (32 * _20136) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    _13388 = mem[64]
                    mem[mem[64] + 36] = address(_8775)
                    mem[mem[64] + 68] = s
                    _13458 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13458 + 32] = mem[_13458 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13519 = mem[_13458]
                    t = 0
                    while t < _13519:
                        mem[t + _13388 + 100] = mem[_13458 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_13519) <= _13519:
                        call address(_8747).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13519 + _13388 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8747)
                                mem[mem[64] + 36] = address(_8753)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8775))
                                call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8747), address(_8753), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18217 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4412] - 2:
                                    idx = idx + 1
                                    s = mem[_18217]
                                    continue 
                                _19335 = mem[64]
                                mem[mem[64]] = 32
                                _19561 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19561:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19335 + (32 * _19561) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8775))
                            call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18986 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_18986]
                                continue 
                            _19817 = mem[64]
                            mem[mem[64]] = 32
                            _20010 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20010:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19817 + (32 * _20010) + -mem[64] + 64
                        _17183 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17183] = return_data.size
                        mem[_17183 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8775))
                            call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18219 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_18219]
                                continue 
                            _19336 = mem[64]
                            mem[mem[64]] = 32
                            _19562 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19562:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19336 + (32 * _19562) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17183 + 32] == bool(mem[_17183 + 32])
                        if not mem[_17183 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18988 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18988]
                            continue 
                        _19818 = mem[64]
                        mem[mem[64]] = 32
                        _20012 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20012:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19818 + (32 * _20012) + -mem[64] + 64
                    mem[_13388 + _13519 + 100] = 0
                    call address(_8747).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13519 + _13388 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8775))
                            call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18381 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_18381]
                                continue 
                            _19435 = mem[64]
                            mem[mem[64]] = 32
                            _19655 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19655:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19435 + (32 * _19655) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19114 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_19114]
                            continue 
                        _19911 = mem[64]
                        mem[mem[64]] = 32
                        _20138 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20138:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19911 + (32 * _20138) + -mem[64] + 64
                    _17238 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17238] = return_data.size
                    mem[_17238 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18383 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18383]
                            continue 
                        _19436 = mem[64]
                        mem[mem[64]] = 32
                        _19656 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19656:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19436 + (32 * _19656) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17238 + 32] == bool(mem[_17238 + 32])
                    if not mem[_17238 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8775))
                    call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19116 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_19116]
                        continue 
                    _19912 = mem[64]
                    mem[mem[64]] = 32
                    _20140 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20140:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19912 + (32 * _20140) + -mem[64] + 64
                _12982 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_12982] = return_data.size
                mem[_12982 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    _13184 = mem[64]
                    mem[mem[64] + 36] = address(_8775)
                    mem[mem[64] + 68] = s
                    _13237 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13237 + 32] = mem[_13237 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13292 = mem[_13237]
                    t = 0
                    while t < _13292:
                        mem[t + _13184 + 100] = mem[_13237 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_13292) <= _13292:
                        call address(_8747).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13292 + _13184 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8747)
                                mem[mem[64] + 36] = address(_8753)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8775))
                                call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8747), address(_8753), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18221 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4412] - 2:
                                    idx = idx + 1
                                    s = mem[_18221]
                                    continue 
                                _19337 = mem[64]
                                mem[mem[64]] = 32
                                _19565 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19565:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19337 + (32 * _19565) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8775))
                            call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18990 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_18990]
                                continue 
                            _19821 = mem[64]
                            mem[mem[64]] = 32
                            _20014 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20014:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19821 + (32 * _20014) + -mem[64] + 64
                        _17185 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17185] = return_data.size
                        mem[_17185 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8775))
                            call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18223 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_18223]
                                continue 
                            _19338 = mem[64]
                            mem[mem[64]] = 32
                            _19566 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19566:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19338 + (32 * _19566) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17185 + 32] == bool(mem[_17185 + 32])
                        if not mem[_17185 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18992 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18992]
                            continue 
                        _19822 = mem[64]
                        mem[mem[64]] = 32
                        _20016 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20016:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19822 + (32 * _20016) + -mem[64] + 64
                    mem[_13184 + _13292 + 100] = 0
                    call address(_8747).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13292 + _13184 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8775))
                            call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18387 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_18387]
                                continue 
                            _19439 = mem[64]
                            mem[mem[64]] = 32
                            _19657 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19657:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19439 + (32 * _19657) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19118 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_19118]
                            continue 
                        _19913 = mem[64]
                        mem[mem[64]] = 32
                        _20142 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20142:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19913 + (32 * _20142) + -mem[64] + 64
                    _17239 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17239] = return_data.size
                    mem[_17239 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18389 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18389]
                            continue 
                        _19440 = mem[64]
                        mem[mem[64]] = 32
                        _19658 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19658:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19440 + (32 * _19658) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17239 + 32] == bool(mem[_17239 + 32])
                    if not mem[_17239 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8775))
                    call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19120 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_19120]
                        continue 
                    _19914 = mem[64]
                    mem[mem[64]] = 32
                    _20144 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20144:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19914 + (32 * _20144) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_12982 + 32] == bool(mem[_12982 + 32])
                if not mem[_12982 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                _13390 = mem[64]
                mem[mem[64] + 36] = address(_8775)
                mem[mem[64] + 68] = s
                _13462 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13462 + 32] = mem[_13462 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13522 = mem[_13462]
                t = 0
                while t < _13522:
                    mem[t + _13390 + 100] = mem[_13462 + t + 32]
                    t = t + 32
                    continue 
                if ceil32(_13522) <= _13522:
                    call address(_8747).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13522 + _13390 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8775))
                            call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18225 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_18225]
                                continue 
                            _19339 = mem[64]
                            mem[mem[64]] = 32
                            _19569 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19569:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19339 + (32 * _19569) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18994 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18994]
                            continue 
                        _19825 = mem[64]
                        mem[mem[64]] = 32
                        _20018 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20018:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19825 + (32 * _20018) + -mem[64] + 64
                    _17187 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17187] = return_data.size
                    mem[_17187 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18227 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18227]
                            continue 
                        _19340 = mem[64]
                        mem[mem[64]] = 32
                        _19570 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19570:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19340 + (32 * _19570) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17187 + 32] == bool(mem[_17187 + 32])
                    if not mem[_17187 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8775))
                    call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18996 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_18996]
                        continue 
                    _19826 = mem[64]
                    mem[mem[64]] = 32
                    _20020 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20020:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19826 + (32 * _20020) + -mem[64] + 64
                mem[_13390 + _13522 + 100] = 0
                call address(_8747).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13522 + _13390 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18393 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18393]
                            continue 
                        _19443 = mem[64]
                        mem[mem[64]] = 32
                        _19659 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19659:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19443 + (32 * _19659) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8775))
                    call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19122 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_19122]
                        continue 
                    _19915 = mem[64]
                    mem[mem[64]] = 32
                    _20146 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20146:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19915 + (32 * _20146) + -mem[64] + 64
                _17240 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17240] = return_data.size
                mem[_17240 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8775))
                    call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18395 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_18395]
                        continue 
                    _19444 = mem[64]
                    mem[mem[64]] = 32
                    _19660 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19660:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19444 + (32 * _19660) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17240 + 32] == bool(mem[_17240 + 32])
                if not mem[_17240 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = arg3
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8775))
                call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(arg3), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19124 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_19124]
                    continue 
                _19916 = mem[64]
                mem[mem[64]] = 32
                _20148 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20148:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19916 + (32 * _20148) + -mem[64] + 64
            mem[_8831 + _8864 + 100] = 0
            call address(_8747).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _8864 + _8831 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    _13199 = mem[64]
                    mem[mem[64] + 36] = address(_8775)
                    mem[mem[64] + 68] = s
                    _13293 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13293 + 32] = mem[_13293 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13345 = mem[_13293]
                    t = 0
                    while t < _13345:
                        mem[t + _13199 + 100] = mem[_13293 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_13345) <= _13345:
                        call address(_8747).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13345 + _13199 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8747)
                                mem[mem[64] + 36] = address(_8753)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = arg3
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8775))
                                call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8747), address(_8753), s, 0, address(arg3), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18229 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4412] - 2:
                                    idx = idx + 1
                                    s = mem[_18229]
                                    continue 
                                _19341 = mem[64]
                                mem[mem[64]] = 32
                                _19573 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19573:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19341 + (32 * _19573) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8775))
                            call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18998 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_18998]
                                continue 
                            _19829 = mem[64]
                            mem[mem[64]] = 32
                            _20022 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20022:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19829 + (32 * _20022) + -mem[64] + 64
                        _17189 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17189] = return_data.size
                        mem[_17189 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8775))
                            call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18231 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_18231]
                                continue 
                            _19342 = mem[64]
                            mem[mem[64]] = 32
                            _19574 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19574:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19342 + (32 * _19574) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17189 + 32] == bool(mem[_17189 + 32])
                        if not mem[_17189 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19000 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_19000]
                            continue 
                        _19830 = mem[64]
                        mem[mem[64]] = 32
                        _20024 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20024:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19830 + (32 * _20024) + -mem[64] + 64
                    mem[_13199 + _13345 + 100] = 0
                    call address(_8747).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13345 + _13199 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8775))
                            call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18399 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_18399]
                                continue 
                            _19447 = mem[64]
                            mem[mem[64]] = 32
                            _19661 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19661:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19447 + (32 * _19661) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19126 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_19126]
                            continue 
                        _19917 = mem[64]
                        mem[mem[64]] = 32
                        _20150 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20150:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19917 + (32 * _20150) + -mem[64] + 64
                    _17241 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17241] = return_data.size
                    mem[_17241 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18401 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18401]
                            continue 
                        _19448 = mem[64]
                        mem[mem[64]] = 32
                        _19662 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19662:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19448 + (32 * _19662) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17241 + 32] == bool(mem[_17241 + 32])
                    if not mem[_17241 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8775))
                    call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19128 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_19128]
                        continue 
                    _19918 = mem[64]
                    mem[mem[64]] = 32
                    _20152 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20152:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19918 + (32 * _20152) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                _13420 = mem[64]
                mem[mem[64] + 36] = address(_8775)
                mem[mem[64] + 68] = s
                _13524 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13524 + 32] = mem[_13524 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13575 = mem[_13524]
                t = 0
                while t < _13575:
                    mem[t + _13420 + 100] = mem[_13524 + t + 32]
                    t = t + 32
                    continue 
                if ceil32(_13575) <= _13575:
                    call address(_8747).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13575 + _13420 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8775))
                            call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18233 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_18233]
                                continue 
                            _19343 = mem[64]
                            mem[mem[64]] = 32
                            _19577 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19577:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19343 + (32 * _19577) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19002 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_19002]
                            continue 
                        _19833 = mem[64]
                        mem[mem[64]] = 32
                        _20026 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20026:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19833 + (32 * _20026) + -mem[64] + 64
                    _17191 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17191] = return_data.size
                    mem[_17191 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18235 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18235]
                            continue 
                        _19344 = mem[64]
                        mem[mem[64]] = 32
                        _19578 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19578:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19344 + (32 * _19578) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17191 + 32] == bool(mem[_17191 + 32])
                    if not mem[_17191 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8775))
                    call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19004 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_19004]
                        continue 
                    _19834 = mem[64]
                    mem[mem[64]] = 32
                    _20028 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20028:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19834 + (32 * _20028) + -mem[64] + 64
                mem[_13420 + _13575 + 100] = 0
                call address(_8747).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13575 + _13420 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18405 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18405]
                            continue 
                        _19451 = mem[64]
                        mem[mem[64]] = 32
                        _19663 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19663:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19451 + (32 * _19663) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8775))
                    call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19130 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_19130]
                        continue 
                    _19919 = mem[64]
                    mem[mem[64]] = 32
                    _20154 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20154:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19919 + (32 * _20154) + -mem[64] + 64
                _17242 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17242] = return_data.size
                mem[_17242 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8775))
                    call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18407 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_18407]
                        continue 
                    _19452 = mem[64]
                    mem[mem[64]] = 32
                    _19664 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19664:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19452 + (32 * _19664) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17242 + 32] == bool(mem[_17242 + 32])
                if not mem[_17242 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = arg3
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8775))
                call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(arg3), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19132 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_19132]
                    continue 
                _19920 = mem[64]
                mem[mem[64]] = 32
                _20156 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20156:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19920 + (32 * _20156) + -mem[64] + 64
            _12994 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_12994] = return_data.size
            mem[_12994 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                _13200 = mem[64]
                mem[mem[64] + 36] = address(_8775)
                mem[mem[64] + 68] = s
                _13297 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13297 + 32] = mem[_13297 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13346 = mem[_13297]
                t = 0
                while t < _13346:
                    mem[t + _13200 + 100] = mem[_13297 + t + 32]
                    t = t + 32
                    continue 
                if ceil32(_13346) <= _13346:
                    call address(_8747).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13346 + _13200 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = arg3
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8775))
                            call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(arg3), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18237 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_18237]
                                continue 
                            _19345 = mem[64]
                            mem[mem[64]] = 32
                            _19581 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19581:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19345 + (32 * _19581) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19006 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_19006]
                            continue 
                        _19837 = mem[64]
                        mem[mem[64]] = 32
                        _20030 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20030:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19837 + (32 * _20030) + -mem[64] + 64
                    _17193 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17193] = return_data.size
                    mem[_17193 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18239 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18239]
                            continue 
                        _19346 = mem[64]
                        mem[mem[64]] = 32
                        _19582 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19582:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19346 + (32 * _19582) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17193 + 32] == bool(mem[_17193 + 32])
                    if not mem[_17193 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8775))
                    call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19008 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_19008]
                        continue 
                    _19838 = mem[64]
                    mem[mem[64]] = 32
                    _20032 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20032:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19838 + (32 * _20032) + -mem[64] + 64
                mem[_13200 + _13346 + 100] = 0
                call address(_8747).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13346 + _13200 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18411 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18411]
                            continue 
                        _19455 = mem[64]
                        mem[mem[64]] = 32
                        _19665 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19665:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19455 + (32 * _19665) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8775))
                    call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19134 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_19134]
                        continue 
                    _19921 = mem[64]
                    mem[mem[64]] = 32
                    _20158 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20158:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19921 + (32 * _20158) + -mem[64] + 64
                _17243 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17243] = return_data.size
                mem[_17243 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8775))
                    call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18413 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_18413]
                        continue 
                    _19456 = mem[64]
                    mem[mem[64]] = 32
                    _19666 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19666:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19456 + (32 * _19666) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17243 + 32] == bool(mem[_17243 + 32])
                if not mem[_17243 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = arg3
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8775))
                call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(arg3), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19136 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_19136]
                    continue 
                _19922 = mem[64]
                mem[mem[64]] = 32
                _20160 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20160:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19922 + (32 * _20160) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_12994 + 32] == bool(mem[_12994 + 32])
            if not mem[_12994 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            _13422 = mem[64]
            mem[mem[64] + 36] = address(_8775)
            mem[mem[64] + 68] = s
            _13528 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_13528 + 32] = mem[_13528 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
            _13578 = mem[_13528]
            t = 0
            while t < _13578:
                mem[t + _13422 + 100] = mem[_13528 + t + 32]
                t = t + 32
                continue 
            if ceil32(_13578) <= _13578:
                call address(_8747).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13578 + _13422 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = arg3
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8775))
                        call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(arg3), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18241 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18241]
                            continue 
                        _19347 = mem[64]
                        mem[mem[64]] = 32
                        _19585 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19585:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19347 + (32 * _19585) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8775))
                    call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19010 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_19010]
                        continue 
                    _19841 = mem[64]
                    mem[mem[64]] = 32
                    _20034 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20034:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19841 + (32 * _20034) + -mem[64] + 64
                _17195 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17195] = return_data.size
                mem[_17195 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8775))
                    call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18243 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_18243]
                        continue 
                    _19348 = mem[64]
                    mem[mem[64]] = 32
                    _19586 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19586:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19348 + (32 * _19586) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17195 + 32] == bool(mem[_17195 + 32])
                if not mem[_17195 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = arg3
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8775))
                call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(arg3), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19012 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_19012]
                    continue 
                _19842 = mem[64]
                mem[mem[64]] = 32
                _20036 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20036:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19842 + (32 * _20036) + -mem[64] + 64
            mem[_13422 + _13578 + 100] = 0
            call address(_8747).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _13578 + _13422 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = arg3
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8775))
                    call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(arg3), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18417 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_18417]
                        continue 
                    _19459 = mem[64]
                    mem[mem[64]] = 32
                    _19667 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19667:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19459 + (32 * _19667) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = arg3
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8775))
                call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(arg3), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19138 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_19138]
                    continue 
                _19923 = mem[64]
                mem[mem[64]] = 32
                _20162 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20162:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19923 + (32 * _20162) + -mem[64] + 64
            _17244 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_17244] = return_data.size
            mem[_17244 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = arg3
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8775))
                call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(arg3), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _18419 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_18419]
                    continue 
                _19460 = mem[64]
                mem[mem[64]] = 32
                _19668 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _19668:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19460 + (32 * _19668) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_17244 + 32] == bool(mem[_17244 + 32])
            if not mem[_17244 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            mem[mem[64] + 4] = address(_8747)
            mem[mem[64] + 36] = address(_8753)
            mem[mem[64] + 68] = s
            mem[mem[64] + 100] = 0
            mem[mem[64] + 132] = arg3
            mem[mem[64] + 164] = arg4
            require ext_code.size(address(_8775))
            call address(_8775).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                 gas gas_remaining wei
                args address(_8747), address(_8753), s, 0, address(arg3), arg4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19140 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if idx != mem[_4412] - 2:
                idx = idx + 1
                s = mem[_19140]
                continue 
            _19924 = mem[64]
            mem[mem[64]] = 32
            _20164 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _20164:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _19924 + (32 * _20164) + -mem[64] + 64
        _8772 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _8776 = mem[_8772]
        require mem[_8772] == mem[_8772 + 12 len 20]
        mem[mem[64] + 36] = address(_8753)
        mem[mem[64] + 68] = s
        require ext_code.size(address(_8776))
        staticcall address(_8776).getReturn(address rg1, address rg2, uint256 rg3) with:
                gas gas_remaining wei
               args address(_8747), address(_8753), s
        mem[mem[64] len 64] = ext_call.return_data[0 len 64]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _8788 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 64
        if not mem[_8788 + 32]:
            if idx != mem[_4412] - 2:
                idx = idx + 1
                s = 0
                continue 
            _8815 = mem[64]
            mem[mem[64]] = 32
            _8823 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _8823:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _8815 + (32 * _8823) + -mem[64] + 64
        mem[mem[64] + 4] = this.address
        mem[mem[64] + 36] = address(_8776)
        require ext_code.size(address(_8747))
        staticcall address(_8747).0xdd62ed3e with:
                gas gas_remaining wei
               args address(this.address), address(_8776)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _8816 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if mem[_8816] <= 0:
            _8836 = mem[64]
            mem[mem[64] + 36] = address(_8776)
            mem[mem[64] + 68] = s
            _8865 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_8865 + 32] = mem[_8865 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
            _8872 = mem[_8865]
            t = 0
            while t < _8872:
                mem[t + _8836 + 100] = mem[_8865 + t + 32]
                t = t + 32
                continue 
            if ceil32(_8872) <= _8872:
                call address(_8747).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _8872 + _8836 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8776))
                        call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _13241 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_13241]
                            continue 
                        _13689 = mem[64]
                        mem[mem[64]] = 32
                        _13903 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _13903:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _13689 + (32 * _13903) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13466 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_13466]
                        continue 
                    _14241 = mem[64]
                    mem[mem[64]] = 32
                    _14538 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _14538:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _14241 + (32 * _14538) + -mem[64] + 64
                _12985 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_12985] = return_data.size
                mem[_12985 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13243 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_13243]
                        continue 
                    _13690 = mem[64]
                    mem[mem[64]] = 32
                    _13904 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _13904:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _13690 + (32 * _13904) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_12985 + 32] == bool(mem[_12985 + 32])
                if not mem[_12985 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8776))
                call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13468 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_13468]
                    continue 
                _14242 = mem[64]
                mem[mem[64]] = 32
                _14540 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _14540:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _14242 + (32 * _14540) + -mem[64] + 64
            mem[_8836 + _8872 + 100] = 0
            call address(_8747).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _8872 + _8836 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _13303 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_13303]
                        continue 
                    _13789 = mem[64]
                    mem[mem[64]] = 32
                    _14029 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _14029:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _13789 + (32 * _14029) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8776))
                call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13532 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_13532]
                    continue 
                _14371 = mem[64]
                mem[mem[64]] = 32
                _14738 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _14738:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _14371 + (32 * _14738) + -mem[64] + 64
            _12995 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_12995] = return_data.size
            mem[_12995 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8776))
                call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _13305 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_13305]
                    continue 
                _13790 = mem[64]
                mem[mem[64]] = 32
                _14030 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _14030:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _13790 + (32 * _14030) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_12995 + 32] == bool(mem[_12995 + 32])
            if not mem[_12995 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            mem[mem[64] + 4] = address(_8747)
            mem[mem[64] + 36] = address(_8753)
            mem[mem[64] + 68] = s
            mem[mem[64] + 100] = 0
            mem[mem[64] + 132] = this.address
            mem[mem[64] + 164] = arg4
            require ext_code.size(address(_8776))
            call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                 gas gas_remaining wei
                args address(_8747), address(_8753), s, 0, address(this.address), arg4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _13534 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if idx != mem[_4412] - 2:
                idx = idx + 1
                s = mem[_13534]
                continue 
            _14372 = mem[64]
            mem[mem[64]] = 32
            _14740 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _14740:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _14372 + (32 * _14740) + -mem[64] + 64
        _8832 = mem[64]
        mem[mem[64] + 36] = address(_8776)
        mem[mem[64] + 68] = 0
        _8850 = mem[64]
        mem[mem[64]] = 68
        mem[64] = mem[64] + 100
        mem[_8850 + 32] = mem[_8850 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
        _8868 = mem[_8850]
        t = 0
        while t < _8868:
            mem[t + _8832 + 100] = mem[_8850 + t + 32]
            t = t + 32
            continue 
        if ceil32(_8868) <= _8868:
            call address(_8747).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _8868 + _8832 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    _13187 = mem[64]
                    mem[mem[64] + 36] = address(_8776)
                    mem[mem[64] + 68] = s
                    _13245 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_13245 + 32] = mem[_13245 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _13307 = mem[_13245]
                    t = 0
                    while t < _13307:
                        mem[t + _13187 + 100] = mem[_13245 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_13307) <= _13307:
                        call address(_8747).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _13307 + _13187 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            if not mem[96]:
                                mem[mem[64] + 4] = address(_8747)
                                mem[mem[64] + 36] = address(_8753)
                                mem[mem[64] + 68] = s
                                mem[mem[64] + 100] = 0
                                mem[mem[64] + 132] = this.address
                                mem[mem[64] + 164] = arg4
                                require ext_code.size(address(_8776))
                                call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                     gas gas_remaining wei
                                    args address(_8747), address(_8753), s, 0, address(this.address), arg4
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _18245 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                if idx != mem[_4412] - 2:
                                    idx = idx + 1
                                    s = mem[_18245]
                                    continue 
                                _19349 = mem[64]
                                mem[mem[64]] = 32
                                _19589 = mem[(32 * arg2.length) + 128]
                                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                                idx = 0
                                s = (32 * arg2.length) + 160
                                t = mem[64] + 64
                                while idx < _19589:
                                    mem[t] = mem[s]
                                    idx = idx + 1
                                    s = s + 32
                                    t = t + 32
                                    continue 
                                return memory
                                  from mem[64]
                                   len _19349 + (32 * _19589) + -mem[64] + 64
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelper: APPROVE_FAILED'
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8776))
                            call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _19014 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_19014]
                                continue 
                            _19845 = mem[64]
                            mem[mem[64]] = 32
                            _20038 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _20038:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19845 + (32 * _20038) + -mem[64] + 64
                        _17205 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_17205] = return_data.size
                        mem[_17205 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not return_data.size:
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8776))
                            call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18247 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_18247]
                                continue 
                            _19350 = mem[64]
                            mem[mem[64]] = 32
                            _19590 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19590:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19350 + (32 * _19590) + -mem[64] + 64
                        require return_data.size >= 32
                        require mem[_17205 + 32] == bool(mem[_17205 + 32])
                        if not mem[_17205 + 32]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8776))
                        call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19016 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_19016]
                            continue 
                        _19846 = mem[64]
                        mem[mem[64]] = 32
                        _20040 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20040:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19846 + (32 * _20040) + -mem[64] + 64
                    mem[_13187 + _13307 + 100] = 0
                    call address(_8747).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13307 + _13187 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8776))
                            call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18423 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_18423]
                                continue 
                            _19463 = mem[64]
                            mem[mem[64]] = 32
                            _19669 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19669:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19463 + (32 * _19669) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8776))
                        call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19142 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_19142]
                            continue 
                        _19925 = mem[64]
                        mem[mem[64]] = 32
                        _20166 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20166:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19925 + (32 * _20166) + -mem[64] + 64
                    _17245 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17245] = return_data.size
                    mem[_17245 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8776))
                        call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18425 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18425]
                            continue 
                        _19464 = mem[64]
                        mem[mem[64]] = 32
                        _19670 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19670:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19464 + (32 * _19670) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17245 + 32] == bool(mem[_17245 + 32])
                    if not mem[_17245 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19144 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_19144]
                        continue 
                    _19926 = mem[64]
                    mem[mem[64]] = 32
                    _20168 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20168:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19926 + (32 * _20168) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                _13400 = mem[64]
                mem[mem[64] + 36] = address(_8776)
                mem[mem[64] + 68] = s
                _13470 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13470 + 32] = mem[_13470 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13537 = mem[_13470]
                t = 0
                while t < _13537:
                    mem[t + _13400 + 100] = mem[_13470 + t + 32]
                    t = t + 32
                    continue 
                if ceil32(_13537) <= _13537:
                    call address(_8747).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13537 + _13400 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8776))
                            call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18249 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_18249]
                                continue 
                            _19351 = mem[64]
                            mem[mem[64]] = 32
                            _19593 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19593:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19351 + (32 * _19593) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8776))
                        call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19018 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_19018]
                            continue 
                        _19849 = mem[64]
                        mem[mem[64]] = 32
                        _20042 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20042:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19849 + (32 * _20042) + -mem[64] + 64
                    _17207 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17207] = return_data.size
                    mem[_17207 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8776))
                        call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18251 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18251]
                            continue 
                        _19352 = mem[64]
                        mem[mem[64]] = 32
                        _19594 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19594:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19352 + (32 * _19594) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17207 + 32] == bool(mem[_17207 + 32])
                    if not mem[_17207 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19020 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_19020]
                        continue 
                    _19850 = mem[64]
                    mem[mem[64]] = 32
                    _20044 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20044:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19850 + (32 * _20044) + -mem[64] + 64
                mem[_13400 + _13537 + 100] = 0
                call address(_8747).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13537 + _13400 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8776))
                        call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18429 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18429]
                            continue 
                        _19467 = mem[64]
                        mem[mem[64]] = 32
                        _19671 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19671:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19467 + (32 * _19671) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19146 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_19146]
                        continue 
                    _19927 = mem[64]
                    mem[mem[64]] = 32
                    _20170 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20170:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19927 + (32 * _20170) + -mem[64] + 64
                _17246 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17246] = return_data.size
                mem[_17246 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18431 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_18431]
                        continue 
                    _19468 = mem[64]
                    mem[mem[64]] = 32
                    _19672 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19672:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19468 + (32 * _19672) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17246 + 32] == bool(mem[_17246 + 32])
                if not mem[_17246 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8776))
                call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19148 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_19148]
                    continue 
                _19928 = mem[64]
                mem[mem[64]] = 32
                _20172 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20172:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19928 + (32 * _20172) + -mem[64] + 64
            _12987 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_12987] = return_data.size
            mem[_12987 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                _13188 = mem[64]
                mem[mem[64] + 36] = address(_8776)
                mem[mem[64] + 68] = s
                _13249 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13249 + 32] = mem[_13249 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13308 = mem[_13249]
                t = 0
                while t < _13308:
                    mem[t + _13188 + 100] = mem[_13249 + t + 32]
                    t = t + 32
                    continue 
                if ceil32(_13308) <= _13308:
                    call address(_8747).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13308 + _13188 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8776))
                            call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18253 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_18253]
                                continue 
                            _19353 = mem[64]
                            mem[mem[64]] = 32
                            _19597 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19597:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19353 + (32 * _19597) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8776))
                        call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19022 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_19022]
                            continue 
                        _19853 = mem[64]
                        mem[mem[64]] = 32
                        _20046 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20046:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19853 + (32 * _20046) + -mem[64] + 64
                    _17209 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17209] = return_data.size
                    mem[_17209 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8776))
                        call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18255 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18255]
                            continue 
                        _19354 = mem[64]
                        mem[mem[64]] = 32
                        _19598 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19598:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19354 + (32 * _19598) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17209 + 32] == bool(mem[_17209 + 32])
                    if not mem[_17209 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19024 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_19024]
                        continue 
                    _19854 = mem[64]
                    mem[mem[64]] = 32
                    _20048 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20048:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19854 + (32 * _20048) + -mem[64] + 64
                mem[_13188 + _13308 + 100] = 0
                call address(_8747).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13308 + _13188 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8776))
                        call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18435 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18435]
                            continue 
                        _19471 = mem[64]
                        mem[mem[64]] = 32
                        _19673 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19673:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19471 + (32 * _19673) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19150 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_19150]
                        continue 
                    _19929 = mem[64]
                    mem[mem[64]] = 32
                    _20174 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20174:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19929 + (32 * _20174) + -mem[64] + 64
                _17247 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17247] = return_data.size
                mem[_17247 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18437 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_18437]
                        continue 
                    _19472 = mem[64]
                    mem[mem[64]] = 32
                    _19674 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19674:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19472 + (32 * _19674) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17247 + 32] == bool(mem[_17247 + 32])
                if not mem[_17247 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8776))
                call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19152 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_19152]
                    continue 
                _19930 = mem[64]
                mem[mem[64]] = 32
                _20176 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20176:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19930 + (32 * _20176) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_12987 + 32] == bool(mem[_12987 + 32])
            if not mem[_12987 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            _13402 = mem[64]
            mem[mem[64] + 36] = address(_8776)
            mem[mem[64] + 68] = s
            _13474 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_13474 + 32] = mem[_13474 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
            _13540 = mem[_13474]
            t = 0
            while t < _13540:
                mem[t + _13402 + 100] = mem[_13474 + t + 32]
                t = t + 32
                continue 
            if ceil32(_13540) <= _13540:
                call address(_8747).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13540 + _13402 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8776))
                        call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18257 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18257]
                            continue 
                        _19355 = mem[64]
                        mem[mem[64]] = 32
                        _19601 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19601:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19355 + (32 * _19601) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19026 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_19026]
                        continue 
                    _19857 = mem[64]
                    mem[mem[64]] = 32
                    _20050 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20050:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19857 + (32 * _20050) + -mem[64] + 64
                _17211 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17211] = return_data.size
                mem[_17211 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18259 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_18259]
                        continue 
                    _19356 = mem[64]
                    mem[mem[64]] = 32
                    _19602 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19602:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19356 + (32 * _19602) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17211 + 32] == bool(mem[_17211 + 32])
                if not mem[_17211 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8776))
                call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19028 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_19028]
                    continue 
                _19858 = mem[64]
                mem[mem[64]] = 32
                _20052 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20052:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19858 + (32 * _20052) + -mem[64] + 64
            mem[_13402 + _13540 + 100] = 0
            call address(_8747).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _13540 + _13402 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18441 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_18441]
                        continue 
                    _19475 = mem[64]
                    mem[mem[64]] = 32
                    _19675 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19675:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19475 + (32 * _19675) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8776))
                call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19154 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_19154]
                    continue 
                _19931 = mem[64]
                mem[mem[64]] = 32
                _20178 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20178:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19931 + (32 * _20178) + -mem[64] + 64
            _17248 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_17248] = return_data.size
            mem[_17248 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8776))
                call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _18443 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_18443]
                    continue 
                _19476 = mem[64]
                mem[mem[64]] = 32
                _19676 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _19676:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19476 + (32 * _19676) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_17248 + 32] == bool(mem[_17248 + 32])
            if not mem[_17248 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            mem[mem[64] + 4] = address(_8747)
            mem[mem[64] + 36] = address(_8753)
            mem[mem[64] + 68] = s
            mem[mem[64] + 100] = 0
            mem[mem[64] + 132] = this.address
            mem[mem[64] + 164] = arg4
            require ext_code.size(address(_8776))
            call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                 gas gas_remaining wei
                args address(_8747), address(_8753), s, 0, address(this.address), arg4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19156 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if idx != mem[_4412] - 2:
                idx = idx + 1
                s = mem[_19156]
                continue 
            _19932 = mem[64]
            mem[mem[64]] = 32
            _20180 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _20180:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _19932 + (32 * _20180) + -mem[64] + 64
        mem[_8832 + _8868 + 100] = 0
        call address(_8747).mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _8868 + _8832 + -mem[64] + 96]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not mem[96]:
                _13203 = mem[64]
                mem[mem[64] + 36] = address(_8776)
                mem[mem[64] + 68] = s
                _13309 = mem[64]
                mem[mem[64]] = 68
                mem[64] = mem[64] + 100
                mem[_13309 + 32] = mem[_13309 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                _13355 = mem[_13309]
                t = 0
                while t < _13355:
                    mem[t + _13203 + 100] = mem[_13309 + t + 32]
                    t = t + 32
                    continue 
                if ceil32(_13355) <= _13355:
                    call address(_8747).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _13355 + _13203 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        if not mem[96]:
                            mem[mem[64] + 4] = address(_8747)
                            mem[mem[64] + 36] = address(_8753)
                            mem[mem[64] + 68] = s
                            mem[mem[64] + 100] = 0
                            mem[mem[64] + 132] = this.address
                            mem[mem[64] + 164] = arg4
                            require ext_code.size(address(_8776))
                            call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                                 gas gas_remaining wei
                                args address(_8747), address(_8753), s, 0, address(this.address), arg4
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _18261 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            if idx != mem[_4412] - 2:
                                idx = idx + 1
                                s = mem[_18261]
                                continue 
                            _19357 = mem[64]
                            mem[mem[64]] = 32
                            _19605 = mem[(32 * arg2.length) + 128]
                            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                            idx = 0
                            s = (32 * arg2.length) + 160
                            t = mem[64] + 64
                            while idx < _19605:
                                mem[t] = mem[s]
                                idx = idx + 1
                                s = s + 32
                                t = t + 32
                                continue 
                            return memory
                              from mem[64]
                               len _19357 + (32 * _19605) + -mem[64] + 64
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelper: APPROVE_FAILED'
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8776))
                        call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _19030 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_19030]
                            continue 
                        _19861 = mem[64]
                        mem[mem[64]] = 32
                        _20054 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _20054:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19861 + (32 * _20054) + -mem[64] + 64
                    _17213 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_17213] = return_data.size
                    mem[_17213 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not return_data.size:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8776))
                        call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18263 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18263]
                            continue 
                        _19358 = mem[64]
                        mem[mem[64]] = 32
                        _19606 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19606:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19358 + (32 * _19606) + -mem[64] + 64
                    require return_data.size >= 32
                    require mem[_17213 + 32] == bool(mem[_17213 + 32])
                    if not mem[_17213 + 32]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19032 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_19032]
                        continue 
                    _19862 = mem[64]
                    mem[mem[64]] = 32
                    _20056 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20056:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19862 + (32 * _20056) + -mem[64] + 64
                mem[_13203 + _13355 + 100] = 0
                call address(_8747).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13355 + _13203 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8776))
                        call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18447 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18447]
                            continue 
                        _19479 = mem[64]
                        mem[mem[64]] = 32
                        _19677 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19677:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19479 + (32 * _19677) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19158 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_19158]
                        continue 
                    _19933 = mem[64]
                    mem[mem[64]] = 32
                    _20182 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20182:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19933 + (32 * _20182) + -mem[64] + 64
                _17249 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17249] = return_data.size
                mem[_17249 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18449 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_18449]
                        continue 
                    _19480 = mem[64]
                    mem[mem[64]] = 32
                    _19678 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19678:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19480 + (32 * _19678) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17249 + 32] == bool(mem[_17249 + 32])
                if not mem[_17249 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8776))
                call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19160 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_19160]
                    continue 
                _19934 = mem[64]
                mem[mem[64]] = 32
                _20184 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20184:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19934 + (32 * _20184) + -mem[64] + 64
            require mem[96] >= 32
            require mem[128] == bool(mem[128])
            if not mem[128]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            _13426 = mem[64]
            mem[mem[64] + 36] = address(_8776)
            mem[mem[64] + 68] = s
            _13542 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_13542 + 32] = mem[_13542 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
            _13585 = mem[_13542]
            t = 0
            while t < _13585:
                mem[t + _13426 + 100] = mem[_13542 + t + 32]
                t = t + 32
                continue 
            if ceil32(_13585) <= _13585:
                call address(_8747).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13585 + _13426 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8776))
                        call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18265 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18265]
                            continue 
                        _19359 = mem[64]
                        mem[mem[64]] = 32
                        _19609 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19609:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19359 + (32 * _19609) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19034 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_19034]
                        continue 
                    _19865 = mem[64]
                    mem[mem[64]] = 32
                    _20058 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20058:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19865 + (32 * _20058) + -mem[64] + 64
                _17215 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17215] = return_data.size
                mem[_17215 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18267 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_18267]
                        continue 
                    _19360 = mem[64]
                    mem[mem[64]] = 32
                    _19610 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19610:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19360 + (32 * _19610) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17215 + 32] == bool(mem[_17215 + 32])
                if not mem[_17215 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8776))
                call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19036 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_19036]
                    continue 
                _19866 = mem[64]
                mem[mem[64]] = 32
                _20060 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20060:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19866 + (32 * _20060) + -mem[64] + 64
            mem[_13426 + _13585 + 100] = 0
            call address(_8747).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _13585 + _13426 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18453 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_18453]
                        continue 
                    _19483 = mem[64]
                    mem[mem[64]] = 32
                    _19679 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19679:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19483 + (32 * _19679) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8776))
                call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19162 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_19162]
                    continue 
                _19935 = mem[64]
                mem[mem[64]] = 32
                _20186 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20186:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19935 + (32 * _20186) + -mem[64] + 64
            _17250 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_17250] = return_data.size
            mem[_17250 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8776))
                call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _18455 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_18455]
                    continue 
                _19484 = mem[64]
                mem[mem[64]] = 32
                _19680 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _19680:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19484 + (32 * _19680) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_17250 + 32] == bool(mem[_17250 + 32])
            if not mem[_17250 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            mem[mem[64] + 4] = address(_8747)
            mem[mem[64] + 36] = address(_8753)
            mem[mem[64] + 68] = s
            mem[mem[64] + 100] = 0
            mem[mem[64] + 132] = this.address
            mem[mem[64] + 164] = arg4
            require ext_code.size(address(_8776))
            call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                 gas gas_remaining wei
                args address(_8747), address(_8753), s, 0, address(this.address), arg4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19164 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if idx != mem[_4412] - 2:
                idx = idx + 1
                s = mem[_19164]
                continue 
            _19936 = mem[64]
            mem[mem[64]] = 32
            _20188 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _20188:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _19936 + (32 * _20188) + -mem[64] + 64
        _12996 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size) + 1
        mem[_12996] = return_data.size
        mem[_12996 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper: APPROVE_FAILED'
        if not return_data.size:
            _13204 = mem[64]
            mem[mem[64] + 36] = address(_8776)
            mem[mem[64] + 68] = s
            _13313 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_13313 + 32] = mem[_13313 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
            _13356 = mem[_13313]
            t = 0
            while t < _13356:
                mem[t + _13204 + 100] = mem[_13313 + t + 32]
                t = t + 32
                continue 
            if ceil32(_13356) <= _13356:
                call address(_8747).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _13356 + _13204 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    if not mem[96]:
                        mem[mem[64] + 4] = address(_8747)
                        mem[mem[64] + 36] = address(_8753)
                        mem[mem[64] + 68] = s
                        mem[mem[64] + 100] = 0
                        mem[mem[64] + 132] = this.address
                        mem[mem[64] + 164] = arg4
                        require ext_code.size(address(_8776))
                        call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                             gas gas_remaining wei
                            args address(_8747), address(_8753), s, 0, address(this.address), arg4
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _18269 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        if idx != mem[_4412] - 2:
                            idx = idx + 1
                            s = mem[_18269]
                            continue 
                        _19361 = mem[64]
                        mem[mem[64]] = 32
                        _19613 = mem[(32 * arg2.length) + 128]
                        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                        idx = 0
                        s = (32 * arg2.length) + 160
                        t = mem[64] + 64
                        while idx < _19613:
                            mem[t] = mem[s]
                            idx = idx + 1
                            s = s + 32
                            t = t + 32
                            continue 
                        return memory
                          from mem[64]
                           len _19361 + (32 * _19613) + -mem[64] + 64
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelper: APPROVE_FAILED'
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _19038 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_19038]
                        continue 
                    _19869 = mem[64]
                    mem[mem[64]] = 32
                    _20062 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _20062:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19869 + (32 * _20062) + -mem[64] + 64
                _17217 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_17217] = return_data.size
                mem[_17217 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not return_data.size:
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18271 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_18271]
                        continue 
                    _19362 = mem[64]
                    mem[mem[64]] = 32
                    _19614 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19614:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19362 + (32 * _19614) + -mem[64] + 64
                require return_data.size >= 32
                require mem[_17217 + 32] == bool(mem[_17217 + 32])
                if not mem[_17217 + 32]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8776))
                call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19040 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_19040]
                    continue 
                _19870 = mem[64]
                mem[mem[64]] = 32
                _20064 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20064:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19870 + (32 * _20064) + -mem[64] + 64
            mem[_13204 + _13356 + 100] = 0
            call address(_8747).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _13356 + _13204 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18459 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_18459]
                        continue 
                    _19487 = mem[64]
                    mem[mem[64]] = 32
                    _19681 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19681:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19487 + (32 * _19681) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8776))
                call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19166 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_19166]
                    continue 
                _19937 = mem[64]
                mem[mem[64]] = 32
                _20190 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20190:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19937 + (32 * _20190) + -mem[64] + 64
            _17251 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_17251] = return_data.size
            mem[_17251 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8776))
                call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _18461 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_18461]
                    continue 
                _19488 = mem[64]
                mem[mem[64]] = 32
                _19682 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _19682:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19488 + (32 * _19682) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_17251 + 32] == bool(mem[_17251 + 32])
            if not mem[_17251 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            mem[mem[64] + 4] = address(_8747)
            mem[mem[64] + 36] = address(_8753)
            mem[mem[64] + 68] = s
            mem[mem[64] + 100] = 0
            mem[mem[64] + 132] = this.address
            mem[mem[64] + 164] = arg4
            require ext_code.size(address(_8776))
            call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                 gas gas_remaining wei
                args address(_8747), address(_8753), s, 0, address(this.address), arg4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19168 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if idx != mem[_4412] - 2:
                idx = idx + 1
                s = mem[_19168]
                continue 
            _19938 = mem[64]
            mem[mem[64]] = 32
            _20192 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _20192:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _19938 + (32 * _20192) + -mem[64] + 64
        require return_data.size >= 32
        require mem[_12996 + 32] == bool(mem[_12996 + 32])
        if not mem[_12996 + 32]:
            revert with 0, 'TransferHelper: APPROVE_FAILED'
        _13428 = mem[64]
        mem[mem[64] + 36] = address(_8776)
        mem[mem[64] + 68] = s
        _13546 = mem[64]
        mem[mem[64]] = 68
        mem[64] = mem[64] + 100
        mem[_13546 + 32] = mem[_13546 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
        _13588 = mem[_13546]
        t = 0
        while t < _13588:
            mem[t + _13428 + 100] = mem[_13546 + t + 32]
            t = t + 32
            continue 
        if ceil32(_13588) <= _13588:
            call address(_8747).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _13588 + _13428 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                if not mem[96]:
                    mem[mem[64] + 4] = address(_8747)
                    mem[mem[64] + 36] = address(_8753)
                    mem[mem[64] + 68] = s
                    mem[mem[64] + 100] = 0
                    mem[mem[64] + 132] = this.address
                    mem[mem[64] + 164] = arg4
                    require ext_code.size(address(_8776))
                    call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                         gas gas_remaining wei
                        args address(_8747), address(_8753), s, 0, address(this.address), arg4
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _18273 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    if idx != mem[_4412] - 2:
                        idx = idx + 1
                        s = mem[_18273]
                        continue 
                    _19363 = mem[64]
                    mem[mem[64]] = 32
                    _19617 = mem[(32 * arg2.length) + 128]
                    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                    idx = 0
                    s = (32 * arg2.length) + 160
                    t = mem[64] + 64
                    while idx < _19617:
                        mem[t] = mem[s]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    return memory
                      from mem[64]
                       len _19363 + (32 * _19617) + -mem[64] + 64
                require mem[96] >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelper: APPROVE_FAILED'
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8776))
                call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _19042 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_19042]
                    continue 
                _19873 = mem[64]
                mem[mem[64]] = 32
                _20066 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _20066:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19873 + (32 * _20066) + -mem[64] + 64
            _17219 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size) + 1
            mem[_17219] = return_data.size
            mem[_17219 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not return_data.size:
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8776))
                call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _18275 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_18275]
                    continue 
                _19364 = mem[64]
                mem[mem[64]] = 32
                _19618 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _19618:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19364 + (32 * _19618) + -mem[64] + 64
            require return_data.size >= 32
            require mem[_17219 + 32] == bool(mem[_17219 + 32])
            if not mem[_17219 + 32]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            mem[mem[64] + 4] = address(_8747)
            mem[mem[64] + 36] = address(_8753)
            mem[mem[64] + 68] = s
            mem[mem[64] + 100] = 0
            mem[mem[64] + 132] = this.address
            mem[mem[64] + 164] = arg4
            require ext_code.size(address(_8776))
            call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                 gas gas_remaining wei
                args address(_8747), address(_8753), s, 0, address(this.address), arg4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19044 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if idx != mem[_4412] - 2:
                idx = idx + 1
                s = mem[_19044]
                continue 
            _19874 = mem[64]
            mem[mem[64]] = 32
            _20068 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _20068:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _19874 + (32 * _20068) + -mem[64] + 64
        mem[_13428 + _13588 + 100] = 0
        call address(_8747).mem[mem[64] len 4] with:
             gas gas_remaining wei
            args mem[mem[64] + 4 len _13588 + _13428 + -mem[64] + 96]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            if not mem[96]:
                mem[mem[64] + 4] = address(_8747)
                mem[mem[64] + 36] = address(_8753)
                mem[mem[64] + 68] = s
                mem[mem[64] + 100] = 0
                mem[mem[64] + 132] = this.address
                mem[mem[64] + 164] = arg4
                require ext_code.size(address(_8776))
                call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                     gas gas_remaining wei
                    args address(_8747), address(_8753), s, 0, address(this.address), arg4
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _18465 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                if idx != mem[_4412] - 2:
                    idx = idx + 1
                    s = mem[_18465]
                    continue 
                _19491 = mem[64]
                mem[mem[64]] = 32
                _19683 = mem[(32 * arg2.length) + 128]
                mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
                idx = 0
                s = (32 * arg2.length) + 160
                t = mem[64] + 64
                while idx < _19683:
                    mem[t] = mem[s]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                return memory
                  from mem[64]
                   len _19491 + (32 * _19683) + -mem[64] + 64
            require mem[96] >= 32
            require mem[128] == bool(mem[128])
            if not mem[128]:
                revert with 0, 'TransferHelper: APPROVE_FAILED'
            mem[mem[64] + 4] = address(_8747)
            mem[mem[64] + 36] = address(_8753)
            mem[mem[64] + 68] = s
            mem[mem[64] + 100] = 0
            mem[mem[64] + 132] = this.address
            mem[mem[64] + 164] = arg4
            require ext_code.size(address(_8776))
            call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                 gas gas_remaining wei
                args address(_8747), address(_8753), s, 0, address(this.address), arg4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _19170 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if idx != mem[_4412] - 2:
                idx = idx + 1
                s = mem[_19170]
                continue 
            _19939 = mem[64]
            mem[mem[64]] = 32
            _20194 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _20194:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _19939 + (32 * _20194) + -mem[64] + 64
        _17252 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size) + 1
        mem[_17252] = return_data.size
        mem[_17252 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
        if not ext_call.success:
            revert with 0, 'TransferHelper: APPROVE_FAILED'
        if not return_data.size:
            mem[mem[64] + 4] = address(_8747)
            mem[mem[64] + 36] = address(_8753)
            mem[mem[64] + 68] = s
            mem[mem[64] + 100] = 0
            mem[mem[64] + 132] = this.address
            mem[mem[64] + 164] = arg4
            require ext_code.size(address(_8776))
            call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
                 gas gas_remaining wei
                args address(_8747), address(_8753), s, 0, address(this.address), arg4
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _18467 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if idx != mem[_4412] - 2:
                idx = idx + 1
                s = mem[_18467]
                continue 
            _19492 = mem[64]
            mem[mem[64]] = 32
            _19684 = mem[(32 * arg2.length) + 128]
            mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
            idx = 0
            s = (32 * arg2.length) + 160
            t = mem[64] + 64
            while idx < _19684:
                mem[t] = mem[s]
                idx = idx + 1
                s = s + 32
                t = t + 32
                continue 
            return memory
              from mem[64]
               len _19492 + (32 * _19684) + -mem[64] + 64
        require return_data.size >= 32
        require mem[_17252 + 32] == bool(mem[_17252 + 32])
        if not mem[_17252 + 32]:
            revert with 0, 'TransferHelper: APPROVE_FAILED'
        mem[mem[64] + 4] = address(_8747)
        mem[mem[64] + 36] = address(_8753)
        mem[mem[64] + 68] = s
        mem[mem[64] + 100] = 0
        mem[mem[64] + 132] = this.address
        mem[mem[64] + 164] = arg4
        require ext_code.size(address(_8776))
        call address(_8776).swap(address rg1, address rg2, uint256 rg3, uint256 rg4, address rg5, address rg6) with:
             gas gas_remaining wei
            args address(_8747), address(_8753), s, 0, address(this.address), arg4
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _19172 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        if idx != mem[_4412] - 2:
            idx = idx + 1
            s = mem[_19172]
            continue 
        _19940 = mem[64]
        mem[mem[64]] = 32
        _20196 = mem[(32 * arg2.length) + 128]
        mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
        idx = 0
        s = (32 * arg2.length) + 160
        t = mem[64] + 64
        while idx < _20196:
            mem[t] = mem[s]
            idx = idx + 1
            s = s + 32
            t = t + 32
            continue 
        return memory
          from mem[64]
           len _19940 + (32 * _20196) + -mem[64] + 64
    mem[mem[64]] = 32
    _8756 = mem[(32 * arg2.length) + 128]
    mem[mem[64] + 32] = mem[(32 * arg2.length) + 128]
    mem[mem[64] + 64 len 32 * _8756] = mem[(32 * arg2.length) + 160 len 32 * _8756]
    return 32, mem[mem[64] + 32 len (32 * _8756) + 32]
}



}
