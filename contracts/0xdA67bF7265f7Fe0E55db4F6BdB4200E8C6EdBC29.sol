contract main {




// =====================  Runtime code  =====================


#
#  - sub_1daba371(?)
#
address owner;
mapping of uint8 stor1;
array of address add;
array of struct sub_6cbb1b68;
address sub_0195f4bfAddress;
address mdxAddress;
address sub_1d801decAddress;

function sub_0195f4bf(?) {
    return sub_0195f4bfAddress
}

function add(uint256 arg1) {
    require calldata.size - 4 >= 32
    require arg1 < add.length
    return add[arg1]
}

function sub_1d801dec(?) {
    return sub_1d801decAddress
}

function mdx() {
    return mdxAddress
}

function sub_6cbb1b68(?) {
    require calldata.size - 4 >= 32
    require arg1 < sub_6cbb1b68.length
    return sub_6cbb1b68[arg1].field_0, sub_6cbb1b68[arg1].field_256, sub_6cbb1b68[arg1].field_512, sub_6cbb1b68[arg1].field_768
}

function owner() {
    return owner
}

function sub_e8240ef9(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return bool(stor1[arg1])
}

function _fallback() payable {
  stop
}

function sub_1cace039(?) {
    require calldata.size - 4 >= 128
    require (arg4 * arg1) + (10000 * arg2)
    return (arg4 * arg1 * arg3 / (arg4 * arg1) + (10000 * arg2))
}

function getAmountOut(uint256 arg1, uint256 arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    require (997 * arg1) + (1000 * arg2)
    return (997 * arg1 * arg3 / (997 * arg1) + (1000 * arg2))
}

function sub_4130870e(?) {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    require arg2 == bool(arg2)
    require msg.sender == owner
    stor1[address(arg1)] = uint8(bool(arg2))
}

function sub_8209b7e0(?) {
    require ext_code.size(sub_1d801decAddress)
    call sub_1d801decAddress.takerWithdraw() with:
         gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function sub_4f90c89f(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        if not stor1[msg.sender]:
            revert with 0, 'Ownable: caller is not the owner'
    sub_0195f4bfAddress = address(arg1)
}

function transferOwnership(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        if not stor1[msg.sender]:
            revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function sortTokens(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if arg1 == arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
    if arg1 < arg2:
        if not arg1:
            revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
        return address(arg1), arg2
    if not arg2:
        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
    return address(arg2), arg1
}

function sub_2976350d(?) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        if not stor1[msg.sender]:
            revert with 0, 'Ownable: caller is not the owner'
    if arg1:
        call msg.sender with:
           value arg1 wei
             gas 2300 * is_zero(value) wei
    else:
        call msg.sender with:
           value eth.balance(this.address) wei
             gas 2300 * is_zero(value) wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function withdrawall() {
    if owner != msg.sender:
        if not stor1[msg.sender]:
            revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
    staticcall 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0]:
        require ext_code.size(0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7)
        call 0xb31f66aa3c1e785363f0875a1b74e27b85fd66c7.0xa9059cbb with:
             gas gas_remaining wei
            args msg.sender, ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function approve(address arg1, address arg2) {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if owner != msg.sender:
        if not stor1[msg.sender]:
            revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(arg1)
    staticcall arg1.0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    require ext_code.size(arg1)
    staticcall arg1.0xdd62ed3e with:
            gas gas_remaining wei
           args address(this.address), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] < 10000 * 10^uint8(ext_call.return_data[0]):
        require ext_code.size(arg1)
        call arg1.approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args address(arg2), -1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function approve(address arg1, address arg2, uint256 arg3) {
    require calldata.size - 4 >= 96
    require arg1 == arg1
    require arg2 == arg2
    if owner != msg.sender:
        if not stor1[msg.sender]:
            revert with 0, 'Ownable: caller is not the owner'
    require ext_code.size(arg1)
    staticcall arg1.0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    require ext_code.size(arg1)
    staticcall arg1.0xdd62ed3e with:
            gas gas_remaining wei
           args address(this.address), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if ext_call.return_data[0] < 10000 * 10^uint8(ext_call.return_data[0]):
        require ext_code.size(arg1)
        staticcall arg1.0x313ce567 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
        require ext_code.size(arg1)
        call arg1.approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args address(arg2), arg3 * 10^uint8(ext_call.return_data[0])
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
}

function sub_33293526(?) {
    require calldata.size - 4 >= 128
    require arg1 == address(arg1)
    require arg2 == Mask(32, 224, arg2)
    if owner != msg.sender:
        if not stor1[msg.sender]:
            revert with 0, 'Ownable: caller is not the owner'
    if arg4:
        if arg4 != 1:
            if 2 == arg4:
                mem[196 len 96] = uint32(arg2), msg.sender, arg3, mem[196 len 28]
                call address(arg1).mem[196 len 4] with:
                     gas gas_remaining wei
                    args mem[200 len 64]
        else:
            mem[164 len 64] = uint32(arg2), arg3, mem[164 len 28]
            call address(arg1).mem[164 len 4] with:
                 gas gas_remaining wei
                args mem[168]
            if not return_data.size:
                if 2 == arg4:
                    mem[264 len 96] = uint32(arg2), msg.sender, arg3, mem[264 len 28]
                    call address(arg1).mem[264 len 4] with:
                         gas gas_remaining wei
                        args mem[268 len 64]
            else:
                if 2 == arg4:
                    mem[ceil32(return_data.size) + 265 len 96] = uint32(arg2), msg.sender, arg3, mem[ceil32(return_data.size) + 265 len 28]
                    call address(arg1).mem[ceil32(return_data.size) + 265 len 4] with:
                         gas gas_remaining wei
                        args mem[ceil32(return_data.size) + 269 len 64]
    else:
        mem[132] = uint32(arg2), mem[132 len 28]
        call address(arg1).mem[132 len 4] with:
             gas gas_remaining wei
        if not return_data.size:
            if arg4 != 1:
                if 2 == arg4:
                    mem[232 len 96] = uint32(arg2), msg.sender, arg3, mem[232 len 28]
                    call address(arg1).mem[232 len 4] with:
                         gas gas_remaining wei
                        args mem[236 len 64]
            else:
                mem[200 len 64] = uint32(arg2), arg3, mem[200 len 28]
                call address(arg1).mem[200 len 4] with:
                     gas gas_remaining wei
                    args mem[204]
                if not return_data.size:
                    if 2 == arg4:
                        mem[300 len 96] = uint32(arg2), msg.sender, arg3, mem[300 len 28]
                        call address(arg1).mem[300 len 4] with:
                             gas gas_remaining wei
                            args mem[304 len 64]
                else:
                    if 2 == arg4:
                        mem[ceil32(return_data.size) + 301 len 96] = uint32(arg2), msg.sender, arg3, mem[ceil32(return_data.size) + 301 len 28]
                        call address(arg1).mem[ceil32(return_data.size) + 301 len 4] with:
                             gas gas_remaining wei
                            args mem[ceil32(return_data.size) + 305 len 64]
        else:
            if arg4 != 1:
                if 2 == arg4:
                    mem[ceil32(return_data.size) + 233 len 96] = uint32(arg2), msg.sender, arg3, mem[ceil32(return_data.size) + 233 len 28]
                    call address(arg1).mem[ceil32(return_data.size) + 233 len 4] with:
                         gas gas_remaining wei
                        args mem[ceil32(return_data.size) + 237 len 64]
            else:
                mem[ceil32(return_data.size) + 201 len 64] = uint32(arg2), arg3, mem[ceil32(return_data.size) + 201 len 28]
                call address(arg1).mem[ceil32(return_data.size) + 201 len 4] with:
                     gas gas_remaining wei
                    args mem[ceil32(return_data.size) + 205]
                if not return_data.size:
                    if 2 == arg4:
                        mem[ceil32(return_data.size) + 301 len 96] = uint32(arg2), msg.sender, arg3, mem[ceil32(return_data.size) + 301 len 28]
                        call address(arg1).mem[ceil32(return_data.size) + 301 len 4] with:
                             gas gas_remaining wei
                            args mem[ceil32(return_data.size) + 305 len 64]
                else:
                    if 2 == arg4:
                        mem[(2 * ceil32(return_data.size)) + 302 len 96] = uint32(arg2), msg.sender, arg3, mem[(2 * ceil32(return_data.size)) + 302 len 28]
                        call address(arg1).mem[(2 * ceil32(return_data.size)) + 302 len 4] with:
                             gas gas_remaining wei
                            args mem[(2 * ceil32(return_data.size)) + 306 len 64]
}

function sub_0b7cbaa6(?) {
    require calldata.size - 4 >= 64
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require (32 * ('cd', 36).length) + 128 >= 96 and (32 * ('cd', 36).length) + 128 <= test266151307()
    mem[96] = ('cd', 36).length
    require calldata.size >= cd[36] + (32 * ('cd', 36).length) + 36
    idx = 0
    s = cd[36] + 36
    t = 128
    while idx < ('cd', 36).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require ('cd', 36).length / 2 <= test266151307()
    mem[(32 * ('cd', 36).length) + 128] = ('cd', 36).length / 2
    mem[64] = (32 * ('cd', 36).length) + (16 * Mask(251, 1, ('cd', 36).length)) + 160
    if not Mask(255, 1, ('cd', 36).length):
        idx = ('cd', 36).length / 2
        s = 0
        s = cd[4]
        while idx < ('cd', 36).length - 1:
            require idx - (('cd', 36).length / 2) < mem[96]
            require ext_code.size(mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20])
            staticcall mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20].factory() with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _192 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _197 = mem[_192]
            require mem[_192] == mem[_192 + 12 len 20]
            require idx < mem[96]
            require idx + 1 < mem[96]
            _206 = mem[(32 * idx + 1) + 128]
            mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
            mem[mem[64] + 36] = address(_206)
            require ext_code.size(address(_197))
            staticcall address(_197).getPair(address arg1, address arg2) with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4], address(_206)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _212 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _214 = mem[_212]
            require mem[_212] == mem[_212 + 12 len 20]
            require ext_code.size(mem[_212 + 12 len 20])
            staticcall mem[_212 + 12 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _220 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _222 = mem[_220]
            require mem[_220] == mem[_220 + 18 len 14]
            _224 = mem[_220 + 32]
            require mem[_220 + 32] == mem[_220 + 50 len 14]
            require mem[_220 + 64] == mem[_220 + 92 len 4]
            require idx < mem[96]
            require idx + 1 < mem[96]
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                require idx < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                    require (997 * s) + (1000 * mem[_220 + 18 len 14])
                    require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                    mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] = 997 * s * mem[_220 + 50 len 14] / (997 * s) + (1000 * mem[_220 + 18 len 14])
                    idx = idx + 1
                    s = _214
                    s = 997 * s * Mask(112, 0, _224) / (997 * s) + (1000 * Mask(112, 0, _222))
                    continue 
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                require idx < mem[96]
                if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                    require (997 * s) + (1000 * mem[_220 + 18 len 14])
                    require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                    mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] = 997 * s * mem[_220 + 50 len 14] / (997 * s) + (1000 * mem[_220 + 18 len 14])
                    idx = idx + 1
                    s = _214
                    s = 997 * s * Mask(112, 0, _224) / (997 * s) + (1000 * Mask(112, 0, _222))
                    continue 
            require (997 * s) + (1000 * mem[_220 + 50 len 14])
            require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
            mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] = 997 * s * mem[_220 + 18 len 14] / (997 * s) + (1000 * mem[_220 + 50 len 14])
            idx = idx + 1
            s = _214
            s = 997 * s * Mask(112, 0, _222) / (997 * s) + (1000 * Mask(112, 0, _224))
            continue 
        mem[mem[64]] = 32
        _190 = mem[(32 * ('cd', 36).length) + 128]
        mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
        mem[mem[64] + 64 len 32 * _190] = mem[(32 * ('cd', 36).length) + 160 len 32 * _190]
        return 32, mem[mem[64] + 32 len (32 * _190) + 32]
    mem[(32 * ('cd', 36).length) + 160 len 16 * Mask(251, 1, ('cd', 36).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 36).length)]
    idx = ('cd', 36).length / 2
    s = 0
    s = cd[4]
    while idx < ('cd', 36).length - 1:
        require idx - (('cd', 36).length / 2) < mem[96]
        require ext_code.size(mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20])
        staticcall mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20].factory() with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _193 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _199 = mem[_193]
        require mem[_193] == mem[_193 + 12 len 20]
        require idx < mem[96]
        require idx + 1 < mem[96]
        _208 = mem[(32 * idx + 1) + 128]
        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
        mem[mem[64] + 36] = address(_208)
        require ext_code.size(address(_199))
        staticcall address(_199).getPair(address arg1, address arg2) with:
                gas gas_remaining wei
               args mem[mem[64] + 4], address(_208)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _213 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _215 = mem[_213]
        require mem[_213] == mem[_213 + 12 len 20]
        require ext_code.size(mem[_213 + 12 len 20])
        staticcall mem[_213 + 12 len 20].getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _221 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _223 = mem[_221]
        require mem[_221] == mem[_221 + 18 len 14]
        _225 = mem[_221 + 32]
        require mem[_221 + 32] == mem[_221 + 50 len 14]
        require mem[_221 + 64] == mem[_221 + 92 len 4]
        require idx < mem[96]
        require idx + 1 < mem[96]
        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
            revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
        if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
            if not mem[(32 * idx) + 140 len 20]:
                revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
            require idx < mem[96]
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                require (997 * s) + (1000 * mem[_221 + 18 len 14])
                require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] = 997 * s * mem[_221 + 50 len 14] / (997 * s) + (1000 * mem[_221 + 18 len 14])
                idx = idx + 1
                s = _215
                s = 997 * s * Mask(112, 0, _225) / (997 * s) + (1000 * Mask(112, 0, _223))
                continue 
        else:
            if not mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
            require idx < mem[96]
            if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                require (997 * s) + (1000 * mem[_221 + 18 len 14])
                require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] = 997 * s * mem[_221 + 50 len 14] / (997 * s) + (1000 * mem[_221 + 18 len 14])
                idx = idx + 1
                s = _215
                s = 997 * s * Mask(112, 0, _225) / (997 * s) + (1000 * Mask(112, 0, _223))
                continue 
        require (997 * s) + (1000 * mem[_221 + 50 len 14])
        require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
        mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] = 997 * s * mem[_221 + 18 len 14] / (997 * s) + (1000 * mem[_221 + 50 len 14])
        idx = idx + 1
        s = _215
        s = 997 * s * Mask(112, 0, _223) / (997 * s) + (1000 * Mask(112, 0, _225))
        continue 
    mem[mem[64]] = 32
    _191 = mem[(32 * ('cd', 36).length) + 128]
    mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + 128]
    mem[mem[64] + 64 len 32 * _191] = mem[(32 * ('cd', 36).length) + 160 len 32 * _191]
    return 32, mem[mem[64] + 32 len (32 * _191) + 32]
}

function sub_31da019d(?) {
    require calldata.size - 4 >= 96
    require cd[36] <= test266151307()
    require cd[36] + 35 < calldata.size
    require ('cd', 36).length <= test266151307()
    require (32 * ('cd', 36).length) + 128 >= 96 and (32 * ('cd', 36).length) + 128 <= test266151307()
    mem[96] = ('cd', 36).length
    require calldata.size >= cd[36] + (32 * ('cd', 36).length) + 36
    idx = 0
    s = cd[36] + 36
    t = 128
    while idx < ('cd', 36).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require (32 * ('cd', 68).length) + 160 >= 128 and (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160 <= test266151307()
    mem[(32 * ('cd', 36).length) + 128] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = (32 * ('cd', 36).length) + 160
    while idx < ('cd', 68).length:
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require ('cd', 36).length / 2 <= test266151307()
    mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160] = ('cd', 36).length / 2
    mem[64] = (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 36).length)) + 192
    if not Mask(255, 1, ('cd', 36).length):
        idx = ('cd', 36).length / 2
        s = 0
        s = cd[4]
        while idx < ('cd', 36).length - 1:
            require idx - (('cd', 36).length / 2) < mem[96]
            _249 = mem[(32 * idx - (('cd', 36).length / 2)) + 128]
            require ext_code.size(mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20])
            staticcall mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _258 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 96
            _264 = mem[_258]
            require mem[_258] == mem[_258 + 18 len 14]
            _266 = mem[_258 + 32]
            require mem[_258 + 32] == mem[_258 + 50 len 14]
            require mem[_258 + 64] == mem[_258 + 92 len 4]
            require idx < mem[96]
            require idx + 1 < mem[96]
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
            if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                if not mem[(32 * idx) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                require idx < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                    require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                    require (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_258 + 18 len 14])
                    require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
                    mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192] = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * mem[_258 + 50 len 14] / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_258 + 18 len 14])
                    idx = idx + 1
                    s = _249
                    s = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * Mask(112, 0, _266) / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * Mask(112, 0, _264))
                    continue 
            else:
                if not mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                require idx < mem[96]
                if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                    require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                    require (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_258 + 18 len 14])
                    require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
                    mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192] = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * mem[_258 + 50 len 14] / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_258 + 18 len 14])
                    idx = idx + 1
                    s = _249
                    s = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * Mask(112, 0, _266) / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * Mask(112, 0, _264))
                    continue 
            require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
            require (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_258 + 50 len 14])
            require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
            mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192] = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * mem[_258 + 18 len 14] / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_258 + 50 len 14])
            idx = idx + 1
            s = _249
            s = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * Mask(112, 0, _264) / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * Mask(112, 0, _266))
            continue 
        mem[mem[64]] = 32
        _256 = mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
        mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
        mem[mem[64] + 64 len 32 * _256] = mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192 len 32 * _256]
        return 32, mem[mem[64] + 32 len (32 * _256) + 32]
    mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192 len 16 * Mask(251, 1, ('cd', 36).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 36).length)]
    idx = ('cd', 36).length / 2
    s = 0
    s = cd[4]
    while idx < ('cd', 36).length - 1:
        require idx - (('cd', 36).length / 2) < mem[96]
        _253 = mem[(32 * idx - (('cd', 36).length / 2)) + 128]
        require ext_code.size(mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20])
        staticcall mem[(32 * idx - (('cd', 36).length / 2)) + 140 len 20].getReserves() with:
                gas gas_remaining wei
        mem[mem[64] len 96] = ext_call.return_data[0 len 96]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _259 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 96
        _265 = mem[_259]
        require mem[_259] == mem[_259 + 18 len 14]
        _267 = mem[_259 + 32]
        require mem[_259 + 32] == mem[_259 + 50 len 14]
        require mem[_259 + 64] == mem[_259 + 92 len 4]
        require idx < mem[96]
        require idx + 1 < mem[96]
        if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
            revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
        if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
            if not mem[(32 * idx) + 140 len 20]:
                revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
            require idx < mem[96]
            if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                require (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_259 + 18 len 14])
                require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
                mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192] = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * mem[_259 + 50 len 14] / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_259 + 18 len 14])
                idx = idx + 1
                s = _253
                s = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * Mask(112, 0, _267) / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * Mask(112, 0, _265))
                continue 
        else:
            if not mem[(32 * idx + 1) + 140 len 20]:
                revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
            require idx < mem[96]
            if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
                require (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_259 + 18 len 14])
                require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
                mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192] = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * mem[_259 + 50 len 14] / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_259 + 18 len 14])
                idx = idx + 1
                s = _253
                s = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * Mask(112, 0, _267) / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * Mask(112, 0, _265))
                continue 
        require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + 128]
        require (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_259 + 50 len 14])
        require idx - (('cd', 36).length / 2) < mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
        mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192] = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * mem[_259 + 18 len 14] / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * mem[_259 + 50 len 14])
        idx = idx + 1
        s = _253
        s = mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s * Mask(112, 0, _265) / (mem[(32 * idx - (('cd', 36).length / 2)) + (32 * ('cd', 36).length) + 160] * s) + (10000 * Mask(112, 0, _267))
        continue 
    mem[mem[64]] = 32
    _257 = mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
    mem[mem[64] + 32] = mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 160]
    mem[mem[64] + 64 len 32 * _257] = mem[(32 * ('cd', 36).length) + (32 * ('cd', 68).length) + 192 len 32 * _257]
    return 32, mem[mem[64] + 32 len (32 * _257) + 32]
}

function sub_d519be55(?) {
    require calldata.size - 4 >= 128
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require (32 * ('cd', 68).length) + 128 >= 96 and (32 * ('cd', 68).length) + 128 <= test266151307()
    mem[96] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = 128
    while idx < ('cd', 68).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[100] <= test266151307()
    require cd[100] + 35 < calldata.size
    require ('cd', 100).length <= test266151307()
    require (32 * ('cd', 100).length) + 160 >= 128 and (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160 <= test266151307()
    mem[(32 * ('cd', 68).length) + 128] = ('cd', 100).length
    require calldata.size >= cd[100] + (32 * ('cd', 100).length) + 36
    idx = 0
    s = cd[100] + 36
    t = (32 * ('cd', 68).length) + 160
    while idx < ('cd', 100).length:
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if msg.sender == owner:
        require ('cd', 68).length / 2 <= test266151307()
        mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] = ('cd', 68).length / 2
        mem[64] = (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 192
        if not Mask(255, 1, ('cd', 68).length):
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                _1739 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1764 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1793 = mem[_1764]
                require mem[_1764] == mem[_1764 + 18 len 14]
                _1802 = mem[_1764 + 32]
                require mem[_1764 + 32] == mem[_1764 + 50 len 14]
                require mem[_1764 + 64] == mem[_1764 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1764 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_1764 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1764 + 18 len 14])
                        idx = idx + 1
                        s = _1739
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _1802) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _1793))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1764 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_1764 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1764 + 18 len 14])
                        idx = idx + 1
                        s = _1739
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _1802) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _1793))
                        continue 
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1764 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_1764 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1764 + 50 len 14])
                idx = idx + 1
                s = _1739
                s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _1793) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _1802))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _1761 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _1762 = mem[96]
            require mem[96] / 2 < mem[96]
            _1781 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_1781))
            staticcall address(_1781).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _2297 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _2297 - 1:
                require idx < mem[96]
                require 0 < mem[_1761]
                mem[_1761 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_1761]
                mem[_1761 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_1762 / 2) < mem[96]
                _2357 = mem[(32 * idx - (_1762 / 2)) + 128]
                if idx != _1762 / 2:
                    require ext_code.size(mem[(32 * idx - (_1762 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_1762 / 2)) + 140 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2386 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_2386] == mem[_2386 + 12 len 20]
                    require idx - (_1762 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2421 = mem[(32 * idx - (_1762 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_1761]
                    if mem[_1761 + 44 len 20] == mem[_2386 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _2457 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_2457 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_2457 + 36] = 0
                            mem[_2457 + 68] = _2421
                            mem[_2457 + 100] = this.address
                            mem[_2457 + 132] = 128
                            mem[_2457 + 164] = mem[_2457]
                            s = 0
                            while s < mem[_2457]:
                                mem[s + _2457 + 196] = mem[s + _2457 + 32]
                                _2297 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_2457]) > mem[_2457]:
                                mem[mem[_2457] + _2457 + 196] = 0
                            require ext_code.size(address(_2357))
                            call address(_2357).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_2457]) + _2457 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2297 = mem[96]
                            idx = idx + 1
                            s = _2357
                            s = this.address
                            s = _2421
                            continue 
                        require idx + -(_1762 / 2) + 1 < mem[96]
                        _2458 = mem[(32 * idx + -(_1762 / 2) + 1) + 128]
                        _2478 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2478 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2478 + 36] = 0
                        mem[_2478 + 68] = _2421
                        mem[_2478 + 100] = address(_2458)
                        mem[_2478 + 132] = 128
                        mem[_2478 + 164] = mem[_2478]
                        s = 0
                        while s < mem[_2478]:
                            mem[s + _2478 + 196] = mem[s + _2478 + 32]
                            _2297 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2478]) > mem[_2478]:
                            mem[mem[_2478] + _2478 + 196] = 0
                        require ext_code.size(address(_2357))
                        call address(_2357).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _2421, address(_2458), 128, mem[_2478], mem[_2478 + 196 len ceil32(mem[_2478])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2297 = mem[96]
                        idx = idx + 1
                        s = _2357
                        s = _2458
                        s = _2421
                        continue 
                    if idx + 2 >= mem[96]:
                        _2459 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2459 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2459 + 36] = _2421
                        mem[_2459 + 68] = 0
                        mem[_2459 + 100] = this.address
                        mem[_2459 + 132] = 128
                        mem[_2459 + 164] = mem[_2459]
                        s = 0
                        while s < mem[_2459]:
                            mem[s + _2459 + 196] = mem[s + _2459 + 32]
                            _2297 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2459]) > mem[_2459]:
                            mem[mem[_2459] + _2459 + 196] = 0
                        require ext_code.size(address(_2357))
                        call address(_2357).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_2459]) + _2459 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2297 = mem[96]
                        idx = idx + 1
                        s = _2357
                        s = this.address
                        s = _2421
                        continue 
                    require idx + -(_1762 / 2) + 1 < mem[96]
                    _2460 = mem[(32 * idx + -(_1762 / 2) + 1) + 128]
                    _2480 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2480 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2480 + 36] = _2421
                    mem[_2480 + 68] = 0
                    mem[_2480 + 100] = address(_2460)
                    mem[_2480 + 132] = 128
                    mem[_2480 + 164] = mem[_2480]
                    s = 0
                    while s < mem[_2480]:
                        mem[s + _2480 + 196] = mem[s + _2480 + 32]
                        _2297 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2480]) > mem[_2480]:
                        mem[mem[_2480] + _2480 + 196] = 0
                    require ext_code.size(address(_2357))
                    call address(_2357).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _2421, 0, address(_2460), 128, mem[_2480], mem[_2480 + 196 len ceil32(mem[_2480])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2297 = mem[96]
                    idx = idx + 1
                    s = _2357
                    s = _2460
                    s = _2421
                    continue 
                require 0 < mem[_1761]
                _2377 = mem[_1761 + 32]
                mem[mem[64] + 4] = mem[(32 * idx - (_1762 / 2)) + 140 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_2377))
                call address(_2377).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2405 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2405] == bool(mem[_2405])
                require ext_code.size(address(_2357))
                staticcall address(_2357).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2461 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2461] == mem[_2461 + 12 len 20]
                require idx - (_1762 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _2529 = mem[(32 * idx - (_1762 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                require 0 < mem[_1761]
                if mem[_1761 + 44 len 20] == mem[_2461 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _2585 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2585 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2585 + 36] = 0
                        mem[_2585 + 68] = _2529
                        mem[_2585 + 100] = this.address
                        mem[_2585 + 132] = 128
                        mem[_2585 + 164] = mem[_2585]
                        s = 0
                        while s < mem[_2585]:
                            mem[s + _2585 + 196] = mem[s + _2585 + 32]
                            _2297 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2585]) > mem[_2585]:
                            mem[mem[_2585] + _2585 + 196] = 0
                        require ext_code.size(address(_2357))
                        call address(_2357).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _2529, address(this.address), 128, mem[_2585], mem[_2585 + 196 len ceil32(mem[_2585])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2297 = mem[96]
                        idx = idx + 1
                        s = _2357
                        s = this.address
                        s = _2529
                        continue 
                    require idx + -(_1762 / 2) + 1 < mem[96]
                    _2586 = mem[(32 * idx + -(_1762 / 2) + 1) + 128]
                    _2602 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2602 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2602 + 36] = 0
                    mem[_2602 + 68] = _2529
                    mem[_2602 + 100] = address(_2586)
                    mem[_2602 + 132] = 128
                    mem[_2602 + 164] = mem[_2602]
                    s = 0
                    while s < mem[_2602]:
                        mem[s + _2602 + 196] = mem[s + _2602 + 32]
                        _2297 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2602]) > mem[_2602]:
                        mem[mem[_2602] + _2602 + 196] = 0
                    require ext_code.size(address(_2357))
                    call address(_2357).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, _2529, address(_2586), 128, mem[_2602], mem[_2602 + 196 len ceil32(mem[_2602])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2297 = mem[96]
                    idx = idx + 1
                    s = _2357
                    s = _2586
                    s = _2529
                    continue 
                if idx + 2 >= mem[96]:
                    _2587 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2587 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2587 + 36] = _2529
                    mem[_2587 + 68] = 0
                    mem[_2587 + 100] = this.address
                    mem[_2587 + 132] = 128
                    mem[_2587 + 164] = mem[_2587]
                    s = 0
                    while s < mem[_2587]:
                        mem[s + _2587 + 196] = mem[s + _2587 + 32]
                        _2297 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2587]) > mem[_2587]:
                        mem[mem[_2587] + _2587 + 196] = 0
                    require ext_code.size(address(_2357))
                    call address(_2357).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_2587]) + _2587 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2297 = mem[96]
                    idx = idx + 1
                    s = _2357
                    s = this.address
                    s = _2529
                    continue 
                require idx + -(_1762 / 2) + 1 < mem[96]
                _2588 = mem[(32 * idx + -(_1762 / 2) + 1) + 128]
                _2604 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_2604 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_2604 + 36] = _2529
                mem[_2604 + 68] = 0
                mem[_2604 + 100] = address(_2588)
                mem[_2604 + 132] = 128
                mem[_2604 + 164] = mem[_2604]
                s = 0
                while s < mem[_2604]:
                    mem[s + _2604 + 196] = mem[s + _2604 + 32]
                    _2297 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_2604]) > mem[_2604]:
                    mem[mem[_2604] + _2604 + 196] = 0
                require ext_code.size(address(_2357))
                call address(_2357).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(mem[_2604]) + _2604 + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2297 = mem[96]
                idx = idx + 1
                s = _2357
                s = _2588
                s = _2529
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            _2313 = mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
            require _1762 / 2 < mem[96]
            _2329 = mem[(16 * Mask(251, 1, _1762)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_2329))
            staticcall address(_2329).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2361 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_2361] < ext_call.return_data[0] - cd[4] + _2313:
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                _1744 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1768 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1794 = mem[_1768]
                require mem[_1768] == mem[_1768 + 18 len 14]
                _1804 = mem[_1768 + 32]
                require mem[_1768 + 32] == mem[_1768 + 50 len 14]
                require mem[_1768 + 64] == mem[_1768 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1768 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_1768 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1768 + 18 len 14])
                        idx = idx + 1
                        s = _1744
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _1804) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _1794))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1768 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_1768 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1768 + 18 len 14])
                        idx = idx + 1
                        s = _1744
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _1804) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _1794))
                        continue 
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1768 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_1768 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1768 + 50 len 14])
                idx = idx + 1
                s = _1744
                s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _1794) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _1804))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _1765 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _1766 = mem[96]
            require mem[96] / 2 < mem[96]
            _1784 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_1784))
            staticcall address(_1784).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _2298 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _2298 - 1:
                require idx < mem[96]
                require 0 < mem[_1765]
                mem[_1765 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_1765]
                mem[_1765 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_1766 / 2) < mem[96]
                _2358 = mem[(32 * idx - (_1766 / 2)) + 128]
                if idx != _1766 / 2:
                    require ext_code.size(mem[(32 * idx - (_1766 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_1766 / 2)) + 140 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2388 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_2388] == mem[_2388 + 12 len 20]
                    require idx - (_1766 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2423 = mem[(32 * idx - (_1766 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_1765]
                    if mem[_1765 + 44 len 20] == mem[_2388 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _2462 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_2462 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_2462 + 36] = 0
                            mem[_2462 + 68] = _2423
                            mem[_2462 + 100] = this.address
                            mem[_2462 + 132] = 128
                            mem[_2462 + 164] = mem[_2462]
                            s = 0
                            while s < mem[_2462]:
                                mem[s + _2462 + 196] = mem[s + _2462 + 32]
                                _2298 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_2462]) > mem[_2462]:
                                mem[mem[_2462] + _2462 + 196] = 0
                            require ext_code.size(address(_2358))
                            call address(_2358).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_2462]) + _2462 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2298 = mem[96]
                            idx = idx + 1
                            s = _2358
                            s = this.address
                            s = _2423
                            continue 
                        require idx + -(_1766 / 2) + 1 < mem[96]
                        _2463 = mem[(32 * idx + -(_1766 / 2) + 1) + 128]
                        _2482 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2482 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2482 + 36] = 0
                        mem[_2482 + 68] = _2423
                        mem[_2482 + 100] = address(_2463)
                        mem[_2482 + 132] = 128
                        mem[_2482 + 164] = mem[_2482]
                        s = 0
                        while s < mem[_2482]:
                            mem[s + _2482 + 196] = mem[s + _2482 + 32]
                            _2298 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2482]) > mem[_2482]:
                            mem[mem[_2482] + _2482 + 196] = 0
                        require ext_code.size(address(_2358))
                        call address(_2358).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _2423, address(_2463), 128, mem[_2482], mem[_2482 + 196 len ceil32(mem[_2482])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2298 = mem[96]
                        idx = idx + 1
                        s = _2358
                        s = _2463
                        s = _2423
                        continue 
                    if idx + 2 >= mem[96]:
                        _2464 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2464 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2464 + 36] = _2423
                        mem[_2464 + 68] = 0
                        mem[_2464 + 100] = this.address
                        mem[_2464 + 132] = 128
                        mem[_2464 + 164] = mem[_2464]
                        s = 0
                        while s < mem[_2464]:
                            mem[s + _2464 + 196] = mem[s + _2464 + 32]
                            _2298 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2464]) > mem[_2464]:
                            mem[mem[_2464] + _2464 + 196] = 0
                        require ext_code.size(address(_2358))
                        call address(_2358).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _2423, 0, address(this.address), 128, mem[_2464], mem[_2464 + 196 len ceil32(mem[_2464])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2298 = mem[96]
                        idx = idx + 1
                        s = _2358
                        s = this.address
                        s = _2423
                        continue 
                    require idx + -(_1766 / 2) + 1 < mem[96]
                    _2465 = mem[(32 * idx + -(_1766 / 2) + 1) + 128]
                    _2484 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2484 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2484 + 36] = _2423
                    mem[_2484 + 68] = 0
                    mem[_2484 + 100] = address(_2465)
                    mem[_2484 + 132] = 128
                    mem[_2484 + 164] = mem[_2484]
                    s = 0
                    while s < mem[_2484]:
                        mem[s + _2484 + 196] = mem[s + _2484 + 32]
                        _2298 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2484]) > mem[_2484]:
                        mem[mem[_2484] + _2484 + 196] = 0
                    require ext_code.size(address(_2358))
                    call address(_2358).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_2484]) + _2484 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2298 = mem[96]
                    idx = idx + 1
                    s = _2358
                    s = _2465
                    s = _2423
                    continue 
                require 0 < mem[_1765]
                _2379 = mem[_1765 + 32]
                mem[mem[64] + 4] = mem[(32 * idx - (_1766 / 2)) + 140 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_2379))
                call address(_2379).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2406 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2406] == bool(mem[_2406])
                require ext_code.size(address(_2358))
                staticcall address(_2358).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2466 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2466] == mem[_2466 + 12 len 20]
                require idx - (_1766 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _2535 = mem[(32 * idx - (_1766 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                require 0 < mem[_1765]
                if mem[_1765 + 44 len 20] == mem[_2466 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _2589 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2589 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2589 + 36] = 0
                        mem[_2589 + 68] = _2535
                        mem[_2589 + 100] = this.address
                        mem[_2589 + 132] = 128
                        mem[_2589 + 164] = mem[_2589]
                        s = 0
                        while s < mem[_2589]:
                            mem[s + _2589 + 196] = mem[s + _2589 + 32]
                            _2298 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2589]) > mem[_2589]:
                            mem[mem[_2589] + _2589 + 196] = 0
                        require ext_code.size(address(_2358))
                        call address(_2358).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _2535, address(this.address), 128, mem[_2589], mem[_2589 + 196 len ceil32(mem[_2589])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2298 = mem[96]
                        idx = idx + 1
                        s = _2358
                        s = this.address
                        s = _2535
                        continue 
                    require idx + -(_1766 / 2) + 1 < mem[96]
                    _2590 = mem[(32 * idx + -(_1766 / 2) + 1) + 128]
                    _2606 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2606 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2606 + 36] = 0
                    mem[_2606 + 68] = _2535
                    mem[_2606 + 100] = address(_2590)
                    mem[_2606 + 132] = 128
                    mem[_2606 + 164] = mem[_2606]
                    s = 0
                    while s < mem[_2606]:
                        mem[s + _2606 + 196] = mem[s + _2606 + 32]
                        _2298 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2606]) > mem[_2606]:
                        mem[mem[_2606] + _2606 + 196] = 0
                    require ext_code.size(address(_2358))
                    call address(_2358).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, _2535, address(_2590), 128, mem[_2606], mem[_2606 + 196 len ceil32(mem[_2606])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2298 = mem[96]
                    idx = idx + 1
                    s = _2358
                    s = _2590
                    s = _2535
                    continue 
                if idx + 2 >= mem[96]:
                    _2591 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2591 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2591 + 36] = _2535
                    mem[_2591 + 68] = 0
                    mem[_2591 + 100] = this.address
                    mem[_2591 + 132] = 128
                    mem[_2591 + 164] = mem[_2591]
                    s = 0
                    while s < mem[_2591]:
                        mem[s + _2591 + 196] = mem[s + _2591 + 32]
                        _2298 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2591]) > mem[_2591]:
                        mem[mem[_2591] + _2591 + 196] = 0
                    require ext_code.size(address(_2358))
                    call address(_2358).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _2535, 0, address(this.address), 128, mem[_2591], mem[_2591 + 196 len ceil32(mem[_2591])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2298 = mem[96]
                    idx = idx + 1
                    s = _2358
                    s = this.address
                    s = _2535
                    continue 
                require idx + -(_1766 / 2) + 1 < mem[96]
                _2592 = mem[(32 * idx + -(_1766 / 2) + 1) + 128]
                _2608 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_2608 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_2608 + 36] = _2535
                mem[_2608 + 68] = 0
                mem[_2608 + 100] = address(_2592)
                mem[_2608 + 132] = 128
                mem[_2608 + 164] = mem[_2608]
                s = 0
                while s < mem[_2608]:
                    mem[s + _2608 + 196] = mem[s + _2608 + 32]
                    _2298 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_2608]) > mem[_2608]:
                    mem[mem[_2608] + _2608 + 196] = 0
                require ext_code.size(address(_2358))
                call address(_2358).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(mem[_2608]) + _2608 + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2298 = mem[96]
                idx = idx + 1
                s = _2358
                s = _2592
                s = _2535
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            _2317 = mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
            require _1766 / 2 < mem[96]
            _2332 = mem[(16 * Mask(251, 1, _1766)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_2332))
            staticcall address(_2332).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2365 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_2365] < ext_call.return_data[0] - cd[4] + _2317:
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
    else:
        mem[0] = msg.sender
        mem[32] = 1
        if not stor1[msg.sender]:
            revert with 0, 'Ownable: caller is not the owner'
        require ('cd', 68).length / 2 <= test266151307()
        mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] = ('cd', 68).length / 2
        mem[64] = (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 192
        if not Mask(255, 1, ('cd', 68).length):
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                _1749 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1772 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1795 = mem[_1772]
                require mem[_1772] == mem[_1772 + 18 len 14]
                _1806 = mem[_1772 + 32]
                require mem[_1772 + 32] == mem[_1772 + 50 len 14]
                require mem[_1772 + 64] == mem[_1772 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1772 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_1772 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1772 + 18 len 14])
                        idx = idx + 1
                        s = _1749
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _1806) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _1795))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1772 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_1772 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1772 + 18 len 14])
                        idx = idx + 1
                        s = _1749
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _1806) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _1795))
                        continue 
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1772 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_1772 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1772 + 50 len 14])
                idx = idx + 1
                s = _1749
                s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _1795) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _1806))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _1769 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _1770 = mem[96]
            require mem[96] / 2 < mem[96]
            _1787 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_1787))
            staticcall address(_1787).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _2299 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _2299 - 1:
                require idx < mem[96]
                require 0 < mem[_1769]
                mem[_1769 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_1769]
                mem[_1769 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_1770 / 2) < mem[96]
                _2359 = mem[(32 * idx - (_1770 / 2)) + 128]
                if idx != _1770 / 2:
                    require ext_code.size(mem[(32 * idx - (_1770 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_1770 / 2)) + 140 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2390 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_2390] == mem[_2390 + 12 len 20]
                    require idx - (_1770 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2425 = mem[(32 * idx - (_1770 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_1769]
                    if mem[_1769 + 44 len 20] == mem[_2390 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _2467 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_2467 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_2467 + 36] = 0
                            mem[_2467 + 68] = _2425
                            mem[_2467 + 100] = this.address
                            mem[_2467 + 132] = 128
                            mem[_2467 + 164] = mem[_2467]
                            s = 0
                            while s < mem[_2467]:
                                mem[s + _2467 + 196] = mem[s + _2467 + 32]
                                _2299 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_2467]) > mem[_2467]:
                                mem[mem[_2467] + _2467 + 196] = 0
                            require ext_code.size(address(_2359))
                            call address(_2359).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _2425, address(this.address), 128, mem[_2467], mem[_2467 + 196 len ceil32(mem[_2467])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2299 = mem[96]
                            idx = idx + 1
                            s = _2359
                            s = this.address
                            s = _2425
                            continue 
                        require idx + -(_1770 / 2) + 1 < mem[96]
                        _2468 = mem[(32 * idx + -(_1770 / 2) + 1) + 128]
                        _2486 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2486 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2486 + 36] = 0
                        mem[_2486 + 68] = _2425
                        mem[_2486 + 100] = address(_2468)
                        mem[_2486 + 132] = 128
                        mem[_2486 + 164] = mem[_2486]
                        s = 0
                        while s < mem[_2486]:
                            mem[s + _2486 + 196] = mem[s + _2486 + 32]
                            _2299 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2486]) > mem[_2486]:
                            mem[mem[_2486] + _2486 + 196] = 0
                        require ext_code.size(address(_2359))
                        call address(_2359).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _2425, address(_2468), 128, mem[_2486], mem[_2486 + 196 len ceil32(mem[_2486])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2299 = mem[96]
                        idx = idx + 1
                        s = _2359
                        s = _2468
                        s = _2425
                        continue 
                    if idx + 2 >= mem[96]:
                        _2469 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2469 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2469 + 36] = _2425
                        mem[_2469 + 68] = 0
                        mem[_2469 + 100] = this.address
                        mem[_2469 + 132] = 128
                        mem[_2469 + 164] = mem[_2469]
                        s = 0
                        while s < mem[_2469]:
                            mem[s + _2469 + 196] = mem[s + _2469 + 32]
                            _2299 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2469]) > mem[_2469]:
                            mem[mem[_2469] + _2469 + 196] = 0
                        require ext_code.size(address(_2359))
                        call address(_2359).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_2469]) + _2469 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2299 = mem[96]
                        idx = idx + 1
                        s = _2359
                        s = this.address
                        s = _2425
                        continue 
                    require idx + -(_1770 / 2) + 1 < mem[96]
                    _2470 = mem[(32 * idx + -(_1770 / 2) + 1) + 128]
                    _2488 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2488 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2488 + 36] = _2425
                    mem[_2488 + 68] = 0
                    mem[_2488 + 100] = address(_2470)
                    mem[_2488 + 132] = 128
                    mem[_2488 + 164] = mem[_2488]
                    s = 0
                    while s < mem[_2488]:
                        mem[s + _2488 + 196] = mem[s + _2488 + 32]
                        _2299 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2488]) > mem[_2488]:
                        mem[mem[_2488] + _2488 + 196] = 0
                    require ext_code.size(address(_2359))
                    call address(_2359).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _2425, 0, address(_2470), 128, mem[_2488], mem[_2488 + 196 len ceil32(mem[_2488])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2299 = mem[96]
                    idx = idx + 1
                    s = _2359
                    s = _2470
                    s = _2425
                    continue 
                require 0 < mem[_1769]
                _2381 = mem[_1769 + 32]
                mem[mem[64] + 4] = mem[(32 * idx - (_1770 / 2)) + 140 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_2381))
                call address(_2381).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2407 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2407] == bool(mem[_2407])
                require ext_code.size(address(_2359))
                staticcall address(_2359).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2471 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2471] == mem[_2471 + 12 len 20]
                require idx - (_1770 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _2541 = mem[(32 * idx - (_1770 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                require 0 < mem[_1769]
                if mem[_1769 + 44 len 20] == mem[_2471 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _2593 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2593 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2593 + 36] = 0
                        mem[_2593 + 68] = _2541
                        mem[_2593 + 100] = this.address
                        mem[_2593 + 132] = 128
                        mem[_2593 + 164] = mem[_2593]
                        s = 0
                        while s < mem[_2593]:
                            mem[s + _2593 + 196] = mem[s + _2593 + 32]
                            _2299 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2593]) > mem[_2593]:
                            mem[mem[_2593] + _2593 + 196] = 0
                        require ext_code.size(address(_2359))
                        call address(_2359).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _2541, address(this.address), 128, mem[_2593], mem[_2593 + 196 len ceil32(mem[_2593])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2299 = mem[96]
                        idx = idx + 1
                        s = _2359
                        s = this.address
                        s = _2541
                        continue 
                    require idx + -(_1770 / 2) + 1 < mem[96]
                    _2594 = mem[(32 * idx + -(_1770 / 2) + 1) + 128]
                    _2610 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2610 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2610 + 36] = 0
                    mem[_2610 + 68] = _2541
                    mem[_2610 + 100] = address(_2594)
                    mem[_2610 + 132] = 128
                    mem[_2610 + 164] = mem[_2610]
                    s = 0
                    while s < mem[_2610]:
                        mem[s + _2610 + 196] = mem[s + _2610 + 32]
                        _2299 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2610]) > mem[_2610]:
                        mem[mem[_2610] + _2610 + 196] = 0
                    require ext_code.size(address(_2359))
                    call address(_2359).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_2610]) + _2610 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2299 = mem[96]
                    idx = idx + 1
                    s = _2359
                    s = _2594
                    s = _2541
                    continue 
                if idx + 2 >= mem[96]:
                    _2595 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2595 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2595 + 36] = _2541
                    mem[_2595 + 68] = 0
                    mem[_2595 + 100] = this.address
                    mem[_2595 + 132] = 128
                    mem[_2595 + 164] = mem[_2595]
                    s = 0
                    while s < mem[_2595]:
                        mem[s + _2595 + 196] = mem[s + _2595 + 32]
                        _2299 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2595]) > mem[_2595]:
                        mem[mem[_2595] + _2595 + 196] = 0
                    require ext_code.size(address(_2359))
                    call address(_2359).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _2541, 0, address(this.address), 128, mem[_2595], mem[_2595 + 196 len ceil32(mem[_2595])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2299 = mem[96]
                    idx = idx + 1
                    s = _2359
                    s = this.address
                    s = _2541
                    continue 
                require idx + -(_1770 / 2) + 1 < mem[96]
                _2596 = mem[(32 * idx + -(_1770 / 2) + 1) + 128]
                _2612 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_2612 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_2612 + 36] = _2541
                mem[_2612 + 68] = 0
                mem[_2612 + 100] = address(_2596)
                mem[_2612 + 132] = 128
                mem[_2612 + 164] = mem[_2612]
                s = 0
                while s < mem[_2612]:
                    mem[s + _2612 + 196] = mem[s + _2612 + 32]
                    _2299 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_2612]) > mem[_2612]:
                    mem[mem[_2612] + _2612 + 196] = 0
                require ext_code.size(address(_2359))
                call address(_2359).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args _2541, 0, address(_2596), 128, mem[_2612], mem[_2612 + 196 len ceil32(mem[_2612])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2299 = mem[96]
                idx = idx + 1
                s = _2359
                s = _2596
                s = _2541
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            _2321 = mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
            require _1770 / 2 < mem[96]
            _2335 = mem[(16 * Mask(251, 1, _1770)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_2335))
            staticcall address(_2335).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2369 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_2369] < ext_call.return_data[0] - cd[4] + _2321:
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                _1754 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1776 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1796 = mem[_1776]
                require mem[_1776] == mem[_1776 + 18 len 14]
                _1808 = mem[_1776 + 32]
                require mem[_1776 + 32] == mem[_1776 + 50 len 14]
                require mem[_1776 + 64] == mem[_1776 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1776 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_1776 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1776 + 18 len 14])
                        idx = idx + 1
                        s = _1754
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _1808) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _1796))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1776 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_1776 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1776 + 18 len 14])
                        idx = idx + 1
                        s = _1754
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _1808) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _1796))
                        continue 
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1776 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_1776 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_1776 + 50 len 14])
                idx = idx + 1
                s = _1754
                s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _1796) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _1808))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _1773 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _1774 = mem[96]
            require mem[96] / 2 < mem[96]
            _1790 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_1790))
            staticcall address(_1790).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _2300 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _2300 - 1:
                require idx < mem[96]
                require 0 < mem[_1773]
                mem[_1773 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_1773]
                mem[_1773 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_1774 / 2) < mem[96]
                _2360 = mem[(32 * idx - (_1774 / 2)) + 128]
                if idx != _1774 / 2:
                    require ext_code.size(mem[(32 * idx - (_1774 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_1774 / 2)) + 140 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2392 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_2392] == mem[_2392 + 12 len 20]
                    require idx - (_1774 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2427 = mem[(32 * idx - (_1774 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_1773]
                    if mem[_1773 + 44 len 20] == mem[_2392 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _2472 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_2472 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_2472 + 36] = 0
                            mem[_2472 + 68] = _2427
                            mem[_2472 + 100] = this.address
                            mem[_2472 + 132] = 128
                            mem[_2472 + 164] = mem[_2472]
                            s = 0
                            while s < mem[_2472]:
                                mem[s + _2472 + 196] = mem[s + _2472 + 32]
                                _2300 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_2472]) > mem[_2472]:
                                mem[mem[_2472] + _2472 + 196] = 0
                            require ext_code.size(address(_2360))
                            call address(_2360).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _2427, address(this.address), 128, mem[_2472], mem[_2472 + 196 len ceil32(mem[_2472])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2300 = mem[96]
                            idx = idx + 1
                            s = _2360
                            s = this.address
                            s = _2427
                            continue 
                        require idx + -(_1774 / 2) + 1 < mem[96]
                        _2473 = mem[(32 * idx + -(_1774 / 2) + 1) + 128]
                        _2490 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2490 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2490 + 36] = 0
                        mem[_2490 + 68] = _2427
                        mem[_2490 + 100] = address(_2473)
                        mem[_2490 + 132] = 128
                        mem[_2490 + 164] = mem[_2490]
                        s = 0
                        while s < mem[_2490]:
                            mem[s + _2490 + 196] = mem[s + _2490 + 32]
                            _2300 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2490]) > mem[_2490]:
                            mem[mem[_2490] + _2490 + 196] = 0
                        require ext_code.size(address(_2360))
                        call address(_2360).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _2427, address(_2473), 128, mem[_2490], mem[_2490 + 196 len ceil32(mem[_2490])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2300 = mem[96]
                        idx = idx + 1
                        s = _2360
                        s = _2473
                        s = _2427
                        continue 
                    if idx + 2 >= mem[96]:
                        _2474 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2474 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2474 + 36] = _2427
                        mem[_2474 + 68] = 0
                        mem[_2474 + 100] = this.address
                        mem[_2474 + 132] = 128
                        mem[_2474 + 164] = mem[_2474]
                        s = 0
                        while s < mem[_2474]:
                            mem[s + _2474 + 196] = mem[s + _2474 + 32]
                            _2300 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2474]) > mem[_2474]:
                            mem[mem[_2474] + _2474 + 196] = 0
                        require ext_code.size(address(_2360))
                        call address(_2360).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _2427, 0, address(this.address), 128, mem[_2474], mem[_2474 + 196 len ceil32(mem[_2474])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2300 = mem[96]
                        idx = idx + 1
                        s = _2360
                        s = this.address
                        s = _2427
                        continue 
                    require idx + -(_1774 / 2) + 1 < mem[96]
                    _2475 = mem[(32 * idx + -(_1774 / 2) + 1) + 128]
                    _2492 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2492 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2492 + 36] = _2427
                    mem[_2492 + 68] = 0
                    mem[_2492 + 100] = address(_2475)
                    mem[_2492 + 132] = 128
                    mem[_2492 + 164] = mem[_2492]
                    s = 0
                    while s < mem[_2492]:
                        mem[s + _2492 + 196] = mem[s + _2492 + 32]
                        _2300 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2492]) > mem[_2492]:
                        mem[mem[_2492] + _2492 + 196] = 0
                    require ext_code.size(address(_2360))
                    call address(_2360).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _2427, 0, address(_2475), 128, mem[_2492], mem[_2492 + 196 len ceil32(mem[_2492])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2300 = mem[96]
                    idx = idx + 1
                    s = _2360
                    s = _2475
                    s = _2427
                    continue 
                require 0 < mem[_1773]
                _2383 = mem[_1773 + 32]
                mem[mem[64] + 4] = mem[(32 * idx - (_1774 / 2)) + 140 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_2383))
                call address(_2383).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2408 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2408] == bool(mem[_2408])
                require ext_code.size(address(_2360))
                staticcall address(_2360).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2476 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2476] == mem[_2476 + 12 len 20]
                require idx - (_1774 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _2547 = mem[(32 * idx - (_1774 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                require 0 < mem[_1773]
                if mem[_1773 + 44 len 20] == mem[_2476 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _2597 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2597 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2597 + 36] = 0
                        mem[_2597 + 68] = _2547
                        mem[_2597 + 100] = this.address
                        mem[_2597 + 132] = 128
                        mem[_2597 + 164] = mem[_2597]
                        s = 0
                        while s < mem[_2597]:
                            mem[s + _2597 + 196] = mem[s + _2597 + 32]
                            _2300 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2597]) > mem[_2597]:
                            mem[mem[_2597] + _2597 + 196] = 0
                        require ext_code.size(address(_2360))
                        call address(_2360).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_2597]) + _2597 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2300 = mem[96]
                        idx = idx + 1
                        s = _2360
                        s = this.address
                        s = _2547
                        continue 
                    require idx + -(_1774 / 2) + 1 < mem[96]
                    _2598 = mem[(32 * idx + -(_1774 / 2) + 1) + 128]
                    _2614 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2614 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2614 + 36] = 0
                    mem[_2614 + 68] = _2547
                    mem[_2614 + 100] = address(_2598)
                    mem[_2614 + 132] = 128
                    mem[_2614 + 164] = mem[_2614]
                    s = 0
                    while s < mem[_2614]:
                        mem[s + _2614 + 196] = mem[s + _2614 + 32]
                        _2300 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2614]) > mem[_2614]:
                        mem[mem[_2614] + _2614 + 196] = 0
                    require ext_code.size(address(_2360))
                    call address(_2360).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_2614]) + _2614 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2300 = mem[96]
                    idx = idx + 1
                    s = _2360
                    s = _2598
                    s = _2547
                    continue 
                if idx + 2 >= mem[96]:
                    _2599 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2599 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2599 + 36] = _2547
                    mem[_2599 + 68] = 0
                    mem[_2599 + 100] = this.address
                    mem[_2599 + 132] = 128
                    mem[_2599 + 164] = mem[_2599]
                    s = 0
                    while s < mem[_2599]:
                        mem[s + _2599 + 196] = mem[s + _2599 + 32]
                        _2300 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2599]) > mem[_2599]:
                        mem[mem[_2599] + _2599 + 196] = 0
                    require ext_code.size(address(_2360))
                    call address(_2360).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _2547, 0, address(this.address), 128, mem[_2599], mem[_2599 + 196 len ceil32(mem[_2599])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2300 = mem[96]
                    idx = idx + 1
                    s = _2360
                    s = this.address
                    s = _2547
                    continue 
                require idx + -(_1774 / 2) + 1 < mem[96]
                _2600 = mem[(32 * idx + -(_1774 / 2) + 1) + 128]
                _2616 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_2616 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_2616 + 36] = _2547
                mem[_2616 + 68] = 0
                mem[_2616 + 100] = address(_2600)
                mem[_2616 + 132] = 128
                mem[_2616 + 164] = mem[_2616]
                s = 0
                while s < mem[_2616]:
                    mem[s + _2616 + 196] = mem[s + _2616 + 32]
                    _2300 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_2616]) > mem[_2616]:
                    mem[mem[_2616] + _2616 + 196] = 0
                require ext_code.size(address(_2360))
                call address(_2360).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(mem[_2616]) + _2616 + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2300 = mem[96]
                idx = idx + 1
                s = _2360
                s = _2600
                s = _2547
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            _2325 = mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
            require _1774 / 2 < mem[96]
            _2338 = mem[(16 * Mask(251, 1, _1774)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_2338))
            staticcall address(_2338).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2373 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_2373] < ext_call.return_data[0] - cd[4] + _2325:
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
}

function sub_2a6ec55f(?) {
    require calldata.size - 4 >= 128
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require (32 * ('cd', 68).length) + 128 >= 96 and (32 * ('cd', 68).length) + 128 <= test266151307()
    mem[96] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = 128
    while idx < ('cd', 68).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[100] <= test266151307()
    require cd[100] + 35 < calldata.size
    require ('cd', 100).length <= test266151307()
    require (32 * ('cd', 100).length) + 160 >= 128 and (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160 <= test266151307()
    mem[(32 * ('cd', 68).length) + 128] = ('cd', 100).length
    require calldata.size >= cd[100] + (32 * ('cd', 100).length) + 36
    idx = 0
    s = cd[100] + 36
    t = (32 * ('cd', 68).length) + 160
    while idx < ('cd', 100).length:
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if msg.sender == owner:
        require ('cd', 68).length / 2 <= test266151307()
        mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] = ('cd', 68).length / 2
        mem[64] = (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 192
        if not Mask(255, 1, ('cd', 68).length):
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                _2135 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2160 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2189 = mem[_2160]
                require mem[_2160] == mem[_2160 + 18 len 14]
                _2198 = mem[_2160 + 32]
                require mem[_2160 + 32] == mem[_2160 + 50 len 14]
                require mem[_2160 + 64] == mem[_2160 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2160 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2160 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2160 + 18 len 14])
                        idx = idx + 1
                        s = _2135
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2198) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2189))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2160 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2160 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2160 + 18 len 14])
                        idx = idx + 1
                        s = _2135
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2198) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2189))
                        continue 
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2160 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2160 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2160 + 50 len 14])
                idx = idx + 1
                s = _2135
                s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2189) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2198))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2157 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2158 = mem[96]
            require mem[96] / 2 < mem[96]
            _2177 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2177))
            staticcall address(_2177).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _2825 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _2825 - 1:
                require idx < mem[96]
                require 0 < mem[_2157]
                mem[_2157 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2157]
                mem[_2157 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2158 / 2) < mem[96]
                _2874 = mem[(32 * idx - (_2158 / 2)) + 128]
                if idx != _2158 / 2:
                    require ext_code.size(mem[(32 * idx - (_2158 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2158 / 2)) + 140 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2905 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_2905] == mem[_2905 + 12 len 20]
                    require 0 < mem[_2157]
                    require idx - (_2158 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    if mem[_2157 + 44 len 20] == mem[_2905 + 12 len 20]:
                        _2949 = mem[(32 * idx - (_2158 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        if idx + 2 >= mem[96]:
                            _2981 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_2981 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_2981 + 36] = 0
                            mem[_2981 + 68] = _2949
                            mem[_2981 + 100] = this.address
                            mem[_2981 + 132] = 128
                            mem[_2981 + 164] = mem[_2981]
                            s = 0
                            while s < mem[_2981]:
                                mem[s + _2981 + 196] = mem[s + _2981 + 32]
                                _2825 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_2981]) > mem[_2981]:
                                mem[mem[_2981] + _2981 + 196] = 0
                            require ext_code.size(address(_2874))
                            call address(_2874).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_2981]) + _2981 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx - (_2158 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            _2825 = mem[96]
                            idx = idx + 1
                            s = _2874
                            s = this.address
                            s = mem[(32 * idx - (_2158 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                            continue 
                        require idx + -(_2158 / 2) + 1 < mem[96]
                        _2982 = mem[(32 * idx + -(_2158 / 2) + 1) + 128]
                        _3002 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3002 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3002 + 36] = 0
                        mem[_3002 + 68] = _2949
                        mem[_3002 + 100] = address(_2982)
                        mem[_3002 + 132] = 128
                        mem[_3002 + 164] = mem[_3002]
                        s = 0
                        while s < mem[_3002]:
                            mem[s + _3002 + 196] = mem[s + _3002 + 32]
                            _2825 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3002]) > mem[_3002]:
                            mem[mem[_3002] + _3002 + 196] = 0
                        require ext_code.size(address(_2874))
                        call address(_2874).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3002]) + _3002 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2158 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2825 = mem[96]
                        idx = idx + 1
                        s = _2874
                        s = _2982
                        s = mem[(32 * idx - (_2158 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    _2950 = mem[(32 * idx - (_2158 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if idx + 2 >= mem[96]:
                        _2983 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2983 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2983 + 36] = _2950
                        mem[_2983 + 68] = 0
                        mem[_2983 + 100] = this.address
                        mem[_2983 + 132] = 128
                        mem[_2983 + 164] = mem[_2983]
                        s = 0
                        while s < mem[_2983]:
                            mem[s + _2983 + 196] = mem[s + _2983 + 32]
                            _2825 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2983]) > mem[_2983]:
                            mem[mem[_2983] + _2983 + 196] = 0
                        require ext_code.size(address(_2874))
                        call address(_2874).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _2950, 0, address(this.address), 128, mem[_2983], mem[_2983 + 196 len ceil32(mem[_2983])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2158 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2825 = mem[96]
                        idx = idx + 1
                        s = _2874
                        s = this.address
                        s = mem[(32 * idx - (_2158 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    require idx + -(_2158 / 2) + 1 < mem[96]
                    _2984 = mem[(32 * idx + -(_2158 / 2) + 1) + 128]
                    _3004 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3004 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3004 + 36] = _2950
                    mem[_3004 + 68] = 0
                    mem[_3004 + 100] = address(_2984)
                    mem[_3004 + 132] = 128
                    mem[_3004 + 164] = mem[_3004]
                    s = 0
                    while s < mem[_3004]:
                        mem[s + _3004 + 196] = mem[s + _3004 + 32]
                        _2825 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3004]) > mem[_3004]:
                        mem[mem[_3004] + _3004 + 196] = 0
                    require ext_code.size(address(_2874))
                    call address(_2874).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _2950, 0, address(_2984), 128, mem[_3004], mem[_3004 + 196 len ceil32(mem[_3004])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2158 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2825 = mem[96]
                    idx = idx + 1
                    s = _2874
                    s = _2984
                    s = mem[(32 * idx - (_2158 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                require 0 < mem[_2157]
                _2894 = mem[_2157 + 32]
                mem[mem[64] + 4] = mem[(32 * idx - (_2158 / 2)) + 140 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_2894))
                call address(_2894).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2922 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2922] == bool(mem[_2922])
                require ext_code.size(address(_2874))
                staticcall address(_2874).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2985 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2985] == mem[_2985 + 12 len 20]
                require 0 < mem[_2157]
                require idx - (_2158 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                if mem[_2157 + 44 len 20] == mem[_2985 + 12 len 20]:
                    _3097 = mem[(32 * idx - (_2158 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if idx + 2 >= mem[96]:
                        _3181 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3181 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3181 + 36] = 0
                        mem[_3181 + 68] = _3097
                        mem[_3181 + 100] = this.address
                        mem[_3181 + 132] = 128
                        mem[_3181 + 164] = mem[_3181]
                        s = 0
                        while s < mem[_3181]:
                            mem[s + _3181 + 196] = mem[s + _3181 + 32]
                            _2825 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3181]) > mem[_3181]:
                            mem[mem[_3181] + _3181 + 196] = 0
                        require ext_code.size(address(_2874))
                        call address(_2874).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3181]) + _3181 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2158 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2825 = mem[96]
                        idx = idx + 1
                        s = _2874
                        s = this.address
                        s = mem[(32 * idx - (_2158 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    require idx + -(_2158 / 2) + 1 < mem[96]
                    _3182 = mem[(32 * idx + -(_2158 / 2) + 1) + 128]
                    _3198 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3198 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3198 + 36] = 0
                    mem[_3198 + 68] = _3097
                    mem[_3198 + 100] = address(_3182)
                    mem[_3198 + 132] = 128
                    mem[_3198 + 164] = mem[_3198]
                    s = 0
                    while s < mem[_3198]:
                        mem[s + _3198 + 196] = mem[s + _3198 + 32]
                        _2825 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3198]) > mem[_3198]:
                        mem[mem[_3198] + _3198 + 196] = 0
                    require ext_code.size(address(_2874))
                    call address(_2874).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, _3097, address(_3182), 128, mem[_3198], mem[_3198 + 196 len ceil32(mem[_3198])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2158 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2825 = mem[96]
                    idx = idx + 1
                    s = _2874
                    s = _3182
                    s = mem[(32 * idx - (_2158 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                _3098 = mem[(32 * idx - (_2158 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                if idx + 2 >= mem[96]:
                    _3183 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3183 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3183 + 36] = _3098
                    mem[_3183 + 68] = 0
                    mem[_3183 + 100] = this.address
                    mem[_3183 + 132] = 128
                    mem[_3183 + 164] = mem[_3183]
                    s = 0
                    while s < mem[_3183]:
                        mem[s + _3183 + 196] = mem[s + _3183 + 32]
                        _2825 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3183]) > mem[_3183]:
                        mem[mem[_3183] + _3183 + 196] = 0
                    require ext_code.size(address(_2874))
                    call address(_2874).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _3098, 0, address(this.address), 128, mem[_3183], mem[_3183 + 196 len ceil32(mem[_3183])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2158 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2825 = mem[96]
                    idx = idx + 1
                    s = _2874
                    s = this.address
                    s = mem[(32 * idx - (_2158 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                require idx + -(_2158 / 2) + 1 < mem[96]
                _3184 = mem[(32 * idx + -(_2158 / 2) + 1) + 128]
                _3200 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3200 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3200 + 36] = _3098
                mem[_3200 + 68] = 0
                mem[_3200 + 100] = address(_3184)
                mem[_3200 + 132] = 128
                mem[_3200 + 164] = mem[_3200]
                s = 0
                while s < mem[_3200]:
                    mem[s + _3200 + 196] = mem[s + _3200 + 32]
                    _2825 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3200]) > mem[_3200]:
                    mem[mem[_3200] + _3200 + 196] = 0
                require ext_code.size(address(_2874))
                call address(_2874).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args _3098, 0, address(_3184), 128, mem[_3200], mem[_3200 + 196 len ceil32(mem[_3200])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require idx - (_2158 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _2825 = mem[96]
                idx = idx + 1
                s = _2874
                s = _3184
                s = mem[(32 * idx - (_2158 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                continue 
            require _2158 / 2 < mem[96]
            _2837 = mem[(16 * Mask(251, 1, _2158)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_2837))
            staticcall address(_2837).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2873 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_2873] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                _2140 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2164 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2190 = mem[_2164]
                require mem[_2164] == mem[_2164 + 18 len 14]
                _2200 = mem[_2164 + 32]
                require mem[_2164 + 32] == mem[_2164 + 50 len 14]
                require mem[_2164 + 64] == mem[_2164 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2164 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2164 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2164 + 18 len 14])
                        idx = idx + 1
                        s = _2140
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2200) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2190))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2164 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2164 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2164 + 18 len 14])
                        idx = idx + 1
                        s = _2140
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2200) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2190))
                        continue 
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2164 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2164 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2164 + 50 len 14])
                idx = idx + 1
                s = _2140
                s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2190) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2200))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2161 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2162 = mem[96]
            require mem[96] / 2 < mem[96]
            _2180 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2180))
            staticcall address(_2180).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _2826 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _2826 - 1:
                require idx < mem[96]
                require 0 < mem[_2161]
                mem[_2161 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2161]
                mem[_2161 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2162 / 2) < mem[96]
                _2876 = mem[(32 * idx - (_2162 / 2)) + 128]
                if idx != _2162 / 2:
                    require ext_code.size(mem[(32 * idx - (_2162 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2162 / 2)) + 140 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2906 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_2906] == mem[_2906 + 12 len 20]
                    require 0 < mem[_2161]
                    require idx - (_2162 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    if mem[_2161 + 44 len 20] == mem[_2906 + 12 len 20]:
                        _2951 = mem[(32 * idx - (_2162 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        if idx + 2 >= mem[96]:
                            _2986 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_2986 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_2986 + 36] = 0
                            mem[_2986 + 68] = _2951
                            mem[_2986 + 100] = this.address
                            mem[_2986 + 132] = 128
                            mem[_2986 + 164] = mem[_2986]
                            s = 0
                            while s < mem[_2986]:
                                mem[s + _2986 + 196] = mem[s + _2986 + 32]
                                _2826 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_2986]) > mem[_2986]:
                                mem[mem[_2986] + _2986 + 196] = 0
                            require ext_code.size(address(_2876))
                            call address(_2876).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _2951, address(this.address), 128, mem[_2986], mem[_2986 + 196 len ceil32(mem[_2986])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx - (_2162 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            _2826 = mem[96]
                            idx = idx + 1
                            s = _2876
                            s = this.address
                            s = mem[(32 * idx - (_2162 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                            continue 
                        require idx + -(_2162 / 2) + 1 < mem[96]
                        _2987 = mem[(32 * idx + -(_2162 / 2) + 1) + 128]
                        _3006 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3006 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3006 + 36] = 0
                        mem[_3006 + 68] = _2951
                        mem[_3006 + 100] = address(_2987)
                        mem[_3006 + 132] = 128
                        mem[_3006 + 164] = mem[_3006]
                        s = 0
                        while s < mem[_3006]:
                            mem[s + _3006 + 196] = mem[s + _3006 + 32]
                            _2826 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3006]) > mem[_3006]:
                            mem[mem[_3006] + _3006 + 196] = 0
                        require ext_code.size(address(_2876))
                        call address(_2876).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3006]) + _3006 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2162 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2826 = mem[96]
                        idx = idx + 1
                        s = _2876
                        s = _2987
                        s = mem[(32 * idx - (_2162 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    _2952 = mem[(32 * idx - (_2162 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if idx + 2 >= mem[96]:
                        _2988 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2988 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2988 + 36] = _2952
                        mem[_2988 + 68] = 0
                        mem[_2988 + 100] = this.address
                        mem[_2988 + 132] = 128
                        mem[_2988 + 164] = mem[_2988]
                        s = 0
                        while s < mem[_2988]:
                            mem[s + _2988 + 196] = mem[s + _2988 + 32]
                            _2826 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2988]) > mem[_2988]:
                            mem[mem[_2988] + _2988 + 196] = 0
                        require ext_code.size(address(_2876))
                        call address(_2876).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_2988]) + _2988 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2162 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2826 = mem[96]
                        idx = idx + 1
                        s = _2876
                        s = this.address
                        s = mem[(32 * idx - (_2162 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    require idx + -(_2162 / 2) + 1 < mem[96]
                    _2989 = mem[(32 * idx + -(_2162 / 2) + 1) + 128]
                    _3008 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3008 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3008 + 36] = _2952
                    mem[_3008 + 68] = 0
                    mem[_3008 + 100] = address(_2989)
                    mem[_3008 + 132] = 128
                    mem[_3008 + 164] = mem[_3008]
                    s = 0
                    while s < mem[_3008]:
                        mem[s + _3008 + 196] = mem[s + _3008 + 32]
                        _2826 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3008]) > mem[_3008]:
                        mem[mem[_3008] + _3008 + 196] = 0
                    require ext_code.size(address(_2876))
                    call address(_2876).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3008]) + _3008 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2162 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2826 = mem[96]
                    idx = idx + 1
                    s = _2876
                    s = _2989
                    s = mem[(32 * idx - (_2162 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                require 0 < mem[_2161]
                _2897 = mem[_2161 + 32]
                mem[mem[64] + 4] = mem[(32 * idx - (_2162 / 2)) + 140 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_2897))
                call address(_2897).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2924 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2924] == bool(mem[_2924])
                require ext_code.size(address(_2876))
                staticcall address(_2876).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2990 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2990] == mem[_2990 + 12 len 20]
                require 0 < mem[_2161]
                require idx - (_2162 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                if mem[_2161 + 44 len 20] == mem[_2990 + 12 len 20]:
                    _3103 = mem[(32 * idx - (_2162 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if idx + 2 >= mem[96]:
                        _3185 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3185 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3185 + 36] = 0
                        mem[_3185 + 68] = _3103
                        mem[_3185 + 100] = this.address
                        mem[_3185 + 132] = 128
                        mem[_3185 + 164] = mem[_3185]
                        s = 0
                        while s < mem[_3185]:
                            mem[s + _3185 + 196] = mem[s + _3185 + 32]
                            _2826 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3185]) > mem[_3185]:
                            mem[mem[_3185] + _3185 + 196] = 0
                        require ext_code.size(address(_2876))
                        call address(_2876).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _3103, address(this.address), 128, mem[_3185], mem[_3185 + 196 len ceil32(mem[_3185])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2162 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2826 = mem[96]
                        idx = idx + 1
                        s = _2876
                        s = this.address
                        s = mem[(32 * idx - (_2162 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    require idx + -(_2162 / 2) + 1 < mem[96]
                    _3186 = mem[(32 * idx + -(_2162 / 2) + 1) + 128]
                    _3202 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3202 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3202 + 36] = 0
                    mem[_3202 + 68] = _3103
                    mem[_3202 + 100] = address(_3186)
                    mem[_3202 + 132] = 128
                    mem[_3202 + 164] = mem[_3202]
                    s = 0
                    while s < mem[_3202]:
                        mem[s + _3202 + 196] = mem[s + _3202 + 32]
                        _2826 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3202]) > mem[_3202]:
                        mem[mem[_3202] + _3202 + 196] = 0
                    require ext_code.size(address(_2876))
                    call address(_2876).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, _3103, address(_3186), 128, mem[_3202], mem[_3202 + 196 len ceil32(mem[_3202])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2162 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2826 = mem[96]
                    idx = idx + 1
                    s = _2876
                    s = _3186
                    s = mem[(32 * idx - (_2162 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                _3104 = mem[(32 * idx - (_2162 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                if idx + 2 >= mem[96]:
                    _3187 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3187 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3187 + 36] = _3104
                    mem[_3187 + 68] = 0
                    mem[_3187 + 100] = this.address
                    mem[_3187 + 132] = 128
                    mem[_3187 + 164] = mem[_3187]
                    s = 0
                    while s < mem[_3187]:
                        mem[s + _3187 + 196] = mem[s + _3187 + 32]
                        _2826 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3187]) > mem[_3187]:
                        mem[mem[_3187] + _3187 + 196] = 0
                    require ext_code.size(address(_2876))
                    call address(_2876).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3187]) + _3187 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2162 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2826 = mem[96]
                    idx = idx + 1
                    s = _2876
                    s = this.address
                    s = mem[(32 * idx - (_2162 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                require idx + -(_2162 / 2) + 1 < mem[96]
                _3188 = mem[(32 * idx + -(_2162 / 2) + 1) + 128]
                _3204 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3204 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3204 + 36] = _3104
                mem[_3204 + 68] = 0
                mem[_3204 + 100] = address(_3188)
                mem[_3204 + 132] = 128
                mem[_3204 + 164] = mem[_3204]
                s = 0
                while s < mem[_3204]:
                    mem[s + _3204 + 196] = mem[s + _3204 + 32]
                    _2826 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3204]) > mem[_3204]:
                    mem[mem[_3204] + _3204 + 196] = 0
                require ext_code.size(address(_2876))
                call address(_2876).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(mem[_3204]) + _3204 + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require idx - (_2162 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _2826 = mem[96]
                idx = idx + 1
                s = _2876
                s = _3188
                s = mem[(32 * idx - (_2162 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                continue 
            require _2162 / 2 < mem[96]
            _2841 = mem[(16 * Mask(251, 1, _2162)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_2841))
            staticcall address(_2841).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2875 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_2875] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
    else:
        mem[0] = msg.sender
        mem[32] = 1
        if not stor1[msg.sender]:
            revert with 0, 'Ownable: caller is not the owner'
        require ('cd', 68).length / 2 <= test266151307()
        mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] = ('cd', 68).length / 2
        mem[64] = (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 192
        if not Mask(255, 1, ('cd', 68).length):
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                _2145 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2168 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2191 = mem[_2168]
                require mem[_2168] == mem[_2168 + 18 len 14]
                _2202 = mem[_2168 + 32]
                require mem[_2168 + 32] == mem[_2168 + 50 len 14]
                require mem[_2168 + 64] == mem[_2168 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2168 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2168 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2168 + 18 len 14])
                        idx = idx + 1
                        s = _2145
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2202) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2191))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2168 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2168 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2168 + 18 len 14])
                        idx = idx + 1
                        s = _2145
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2202) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2191))
                        continue 
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2168 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2168 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2168 + 50 len 14])
                idx = idx + 1
                s = _2145
                s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2191) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2202))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2165 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2166 = mem[96]
            require mem[96] / 2 < mem[96]
            _2183 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2183))
            staticcall address(_2183).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _2827 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _2827 - 1:
                require idx < mem[96]
                require 0 < mem[_2165]
                mem[_2165 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2165]
                mem[_2165 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2166 / 2) < mem[96]
                _2878 = mem[(32 * idx - (_2166 / 2)) + 128]
                if idx != _2166 / 2:
                    require ext_code.size(mem[(32 * idx - (_2166 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2166 / 2)) + 140 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2907 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_2907] == mem[_2907 + 12 len 20]
                    require 0 < mem[_2165]
                    require idx - (_2166 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    if mem[_2165 + 44 len 20] == mem[_2907 + 12 len 20]:
                        _2953 = mem[(32 * idx - (_2166 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        if idx + 2 >= mem[96]:
                            _2991 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_2991 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_2991 + 36] = 0
                            mem[_2991 + 68] = _2953
                            mem[_2991 + 100] = this.address
                            mem[_2991 + 132] = 128
                            mem[_2991 + 164] = mem[_2991]
                            s = 0
                            while s < mem[_2991]:
                                mem[s + _2991 + 196] = mem[s + _2991 + 32]
                                _2827 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_2991]) > mem[_2991]:
                                mem[mem[_2991] + _2991 + 196] = 0
                            require ext_code.size(address(_2878))
                            call address(_2878).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _2953, address(this.address), 128, mem[_2991], mem[_2991 + 196 len ceil32(mem[_2991])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx - (_2166 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            _2827 = mem[96]
                            idx = idx + 1
                            s = _2878
                            s = this.address
                            s = mem[(32 * idx - (_2166 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                            continue 
                        require idx + -(_2166 / 2) + 1 < mem[96]
                        _2992 = mem[(32 * idx + -(_2166 / 2) + 1) + 128]
                        _3010 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3010 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3010 + 36] = 0
                        mem[_3010 + 68] = _2953
                        mem[_3010 + 100] = address(_2992)
                        mem[_3010 + 132] = 128
                        mem[_3010 + 164] = mem[_3010]
                        s = 0
                        while s < mem[_3010]:
                            mem[s + _3010 + 196] = mem[s + _3010 + 32]
                            _2827 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3010]) > mem[_3010]:
                            mem[mem[_3010] + _3010 + 196] = 0
                        require ext_code.size(address(_2878))
                        call address(_2878).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3010]) + _3010 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2166 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2827 = mem[96]
                        idx = idx + 1
                        s = _2878
                        s = _2992
                        s = mem[(32 * idx - (_2166 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    _2954 = mem[(32 * idx - (_2166 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if idx + 2 >= mem[96]:
                        _2993 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2993 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2993 + 36] = _2954
                        mem[_2993 + 68] = 0
                        mem[_2993 + 100] = this.address
                        mem[_2993 + 132] = 128
                        mem[_2993 + 164] = mem[_2993]
                        s = 0
                        while s < mem[_2993]:
                            mem[s + _2993 + 196] = mem[s + _2993 + 32]
                            _2827 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2993]) > mem[_2993]:
                            mem[mem[_2993] + _2993 + 196] = 0
                        require ext_code.size(address(_2878))
                        call address(_2878).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _2954, 0, address(this.address), 128, mem[_2993], mem[_2993 + 196 len ceil32(mem[_2993])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2166 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2827 = mem[96]
                        idx = idx + 1
                        s = _2878
                        s = this.address
                        s = mem[(32 * idx - (_2166 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    require idx + -(_2166 / 2) + 1 < mem[96]
                    _2994 = mem[(32 * idx + -(_2166 / 2) + 1) + 128]
                    _3012 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3012 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3012 + 36] = _2954
                    mem[_3012 + 68] = 0
                    mem[_3012 + 100] = address(_2994)
                    mem[_3012 + 132] = 128
                    mem[_3012 + 164] = mem[_3012]
                    s = 0
                    while s < mem[_3012]:
                        mem[s + _3012 + 196] = mem[s + _3012 + 32]
                        _2827 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3012]) > mem[_3012]:
                        mem[mem[_3012] + _3012 + 196] = 0
                    require ext_code.size(address(_2878))
                    call address(_2878).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3012]) + _3012 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2166 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2827 = mem[96]
                    idx = idx + 1
                    s = _2878
                    s = _2994
                    s = mem[(32 * idx - (_2166 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                require 0 < mem[_2165]
                _2900 = mem[_2165 + 32]
                mem[mem[64] + 4] = mem[(32 * idx - (_2166 / 2)) + 140 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_2900))
                call address(_2900).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2926 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2926] == bool(mem[_2926])
                require ext_code.size(address(_2878))
                staticcall address(_2878).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2995 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2995] == mem[_2995 + 12 len 20]
                require 0 < mem[_2165]
                require idx - (_2166 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                if mem[_2165 + 44 len 20] == mem[_2995 + 12 len 20]:
                    _3109 = mem[(32 * idx - (_2166 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if idx + 2 >= mem[96]:
                        _3189 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3189 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3189 + 36] = 0
                        mem[_3189 + 68] = _3109
                        mem[_3189 + 100] = this.address
                        mem[_3189 + 132] = 128
                        mem[_3189 + 164] = mem[_3189]
                        s = 0
                        while s < mem[_3189]:
                            mem[s + _3189 + 196] = mem[s + _3189 + 32]
                            _2827 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3189]) > mem[_3189]:
                            mem[mem[_3189] + _3189 + 196] = 0
                        require ext_code.size(address(_2878))
                        call address(_2878).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3189]) + _3189 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2166 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2827 = mem[96]
                        idx = idx + 1
                        s = _2878
                        s = this.address
                        s = mem[(32 * idx - (_2166 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    require idx + -(_2166 / 2) + 1 < mem[96]
                    _3190 = mem[(32 * idx + -(_2166 / 2) + 1) + 128]
                    _3206 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3206 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3206 + 36] = 0
                    mem[_3206 + 68] = _3109
                    mem[_3206 + 100] = address(_3190)
                    mem[_3206 + 132] = 128
                    mem[_3206 + 164] = mem[_3206]
                    s = 0
                    while s < mem[_3206]:
                        mem[s + _3206 + 196] = mem[s + _3206 + 32]
                        _2827 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3206]) > mem[_3206]:
                        mem[mem[_3206] + _3206 + 196] = 0
                    require ext_code.size(address(_2878))
                    call address(_2878).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, _3109, address(_3190), 128, mem[_3206], mem[_3206 + 196 len ceil32(mem[_3206])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2166 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2827 = mem[96]
                    idx = idx + 1
                    s = _2878
                    s = _3190
                    s = mem[(32 * idx - (_2166 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                _3110 = mem[(32 * idx - (_2166 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                if idx + 2 >= mem[96]:
                    _3191 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3191 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3191 + 36] = _3110
                    mem[_3191 + 68] = 0
                    mem[_3191 + 100] = this.address
                    mem[_3191 + 132] = 128
                    mem[_3191 + 164] = mem[_3191]
                    s = 0
                    while s < mem[_3191]:
                        mem[s + _3191 + 196] = mem[s + _3191 + 32]
                        _2827 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3191]) > mem[_3191]:
                        mem[mem[_3191] + _3191 + 196] = 0
                    require ext_code.size(address(_2878))
                    call address(_2878).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _3110, 0, address(this.address), 128, mem[_3191], mem[_3191 + 196 len ceil32(mem[_3191])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2166 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2827 = mem[96]
                    idx = idx + 1
                    s = _2878
                    s = this.address
                    s = mem[(32 * idx - (_2166 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                require idx + -(_2166 / 2) + 1 < mem[96]
                _3192 = mem[(32 * idx + -(_2166 / 2) + 1) + 128]
                _3208 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3208 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3208 + 36] = _3110
                mem[_3208 + 68] = 0
                mem[_3208 + 100] = address(_3192)
                mem[_3208 + 132] = 128
                mem[_3208 + 164] = mem[_3208]
                s = 0
                while s < mem[_3208]:
                    mem[s + _3208 + 196] = mem[s + _3208 + 32]
                    _2827 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3208]) > mem[_3208]:
                    mem[mem[_3208] + _3208 + 196] = 0
                require ext_code.size(address(_2878))
                call address(_2878).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args _3110, 0, address(_3192), 128, mem[_3208], mem[_3208 + 196 len ceil32(mem[_3208])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require idx - (_2166 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _2827 = mem[96]
                idx = idx + 1
                s = _2878
                s = _3192
                s = mem[(32 * idx - (_2166 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                continue 
            require _2166 / 2 < mem[96]
            _2845 = mem[(16 * Mask(251, 1, _2166)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_2845))
            staticcall address(_2845).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2877 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_2877] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                _2150 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2172 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2192 = mem[_2172]
                require mem[_2172] == mem[_2172 + 18 len 14]
                _2204 = mem[_2172 + 32]
                require mem[_2172 + 32] == mem[_2172 + 50 len 14]
                require mem[_2172 + 64] == mem[_2172 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2172 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2172 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2172 + 18 len 14])
                        idx = idx + 1
                        s = _2150
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2204) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2192))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2172 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2172 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2172 + 18 len 14])
                        idx = idx + 1
                        s = _2150
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2204) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2192))
                        continue 
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2172 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2172 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2172 + 50 len 14])
                idx = idx + 1
                s = _2150
                s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2192) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2204))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2169 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2170 = mem[96]
            require mem[96] / 2 < mem[96]
            _2186 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2186))
            staticcall address(_2186).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _2828 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _2828 - 1:
                require idx < mem[96]
                require 0 < mem[_2169]
                mem[_2169 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2169]
                mem[_2169 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2170 / 2) < mem[96]
                _2880 = mem[(32 * idx - (_2170 / 2)) + 128]
                if idx != _2170 / 2:
                    require ext_code.size(mem[(32 * idx - (_2170 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2170 / 2)) + 140 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2908 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_2908] == mem[_2908 + 12 len 20]
                    require 0 < mem[_2169]
                    require idx - (_2170 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    if mem[_2169 + 44 len 20] == mem[_2908 + 12 len 20]:
                        _2955 = mem[(32 * idx - (_2170 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        if idx + 2 >= mem[96]:
                            _2996 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_2996 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_2996 + 36] = 0
                            mem[_2996 + 68] = _2955
                            mem[_2996 + 100] = this.address
                            mem[_2996 + 132] = 128
                            mem[_2996 + 164] = mem[_2996]
                            s = 0
                            while s < mem[_2996]:
                                mem[s + _2996 + 196] = mem[s + _2996 + 32]
                                _2828 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_2996]) > mem[_2996]:
                                mem[mem[_2996] + _2996 + 196] = 0
                            require ext_code.size(address(_2880))
                            call address(_2880).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_2996]) + _2996 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx - (_2170 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            _2828 = mem[96]
                            idx = idx + 1
                            s = _2880
                            s = this.address
                            s = mem[(32 * idx - (_2170 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                            continue 
                        require idx + -(_2170 / 2) + 1 < mem[96]
                        _2997 = mem[(32 * idx + -(_2170 / 2) + 1) + 128]
                        _3014 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3014 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3014 + 36] = 0
                        mem[_3014 + 68] = _2955
                        mem[_3014 + 100] = address(_2997)
                        mem[_3014 + 132] = 128
                        mem[_3014 + 164] = mem[_3014]
                        s = 0
                        while s < mem[_3014]:
                            mem[s + _3014 + 196] = mem[s + _3014 + 32]
                            _2828 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3014]) > mem[_3014]:
                            mem[mem[_3014] + _3014 + 196] = 0
                        require ext_code.size(address(_2880))
                        call address(_2880).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _2955, address(_2997), 128, mem[_3014], mem[_3014 + 196 len ceil32(mem[_3014])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2170 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2828 = mem[96]
                        idx = idx + 1
                        s = _2880
                        s = _2997
                        s = mem[(32 * idx - (_2170 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    _2956 = mem[(32 * idx - (_2170 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if idx + 2 >= mem[96]:
                        _2998 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2998 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2998 + 36] = _2956
                        mem[_2998 + 68] = 0
                        mem[_2998 + 100] = this.address
                        mem[_2998 + 132] = 128
                        mem[_2998 + 164] = mem[_2998]
                        s = 0
                        while s < mem[_2998]:
                            mem[s + _2998 + 196] = mem[s + _2998 + 32]
                            _2828 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2998]) > mem[_2998]:
                            mem[mem[_2998] + _2998 + 196] = 0
                        require ext_code.size(address(_2880))
                        call address(_2880).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _2956, 0, address(this.address), 128, mem[_2998], mem[_2998 + 196 len ceil32(mem[_2998])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2170 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2828 = mem[96]
                        idx = idx + 1
                        s = _2880
                        s = this.address
                        s = mem[(32 * idx - (_2170 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    require idx + -(_2170 / 2) + 1 < mem[96]
                    _2999 = mem[(32 * idx + -(_2170 / 2) + 1) + 128]
                    _3016 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3016 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3016 + 36] = _2956
                    mem[_3016 + 68] = 0
                    mem[_3016 + 100] = address(_2999)
                    mem[_3016 + 132] = 128
                    mem[_3016 + 164] = mem[_3016]
                    s = 0
                    while s < mem[_3016]:
                        mem[s + _3016 + 196] = mem[s + _3016 + 32]
                        _2828 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3016]) > mem[_3016]:
                        mem[mem[_3016] + _3016 + 196] = 0
                    require ext_code.size(address(_2880))
                    call address(_2880).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3016]) + _3016 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2170 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2828 = mem[96]
                    idx = idx + 1
                    s = _2880
                    s = _2999
                    s = mem[(32 * idx - (_2170 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                require 0 < mem[_2169]
                _2903 = mem[_2169 + 32]
                mem[mem[64] + 4] = mem[(32 * idx - (_2170 / 2)) + 140 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_2903))
                call address(_2903).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2928 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2928] == bool(mem[_2928])
                require ext_code.size(address(_2880))
                staticcall address(_2880).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3000 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3000] == mem[_3000 + 12 len 20]
                require 0 < mem[_2169]
                require idx - (_2170 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                if mem[_2169 + 44 len 20] == mem[_3000 + 12 len 20]:
                    _3115 = mem[(32 * idx - (_2170 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if idx + 2 >= mem[96]:
                        _3193 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3193 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3193 + 36] = 0
                        mem[_3193 + 68] = _3115
                        mem[_3193 + 100] = this.address
                        mem[_3193 + 132] = 128
                        mem[_3193 + 164] = mem[_3193]
                        s = 0
                        while s < mem[_3193]:
                            mem[s + _3193 + 196] = mem[s + _3193 + 32]
                            _2828 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3193]) > mem[_3193]:
                            mem[mem[_3193] + _3193 + 196] = 0
                        require ext_code.size(address(_2880))
                        call address(_2880).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3193]) + _3193 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2170 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2828 = mem[96]
                        idx = idx + 1
                        s = _2880
                        s = this.address
                        s = mem[(32 * idx - (_2170 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    require idx + -(_2170 / 2) + 1 < mem[96]
                    _3194 = mem[(32 * idx + -(_2170 / 2) + 1) + 128]
                    _3210 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3210 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3210 + 36] = 0
                    mem[_3210 + 68] = _3115
                    mem[_3210 + 100] = address(_3194)
                    mem[_3210 + 132] = 128
                    mem[_3210 + 164] = mem[_3210]
                    s = 0
                    while s < mem[_3210]:
                        mem[s + _3210 + 196] = mem[s + _3210 + 32]
                        _2828 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3210]) > mem[_3210]:
                        mem[mem[_3210] + _3210 + 196] = 0
                    require ext_code.size(address(_2880))
                    call address(_2880).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, _3115, address(_3194), 128, mem[_3210], mem[_3210 + 196 len ceil32(mem[_3210])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2170 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2828 = mem[96]
                    idx = idx + 1
                    s = _2880
                    s = _3194
                    s = mem[(32 * idx - (_2170 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                _3116 = mem[(32 * idx - (_2170 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                if idx + 2 >= mem[96]:
                    _3195 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3195 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3195 + 36] = _3116
                    mem[_3195 + 68] = 0
                    mem[_3195 + 100] = this.address
                    mem[_3195 + 132] = 128
                    mem[_3195 + 164] = mem[_3195]
                    s = 0
                    while s < mem[_3195]:
                        mem[s + _3195 + 196] = mem[s + _3195 + 32]
                        _2828 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3195]) > mem[_3195]:
                        mem[mem[_3195] + _3195 + 196] = 0
                    require ext_code.size(address(_2880))
                    call address(_2880).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _3116, 0, address(this.address), 128, mem[_3195], mem[_3195 + 196 len ceil32(mem[_3195])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2170 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2828 = mem[96]
                    idx = idx + 1
                    s = _2880
                    s = this.address
                    s = mem[(32 * idx - (_2170 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                require idx + -(_2170 / 2) + 1 < mem[96]
                _3196 = mem[(32 * idx + -(_2170 / 2) + 1) + 128]
                _3212 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3212 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3212 + 36] = _3116
                mem[_3212 + 68] = 0
                mem[_3212 + 100] = address(_3196)
                mem[_3212 + 132] = 128
                mem[_3212 + 164] = mem[_3212]
                s = 0
                while s < mem[_3212]:
                    mem[s + _3212 + 196] = mem[s + _3212 + 32]
                    _2828 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3212]) > mem[_3212]:
                    mem[mem[_3212] + _3212 + 196] = 0
                require ext_code.size(address(_2880))
                call address(_2880).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args _3116, 0, address(_3196), 128, mem[_3212], mem[_3212 + 196 len ceil32(mem[_3212])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require idx - (_2170 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _2828 = mem[96]
                idx = idx + 1
                s = _2880
                s = _3196
                s = mem[(32 * idx - (_2170 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                continue 
            require _2170 / 2 < mem[96]
            _2849 = mem[(16 * Mask(251, 1, _2170)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_2849))
            staticcall address(_2849).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2879 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_2879] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
}

function sub_b239bda0(?) {
    require calldata.size - 4 >= 128
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require (32 * ('cd', 68).length) + 128 >= 96 and (32 * ('cd', 68).length) + 128 <= test266151307()
    mem[96] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = 128
    while idx < ('cd', 68).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[100] <= test266151307()
    require cd[100] + 35 < calldata.size
    require ('cd', 100).length <= test266151307()
    require (32 * ('cd', 100).length) + 160 >= 128 and (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160 <= test266151307()
    mem[(32 * ('cd', 68).length) + 128] = ('cd', 100).length
    require calldata.size >= cd[100] + (32 * ('cd', 100).length) + 36
    idx = 0
    s = cd[100] + 36
    t = (32 * ('cd', 68).length) + 160
    while idx < ('cd', 100).length:
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if msg.sender == owner:
        require ('cd', 68).length / 2 <= test266151307()
        mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] = ('cd', 68).length / 2
        mem[64] = (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 192
        if not Mask(255, 1, ('cd', 68).length):
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                _2183 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2208 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2237 = mem[_2208]
                require mem[_2208] == mem[_2208 + 18 len 14]
                _2246 = mem[_2208 + 32]
                require mem[_2208 + 32] == mem[_2208 + 50 len 14]
                require mem[_2208 + 64] == mem[_2208 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2208 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2208 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2208 + 18 len 14])
                        idx = idx + 1
                        s = _2183
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2246) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2237))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2208 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2208 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2208 + 18 len 14])
                        idx = idx + 1
                        s = _2183
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2246) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2237))
                        continue 
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2208 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2208 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2208 + 50 len 14])
                idx = idx + 1
                s = _2183
                s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2237) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2246))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2205 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2206 = mem[96]
            require mem[96] / 2 < mem[96]
            _2225 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2225))
            staticcall address(_2225).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _2889 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _2889 - 1:
                require idx < mem[96]
                require 0 < mem[_2205]
                mem[_2205 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2205]
                mem[_2205 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2206 / 2) < mem[96]
                _2938 = mem[(32 * idx - (_2206 / 2)) + 128]
                if idx != _2206 / 2:
                    require ext_code.size(mem[(32 * idx - (_2206 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2206 / 2)) + 140 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2969 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_2969] == mem[_2969 + 12 len 20]
                    require 0 < mem[_2205]
                    require idx - (_2206 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    if mem[_2205 + 44 len 20] == mem[_2969 + 12 len 20]:
                        _3029 = mem[(32 * idx - (_2206 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        if idx + 2 >= mem[96]:
                            _3061 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3061 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3061 + 36] = 0
                            mem[_3061 + 68] = _3029
                            mem[_3061 + 100] = this.address
                            mem[_3061 + 132] = 128
                            mem[_3061 + 164] = mem[_3061]
                            s = 0
                            while s < mem[_3061]:
                                mem[s + _3061 + 196] = mem[s + _3061 + 32]
                                _2889 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3061]) > mem[_3061]:
                                mem[mem[_3061] + _3061 + 196] = 0
                            require ext_code.size(address(_2938))
                            call address(_2938).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3061]) + _3061 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx - (_2206 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            _2889 = mem[96]
                            idx = idx + 1
                            s = _2938
                            s = this.address
                            s = mem[(32 * idx - (_2206 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                            continue 
                        require idx + -(_2206 / 2) + 1 < mem[96]
                        _3062 = mem[(32 * idx + -(_2206 / 2) + 1) + 128]
                        _3082 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3082 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3082 + 36] = 0
                        mem[_3082 + 68] = _3029
                        mem[_3082 + 100] = address(_3062)
                        mem[_3082 + 132] = 128
                        mem[_3082 + 164] = mem[_3082]
                        s = 0
                        while s < mem[_3082]:
                            mem[s + _3082 + 196] = mem[s + _3082 + 32]
                            _2889 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3082]) > mem[_3082]:
                            mem[mem[_3082] + _3082 + 196] = 0
                        require ext_code.size(address(_2938))
                        call address(_2938).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3082]) + _3082 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2206 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2889 = mem[96]
                        idx = idx + 1
                        s = _2938
                        s = _3062
                        s = mem[(32 * idx - (_2206 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    _3030 = mem[(32 * idx - (_2206 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if idx + 2 >= mem[96]:
                        _3063 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3063 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3063 + 36] = _3030
                        mem[_3063 + 68] = 0
                        mem[_3063 + 100] = this.address
                        mem[_3063 + 132] = 128
                        mem[_3063 + 164] = mem[_3063]
                        s = 0
                        while s < mem[_3063]:
                            mem[s + _3063 + 196] = mem[s + _3063 + 32]
                            _2889 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3063]) > mem[_3063]:
                            mem[mem[_3063] + _3063 + 196] = 0
                        require ext_code.size(address(_2938))
                        call address(_2938).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _3030, 0, address(this.address), 128, mem[_3063], mem[_3063 + 196 len ceil32(mem[_3063])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2206 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2889 = mem[96]
                        idx = idx + 1
                        s = _2938
                        s = this.address
                        s = mem[(32 * idx - (_2206 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    require idx + -(_2206 / 2) + 1 < mem[96]
                    _3064 = mem[(32 * idx + -(_2206 / 2) + 1) + 128]
                    _3084 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3084 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3084 + 36] = _3030
                    mem[_3084 + 68] = 0
                    mem[_3084 + 100] = address(_3064)
                    mem[_3084 + 132] = 128
                    mem[_3084 + 164] = mem[_3084]
                    s = 0
                    while s < mem[_3084]:
                        mem[s + _3084 + 196] = mem[s + _3084 + 32]
                        _2889 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3084]) > mem[_3084]:
                        mem[mem[_3084] + _3084 + 196] = 0
                    require ext_code.size(address(_2938))
                    call address(_2938).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3084]) + _3084 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2206 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2889 = mem[96]
                    idx = idx + 1
                    s = _2938
                    s = _3064
                    s = mem[(32 * idx - (_2206 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                require 0 < mem[_2205]
                _2958 = mem[_2205 + 32]
                mem[mem[64] + 4] = mem[(32 * idx - (_2206 / 2)) + 140 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_2958))
                call address(_2958).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2990 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2990] == bool(mem[_2990])
                require ext_code.size(address(_2938))
                staticcall address(_2938).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3065 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3065] == mem[_3065 + 12 len 20]
                require 0 < mem[_2205]
                require idx - (_2206 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                if mem[_2205 + 44 len 20] == mem[_3065 + 12 len 20]:
                    _3177 = mem[(32 * idx - (_2206 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if idx + 2 >= mem[96]:
                        _3261 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3261 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3261 + 36] = 0
                        mem[_3261 + 68] = _3177
                        mem[_3261 + 100] = this.address
                        mem[_3261 + 132] = 128
                        mem[_3261 + 164] = mem[_3261]
                        s = 0
                        while s < mem[_3261]:
                            mem[s + _3261 + 196] = mem[s + _3261 + 32]
                            _2889 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3261]) > mem[_3261]:
                            mem[mem[_3261] + _3261 + 196] = 0
                        require ext_code.size(address(_2938))
                        call address(_2938).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _3177, address(this.address), 128, mem[_3261], mem[_3261 + 196 len ceil32(mem[_3261])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2206 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2889 = mem[96]
                        idx = idx + 1
                        s = _2938
                        s = this.address
                        s = mem[(32 * idx - (_2206 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    require idx + -(_2206 / 2) + 1 < mem[96]
                    _3262 = mem[(32 * idx + -(_2206 / 2) + 1) + 128]
                    _3278 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3278 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3278 + 36] = 0
                    mem[_3278 + 68] = _3177
                    mem[_3278 + 100] = address(_3262)
                    mem[_3278 + 132] = 128
                    mem[_3278 + 164] = mem[_3278]
                    s = 0
                    while s < mem[_3278]:
                        mem[s + _3278 + 196] = mem[s + _3278 + 32]
                        _2889 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3278]) > mem[_3278]:
                        mem[mem[_3278] + _3278 + 196] = 0
                    require ext_code.size(address(_2938))
                    call address(_2938).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3278]) + _3278 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2206 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2889 = mem[96]
                    idx = idx + 1
                    s = _2938
                    s = _3262
                    s = mem[(32 * idx - (_2206 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                _3178 = mem[(32 * idx - (_2206 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                if idx + 2 >= mem[96]:
                    _3263 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3263 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3263 + 36] = _3178
                    mem[_3263 + 68] = 0
                    mem[_3263 + 100] = this.address
                    mem[_3263 + 132] = 128
                    mem[_3263 + 164] = mem[_3263]
                    s = 0
                    while s < mem[_3263]:
                        mem[s + _3263 + 196] = mem[s + _3263 + 32]
                        _2889 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3263]) > mem[_3263]:
                        mem[mem[_3263] + _3263 + 196] = 0
                    require ext_code.size(address(_2938))
                    call address(_2938).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _3178, 0, address(this.address), 128, mem[_3263], mem[_3263 + 196 len ceil32(mem[_3263])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2206 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2889 = mem[96]
                    idx = idx + 1
                    s = _2938
                    s = this.address
                    s = mem[(32 * idx - (_2206 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                require idx + -(_2206 / 2) + 1 < mem[96]
                _3264 = mem[(32 * idx + -(_2206 / 2) + 1) + 128]
                _3280 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3280 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3280 + 36] = _3178
                mem[_3280 + 68] = 0
                mem[_3280 + 100] = address(_3264)
                mem[_3280 + 132] = 128
                mem[_3280 + 164] = mem[_3280]
                s = 0
                while s < mem[_3280]:
                    mem[s + _3280 + 196] = mem[s + _3280 + 32]
                    _2889 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3280]) > mem[_3280]:
                    mem[mem[_3280] + _3280 + 196] = 0
                require ext_code.size(address(_2938))
                call address(_2938).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(mem[_3280]) + _3280 + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require idx - (_2206 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _2889 = mem[96]
                idx = idx + 1
                s = _2938
                s = _3264
                s = mem[(32 * idx - (_2206 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                continue 
            require _2206 / 2 < mem[96]
            _2901 = mem[(16 * Mask(251, 1, _2206)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_2901))
            staticcall address(_2901).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2937 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_2937] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                _2188 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2212 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2238 = mem[_2212]
                require mem[_2212] == mem[_2212 + 18 len 14]
                _2248 = mem[_2212 + 32]
                require mem[_2212 + 32] == mem[_2212 + 50 len 14]
                require mem[_2212 + 64] == mem[_2212 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2212 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2212 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2212 + 18 len 14])
                        idx = idx + 1
                        s = _2188
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2248) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2238))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2212 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2212 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2212 + 18 len 14])
                        idx = idx + 1
                        s = _2188
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2248) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2238))
                        continue 
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2212 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2212 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2212 + 50 len 14])
                idx = idx + 1
                s = _2188
                s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2238) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2248))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2209 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2210 = mem[96]
            require mem[96] / 2 < mem[96]
            _2228 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2228))
            staticcall address(_2228).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _2890 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _2890 - 1:
                require idx < mem[96]
                require 0 < mem[_2209]
                mem[_2209 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2209]
                mem[_2209 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2210 / 2) < mem[96]
                _2940 = mem[(32 * idx - (_2210 / 2)) + 128]
                if idx != _2210 / 2:
                    require ext_code.size(mem[(32 * idx - (_2210 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2210 / 2)) + 140 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2970 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_2970] == mem[_2970 + 12 len 20]
                    require 0 < mem[_2209]
                    require idx - (_2210 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    if mem[_2209 + 44 len 20] == mem[_2970 + 12 len 20]:
                        _3031 = mem[(32 * idx - (_2210 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        if idx + 2 >= mem[96]:
                            _3066 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3066 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3066 + 36] = 0
                            mem[_3066 + 68] = _3031
                            mem[_3066 + 100] = this.address
                            mem[_3066 + 132] = 128
                            mem[_3066 + 164] = mem[_3066]
                            s = 0
                            while s < mem[_3066]:
                                mem[s + _3066 + 196] = mem[s + _3066 + 32]
                                _2890 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3066]) > mem[_3066]:
                                mem[mem[_3066] + _3066 + 196] = 0
                            require ext_code.size(address(_2940))
                            call address(_2940).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3066]) + _3066 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx - (_2210 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            _2890 = mem[96]
                            idx = idx + 1
                            s = _2940
                            s = this.address
                            s = mem[(32 * idx - (_2210 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                            continue 
                        require idx + -(_2210 / 2) + 1 < mem[96]
                        _3067 = mem[(32 * idx + -(_2210 / 2) + 1) + 128]
                        _3086 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3086 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3086 + 36] = 0
                        mem[_3086 + 68] = _3031
                        mem[_3086 + 100] = address(_3067)
                        mem[_3086 + 132] = 128
                        mem[_3086 + 164] = mem[_3086]
                        s = 0
                        while s < mem[_3086]:
                            mem[s + _3086 + 196] = mem[s + _3086 + 32]
                            _2890 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3086]) > mem[_3086]:
                            mem[mem[_3086] + _3086 + 196] = 0
                        require ext_code.size(address(_2940))
                        call address(_2940).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _3031, address(_3067), 128, mem[_3086], mem[_3086 + 196 len ceil32(mem[_3086])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2210 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2890 = mem[96]
                        idx = idx + 1
                        s = _2940
                        s = _3067
                        s = mem[(32 * idx - (_2210 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    _3032 = mem[(32 * idx - (_2210 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if idx + 2 >= mem[96]:
                        _3068 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3068 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3068 + 36] = _3032
                        mem[_3068 + 68] = 0
                        mem[_3068 + 100] = this.address
                        mem[_3068 + 132] = 128
                        mem[_3068 + 164] = mem[_3068]
                        s = 0
                        while s < mem[_3068]:
                            mem[s + _3068 + 196] = mem[s + _3068 + 32]
                            _2890 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3068]) > mem[_3068]:
                            mem[mem[_3068] + _3068 + 196] = 0
                        require ext_code.size(address(_2940))
                        call address(_2940).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3068]) + _3068 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2210 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2890 = mem[96]
                        idx = idx + 1
                        s = _2940
                        s = this.address
                        s = mem[(32 * idx - (_2210 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    require idx + -(_2210 / 2) + 1 < mem[96]
                    _3069 = mem[(32 * idx + -(_2210 / 2) + 1) + 128]
                    _3088 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3088 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3088 + 36] = _3032
                    mem[_3088 + 68] = 0
                    mem[_3088 + 100] = address(_3069)
                    mem[_3088 + 132] = 128
                    mem[_3088 + 164] = mem[_3088]
                    s = 0
                    while s < mem[_3088]:
                        mem[s + _3088 + 196] = mem[s + _3088 + 32]
                        _2890 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3088]) > mem[_3088]:
                        mem[mem[_3088] + _3088 + 196] = 0
                    require ext_code.size(address(_2940))
                    call address(_2940).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3088]) + _3088 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2210 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2890 = mem[96]
                    idx = idx + 1
                    s = _2940
                    s = _3069
                    s = mem[(32 * idx - (_2210 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                require 0 < mem[_2209]
                _2961 = mem[_2209 + 32]
                mem[mem[64] + 4] = mem[(32 * idx - (_2210 / 2)) + 140 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_2961))
                call address(_2961).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2992 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2992] == bool(mem[_2992])
                require ext_code.size(address(_2940))
                staticcall address(_2940).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3070 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3070] == mem[_3070 + 12 len 20]
                require 0 < mem[_2209]
                require idx - (_2210 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                if mem[_2209 + 44 len 20] == mem[_3070 + 12 len 20]:
                    _3183 = mem[(32 * idx - (_2210 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if idx + 2 >= mem[96]:
                        _3265 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3265 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3265 + 36] = 0
                        mem[_3265 + 68] = _3183
                        mem[_3265 + 100] = this.address
                        mem[_3265 + 132] = 128
                        mem[_3265 + 164] = mem[_3265]
                        s = 0
                        while s < mem[_3265]:
                            mem[s + _3265 + 196] = mem[s + _3265 + 32]
                            _2890 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3265]) > mem[_3265]:
                            mem[mem[_3265] + _3265 + 196] = 0
                        require ext_code.size(address(_2940))
                        call address(_2940).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3265]) + _3265 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2210 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2890 = mem[96]
                        idx = idx + 1
                        s = _2940
                        s = this.address
                        s = mem[(32 * idx - (_2210 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    require idx + -(_2210 / 2) + 1 < mem[96]
                    _3266 = mem[(32 * idx + -(_2210 / 2) + 1) + 128]
                    _3282 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3282 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3282 + 36] = 0
                    mem[_3282 + 68] = _3183
                    mem[_3282 + 100] = address(_3266)
                    mem[_3282 + 132] = 128
                    mem[_3282 + 164] = mem[_3282]
                    s = 0
                    while s < mem[_3282]:
                        mem[s + _3282 + 196] = mem[s + _3282 + 32]
                        _2890 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3282]) > mem[_3282]:
                        mem[mem[_3282] + _3282 + 196] = 0
                    require ext_code.size(address(_2940))
                    call address(_2940).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, _3183, address(_3266), 128, mem[_3282], mem[_3282 + 196 len ceil32(mem[_3282])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2210 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2890 = mem[96]
                    idx = idx + 1
                    s = _2940
                    s = _3266
                    s = mem[(32 * idx - (_2210 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                _3184 = mem[(32 * idx - (_2210 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                if idx + 2 >= mem[96]:
                    _3267 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3267 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3267 + 36] = _3184
                    mem[_3267 + 68] = 0
                    mem[_3267 + 100] = this.address
                    mem[_3267 + 132] = 128
                    mem[_3267 + 164] = mem[_3267]
                    s = 0
                    while s < mem[_3267]:
                        mem[s + _3267 + 196] = mem[s + _3267 + 32]
                        _2890 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3267]) > mem[_3267]:
                        mem[mem[_3267] + _3267 + 196] = 0
                    require ext_code.size(address(_2940))
                    call address(_2940).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _3184, 0, address(this.address), 128, mem[_3267], mem[_3267 + 196 len ceil32(mem[_3267])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2210 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2890 = mem[96]
                    idx = idx + 1
                    s = _2940
                    s = this.address
                    s = mem[(32 * idx - (_2210 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                require idx + -(_2210 / 2) + 1 < mem[96]
                _3268 = mem[(32 * idx + -(_2210 / 2) + 1) + 128]
                _3284 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3284 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3284 + 36] = _3184
                mem[_3284 + 68] = 0
                mem[_3284 + 100] = address(_3268)
                mem[_3284 + 132] = 128
                mem[_3284 + 164] = mem[_3284]
                s = 0
                while s < mem[_3284]:
                    mem[s + _3284 + 196] = mem[s + _3284 + 32]
                    _2890 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3284]) > mem[_3284]:
                    mem[mem[_3284] + _3284 + 196] = 0
                require ext_code.size(address(_2940))
                call address(_2940).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args _3184, 0, address(_3268), 128, mem[_3284], mem[_3284 + 196 len ceil32(mem[_3284])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require idx - (_2210 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _2890 = mem[96]
                idx = idx + 1
                s = _2940
                s = _3268
                s = mem[(32 * idx - (_2210 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                continue 
            require _2210 / 2 < mem[96]
            _2905 = mem[(16 * Mask(251, 1, _2210)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_2905))
            staticcall address(_2905).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2939 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_2939] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
    else:
        mem[0] = msg.sender
        mem[32] = 1
        if not stor1[msg.sender]:
            revert with 0, 'Ownable: caller is not the owner'
        require ('cd', 68).length / 2 <= test266151307()
        mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] = ('cd', 68).length / 2
        mem[64] = (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 192
        if not Mask(255, 1, ('cd', 68).length):
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                _2193 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2216 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2239 = mem[_2216]
                require mem[_2216] == mem[_2216 + 18 len 14]
                _2250 = mem[_2216 + 32]
                require mem[_2216 + 32] == mem[_2216 + 50 len 14]
                require mem[_2216 + 64] == mem[_2216 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2216 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2216 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2216 + 18 len 14])
                        idx = idx + 1
                        s = _2193
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2250) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2239))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2216 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2216 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2216 + 18 len 14])
                        idx = idx + 1
                        s = _2193
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2250) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2239))
                        continue 
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2216 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2216 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2216 + 50 len 14])
                idx = idx + 1
                s = _2193
                s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2239) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2250))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2213 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2214 = mem[96]
            require mem[96] / 2 < mem[96]
            _2231 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2231))
            staticcall address(_2231).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _2891 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _2891 - 1:
                require idx < mem[96]
                require 0 < mem[_2213]
                mem[_2213 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2213]
                mem[_2213 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2214 / 2) < mem[96]
                _2942 = mem[(32 * idx - (_2214 / 2)) + 128]
                if idx != _2214 / 2:
                    require ext_code.size(mem[(32 * idx - (_2214 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2214 / 2)) + 140 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2971 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_2971] == mem[_2971 + 12 len 20]
                    require 0 < mem[_2213]
                    require idx - (_2214 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    if mem[_2213 + 44 len 20] == mem[_2971 + 12 len 20]:
                        _3033 = mem[(32 * idx - (_2214 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        if idx + 2 >= mem[96]:
                            _3071 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3071 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3071 + 36] = 0
                            mem[_3071 + 68] = _3033
                            mem[_3071 + 100] = this.address
                            mem[_3071 + 132] = 128
                            mem[_3071 + 164] = mem[_3071]
                            s = 0
                            while s < mem[_3071]:
                                mem[s + _3071 + 196] = mem[s + _3071 + 32]
                                _2891 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3071]) > mem[_3071]:
                                mem[mem[_3071] + _3071 + 196] = 0
                            require ext_code.size(address(_2942))
                            call address(_2942).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3071]) + _3071 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx - (_2214 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            _2891 = mem[96]
                            idx = idx + 1
                            s = _2942
                            s = this.address
                            s = mem[(32 * idx - (_2214 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                            continue 
                        require idx + -(_2214 / 2) + 1 < mem[96]
                        _3072 = mem[(32 * idx + -(_2214 / 2) + 1) + 128]
                        _3090 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3090 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3090 + 36] = 0
                        mem[_3090 + 68] = _3033
                        mem[_3090 + 100] = address(_3072)
                        mem[_3090 + 132] = 128
                        mem[_3090 + 164] = mem[_3090]
                        s = 0
                        while s < mem[_3090]:
                            mem[s + _3090 + 196] = mem[s + _3090 + 32]
                            _2891 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3090]) > mem[_3090]:
                            mem[mem[_3090] + _3090 + 196] = 0
                        require ext_code.size(address(_2942))
                        call address(_2942).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3090]) + _3090 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2214 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2891 = mem[96]
                        idx = idx + 1
                        s = _2942
                        s = _3072
                        s = mem[(32 * idx - (_2214 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    _3034 = mem[(32 * idx - (_2214 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if idx + 2 >= mem[96]:
                        _3073 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3073 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3073 + 36] = _3034
                        mem[_3073 + 68] = 0
                        mem[_3073 + 100] = this.address
                        mem[_3073 + 132] = 128
                        mem[_3073 + 164] = mem[_3073]
                        s = 0
                        while s < mem[_3073]:
                            mem[s + _3073 + 196] = mem[s + _3073 + 32]
                            _2891 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3073]) > mem[_3073]:
                            mem[mem[_3073] + _3073 + 196] = 0
                        require ext_code.size(address(_2942))
                        call address(_2942).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3073]) + _3073 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2214 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2891 = mem[96]
                        idx = idx + 1
                        s = _2942
                        s = this.address
                        s = mem[(32 * idx - (_2214 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    require idx + -(_2214 / 2) + 1 < mem[96]
                    _3074 = mem[(32 * idx + -(_2214 / 2) + 1) + 128]
                    _3092 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3092 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3092 + 36] = _3034
                    mem[_3092 + 68] = 0
                    mem[_3092 + 100] = address(_3074)
                    mem[_3092 + 132] = 128
                    mem[_3092 + 164] = mem[_3092]
                    s = 0
                    while s < mem[_3092]:
                        mem[s + _3092 + 196] = mem[s + _3092 + 32]
                        _2891 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3092]) > mem[_3092]:
                        mem[mem[_3092] + _3092 + 196] = 0
                    require ext_code.size(address(_2942))
                    call address(_2942).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _3034, 0, address(_3074), 128, mem[_3092], mem[_3092 + 196 len ceil32(mem[_3092])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2214 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2891 = mem[96]
                    idx = idx + 1
                    s = _2942
                    s = _3074
                    s = mem[(32 * idx - (_2214 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                require 0 < mem[_2213]
                _2964 = mem[_2213 + 32]
                mem[mem[64] + 4] = mem[(32 * idx - (_2214 / 2)) + 140 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_2964))
                call address(_2964).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2994 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2994] == bool(mem[_2994])
                require ext_code.size(address(_2942))
                staticcall address(_2942).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3075 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3075] == mem[_3075 + 12 len 20]
                require 0 < mem[_2213]
                require idx - (_2214 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                if mem[_2213 + 44 len 20] == mem[_3075 + 12 len 20]:
                    _3189 = mem[(32 * idx - (_2214 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if idx + 2 >= mem[96]:
                        _3269 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3269 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3269 + 36] = 0
                        mem[_3269 + 68] = _3189
                        mem[_3269 + 100] = this.address
                        mem[_3269 + 132] = 128
                        mem[_3269 + 164] = mem[_3269]
                        s = 0
                        while s < mem[_3269]:
                            mem[s + _3269 + 196] = mem[s + _3269 + 32]
                            _2891 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3269]) > mem[_3269]:
                            mem[mem[_3269] + _3269 + 196] = 0
                        require ext_code.size(address(_2942))
                        call address(_2942).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3269]) + _3269 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2214 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2891 = mem[96]
                        idx = idx + 1
                        s = _2942
                        s = this.address
                        s = mem[(32 * idx - (_2214 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    require idx + -(_2214 / 2) + 1 < mem[96]
                    _3270 = mem[(32 * idx + -(_2214 / 2) + 1) + 128]
                    _3286 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3286 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3286 + 36] = 0
                    mem[_3286 + 68] = _3189
                    mem[_3286 + 100] = address(_3270)
                    mem[_3286 + 132] = 128
                    mem[_3286 + 164] = mem[_3286]
                    s = 0
                    while s < mem[_3286]:
                        mem[s + _3286 + 196] = mem[s + _3286 + 32]
                        _2891 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3286]) > mem[_3286]:
                        mem[mem[_3286] + _3286 + 196] = 0
                    require ext_code.size(address(_2942))
                    call address(_2942).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, _3189, address(_3270), 128, mem[_3286], mem[_3286 + 196 len ceil32(mem[_3286])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2214 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2891 = mem[96]
                    idx = idx + 1
                    s = _2942
                    s = _3270
                    s = mem[(32 * idx - (_2214 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                _3190 = mem[(32 * idx - (_2214 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                if idx + 2 >= mem[96]:
                    _3271 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3271 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3271 + 36] = _3190
                    mem[_3271 + 68] = 0
                    mem[_3271 + 100] = this.address
                    mem[_3271 + 132] = 128
                    mem[_3271 + 164] = mem[_3271]
                    s = 0
                    while s < mem[_3271]:
                        mem[s + _3271 + 196] = mem[s + _3271 + 32]
                        _2891 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3271]) > mem[_3271]:
                        mem[mem[_3271] + _3271 + 196] = 0
                    require ext_code.size(address(_2942))
                    call address(_2942).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3271]) + _3271 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2214 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2891 = mem[96]
                    idx = idx + 1
                    s = _2942
                    s = this.address
                    s = mem[(32 * idx - (_2214 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                require idx + -(_2214 / 2) + 1 < mem[96]
                _3272 = mem[(32 * idx + -(_2214 / 2) + 1) + 128]
                _3288 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3288 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3288 + 36] = _3190
                mem[_3288 + 68] = 0
                mem[_3288 + 100] = address(_3272)
                mem[_3288 + 132] = 128
                mem[_3288 + 164] = mem[_3288]
                s = 0
                while s < mem[_3288]:
                    mem[s + _3288 + 196] = mem[s + _3288 + 32]
                    _2891 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3288]) > mem[_3288]:
                    mem[mem[_3288] + _3288 + 196] = 0
                require ext_code.size(address(_2942))
                call address(_2942).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args _3190, 0, address(_3272), 128, mem[_3288], mem[_3288 + 196 len ceil32(mem[_3288])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require idx - (_2214 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _2891 = mem[96]
                idx = idx + 1
                s = _2942
                s = _3272
                s = mem[(32 * idx - (_2214 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                continue 
            require _2214 / 2 < mem[96]
            _2909 = mem[(16 * Mask(251, 1, _2214)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_2909))
            staticcall address(_2909).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2941 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_2941] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                _2198 = mem[(32 * idx - (('cd', 68).length / 2)) + 128]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2220 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2240 = mem[_2220]
                require mem[_2220] == mem[_2220 + 18 len 14]
                _2252 = mem[_2220 + 32]
                require mem[_2220 + 32] == mem[_2220 + 50 len 14]
                require mem[_2220 + 64] == mem[_2220 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2220 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2220 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2220 + 18 len 14])
                        idx = idx + 1
                        s = _2198
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2252) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2240))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2220 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2220 + 50 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2220 + 18 len 14])
                        idx = idx + 1
                        s = _2198
                        s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2252) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2240))
                        continue 
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                require (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2220 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * mem[_2220 + 18 len 14] / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * mem[_2220 + 50 len 14])
                idx = idx + 1
                s = _2198
                s = mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s * Mask(112, 0, _2240) / (mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] * s) + (10000 * Mask(112, 0, _2252))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2217 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2218 = mem[96]
            require mem[96] / 2 < mem[96]
            _2234 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2234))
            staticcall address(_2234).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _2892 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _2892 - 1:
                require idx < mem[96]
                require 0 < mem[_2217]
                mem[_2217 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2217]
                mem[_2217 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2218 / 2) < mem[96]
                _2944 = mem[(32 * idx - (_2218 / 2)) + 128]
                if idx != _2218 / 2:
                    require ext_code.size(mem[(32 * idx - (_2218 / 2)) + 140 len 20])
                    staticcall mem[(32 * idx - (_2218 / 2)) + 140 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2972 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_2972] == mem[_2972 + 12 len 20]
                    require 0 < mem[_2217]
                    require idx - (_2218 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    if mem[_2217 + 44 len 20] == mem[_2972 + 12 len 20]:
                        _3035 = mem[(32 * idx - (_2218 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        if idx + 2 >= mem[96]:
                            _3076 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3076 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3076 + 36] = 0
                            mem[_3076 + 68] = _3035
                            mem[_3076 + 100] = this.address
                            mem[_3076 + 132] = 128
                            mem[_3076 + 164] = mem[_3076]
                            s = 0
                            while s < mem[_3076]:
                                mem[s + _3076 + 196] = mem[s + _3076 + 32]
                                _2892 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3076]) > mem[_3076]:
                                mem[mem[_3076] + _3076 + 196] = 0
                            require ext_code.size(address(_2944))
                            call address(_2944).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3076]) + _3076 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx - (_2218 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                            _2892 = mem[96]
                            idx = idx + 1
                            s = _2944
                            s = this.address
                            s = mem[(32 * idx - (_2218 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                            continue 
                        require idx + -(_2218 / 2) + 1 < mem[96]
                        _3077 = mem[(32 * idx + -(_2218 / 2) + 1) + 128]
                        _3094 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3094 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3094 + 36] = 0
                        mem[_3094 + 68] = _3035
                        mem[_3094 + 100] = address(_3077)
                        mem[_3094 + 132] = 128
                        mem[_3094 + 164] = mem[_3094]
                        s = 0
                        while s < mem[_3094]:
                            mem[s + _3094 + 196] = mem[s + _3094 + 32]
                            _2892 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3094]) > mem[_3094]:
                            mem[mem[_3094] + _3094 + 196] = 0
                        require ext_code.size(address(_2944))
                        call address(_2944).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3094]) + _3094 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2218 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2892 = mem[96]
                        idx = idx + 1
                        s = _2944
                        s = _3077
                        s = mem[(32 * idx - (_2218 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    _3036 = mem[(32 * idx - (_2218 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if idx + 2 >= mem[96]:
                        _3078 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3078 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3078 + 36] = _3036
                        mem[_3078 + 68] = 0
                        mem[_3078 + 100] = this.address
                        mem[_3078 + 132] = 128
                        mem[_3078 + 164] = mem[_3078]
                        s = 0
                        while s < mem[_3078]:
                            mem[s + _3078 + 196] = mem[s + _3078 + 32]
                            _2892 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3078]) > mem[_3078]:
                            mem[mem[_3078] + _3078 + 196] = 0
                        require ext_code.size(address(_2944))
                        call address(_2944).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3078]) + _3078 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2218 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2892 = mem[96]
                        idx = idx + 1
                        s = _2944
                        s = this.address
                        s = mem[(32 * idx - (_2218 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    require idx + -(_2218 / 2) + 1 < mem[96]
                    _3079 = mem[(32 * idx + -(_2218 / 2) + 1) + 128]
                    _3096 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3096 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3096 + 36] = _3036
                    mem[_3096 + 68] = 0
                    mem[_3096 + 100] = address(_3079)
                    mem[_3096 + 132] = 128
                    mem[_3096 + 164] = mem[_3096]
                    s = 0
                    while s < mem[_3096]:
                        mem[s + _3096 + 196] = mem[s + _3096 + 32]
                        _2892 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3096]) > mem[_3096]:
                        mem[mem[_3096] + _3096 + 196] = 0
                    require ext_code.size(address(_2944))
                    call address(_2944).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _3036, 0, address(_3079), 128, mem[_3096], mem[_3096 + 196 len ceil32(mem[_3096])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2218 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2892 = mem[96]
                    idx = idx + 1
                    s = _2944
                    s = _3079
                    s = mem[(32 * idx - (_2218 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                require 0 < mem[_2217]
                _2967 = mem[_2217 + 32]
                mem[mem[64] + 4] = mem[(32 * idx - (_2218 / 2)) + 140 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_2967))
                call address(_2967).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2996 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2996] == bool(mem[_2996])
                require ext_code.size(address(_2944))
                staticcall address(_2944).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3080 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3080] == mem[_3080 + 12 len 20]
                require 0 < mem[_2217]
                require idx - (_2218 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                if mem[_2217 + 44 len 20] == mem[_3080 + 12 len 20]:
                    _3195 = mem[(32 * idx - (_2218 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    if idx + 2 >= mem[96]:
                        _3273 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3273 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3273 + 36] = 0
                        mem[_3273 + 68] = _3195
                        mem[_3273 + 100] = this.address
                        mem[_3273 + 132] = 128
                        mem[_3273 + 164] = mem[_3273]
                        s = 0
                        while s < mem[_3273]:
                            mem[s + _3273 + 196] = mem[s + _3273 + 32]
                            _2892 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3273]) > mem[_3273]:
                            mem[mem[_3273] + _3273 + 196] = 0
                        require ext_code.size(address(_2944))
                        call address(_2944).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _3195, address(this.address), 128, mem[_3273], mem[_3273 + 196 len ceil32(mem[_3273])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx - (_2218 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        _2892 = mem[96]
                        idx = idx + 1
                        s = _2944
                        s = this.address
                        s = mem[(32 * idx - (_2218 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                        continue 
                    require idx + -(_2218 / 2) + 1 < mem[96]
                    _3274 = mem[(32 * idx + -(_2218 / 2) + 1) + 128]
                    _3290 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3290 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3290 + 36] = 0
                    mem[_3290 + 68] = _3195
                    mem[_3290 + 100] = address(_3274)
                    mem[_3290 + 132] = 128
                    mem[_3290 + 164] = mem[_3290]
                    s = 0
                    while s < mem[_3290]:
                        mem[s + _3290 + 196] = mem[s + _3290 + 32]
                        _2892 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3290]) > mem[_3290]:
                        mem[mem[_3290] + _3290 + 196] = 0
                    require ext_code.size(address(_2944))
                    call address(_2944).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, _3195, address(_3274), 128, mem[_3290], mem[_3290 + 196 len ceil32(mem[_3290])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2218 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2892 = mem[96]
                    idx = idx + 1
                    s = _2944
                    s = _3274
                    s = mem[(32 * idx - (_2218 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                _3196 = mem[(32 * idx - (_2218 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                if idx + 2 >= mem[96]:
                    _3275 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3275 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3275 + 36] = _3196
                    mem[_3275 + 68] = 0
                    mem[_3275 + 100] = this.address
                    mem[_3275 + 132] = 128
                    mem[_3275 + 164] = mem[_3275]
                    s = 0
                    while s < mem[_3275]:
                        mem[s + _3275 + 196] = mem[s + _3275 + 32]
                        _2892 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3275]) > mem[_3275]:
                        mem[mem[_3275] + _3275 + 196] = 0
                    require ext_code.size(address(_2944))
                    call address(_2944).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _3196, 0, address(this.address), 128, mem[_3275], mem[_3275 + 196 len ceil32(mem[_3275])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx - (_2218 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _2892 = mem[96]
                    idx = idx + 1
                    s = _2944
                    s = this.address
                    s = mem[(32 * idx - (_2218 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    continue 
                require idx + -(_2218 / 2) + 1 < mem[96]
                _3276 = mem[(32 * idx + -(_2218 / 2) + 1) + 128]
                _3292 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3292 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3292 + 36] = _3196
                mem[_3292 + 68] = 0
                mem[_3292 + 100] = address(_3276)
                mem[_3292 + 132] = 128
                mem[_3292 + 164] = mem[_3292]
                s = 0
                while s < mem[_3292]:
                    mem[s + _3292 + 196] = mem[s + _3292 + 32]
                    _2892 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3292]) > mem[_3292]:
                    mem[mem[_3292] + _3292 + 196] = 0
                require ext_code.size(address(_2944))
                call address(_2944).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args _3196, 0, address(_3276), 128, mem[_3292], mem[_3292 + 196 len ceil32(mem[_3292])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require idx - (_2218 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _2892 = mem[96]
                idx = idx + 1
                s = _2944
                s = _3276
                s = mem[(32 * idx - (_2218 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                continue 
            require _2218 / 2 < mem[96]
            _2913 = mem[(16 * Mask(251, 1, _2218)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_2913))
            staticcall address(_2913).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2943 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_2943] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
    require ext_code.size(sub_0195f4bfAddress)
    call sub_0195f4bfAddress.free(uint256 arg1) with:
         gas gas_remaining wei
        args ((16 * calldata.size) + 35154 / 41947)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
}

function sub_03919452(?) {
    require calldata.size - 4 >= 96
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require (32 * ('cd', 68).length) + 128 >= 96 and (32 * ('cd', 68).length) + 128 <= test266151307()
    mem[96] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = 128
    while idx < ('cd', 68).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if msg.sender == owner:
        require ('cd', 68).length / 2 <= test266151307()
        mem[(32 * ('cd', 68).length) + 128] = ('cd', 68).length / 2
        mem[64] = (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 160
        if not Mask(255, 1, ('cd', 68).length):
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1675 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1695 = mem[_1675]
                require mem[_1675] == mem[_1675 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _1729 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_1729)
                require ext_code.size(address(_1695))
                staticcall address(_1695).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_1729)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1760 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1783 = mem[_1760]
                require mem[_1760] == mem[_1760 + 12 len 20]
                require ext_code.size(mem[_1760 + 12 len 20])
                staticcall mem[_1760 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1834 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1848 = mem[_1834]
                require mem[_1834] == mem[_1834 + 18 len 14]
                _1866 = mem[_1834 + 32]
                require mem[_1834 + 32] == mem[_1834 + 50 len 14]
                require mem[_1834 + 64] == mem[_1834 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_1834 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_1834 + 50 len 14] / (997 * s) + (1000 * mem[_1834 + 18 len 14])
                        idx = idx + 1
                        s = _1783
                        s = 997 * s * Mask(112, 0, _1866) / (997 * s) + (1000 * Mask(112, 0, _1848))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_1834 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_1834 + 50 len 14] / (997 * s) + (1000 * mem[_1834 + 18 len 14])
                        idx = idx + 1
                        s = _1783
                        s = 997 * s * Mask(112, 0, _1866) / (997 * s) + (1000 * Mask(112, 0, _1848))
                        continue 
                require (997 * s) + (1000 * mem[_1834 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_1834 + 18 len 14] / (997 * s) + (1000 * mem[_1834 + 50 len 14])
                idx = idx + 1
                s = _1783
                s = 997 * s * Mask(112, 0, _1848) / (997 * s) + (1000 * Mask(112, 0, _1866))
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _1672 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _1673 = mem[96]
            require mem[96] / 2 < mem[96]
            _1692 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_1692))
            staticcall address(_1692).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _2452 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _2452 - 1:
                require idx < mem[96]
                require 0 < mem[_1672]
                mem[_1672 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_1672]
                mem[_1672 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_1673 / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (_1673 / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (_1673 / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2517 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2525 = mem[_2517]
                require mem[_2517] == mem[_2517 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _2548 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_2548)
                require ext_code.size(address(_2525))
                staticcall address(_2525).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_2548)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2560 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2564 = mem[_2560]
                require mem[_2560] == mem[_2560 + 12 len 20]
                if idx != _1673 / 2:
                    require ext_code.size(mem[_2560 + 12 len 20])
                    staticcall mem[_2560 + 12 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2588 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_2588] == mem[_2588 + 12 len 20]
                    require idx - (_1673 / 2) < mem[(32 * ('cd', 68).length) + 128]
                    _2612 = mem[(32 * idx - (_1673 / 2)) + (32 * ('cd', 68).length) + 160]
                    require 0 < mem[_1672]
                    if mem[_1672 + 44 len 20] == mem[_2588 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _2648 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_2648 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_2648 + 36] = 0
                            mem[_2648 + 68] = _2612
                            mem[_2648 + 100] = this.address
                            mem[_2648 + 132] = 128
                            mem[_2648 + 164] = mem[_2648]
                            s = 0
                            while s < mem[_2648]:
                                mem[s + _2648 + 196] = mem[s + _2648 + 32]
                                _2452 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_2648]) > mem[_2648]:
                                mem[mem[_2648] + _2648 + 196] = 0
                            require ext_code.size(address(_2564))
                            call address(_2564).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _2612, address(this.address), 128, mem[_2648], mem[_2648 + 196 len ceil32(mem[_2648])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2452 = mem[96]
                            idx = idx + 1
                            s = _2564
                            s = this.address
                            s = _2612
                            continue 
                        require idx + -(_1673 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_1673 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_1673 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2692 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _2705 = mem[_2692]
                        require mem[_2692] == mem[_2692 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _2776 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_2776)
                        require ext_code.size(address(_2705))
                        staticcall address(_2705).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_2776)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2856 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _2872 = mem[_2856]
                        require mem[_2856] == mem[_2856 + 12 len 20]
                        _2920 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2920 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2920 + 36] = 0
                        mem[_2920 + 68] = _2612
                        mem[_2920 + 100] = address(_2872)
                        mem[_2920 + 132] = 128
                        mem[_2920 + 164] = mem[_2920]
                        s = 0
                        while s < mem[_2920]:
                            mem[s + _2920 + 196] = mem[s + _2920 + 32]
                            _2452 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2920]) > mem[_2920]:
                            mem[mem[_2920] + _2920 + 196] = 0
                        require ext_code.size(address(_2564))
                        call address(_2564).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_2920]) + _2920 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2452 = mem[96]
                        idx = idx + 1
                        s = _2564
                        s = _2872
                        s = _2612
                        continue 
                    if idx + 2 >= mem[96]:
                        _2652 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2652 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2652 + 36] = _2612
                        mem[_2652 + 68] = 0
                        mem[_2652 + 100] = this.address
                        mem[_2652 + 132] = 128
                        mem[_2652 + 164] = mem[_2652]
                        s = 0
                        while s < mem[_2652]:
                            mem[s + _2652 + 196] = mem[s + _2652 + 32]
                            _2452 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2652]) > mem[_2652]:
                            mem[mem[_2652] + _2652 + 196] = 0
                        require ext_code.size(address(_2564))
                        call address(_2564).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_2652]) + _2652 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2452 = mem[96]
                        idx = idx + 1
                        s = _2564
                        s = this.address
                        s = _2612
                        continue 
                    require idx + -(_1673 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_1673 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_1673 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2693 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2707 = mem[_2693]
                    require mem[_2693] == mem[_2693 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _2778 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_2778)
                    require ext_code.size(address(_2707))
                    staticcall address(_2707).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_2778)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2857 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2873 = mem[_2857]
                    require mem[_2857] == mem[_2857 + 12 len 20]
                    _2921 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2921 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2921 + 36] = _2612
                    mem[_2921 + 68] = 0
                    mem[_2921 + 100] = address(_2873)
                    mem[_2921 + 132] = 128
                    mem[_2921 + 164] = mem[_2921]
                    s = 0
                    while s < mem[_2921]:
                        mem[s + _2921 + 196] = mem[s + _2921 + 32]
                        _2452 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2921]) > mem[_2921]:
                        mem[mem[_2921] + _2921 + 196] = 0
                    require ext_code.size(address(_2564))
                    call address(_2564).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _2612, 0, address(_2873), 128, mem[_2921], mem[_2921 + 196 len ceil32(mem[_2921])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2452 = mem[96]
                    idx = idx + 1
                    s = _2564
                    s = _2873
                    s = _2612
                    continue 
                require 0 < mem[_1672]
                _2580 = mem[_1672 + 32]
                mem[mem[64] + 4] = mem[_2560 + 12 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_2580))
                call address(_2580).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2600 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2600] == bool(mem[_2600])
                require ext_code.size(address(_2564))
                staticcall address(_2564).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2656 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2656] == mem[_2656 + 12 len 20]
                require idx - (_1673 / 2) < mem[(32 * ('cd', 68).length) + 128]
                _2728 = mem[(32 * idx - (_1673 / 2)) + (32 * ('cd', 68).length) + 160]
                require 0 < mem[_1672]
                if mem[_1672 + 44 len 20] == mem[_2656 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _2810 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2810 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2810 + 36] = 0
                        mem[_2810 + 68] = _2728
                        mem[_2810 + 100] = this.address
                        mem[_2810 + 132] = 128
                        mem[_2810 + 164] = mem[_2810]
                        s = 0
                        while s < mem[_2810]:
                            mem[s + _2810 + 196] = mem[s + _2810 + 32]
                            _2452 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2810]) > mem[_2810]:
                            mem[mem[_2810] + _2810 + 196] = 0
                        require ext_code.size(address(_2564))
                        call address(_2564).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_2810]) + _2810 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2452 = mem[96]
                        idx = idx + 1
                        s = _2564
                        s = this.address
                        s = _2728
                        continue 
                    require idx + -(_1673 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_1673 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_1673 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2858 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2875 = mem[_2858]
                    require mem[_2858] == mem[_2858 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _2946 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_2946)
                    require ext_code.size(address(_2875))
                    staticcall address(_2875).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_2946)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2984 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2996 = mem[_2984]
                    require mem[_2984] == mem[_2984 + 12 len 20]
                    _3016 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3016 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3016 + 36] = 0
                    mem[_3016 + 68] = _2728
                    mem[_3016 + 100] = address(_2996)
                    mem[_3016 + 132] = 128
                    mem[_3016 + 164] = mem[_3016]
                    s = 0
                    while s < mem[_3016]:
                        mem[s + _3016 + 196] = mem[s + _3016 + 32]
                        _2452 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3016]) > mem[_3016]:
                        mem[mem[_3016] + _3016 + 196] = 0
                    require ext_code.size(address(_2564))
                    call address(_2564).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3016]) + _3016 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2452 = mem[96]
                    idx = idx + 1
                    s = _2564
                    s = _2996
                    s = _2728
                    continue 
                if idx + 2 >= mem[96]:
                    _2814 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2814 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2814 + 36] = _2728
                    mem[_2814 + 68] = 0
                    mem[_2814 + 100] = this.address
                    mem[_2814 + 132] = 128
                    mem[_2814 + 164] = mem[_2814]
                    s = 0
                    while s < mem[_2814]:
                        mem[s + _2814 + 196] = mem[s + _2814 + 32]
                        _2452 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2814]) > mem[_2814]:
                        mem[mem[_2814] + _2814 + 196] = 0
                    require ext_code.size(address(_2564))
                    call address(_2564).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _2728, 0, address(this.address), 128, mem[_2814], mem[_2814 + 196 len ceil32(mem[_2814])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2452 = mem[96]
                    idx = idx + 1
                    s = _2564
                    s = this.address
                    s = _2728
                    continue 
                require idx + -(_1673 / 2) + 1 < mem[96]
                require ext_code.size(mem[(32 * idx + -(_1673 / 2) + 1) + 140 len 20])
                staticcall mem[(32 * idx + -(_1673 / 2) + 1) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2859 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2877 = mem[_2859]
                require mem[_2859] == mem[_2859 + 12 len 20]
                require idx + 1 < mem[96]
                require idx + 2 < mem[96]
                _2948 = mem[(32 * idx + 2) + 128]
                mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                mem[mem[64] + 36] = address(_2948)
                require ext_code.size(address(_2877))
                staticcall address(_2877).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_2948)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2985 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2997 = mem[_2985]
                require mem[_2985] == mem[_2985 + 12 len 20]
                _3017 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3017 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3017 + 36] = _2728
                mem[_3017 + 68] = 0
                mem[_3017 + 100] = address(_2997)
                mem[_3017 + 132] = 128
                mem[_3017 + 164] = mem[_3017]
                s = 0
                while s < mem[_3017]:
                    mem[s + _3017 + 196] = mem[s + _3017 + 32]
                    _2452 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3017]) > mem[_3017]:
                    mem[mem[_3017] + _3017 + 196] = 0
                require ext_code.size(address(_2564))
                call address(_2564).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(mem[_3017]) + _3017 + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2452 = mem[96]
                idx = idx + 1
                s = _2564
                s = _2997
                s = _2728
                continue 
            require _1673 / 2 < mem[96]
            _2464 = mem[(16 * Mask(251, 1, _1673)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_2464))
            staticcall address(_2464).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2500 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_2500] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            mem[(32 * ('cd', 68).length) + 160 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1679 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1699 = mem[_1679]
                require mem[_1679] == mem[_1679 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _1732 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_1732)
                require ext_code.size(address(_1699))
                staticcall address(_1699).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_1732)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1765 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1787 = mem[_1765]
                require mem[_1765] == mem[_1765 + 12 len 20]
                require ext_code.size(mem[_1765 + 12 len 20])
                staticcall mem[_1765 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1837 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1849 = mem[_1837]
                require mem[_1837] == mem[_1837 + 18 len 14]
                _1869 = mem[_1837 + 32]
                require mem[_1837 + 32] == mem[_1837 + 50 len 14]
                require mem[_1837 + 64] == mem[_1837 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_1837 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_1837 + 50 len 14] / (997 * s) + (1000 * mem[_1837 + 18 len 14])
                        idx = idx + 1
                        s = _1787
                        s = 997 * s * Mask(112, 0, _1869) / (997 * s) + (1000 * Mask(112, 0, _1849))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_1837 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_1837 + 50 len 14] / (997 * s) + (1000 * mem[_1837 + 18 len 14])
                        idx = idx + 1
                        s = _1787
                        s = 997 * s * Mask(112, 0, _1869) / (997 * s) + (1000 * Mask(112, 0, _1849))
                        continue 
                require (997 * s) + (1000 * mem[_1837 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_1837 + 18 len 14] / (997 * s) + (1000 * mem[_1837 + 50 len 14])
                idx = idx + 1
                s = _1787
                s = 997 * s * Mask(112, 0, _1849) / (997 * s) + (1000 * Mask(112, 0, _1869))
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _1676 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _1677 = mem[96]
            require mem[96] / 2 < mem[96]
            _1696 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_1696))
            staticcall address(_1696).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _2453 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _2453 - 1:
                require idx < mem[96]
                require 0 < mem[_1676]
                mem[_1676 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_1676]
                mem[_1676 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_1677 / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (_1677 / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (_1677 / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2519 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2527 = mem[_2519]
                require mem[_2519] == mem[_2519 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _2550 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_2550)
                require ext_code.size(address(_2527))
                staticcall address(_2527).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_2550)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2561 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2565 = mem[_2561]
                require mem[_2561] == mem[_2561 + 12 len 20]
                if idx != _1677 / 2:
                    require ext_code.size(mem[_2561 + 12 len 20])
                    staticcall mem[_2561 + 12 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2589 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_2589] == mem[_2589 + 12 len 20]
                    require idx - (_1677 / 2) < mem[(32 * ('cd', 68).length) + 128]
                    _2614 = mem[(32 * idx - (_1677 / 2)) + (32 * ('cd', 68).length) + 160]
                    require 0 < mem[_1676]
                    if mem[_1676 + 44 len 20] == mem[_2589 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _2657 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_2657 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_2657 + 36] = 0
                            mem[_2657 + 68] = _2614
                            mem[_2657 + 100] = this.address
                            mem[_2657 + 132] = 128
                            mem[_2657 + 164] = mem[_2657]
                            s = 0
                            while s < mem[_2657]:
                                mem[s + _2657 + 196] = mem[s + _2657 + 32]
                                _2453 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_2657]) > mem[_2657]:
                                mem[mem[_2657] + _2657 + 196] = 0
                            require ext_code.size(address(_2565))
                            call address(_2565).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _2614, address(this.address), 128, mem[_2657], mem[_2657 + 196 len ceil32(mem[_2657])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2453 = mem[96]
                            idx = idx + 1
                            s = _2565
                            s = this.address
                            s = _2614
                            continue 
                        require idx + -(_1677 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_1677 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_1677 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2695 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _2709 = mem[_2695]
                        require mem[_2695] == mem[_2695 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _2782 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_2782)
                        require ext_code.size(address(_2709))
                        staticcall address(_2709).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_2782)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2860 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _2878 = mem[_2860]
                        require mem[_2860] == mem[_2860 + 12 len 20]
                        _2926 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2926 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2926 + 36] = 0
                        mem[_2926 + 68] = _2614
                        mem[_2926 + 100] = address(_2878)
                        mem[_2926 + 132] = 128
                        mem[_2926 + 164] = mem[_2926]
                        s = 0
                        while s < mem[_2926]:
                            mem[s + _2926 + 196] = mem[s + _2926 + 32]
                            _2453 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2926]) > mem[_2926]:
                            mem[mem[_2926] + _2926 + 196] = 0
                        require ext_code.size(address(_2565))
                        call address(_2565).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _2614, address(_2878), 128, mem[_2926], mem[_2926 + 196 len ceil32(mem[_2926])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2453 = mem[96]
                        idx = idx + 1
                        s = _2565
                        s = _2878
                        s = _2614
                        continue 
                    if idx + 2 >= mem[96]:
                        _2661 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2661 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2661 + 36] = _2614
                        mem[_2661 + 68] = 0
                        mem[_2661 + 100] = this.address
                        mem[_2661 + 132] = 128
                        mem[_2661 + 164] = mem[_2661]
                        s = 0
                        while s < mem[_2661]:
                            mem[s + _2661 + 196] = mem[s + _2661 + 32]
                            _2453 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2661]) > mem[_2661]:
                            mem[mem[_2661] + _2661 + 196] = 0
                        require ext_code.size(address(_2565))
                        call address(_2565).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _2614, 0, address(this.address), 128, mem[_2661], mem[_2661 + 196 len ceil32(mem[_2661])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2453 = mem[96]
                        idx = idx + 1
                        s = _2565
                        s = this.address
                        s = _2614
                        continue 
                    require idx + -(_1677 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_1677 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_1677 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2696 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2711 = mem[_2696]
                    require mem[_2696] == mem[_2696 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _2784 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_2784)
                    require ext_code.size(address(_2711))
                    staticcall address(_2711).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_2784)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2861 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2879 = mem[_2861]
                    require mem[_2861] == mem[_2861 + 12 len 20]
                    _2927 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2927 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2927 + 36] = _2614
                    mem[_2927 + 68] = 0
                    mem[_2927 + 100] = address(_2879)
                    mem[_2927 + 132] = 128
                    mem[_2927 + 164] = mem[_2927]
                    s = 0
                    while s < mem[_2927]:
                        mem[s + _2927 + 196] = mem[s + _2927 + 32]
                        _2453 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2927]) > mem[_2927]:
                        mem[mem[_2927] + _2927 + 196] = 0
                    require ext_code.size(address(_2565))
                    call address(_2565).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _2614, 0, address(_2879), 128, mem[_2927], mem[_2927 + 196 len ceil32(mem[_2927])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2453 = mem[96]
                    idx = idx + 1
                    s = _2565
                    s = _2879
                    s = _2614
                    continue 
                require 0 < mem[_1676]
                _2582 = mem[_1676 + 32]
                mem[mem[64] + 4] = mem[_2561 + 12 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_2582))
                call address(_2582).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2601 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2601] == bool(mem[_2601])
                require ext_code.size(address(_2565))
                staticcall address(_2565).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2665 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2665] == mem[_2665 + 12 len 20]
                require idx - (_1677 / 2) < mem[(32 * ('cd', 68).length) + 128]
                _2734 = mem[(32 * idx - (_1677 / 2)) + (32 * ('cd', 68).length) + 160]
                require 0 < mem[_1676]
                if mem[_1676 + 44 len 20] == mem[_2665 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _2820 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2820 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2820 + 36] = 0
                        mem[_2820 + 68] = _2734
                        mem[_2820 + 100] = this.address
                        mem[_2820 + 132] = 128
                        mem[_2820 + 164] = mem[_2820]
                        s = 0
                        while s < mem[_2820]:
                            mem[s + _2820 + 196] = mem[s + _2820 + 32]
                            _2453 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2820]) > mem[_2820]:
                            mem[mem[_2820] + _2820 + 196] = 0
                        require ext_code.size(address(_2565))
                        call address(_2565).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _2734, address(this.address), 128, mem[_2820], mem[_2820 + 196 len ceil32(mem[_2820])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2453 = mem[96]
                        idx = idx + 1
                        s = _2565
                        s = this.address
                        s = _2734
                        continue 
                    require idx + -(_1677 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_1677 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_1677 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2862 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2881 = mem[_2862]
                    require mem[_2862] == mem[_2862 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _2952 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_2952)
                    require ext_code.size(address(_2881))
                    staticcall address(_2881).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_2952)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2986 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3002 = mem[_2986]
                    require mem[_2986] == mem[_2986 + 12 len 20]
                    _3018 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3018 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3018 + 36] = 0
                    mem[_3018 + 68] = _2734
                    mem[_3018 + 100] = address(_3002)
                    mem[_3018 + 132] = 128
                    mem[_3018 + 164] = mem[_3018]
                    s = 0
                    while s < mem[_3018]:
                        mem[s + _3018 + 196] = mem[s + _3018 + 32]
                        _2453 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3018]) > mem[_3018]:
                        mem[mem[_3018] + _3018 + 196] = 0
                    require ext_code.size(address(_2565))
                    call address(_2565).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3018]) + _3018 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2453 = mem[96]
                    idx = idx + 1
                    s = _2565
                    s = _3002
                    s = _2734
                    continue 
                if idx + 2 >= mem[96]:
                    _2824 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2824 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2824 + 36] = _2734
                    mem[_2824 + 68] = 0
                    mem[_2824 + 100] = this.address
                    mem[_2824 + 132] = 128
                    mem[_2824 + 164] = mem[_2824]
                    s = 0
                    while s < mem[_2824]:
                        mem[s + _2824 + 196] = mem[s + _2824 + 32]
                        _2453 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2824]) > mem[_2824]:
                        mem[mem[_2824] + _2824 + 196] = 0
                    require ext_code.size(address(_2565))
                    call address(_2565).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _2734, 0, address(this.address), 128, mem[_2824], mem[_2824 + 196 len ceil32(mem[_2824])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2453 = mem[96]
                    idx = idx + 1
                    s = _2565
                    s = this.address
                    s = _2734
                    continue 
                require idx + -(_1677 / 2) + 1 < mem[96]
                require ext_code.size(mem[(32 * idx + -(_1677 / 2) + 1) + 140 len 20])
                staticcall mem[(32 * idx + -(_1677 / 2) + 1) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2863 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2883 = mem[_2863]
                require mem[_2863] == mem[_2863 + 12 len 20]
                require idx + 1 < mem[96]
                require idx + 2 < mem[96]
                _2954 = mem[(32 * idx + 2) + 128]
                mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                mem[mem[64] + 36] = address(_2954)
                require ext_code.size(address(_2883))
                staticcall address(_2883).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_2954)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2987 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3003 = mem[_2987]
                require mem[_2987] == mem[_2987 + 12 len 20]
                _3019 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3019 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3019 + 36] = _2734
                mem[_3019 + 68] = 0
                mem[_3019 + 100] = address(_3003)
                mem[_3019 + 132] = 128
                mem[_3019 + 164] = mem[_3019]
                s = 0
                while s < mem[_3019]:
                    mem[s + _3019 + 196] = mem[s + _3019 + 32]
                    _2453 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3019]) > mem[_3019]:
                    mem[mem[_3019] + _3019 + 196] = 0
                require ext_code.size(address(_2565))
                call address(_2565).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(mem[_3019]) + _3019 + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2453 = mem[96]
                idx = idx + 1
                s = _2565
                s = _3003
                s = _2734
                continue 
            require _1677 / 2 < mem[96]
            _2468 = mem[(16 * Mask(251, 1, _1677)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_2468))
            staticcall address(_2468).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2504 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_2504] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
    else:
        mem[0] = msg.sender
        mem[32] = 1
        if not stor1[msg.sender]:
            revert with 0, 'Ownable: caller is not the owner'
        require ('cd', 68).length / 2 <= test266151307()
        mem[(32 * ('cd', 68).length) + 128] = ('cd', 68).length / 2
        mem[64] = (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 160
        if not Mask(255, 1, ('cd', 68).length):
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1683 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1703 = mem[_1683]
                require mem[_1683] == mem[_1683 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _1735 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_1735)
                require ext_code.size(address(_1703))
                staticcall address(_1703).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_1735)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1770 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1791 = mem[_1770]
                require mem[_1770] == mem[_1770 + 12 len 20]
                require ext_code.size(mem[_1770 + 12 len 20])
                staticcall mem[_1770 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1840 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1850 = mem[_1840]
                require mem[_1840] == mem[_1840 + 18 len 14]
                _1872 = mem[_1840 + 32]
                require mem[_1840 + 32] == mem[_1840 + 50 len 14]
                require mem[_1840 + 64] == mem[_1840 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_1840 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_1840 + 50 len 14] / (997 * s) + (1000 * mem[_1840 + 18 len 14])
                        idx = idx + 1
                        s = _1791
                        s = 997 * s * Mask(112, 0, _1872) / (997 * s) + (1000 * Mask(112, 0, _1850))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_1840 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_1840 + 50 len 14] / (997 * s) + (1000 * mem[_1840 + 18 len 14])
                        idx = idx + 1
                        s = _1791
                        s = 997 * s * Mask(112, 0, _1872) / (997 * s) + (1000 * Mask(112, 0, _1850))
                        continue 
                require (997 * s) + (1000 * mem[_1840 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_1840 + 18 len 14] / (997 * s) + (1000 * mem[_1840 + 50 len 14])
                idx = idx + 1
                s = _1791
                s = 997 * s * Mask(112, 0, _1850) / (997 * s) + (1000 * Mask(112, 0, _1872))
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _1680 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _1681 = mem[96]
            require mem[96] / 2 < mem[96]
            _1700 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_1700))
            staticcall address(_1700).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _2454 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _2454 - 1:
                require idx < mem[96]
                require 0 < mem[_1680]
                mem[_1680 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_1680]
                mem[_1680 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_1681 / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (_1681 / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (_1681 / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2521 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2529 = mem[_2521]
                require mem[_2521] == mem[_2521 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _2552 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_2552)
                require ext_code.size(address(_2529))
                staticcall address(_2529).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_2552)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2562 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2566 = mem[_2562]
                require mem[_2562] == mem[_2562 + 12 len 20]
                if idx != _1681 / 2:
                    require ext_code.size(mem[_2562 + 12 len 20])
                    staticcall mem[_2562 + 12 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2590 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_2590] == mem[_2590 + 12 len 20]
                    require idx - (_1681 / 2) < mem[(32 * ('cd', 68).length) + 128]
                    _2616 = mem[(32 * idx - (_1681 / 2)) + (32 * ('cd', 68).length) + 160]
                    require 0 < mem[_1680]
                    if mem[_1680 + 44 len 20] == mem[_2590 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _2666 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_2666 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_2666 + 36] = 0
                            mem[_2666 + 68] = _2616
                            mem[_2666 + 100] = this.address
                            mem[_2666 + 132] = 128
                            mem[_2666 + 164] = mem[_2666]
                            s = 0
                            while s < mem[_2666]:
                                mem[s + _2666 + 196] = mem[s + _2666 + 32]
                                _2454 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_2666]) > mem[_2666]:
                                mem[mem[_2666] + _2666 + 196] = 0
                            require ext_code.size(address(_2566))
                            call address(_2566).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_2666]) + _2666 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2454 = mem[96]
                            idx = idx + 1
                            s = _2566
                            s = this.address
                            s = _2616
                            continue 
                        require idx + -(_1681 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_1681 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_1681 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2698 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _2713 = mem[_2698]
                        require mem[_2698] == mem[_2698 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _2788 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_2788)
                        require ext_code.size(address(_2713))
                        staticcall address(_2713).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_2788)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2864 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _2884 = mem[_2864]
                        require mem[_2864] == mem[_2864 + 12 len 20]
                        _2932 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2932 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2932 + 36] = 0
                        mem[_2932 + 68] = _2616
                        mem[_2932 + 100] = address(_2884)
                        mem[_2932 + 132] = 128
                        mem[_2932 + 164] = mem[_2932]
                        s = 0
                        while s < mem[_2932]:
                            mem[s + _2932 + 196] = mem[s + _2932 + 32]
                            _2454 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2932]) > mem[_2932]:
                            mem[mem[_2932] + _2932 + 196] = 0
                        require ext_code.size(address(_2566))
                        call address(_2566).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _2616, address(_2884), 128, mem[_2932], mem[_2932 + 196 len ceil32(mem[_2932])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2454 = mem[96]
                        idx = idx + 1
                        s = _2566
                        s = _2884
                        s = _2616
                        continue 
                    if idx + 2 >= mem[96]:
                        _2670 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2670 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2670 + 36] = _2616
                        mem[_2670 + 68] = 0
                        mem[_2670 + 100] = this.address
                        mem[_2670 + 132] = 128
                        mem[_2670 + 164] = mem[_2670]
                        s = 0
                        while s < mem[_2670]:
                            mem[s + _2670 + 196] = mem[s + _2670 + 32]
                            _2454 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2670]) > mem[_2670]:
                            mem[mem[_2670] + _2670 + 196] = 0
                        require ext_code.size(address(_2566))
                        call address(_2566).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_2670]) + _2670 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2454 = mem[96]
                        idx = idx + 1
                        s = _2566
                        s = this.address
                        s = _2616
                        continue 
                    require idx + -(_1681 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_1681 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_1681 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2699 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2715 = mem[_2699]
                    require mem[_2699] == mem[_2699 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _2790 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_2790)
                    require ext_code.size(address(_2715))
                    staticcall address(_2715).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_2790)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2865 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2885 = mem[_2865]
                    require mem[_2865] == mem[_2865 + 12 len 20]
                    _2933 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2933 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2933 + 36] = _2616
                    mem[_2933 + 68] = 0
                    mem[_2933 + 100] = address(_2885)
                    mem[_2933 + 132] = 128
                    mem[_2933 + 164] = mem[_2933]
                    s = 0
                    while s < mem[_2933]:
                        mem[s + _2933 + 196] = mem[s + _2933 + 32]
                        _2454 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2933]) > mem[_2933]:
                        mem[mem[_2933] + _2933 + 196] = 0
                    require ext_code.size(address(_2566))
                    call address(_2566).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_2933]) + _2933 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2454 = mem[96]
                    idx = idx + 1
                    s = _2566
                    s = _2885
                    s = _2616
                    continue 
                require 0 < mem[_1680]
                _2584 = mem[_1680 + 32]
                mem[mem[64] + 4] = mem[_2562 + 12 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_2584))
                call address(_2584).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2602 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2602] == bool(mem[_2602])
                require ext_code.size(address(_2566))
                staticcall address(_2566).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2674 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2674] == mem[_2674 + 12 len 20]
                require idx - (_1681 / 2) < mem[(32 * ('cd', 68).length) + 128]
                _2740 = mem[(32 * idx - (_1681 / 2)) + (32 * ('cd', 68).length) + 160]
                require 0 < mem[_1680]
                if mem[_1680 + 44 len 20] == mem[_2674 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _2830 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2830 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2830 + 36] = 0
                        mem[_2830 + 68] = _2740
                        mem[_2830 + 100] = this.address
                        mem[_2830 + 132] = 128
                        mem[_2830 + 164] = mem[_2830]
                        s = 0
                        while s < mem[_2830]:
                            mem[s + _2830 + 196] = mem[s + _2830 + 32]
                            _2454 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2830]) > mem[_2830]:
                            mem[mem[_2830] + _2830 + 196] = 0
                        require ext_code.size(address(_2566))
                        call address(_2566).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _2740, address(this.address), 128, mem[_2830], mem[_2830 + 196 len ceil32(mem[_2830])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2454 = mem[96]
                        idx = idx + 1
                        s = _2566
                        s = this.address
                        s = _2740
                        continue 
                    require idx + -(_1681 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_1681 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_1681 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2866 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2887 = mem[_2866]
                    require mem[_2866] == mem[_2866 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _2958 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_2958)
                    require ext_code.size(address(_2887))
                    staticcall address(_2887).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_2958)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2988 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3008 = mem[_2988]
                    require mem[_2988] == mem[_2988 + 12 len 20]
                    _3020 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3020 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3020 + 36] = 0
                    mem[_3020 + 68] = _2740
                    mem[_3020 + 100] = address(_3008)
                    mem[_3020 + 132] = 128
                    mem[_3020 + 164] = mem[_3020]
                    s = 0
                    while s < mem[_3020]:
                        mem[s + _3020 + 196] = mem[s + _3020 + 32]
                        _2454 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3020]) > mem[_3020]:
                        mem[mem[_3020] + _3020 + 196] = 0
                    require ext_code.size(address(_2566))
                    call address(_2566).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3020]) + _3020 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2454 = mem[96]
                    idx = idx + 1
                    s = _2566
                    s = _3008
                    s = _2740
                    continue 
                if idx + 2 >= mem[96]:
                    _2834 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2834 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2834 + 36] = _2740
                    mem[_2834 + 68] = 0
                    mem[_2834 + 100] = this.address
                    mem[_2834 + 132] = 128
                    mem[_2834 + 164] = mem[_2834]
                    s = 0
                    while s < mem[_2834]:
                        mem[s + _2834 + 196] = mem[s + _2834 + 32]
                        _2454 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2834]) > mem[_2834]:
                        mem[mem[_2834] + _2834 + 196] = 0
                    require ext_code.size(address(_2566))
                    call address(_2566).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_2834]) + _2834 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2454 = mem[96]
                    idx = idx + 1
                    s = _2566
                    s = this.address
                    s = _2740
                    continue 
                require idx + -(_1681 / 2) + 1 < mem[96]
                require ext_code.size(mem[(32 * idx + -(_1681 / 2) + 1) + 140 len 20])
                staticcall mem[(32 * idx + -(_1681 / 2) + 1) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2867 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2889 = mem[_2867]
                require mem[_2867] == mem[_2867 + 12 len 20]
                require idx + 1 < mem[96]
                require idx + 2 < mem[96]
                _2960 = mem[(32 * idx + 2) + 128]
                mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                mem[mem[64] + 36] = address(_2960)
                require ext_code.size(address(_2889))
                staticcall address(_2889).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_2960)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2989 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3009 = mem[_2989]
                require mem[_2989] == mem[_2989 + 12 len 20]
                _3021 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3021 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3021 + 36] = _2740
                mem[_3021 + 68] = 0
                mem[_3021 + 100] = address(_3009)
                mem[_3021 + 132] = 128
                mem[_3021 + 164] = mem[_3021]
                s = 0
                while s < mem[_3021]:
                    mem[s + _3021 + 196] = mem[s + _3021 + 32]
                    _2454 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3021]) > mem[_3021]:
                    mem[mem[_3021] + _3021 + 196] = 0
                require ext_code.size(address(_2566))
                call address(_2566).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args _2740, 0, address(_3009), 128, mem[_3021], mem[_3021 + 196 len ceil32(mem[_3021])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2454 = mem[96]
                idx = idx + 1
                s = _2566
                s = _3009
                s = _2740
                continue 
            require _1681 / 2 < mem[96]
            _2472 = mem[(16 * Mask(251, 1, _1681)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_2472))
            staticcall address(_2472).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2508 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_2508] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            mem[(32 * ('cd', 68).length) + 160 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1687 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1707 = mem[_1687]
                require mem[_1687] == mem[_1687 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _1738 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_1738)
                require ext_code.size(address(_1707))
                staticcall address(_1707).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_1738)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1775 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _1795 = mem[_1775]
                require mem[_1775] == mem[_1775 + 12 len 20]
                require ext_code.size(mem[_1775 + 12 len 20])
                staticcall mem[_1775 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1843 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _1851 = mem[_1843]
                require mem[_1843] == mem[_1843 + 18 len 14]
                _1875 = mem[_1843 + 32]
                require mem[_1843 + 32] == mem[_1843 + 50 len 14]
                require mem[_1843 + 64] == mem[_1843 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_1843 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_1843 + 50 len 14] / (997 * s) + (1000 * mem[_1843 + 18 len 14])
                        idx = idx + 1
                        s = _1795
                        s = 997 * s * Mask(112, 0, _1875) / (997 * s) + (1000 * Mask(112, 0, _1851))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_1843 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_1843 + 50 len 14] / (997 * s) + (1000 * mem[_1843 + 18 len 14])
                        idx = idx + 1
                        s = _1795
                        s = 997 * s * Mask(112, 0, _1875) / (997 * s) + (1000 * Mask(112, 0, _1851))
                        continue 
                require (997 * s) + (1000 * mem[_1843 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_1843 + 18 len 14] / (997 * s) + (1000 * mem[_1843 + 50 len 14])
                idx = idx + 1
                s = _1795
                s = 997 * s * Mask(112, 0, _1851) / (997 * s) + (1000 * Mask(112, 0, _1875))
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _1684 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _1685 = mem[96]
            require mem[96] / 2 < mem[96]
            _1704 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_1704))
            staticcall address(_1704).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _2455 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _2455 - 1:
                require idx < mem[96]
                require 0 < mem[_1684]
                mem[_1684 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_1684]
                mem[_1684 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_1685 / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (_1685 / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (_1685 / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2523 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2531 = mem[_2523]
                require mem[_2523] == mem[_2523 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _2554 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_2554)
                require ext_code.size(address(_2531))
                staticcall address(_2531).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_2554)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2563 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2567 = mem[_2563]
                require mem[_2563] == mem[_2563 + 12 len 20]
                if idx != _1685 / 2:
                    require ext_code.size(mem[_2563 + 12 len 20])
                    staticcall mem[_2563 + 12 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2591 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_2591] == mem[_2591 + 12 len 20]
                    require idx - (_1685 / 2) < mem[(32 * ('cd', 68).length) + 128]
                    _2618 = mem[(32 * idx - (_1685 / 2)) + (32 * ('cd', 68).length) + 160]
                    require 0 < mem[_1684]
                    if mem[_1684 + 44 len 20] == mem[_2591 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _2675 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_2675 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_2675 + 36] = 0
                            mem[_2675 + 68] = _2618
                            mem[_2675 + 100] = this.address
                            mem[_2675 + 132] = 128
                            mem[_2675 + 164] = mem[_2675]
                            s = 0
                            while s < mem[_2675]:
                                mem[s + _2675 + 196] = mem[s + _2675 + 32]
                                _2455 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_2675]) > mem[_2675]:
                                mem[mem[_2675] + _2675 + 196] = 0
                            require ext_code.size(address(_2567))
                            call address(_2567).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _2618, address(this.address), 128, mem[_2675], mem[_2675 + 196 len ceil32(mem[_2675])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _2455 = mem[96]
                            idx = idx + 1
                            s = _2567
                            s = this.address
                            s = _2618
                            continue 
                        require idx + -(_1685 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_1685 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_1685 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2701 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _2717 = mem[_2701]
                        require mem[_2701] == mem[_2701 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _2794 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_2794)
                        require ext_code.size(address(_2717))
                        staticcall address(_2717).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_2794)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2868 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _2890 = mem[_2868]
                        require mem[_2868] == mem[_2868 + 12 len 20]
                        _2938 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2938 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2938 + 36] = 0
                        mem[_2938 + 68] = _2618
                        mem[_2938 + 100] = address(_2890)
                        mem[_2938 + 132] = 128
                        mem[_2938 + 164] = mem[_2938]
                        s = 0
                        while s < mem[_2938]:
                            mem[s + _2938 + 196] = mem[s + _2938 + 32]
                            _2455 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2938]) > mem[_2938]:
                            mem[mem[_2938] + _2938 + 196] = 0
                        require ext_code.size(address(_2567))
                        call address(_2567).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_2938]) + _2938 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2455 = mem[96]
                        idx = idx + 1
                        s = _2567
                        s = _2890
                        s = _2618
                        continue 
                    if idx + 2 >= mem[96]:
                        _2679 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2679 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2679 + 36] = _2618
                        mem[_2679 + 68] = 0
                        mem[_2679 + 100] = this.address
                        mem[_2679 + 132] = 128
                        mem[_2679 + 164] = mem[_2679]
                        s = 0
                        while s < mem[_2679]:
                            mem[s + _2679 + 196] = mem[s + _2679 + 32]
                            _2455 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2679]) > mem[_2679]:
                            mem[mem[_2679] + _2679 + 196] = 0
                        require ext_code.size(address(_2567))
                        call address(_2567).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _2618, 0, address(this.address), 128, mem[_2679], mem[_2679 + 196 len ceil32(mem[_2679])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2455 = mem[96]
                        idx = idx + 1
                        s = _2567
                        s = this.address
                        s = _2618
                        continue 
                    require idx + -(_1685 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_1685 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_1685 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2702 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2719 = mem[_2702]
                    require mem[_2702] == mem[_2702 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _2796 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_2796)
                    require ext_code.size(address(_2719))
                    staticcall address(_2719).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_2796)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2869 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2891 = mem[_2869]
                    require mem[_2869] == mem[_2869 + 12 len 20]
                    _2939 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2939 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2939 + 36] = _2618
                    mem[_2939 + 68] = 0
                    mem[_2939 + 100] = address(_2891)
                    mem[_2939 + 132] = 128
                    mem[_2939 + 164] = mem[_2939]
                    s = 0
                    while s < mem[_2939]:
                        mem[s + _2939 + 196] = mem[s + _2939 + 32]
                        _2455 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2939]) > mem[_2939]:
                        mem[mem[_2939] + _2939 + 196] = 0
                    require ext_code.size(address(_2567))
                    call address(_2567).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_2939]) + _2939 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2455 = mem[96]
                    idx = idx + 1
                    s = _2567
                    s = _2891
                    s = _2618
                    continue 
                require 0 < mem[_1684]
                _2586 = mem[_1684 + 32]
                mem[mem[64] + 4] = mem[_2563 + 12 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_2586))
                call address(_2586).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2603 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2603] == bool(mem[_2603])
                require ext_code.size(address(_2567))
                staticcall address(_2567).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2683 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_2683] == mem[_2683 + 12 len 20]
                require idx - (_1685 / 2) < mem[(32 * ('cd', 68).length) + 128]
                _2746 = mem[(32 * idx - (_1685 / 2)) + (32 * ('cd', 68).length) + 160]
                require 0 < mem[_1684]
                if mem[_1684 + 44 len 20] == mem[_2683 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _2840 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_2840 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_2840 + 36] = 0
                        mem[_2840 + 68] = _2746
                        mem[_2840 + 100] = this.address
                        mem[_2840 + 132] = 128
                        mem[_2840 + 164] = mem[_2840]
                        s = 0
                        while s < mem[_2840]:
                            mem[s + _2840 + 196] = mem[s + _2840 + 32]
                            _2455 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_2840]) > mem[_2840]:
                            mem[mem[_2840] + _2840 + 196] = 0
                        require ext_code.size(address(_2567))
                        call address(_2567).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_2840]) + _2840 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _2455 = mem[96]
                        idx = idx + 1
                        s = _2567
                        s = this.address
                        s = _2746
                        continue 
                    require idx + -(_1685 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_1685 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_1685 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2870 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _2893 = mem[_2870]
                    require mem[_2870] == mem[_2870 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _2964 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_2964)
                    require ext_code.size(address(_2893))
                    staticcall address(_2893).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_2964)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2990 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3014 = mem[_2990]
                    require mem[_2990] == mem[_2990 + 12 len 20]
                    _3022 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3022 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3022 + 36] = 0
                    mem[_3022 + 68] = _2746
                    mem[_3022 + 100] = address(_3014)
                    mem[_3022 + 132] = 128
                    mem[_3022 + 164] = mem[_3022]
                    s = 0
                    while s < mem[_3022]:
                        mem[s + _3022 + 196] = mem[s + _3022 + 32]
                        _2455 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3022]) > mem[_3022]:
                        mem[mem[_3022] + _3022 + 196] = 0
                    require ext_code.size(address(_2567))
                    call address(_2567).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, _2746, address(_3014), 128, mem[_3022], mem[_3022 + 196 len ceil32(mem[_3022])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2455 = mem[96]
                    idx = idx + 1
                    s = _2567
                    s = _3014
                    s = _2746
                    continue 
                if idx + 2 >= mem[96]:
                    _2844 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_2844 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_2844 + 36] = _2746
                    mem[_2844 + 68] = 0
                    mem[_2844 + 100] = this.address
                    mem[_2844 + 132] = 128
                    mem[_2844 + 164] = mem[_2844]
                    s = 0
                    while s < mem[_2844]:
                        mem[s + _2844 + 196] = mem[s + _2844 + 32]
                        _2455 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_2844]) > mem[_2844]:
                        mem[mem[_2844] + _2844 + 196] = 0
                    require ext_code.size(address(_2567))
                    call address(_2567).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _2746, 0, address(this.address), 128, mem[_2844], mem[_2844 + 196 len ceil32(mem[_2844])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _2455 = mem[96]
                    idx = idx + 1
                    s = _2567
                    s = this.address
                    s = _2746
                    continue 
                require idx + -(_1685 / 2) + 1 < mem[96]
                require ext_code.size(mem[(32 * idx + -(_1685 / 2) + 1) + 140 len 20])
                staticcall mem[(32 * idx + -(_1685 / 2) + 1) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2871 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2895 = mem[_2871]
                require mem[_2871] == mem[_2871 + 12 len 20]
                require idx + 1 < mem[96]
                require idx + 2 < mem[96]
                _2966 = mem[(32 * idx + 2) + 128]
                mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                mem[mem[64] + 36] = address(_2966)
                require ext_code.size(address(_2895))
                staticcall address(_2895).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_2966)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2991 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3015 = mem[_2991]
                require mem[_2991] == mem[_2991 + 12 len 20]
                _3023 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3023 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3023 + 36] = _2746
                mem[_3023 + 68] = 0
                mem[_3023 + 100] = address(_3015)
                mem[_3023 + 132] = 128
                mem[_3023 + 164] = mem[_3023]
                s = 0
                while s < mem[_3023]:
                    mem[s + _3023 + 196] = mem[s + _3023 + 32]
                    _2455 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3023]) > mem[_3023]:
                    mem[mem[_3023] + _3023 + 196] = 0
                require ext_code.size(address(_2567))
                call address(_2567).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args _2746, 0, address(_3015), 128, mem[_3023], mem[_3023 + 196 len ceil32(mem[_3023])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2455 = mem[96]
                idx = idx + 1
                s = _2567
                s = _3015
                s = _2746
                continue 
            require _1685 / 2 < mem[96]
            _2476 = mem[(16 * Mask(251, 1, _1685)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_2476))
            staticcall address(_2476).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _2512 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_2512] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
}

function sub_c89ed202(?) {
    require calldata.size - 4 >= 128
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require (32 * ('cd', 68).length) + 128 >= 96 and (32 * ('cd', 68).length) + 128 <= test266151307()
    mem[96] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = 128
    while idx < ('cd', 68).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require cd[100] <= test266151307()
    require cd[100] + 35 < calldata.size
    require ('cd', 100).length <= test266151307()
    require (32 * ('cd', 100).length) + 160 >= 128 and (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160 <= test266151307()
    mem[(32 * ('cd', 68).length) + 128] = ('cd', 100).length
    require calldata.size >= cd[100] + (32 * ('cd', 100).length) + 36
    idx = 0
    s = cd[100] + 36
    t = (32 * ('cd', 68).length) + 160
    while idx < ('cd', 100).length:
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if msg.sender == owner:
        require ('cd', 68).length / 2 <= test266151307()
        mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] = ('cd', 68).length / 2
        mem[64] = (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 192
        if not Mask(255, 1, ('cd', 68).length):
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2544 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2564 = mem[_2544]
                require mem[_2544] == mem[_2544 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _2598 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_2598)
                require ext_code.size(address(_2564))
                staticcall address(_2564).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_2598)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2629 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2652 = mem[_2629]
                require mem[_2629] == mem[_2629 + 12 len 20]
                require ext_code.size(mem[_2629 + 12 len 20])
                staticcall mem[_2629 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2703 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2722 = mem[_2703]
                require mem[_2703] == mem[_2703 + 18 len 14]
                _2747 = mem[_2703 + 32]
                require mem[_2703 + 32] == mem[_2703 + 50 len 14]
                require mem[_2703 + 64] == mem[_2703 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_2703 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = 997 * s * mem[_2703 + 50 len 14] / (997 * s) + (1000 * mem[_2703 + 18 len 14])
                        idx = idx + 1
                        s = _2652
                        s = 997 * s * Mask(112, 0, _2747) / (997 * s) + (1000 * Mask(112, 0, _2722))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_2703 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = 997 * s * mem[_2703 + 50 len 14] / (997 * s) + (1000 * mem[_2703 + 18 len 14])
                        idx = idx + 1
                        s = _2652
                        s = 997 * s * Mask(112, 0, _2747) / (997 * s) + (1000 * Mask(112, 0, _2722))
                        continue 
                require (997 * s) + (1000 * mem[_2703 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = 997 * s * mem[_2703 + 18 len 14] / (997 * s) + (1000 * mem[_2703 + 50 len 14])
                idx = idx + 1
                s = _2652
                s = 997 * s * Mask(112, 0, _2722) / (997 * s) + (1000 * Mask(112, 0, _2747))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2541 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2542 = mem[96]
            require mem[96] / 2 < mem[96]
            _2561 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2561))
            staticcall address(_2561).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _3337 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _3337 - 1:
                require idx < mem[96]
                require 0 < mem[_2541]
                mem[_2541 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2541]
                mem[_2541 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2542 / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (_2542 / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (_2542 / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3402 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3410 = mem[_3402]
                require mem[_3402] == mem[_3402 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _3445 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_3445)
                require ext_code.size(address(_3410))
                staticcall address(_3410).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_3445)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3461 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3465 = mem[_3461]
                require mem[_3461] == mem[_3461 + 12 len 20]
                if idx != _2542 / 2:
                    require ext_code.size(mem[_3461 + 12 len 20])
                    staticcall mem[_3461 + 12 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3489 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3489] == mem[_3489 + 12 len 20]
                    require idx - (_2542 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _3513 = mem[(32 * idx - (_2542 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_2541]
                    if mem[_2541 + 44 len 20] == mem[_3489 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3549 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3549 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3549 + 36] = 0
                            mem[_3549 + 68] = _3513
                            mem[_3549 + 100] = this.address
                            mem[_3549 + 132] = 128
                            mem[_3549 + 164] = mem[_3549]
                            s = 0
                            while s < mem[_3549]:
                                mem[s + _3549 + 196] = mem[s + _3549 + 32]
                                _3337 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3549]) > mem[_3549]:
                                mem[mem[_3549] + _3549 + 196] = 0
                            require ext_code.size(address(_3465))
                            call address(_3465).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3549]) + _3549 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3337 = mem[96]
                            idx = idx + 1
                            s = _3465
                            s = this.address
                            s = _3513
                            continue 
                        require idx + -(_2542 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2542 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2542 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3593 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _3606 = mem[_3593]
                        require mem[_3593] == mem[_3593 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _3677 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_3677)
                        require ext_code.size(address(_3606))
                        staticcall address(_3606).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_3677)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3757 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _3773 = mem[_3757]
                        require mem[_3757] == mem[_3757 + 12 len 20]
                        _3821 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3821 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3821 + 36] = 0
                        mem[_3821 + 68] = _3513
                        mem[_3821 + 100] = address(_3773)
                        mem[_3821 + 132] = 128
                        mem[_3821 + 164] = mem[_3821]
                        s = 0
                        while s < mem[_3821]:
                            mem[s + _3821 + 196] = mem[s + _3821 + 32]
                            _3337 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3821]) > mem[_3821]:
                            mem[mem[_3821] + _3821 + 196] = 0
                        require ext_code.size(address(_3465))
                        call address(_3465).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3821]) + _3821 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3337 = mem[96]
                        idx = idx + 1
                        s = _3465
                        s = _3773
                        s = _3513
                        continue 
                    if idx + 2 >= mem[96]:
                        _3553 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3553 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3553 + 36] = _3513
                        mem[_3553 + 68] = 0
                        mem[_3553 + 100] = this.address
                        mem[_3553 + 132] = 128
                        mem[_3553 + 164] = mem[_3553]
                        s = 0
                        while s < mem[_3553]:
                            mem[s + _3553 + 196] = mem[s + _3553 + 32]
                            _3337 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3553]) > mem[_3553]:
                            mem[mem[_3553] + _3553 + 196] = 0
                        require ext_code.size(address(_3465))
                        call address(_3465).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3553]) + _3553 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3337 = mem[96]
                        idx = idx + 1
                        s = _3465
                        s = this.address
                        s = _3513
                        continue 
                    require idx + -(_2542 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2542 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2542 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3594 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3608 = mem[_3594]
                    require mem[_3594] == mem[_3594 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _3679 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_3679)
                    require ext_code.size(address(_3608))
                    staticcall address(_3608).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_3679)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3758 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3774 = mem[_3758]
                    require mem[_3758] == mem[_3758 + 12 len 20]
                    _3822 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3822 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3822 + 36] = _3513
                    mem[_3822 + 68] = 0
                    mem[_3822 + 100] = address(_3774)
                    mem[_3822 + 132] = 128
                    mem[_3822 + 164] = mem[_3822]
                    s = 0
                    while s < mem[_3822]:
                        mem[s + _3822 + 196] = mem[s + _3822 + 32]
                        _3337 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3822]) > mem[_3822]:
                        mem[mem[_3822] + _3822 + 196] = 0
                    require ext_code.size(address(_3465))
                    call address(_3465).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3822]) + _3822 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3337 = mem[96]
                    idx = idx + 1
                    s = _3465
                    s = _3774
                    s = _3513
                    continue 
                require 0 < mem[_2541]
                _3481 = mem[_2541 + 32]
                mem[mem[64] + 4] = mem[_3461 + 12 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_3481))
                call address(_3481).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3501 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3501] == bool(mem[_3501])
                require ext_code.size(address(_3465))
                staticcall address(_3465).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3557 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3557] == mem[_3557 + 12 len 20]
                require idx - (_2542 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _3629 = mem[(32 * idx - (_2542 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                require 0 < mem[_2541]
                if mem[_2541 + 44 len 20] == mem[_3557 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _3711 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3711 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3711 + 36] = 0
                        mem[_3711 + 68] = _3629
                        mem[_3711 + 100] = this.address
                        mem[_3711 + 132] = 128
                        mem[_3711 + 164] = mem[_3711]
                        s = 0
                        while s < mem[_3711]:
                            mem[s + _3711 + 196] = mem[s + _3711 + 32]
                            _3337 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3711]) > mem[_3711]:
                            mem[mem[_3711] + _3711 + 196] = 0
                        require ext_code.size(address(_3465))
                        call address(_3465).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _3629, address(this.address), 128, mem[_3711], mem[_3711 + 196 len ceil32(mem[_3711])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3337 = mem[96]
                        idx = idx + 1
                        s = _3465
                        s = this.address
                        s = _3629
                        continue 
                    require idx + -(_2542 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2542 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2542 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3759 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3776 = mem[_3759]
                    require mem[_3759] == mem[_3759 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _3847 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_3847)
                    require ext_code.size(address(_3776))
                    staticcall address(_3776).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_3847)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3885 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3897 = mem[_3885]
                    require mem[_3885] == mem[_3885 + 12 len 20]
                    _3917 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3917 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3917 + 36] = 0
                    mem[_3917 + 68] = _3629
                    mem[_3917 + 100] = address(_3897)
                    mem[_3917 + 132] = 128
                    mem[_3917 + 164] = mem[_3917]
                    s = 0
                    while s < mem[_3917]:
                        mem[s + _3917 + 196] = mem[s + _3917 + 32]
                        _3337 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3917]) > mem[_3917]:
                        mem[mem[_3917] + _3917 + 196] = 0
                    require ext_code.size(address(_3465))
                    call address(_3465).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3917]) + _3917 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3337 = mem[96]
                    idx = idx + 1
                    s = _3465
                    s = _3897
                    s = _3629
                    continue 
                if idx + 2 >= mem[96]:
                    _3715 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3715 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3715 + 36] = _3629
                    mem[_3715 + 68] = 0
                    mem[_3715 + 100] = this.address
                    mem[_3715 + 132] = 128
                    mem[_3715 + 164] = mem[_3715]
                    s = 0
                    while s < mem[_3715]:
                        mem[s + _3715 + 196] = mem[s + _3715 + 32]
                        _3337 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3715]) > mem[_3715]:
                        mem[mem[_3715] + _3715 + 196] = 0
                    require ext_code.size(address(_3465))
                    call address(_3465).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _3629, 0, address(this.address), 128, mem[_3715], mem[_3715 + 196 len ceil32(mem[_3715])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3337 = mem[96]
                    idx = idx + 1
                    s = _3465
                    s = this.address
                    s = _3629
                    continue 
                require idx + -(_2542 / 2) + 1 < mem[96]
                require ext_code.size(mem[(32 * idx + -(_2542 / 2) + 1) + 140 len 20])
                staticcall mem[(32 * idx + -(_2542 / 2) + 1) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3760 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3778 = mem[_3760]
                require mem[_3760] == mem[_3760 + 12 len 20]
                require idx + 1 < mem[96]
                require idx + 2 < mem[96]
                _3849 = mem[(32 * idx + 2) + 128]
                mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                mem[mem[64] + 36] = address(_3849)
                require ext_code.size(address(_3778))
                staticcall address(_3778).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_3849)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3886 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3898 = mem[_3886]
                require mem[_3886] == mem[_3886 + 12 len 20]
                _3918 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3918 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3918 + 36] = _3629
                mem[_3918 + 68] = 0
                mem[_3918 + 100] = address(_3898)
                mem[_3918 + 132] = 128
                mem[_3918 + 164] = mem[_3918]
                s = 0
                while s < mem[_3918]:
                    mem[s + _3918 + 196] = mem[s + _3918 + 32]
                    _3337 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3918]) > mem[_3918]:
                    mem[mem[_3918] + _3918 + 196] = 0
                require ext_code.size(address(_3465))
                call address(_3465).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(mem[_3918]) + _3918 + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3337 = mem[96]
                idx = idx + 1
                s = _3465
                s = _3898
                s = _3629
                continue 
            require _2542 / 2 < mem[96]
            _3349 = mem[(16 * Mask(251, 1, _2542)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_3349))
            staticcall address(_3349).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3385 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_3385] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2548 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2568 = mem[_2548]
                require mem[_2548] == mem[_2548 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _2601 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_2601)
                require ext_code.size(address(_2568))
                staticcall address(_2568).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_2601)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2634 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2656 = mem[_2634]
                require mem[_2634] == mem[_2634 + 12 len 20]
                require ext_code.size(mem[_2634 + 12 len 20])
                staticcall mem[_2634 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2706 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2724 = mem[_2706]
                require mem[_2706] == mem[_2706 + 18 len 14]
                _2750 = mem[_2706 + 32]
                require mem[_2706 + 32] == mem[_2706 + 50 len 14]
                require mem[_2706 + 64] == mem[_2706 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_2706 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = 997 * s * mem[_2706 + 50 len 14] / (997 * s) + (1000 * mem[_2706 + 18 len 14])
                        idx = idx + 1
                        s = _2656
                        s = 997 * s * Mask(112, 0, _2750) / (997 * s) + (1000 * Mask(112, 0, _2724))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_2706 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = 997 * s * mem[_2706 + 50 len 14] / (997 * s) + (1000 * mem[_2706 + 18 len 14])
                        idx = idx + 1
                        s = _2656
                        s = 997 * s * Mask(112, 0, _2750) / (997 * s) + (1000 * Mask(112, 0, _2724))
                        continue 
                require (997 * s) + (1000 * mem[_2706 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = 997 * s * mem[_2706 + 18 len 14] / (997 * s) + (1000 * mem[_2706 + 50 len 14])
                idx = idx + 1
                s = _2656
                s = 997 * s * Mask(112, 0, _2724) / (997 * s) + (1000 * Mask(112, 0, _2750))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2545 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2546 = mem[96]
            require mem[96] / 2 < mem[96]
            _2565 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2565))
            staticcall address(_2565).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _3338 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _3338 - 1:
                require idx < mem[96]
                require 0 < mem[_2545]
                mem[_2545 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2545]
                mem[_2545 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2546 / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (_2546 / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (_2546 / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3404 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3412 = mem[_3404]
                require mem[_3404] == mem[_3404 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _3447 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_3447)
                require ext_code.size(address(_3412))
                staticcall address(_3412).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_3447)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3462 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3466 = mem[_3462]
                require mem[_3462] == mem[_3462 + 12 len 20]
                if idx != _2546 / 2:
                    require ext_code.size(mem[_3462 + 12 len 20])
                    staticcall mem[_3462 + 12 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3490 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3490] == mem[_3490 + 12 len 20]
                    require idx - (_2546 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _3515 = mem[(32 * idx - (_2546 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_2545]
                    if mem[_2545 + 44 len 20] == mem[_3490 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3558 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3558 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3558 + 36] = 0
                            mem[_3558 + 68] = _3515
                            mem[_3558 + 100] = this.address
                            mem[_3558 + 132] = 128
                            mem[_3558 + 164] = mem[_3558]
                            s = 0
                            while s < mem[_3558]:
                                mem[s + _3558 + 196] = mem[s + _3558 + 32]
                                _3338 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3558]) > mem[_3558]:
                                mem[mem[_3558] + _3558 + 196] = 0
                            require ext_code.size(address(_3466))
                            call address(_3466).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len ceil32(mem[_3558]) + _3558 + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3338 = mem[96]
                            idx = idx + 1
                            s = _3466
                            s = this.address
                            s = _3515
                            continue 
                        require idx + -(_2546 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2546 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2546 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3596 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _3610 = mem[_3596]
                        require mem[_3596] == mem[_3596 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _3683 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_3683)
                        require ext_code.size(address(_3610))
                        staticcall address(_3610).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_3683)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3761 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _3779 = mem[_3761]
                        require mem[_3761] == mem[_3761 + 12 len 20]
                        _3827 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3827 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3827 + 36] = 0
                        mem[_3827 + 68] = _3515
                        mem[_3827 + 100] = address(_3779)
                        mem[_3827 + 132] = 128
                        mem[_3827 + 164] = mem[_3827]
                        s = 0
                        while s < mem[_3827]:
                            mem[s + _3827 + 196] = mem[s + _3827 + 32]
                            _3338 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3827]) > mem[_3827]:
                            mem[mem[_3827] + _3827 + 196] = 0
                        require ext_code.size(address(_3466))
                        call address(_3466).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3827]) + _3827 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3338 = mem[96]
                        idx = idx + 1
                        s = _3466
                        s = _3779
                        s = _3515
                        continue 
                    if idx + 2 >= mem[96]:
                        _3562 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3562 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3562 + 36] = _3515
                        mem[_3562 + 68] = 0
                        mem[_3562 + 100] = this.address
                        mem[_3562 + 132] = 128
                        mem[_3562 + 164] = mem[_3562]
                        s = 0
                        while s < mem[_3562]:
                            mem[s + _3562 + 196] = mem[s + _3562 + 32]
                            _3338 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3562]) > mem[_3562]:
                            mem[mem[_3562] + _3562 + 196] = 0
                        require ext_code.size(address(_3466))
                        call address(_3466).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3562]) + _3562 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3338 = mem[96]
                        idx = idx + 1
                        s = _3466
                        s = this.address
                        s = _3515
                        continue 
                    require idx + -(_2546 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2546 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2546 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3597 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3612 = mem[_3597]
                    require mem[_3597] == mem[_3597 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _3685 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_3685)
                    require ext_code.size(address(_3612))
                    staticcall address(_3612).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_3685)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3762 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3780 = mem[_3762]
                    require mem[_3762] == mem[_3762 + 12 len 20]
                    _3828 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3828 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3828 + 36] = _3515
                    mem[_3828 + 68] = 0
                    mem[_3828 + 100] = address(_3780)
                    mem[_3828 + 132] = 128
                    mem[_3828 + 164] = mem[_3828]
                    s = 0
                    while s < mem[_3828]:
                        mem[s + _3828 + 196] = mem[s + _3828 + 32]
                        _3338 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3828]) > mem[_3828]:
                        mem[mem[_3828] + _3828 + 196] = 0
                    require ext_code.size(address(_3466))
                    call address(_3466).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _3515, 0, address(_3780), 128, mem[_3828], mem[_3828 + 196 len ceil32(mem[_3828])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3338 = mem[96]
                    idx = idx + 1
                    s = _3466
                    s = _3780
                    s = _3515
                    continue 
                require 0 < mem[_2545]
                _3483 = mem[_2545 + 32]
                mem[mem[64] + 4] = mem[_3462 + 12 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_3483))
                call address(_3483).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3502 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3502] == bool(mem[_3502])
                require ext_code.size(address(_3466))
                staticcall address(_3466).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3566 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3566] == mem[_3566 + 12 len 20]
                require idx - (_2546 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _3635 = mem[(32 * idx - (_2546 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                require 0 < mem[_2545]
                if mem[_2545 + 44 len 20] == mem[_3566 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _3721 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3721 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3721 + 36] = 0
                        mem[_3721 + 68] = _3635
                        mem[_3721 + 100] = this.address
                        mem[_3721 + 132] = 128
                        mem[_3721 + 164] = mem[_3721]
                        s = 0
                        while s < mem[_3721]:
                            mem[s + _3721 + 196] = mem[s + _3721 + 32]
                            _3338 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3721]) > mem[_3721]:
                            mem[mem[_3721] + _3721 + 196] = 0
                        require ext_code.size(address(_3466))
                        call address(_3466).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3721]) + _3721 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3338 = mem[96]
                        idx = idx + 1
                        s = _3466
                        s = this.address
                        s = _3635
                        continue 
                    require idx + -(_2546 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2546 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2546 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3763 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3782 = mem[_3763]
                    require mem[_3763] == mem[_3763 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _3853 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_3853)
                    require ext_code.size(address(_3782))
                    staticcall address(_3782).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_3853)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3887 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3903 = mem[_3887]
                    require mem[_3887] == mem[_3887 + 12 len 20]
                    _3919 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3919 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3919 + 36] = 0
                    mem[_3919 + 68] = _3635
                    mem[_3919 + 100] = address(_3903)
                    mem[_3919 + 132] = 128
                    mem[_3919 + 164] = mem[_3919]
                    s = 0
                    while s < mem[_3919]:
                        mem[s + _3919 + 196] = mem[s + _3919 + 32]
                        _3338 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3919]) > mem[_3919]:
                        mem[mem[_3919] + _3919 + 196] = 0
                    require ext_code.size(address(_3466))
                    call address(_3466).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, _3635, address(_3903), 128, mem[_3919], mem[_3919 + 196 len ceil32(mem[_3919])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3338 = mem[96]
                    idx = idx + 1
                    s = _3466
                    s = _3903
                    s = _3635
                    continue 
                if idx + 2 >= mem[96]:
                    _3725 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3725 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3725 + 36] = _3635
                    mem[_3725 + 68] = 0
                    mem[_3725 + 100] = this.address
                    mem[_3725 + 132] = 128
                    mem[_3725 + 164] = mem[_3725]
                    s = 0
                    while s < mem[_3725]:
                        mem[s + _3725 + 196] = mem[s + _3725 + 32]
                        _3338 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3725]) > mem[_3725]:
                        mem[mem[_3725] + _3725 + 196] = 0
                    require ext_code.size(address(_3466))
                    call address(_3466).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3725]) + _3725 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3338 = mem[96]
                    idx = idx + 1
                    s = _3466
                    s = this.address
                    s = _3635
                    continue 
                require idx + -(_2546 / 2) + 1 < mem[96]
                require ext_code.size(mem[(32 * idx + -(_2546 / 2) + 1) + 140 len 20])
                staticcall mem[(32 * idx + -(_2546 / 2) + 1) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3764 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3784 = mem[_3764]
                require mem[_3764] == mem[_3764 + 12 len 20]
                require idx + 1 < mem[96]
                require idx + 2 < mem[96]
                _3855 = mem[(32 * idx + 2) + 128]
                mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                mem[mem[64] + 36] = address(_3855)
                require ext_code.size(address(_3784))
                staticcall address(_3784).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_3855)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3888 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3904 = mem[_3888]
                require mem[_3888] == mem[_3888 + 12 len 20]
                _3920 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3920 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3920 + 36] = _3635
                mem[_3920 + 68] = 0
                mem[_3920 + 100] = address(_3904)
                mem[_3920 + 132] = 128
                mem[_3920 + 164] = mem[_3920]
                s = 0
                while s < mem[_3920]:
                    mem[s + _3920 + 196] = mem[s + _3920 + 32]
                    _3338 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3920]) > mem[_3920]:
                    mem[mem[_3920] + _3920 + 196] = 0
                require ext_code.size(address(_3466))
                call address(_3466).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len ceil32(mem[_3920]) + _3920 + -mem[64] + 192]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3338 = mem[96]
                idx = idx + 1
                s = _3466
                s = _3904
                s = _3635
                continue 
            require _2546 / 2 < mem[96]
            _3353 = mem[(16 * Mask(251, 1, _2546)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_3353))
            staticcall address(_3353).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3389 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_3389] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
    else:
        mem[0] = msg.sender
        mem[32] = 1
        if not stor1[msg.sender]:
            revert with 0, 'Ownable: caller is not the owner'
        require ('cd', 68).length / 2 <= test266151307()
        mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] = ('cd', 68).length / 2
        mem[64] = (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 192
        if not Mask(255, 1, ('cd', 68).length):
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2552 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2572 = mem[_2552]
                require mem[_2552] == mem[_2552 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _2604 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_2604)
                require ext_code.size(address(_2572))
                staticcall address(_2572).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_2604)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2639 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2660 = mem[_2639]
                require mem[_2639] == mem[_2639 + 12 len 20]
                require ext_code.size(mem[_2639 + 12 len 20])
                staticcall mem[_2639 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2709 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2726 = mem[_2709]
                require mem[_2709] == mem[_2709 + 18 len 14]
                _2753 = mem[_2709 + 32]
                require mem[_2709 + 32] == mem[_2709 + 50 len 14]
                require mem[_2709 + 64] == mem[_2709 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_2709 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = 997 * s * mem[_2709 + 50 len 14] / (997 * s) + (1000 * mem[_2709 + 18 len 14])
                        idx = idx + 1
                        s = _2660
                        s = 997 * s * Mask(112, 0, _2753) / (997 * s) + (1000 * Mask(112, 0, _2726))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_2709 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = 997 * s * mem[_2709 + 50 len 14] / (997 * s) + (1000 * mem[_2709 + 18 len 14])
                        idx = idx + 1
                        s = _2660
                        s = 997 * s * Mask(112, 0, _2753) / (997 * s) + (1000 * Mask(112, 0, _2726))
                        continue 
                require (997 * s) + (1000 * mem[_2709 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = 997 * s * mem[_2709 + 18 len 14] / (997 * s) + (1000 * mem[_2709 + 50 len 14])
                idx = idx + 1
                s = _2660
                s = 997 * s * Mask(112, 0, _2726) / (997 * s) + (1000 * Mask(112, 0, _2753))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2549 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2550 = mem[96]
            require mem[96] / 2 < mem[96]
            _2569 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2569))
            staticcall address(_2569).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _3339 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _3339 - 1:
                require idx < mem[96]
                require 0 < mem[_2549]
                mem[_2549 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2549]
                mem[_2549 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2550 / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (_2550 / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (_2550 / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3406 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3414 = mem[_3406]
                require mem[_3406] == mem[_3406 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _3449 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_3449)
                require ext_code.size(address(_3414))
                staticcall address(_3414).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_3449)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3463 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3467 = mem[_3463]
                require mem[_3463] == mem[_3463 + 12 len 20]
                if idx != _2550 / 2:
                    require ext_code.size(mem[_3463 + 12 len 20])
                    staticcall mem[_3463 + 12 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3491 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3491] == mem[_3491 + 12 len 20]
                    require idx - (_2550 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _3517 = mem[(32 * idx - (_2550 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_2549]
                    if mem[_2549 + 44 len 20] == mem[_3491 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3567 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3567 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3567 + 36] = 0
                            mem[_3567 + 68] = _3517
                            mem[_3567 + 100] = this.address
                            mem[_3567 + 132] = 128
                            mem[_3567 + 164] = mem[_3567]
                            s = 0
                            while s < mem[_3567]:
                                mem[s + _3567 + 196] = mem[s + _3567 + 32]
                                _3339 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3567]) > mem[_3567]:
                                mem[mem[_3567] + _3567 + 196] = 0
                            require ext_code.size(address(_3467))
                            call address(_3467).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _3517, address(this.address), 128, mem[_3567], mem[_3567 + 196 len ceil32(mem[_3567])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3339 = mem[96]
                            idx = idx + 1
                            s = _3467
                            s = this.address
                            s = _3517
                            continue 
                        require idx + -(_2550 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2550 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2550 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3599 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _3614 = mem[_3599]
                        require mem[_3599] == mem[_3599 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _3689 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_3689)
                        require ext_code.size(address(_3614))
                        staticcall address(_3614).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_3689)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3765 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _3785 = mem[_3765]
                        require mem[_3765] == mem[_3765 + 12 len 20]
                        _3833 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3833 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3833 + 36] = 0
                        mem[_3833 + 68] = _3517
                        mem[_3833 + 100] = address(_3785)
                        mem[_3833 + 132] = 128
                        mem[_3833 + 164] = mem[_3833]
                        s = 0
                        while s < mem[_3833]:
                            mem[s + _3833 + 196] = mem[s + _3833 + 32]
                            _3339 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3833]) > mem[_3833]:
                            mem[mem[_3833] + _3833 + 196] = 0
                        require ext_code.size(address(_3467))
                        call address(_3467).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3833]) + _3833 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3339 = mem[96]
                        idx = idx + 1
                        s = _3467
                        s = _3785
                        s = _3517
                        continue 
                    if idx + 2 >= mem[96]:
                        _3571 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3571 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3571 + 36] = _3517
                        mem[_3571 + 68] = 0
                        mem[_3571 + 100] = this.address
                        mem[_3571 + 132] = 128
                        mem[_3571 + 164] = mem[_3571]
                        s = 0
                        while s < mem[_3571]:
                            mem[s + _3571 + 196] = mem[s + _3571 + 32]
                            _3339 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3571]) > mem[_3571]:
                            mem[mem[_3571] + _3571 + 196] = 0
                        require ext_code.size(address(_3467))
                        call address(_3467).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _3517, 0, address(this.address), 128, mem[_3571], mem[_3571 + 196 len ceil32(mem[_3571])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3339 = mem[96]
                        idx = idx + 1
                        s = _3467
                        s = this.address
                        s = _3517
                        continue 
                    require idx + -(_2550 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2550 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2550 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3600 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3616 = mem[_3600]
                    require mem[_3600] == mem[_3600 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _3691 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_3691)
                    require ext_code.size(address(_3616))
                    staticcall address(_3616).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_3691)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3766 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3786 = mem[_3766]
                    require mem[_3766] == mem[_3766 + 12 len 20]
                    _3834 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3834 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3834 + 36] = _3517
                    mem[_3834 + 68] = 0
                    mem[_3834 + 100] = address(_3786)
                    mem[_3834 + 132] = 128
                    mem[_3834 + 164] = mem[_3834]
                    s = 0
                    while s < mem[_3834]:
                        mem[s + _3834 + 196] = mem[s + _3834 + 32]
                        _3339 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3834]) > mem[_3834]:
                        mem[mem[_3834] + _3834 + 196] = 0
                    require ext_code.size(address(_3467))
                    call address(_3467).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _3517, 0, address(_3786), 128, mem[_3834], mem[_3834 + 196 len ceil32(mem[_3834])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3339 = mem[96]
                    idx = idx + 1
                    s = _3467
                    s = _3786
                    s = _3517
                    continue 
                require 0 < mem[_2549]
                _3485 = mem[_2549 + 32]
                mem[mem[64] + 4] = mem[_3463 + 12 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_3485))
                call address(_3485).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3503 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3503] == bool(mem[_3503])
                require ext_code.size(address(_3467))
                staticcall address(_3467).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3575 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3575] == mem[_3575 + 12 len 20]
                require idx - (_2550 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _3641 = mem[(32 * idx - (_2550 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                require 0 < mem[_2549]
                if mem[_2549 + 44 len 20] == mem[_3575 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _3731 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3731 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3731 + 36] = 0
                        mem[_3731 + 68] = _3641
                        mem[_3731 + 100] = this.address
                        mem[_3731 + 132] = 128
                        mem[_3731 + 164] = mem[_3731]
                        s = 0
                        while s < mem[_3731]:
                            mem[s + _3731 + 196] = mem[s + _3731 + 32]
                            _3339 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3731]) > mem[_3731]:
                            mem[mem[_3731] + _3731 + 196] = 0
                        require ext_code.size(address(_3467))
                        call address(_3467).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len ceil32(mem[_3731]) + _3731 + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3339 = mem[96]
                        idx = idx + 1
                        s = _3467
                        s = this.address
                        s = _3641
                        continue 
                    require idx + -(_2550 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2550 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2550 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3767 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3788 = mem[_3767]
                    require mem[_3767] == mem[_3767 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _3859 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_3859)
                    require ext_code.size(address(_3788))
                    staticcall address(_3788).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_3859)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3889 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3909 = mem[_3889]
                    require mem[_3889] == mem[_3889 + 12 len 20]
                    _3921 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3921 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3921 + 36] = 0
                    mem[_3921 + 68] = _3641
                    mem[_3921 + 100] = address(_3909)
                    mem[_3921 + 132] = 128
                    mem[_3921 + 164] = mem[_3921]
                    s = 0
                    while s < mem[_3921]:
                        mem[s + _3921 + 196] = mem[s + _3921 + 32]
                        _3339 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3921]) > mem[_3921]:
                        mem[mem[_3921] + _3921 + 196] = 0
                    require ext_code.size(address(_3467))
                    call address(_3467).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args 0, _3641, address(_3909), 128, mem[_3921], mem[_3921 + 196 len ceil32(mem[_3921])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3339 = mem[96]
                    idx = idx + 1
                    s = _3467
                    s = _3909
                    s = _3641
                    continue 
                if idx + 2 >= mem[96]:
                    _3735 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3735 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3735 + 36] = _3641
                    mem[_3735 + 68] = 0
                    mem[_3735 + 100] = this.address
                    mem[_3735 + 132] = 128
                    mem[_3735 + 164] = mem[_3735]
                    s = 0
                    while s < mem[_3735]:
                        mem[s + _3735 + 196] = mem[s + _3735 + 32]
                        _3339 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3735]) > mem[_3735]:
                        mem[mem[_3735] + _3735 + 196] = 0
                    require ext_code.size(address(_3467))
                    call address(_3467).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                         gas gas_remaining wei
                        args _3641, 0, address(this.address), 128, mem[_3735], mem[_3735 + 196 len ceil32(mem[_3735])]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3339 = mem[96]
                    idx = idx + 1
                    s = _3467
                    s = this.address
                    s = _3641
                    continue 
                require idx + -(_2550 / 2) + 1 < mem[96]
                require ext_code.size(mem[(32 * idx + -(_2550 / 2) + 1) + 140 len 20])
                staticcall mem[(32 * idx + -(_2550 / 2) + 1) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3768 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3790 = mem[_3768]
                require mem[_3768] == mem[_3768 + 12 len 20]
                require idx + 1 < mem[96]
                require idx + 2 < mem[96]
                _3861 = mem[(32 * idx + 2) + 128]
                mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                mem[mem[64] + 36] = address(_3861)
                require ext_code.size(address(_3790))
                staticcall address(_3790).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_3861)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3890 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3910 = mem[_3890]
                require mem[_3890] == mem[_3890 + 12 len 20]
                _3922 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3922 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3922 + 36] = _3641
                mem[_3922 + 68] = 0
                mem[_3922 + 100] = address(_3910)
                mem[_3922 + 132] = 128
                mem[_3922 + 164] = mem[_3922]
                s = 0
                while s < mem[_3922]:
                    mem[s + _3922 + 196] = mem[s + _3922 + 32]
                    _3339 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3922]) > mem[_3922]:
                    mem[mem[_3922] + _3922 + 196] = 0
                require ext_code.size(address(_3467))
                call address(_3467).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args _3641, 0, address(_3910), 128, mem[_3922], mem[_3922 + 196 len ceil32(mem[_3922])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3339 = mem[96]
                idx = idx + 1
                s = _3467
                s = _3910
                s = _3641
                continue 
            require _2550 / 2 < mem[96]
            _3357 = mem[(16 * Mask(251, 1, _2550)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_3357))
            staticcall address(_3357).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3393 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_3393] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2556 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2576 = mem[_2556]
                require mem[_2556] == mem[_2556 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _2607 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_2607)
                require ext_code.size(address(_2576))
                staticcall address(_2576).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_2607)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2644 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _2664 = mem[_2644]
                require mem[_2644] == mem[_2644 + 12 len 20]
                require ext_code.size(mem[_2644 + 12 len 20])
                staticcall mem[_2644 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _2712 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _2728 = mem[_2712]
                require mem[_2712] == mem[_2712 + 18 len 14]
                _2756 = mem[_2712 + 32]
                require mem[_2712 + 32] == mem[_2712 + 50 len 14]
                require mem[_2712 + 64] == mem[_2712 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_2712 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = 997 * s * mem[_2712 + 50 len 14] / (997 * s) + (1000 * mem[_2712 + 18 len 14])
                        idx = idx + 1
                        s = _2664
                        s = 997 * s * Mask(112, 0, _2756) / (997 * s) + (1000 * Mask(112, 0, _2728))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_2712 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = 997 * s * mem[_2712 + 50 len 14] / (997 * s) + (1000 * mem[_2712 + 18 len 14])
                        idx = idx + 1
                        s = _2664
                        s = 997 * s * Mask(112, 0, _2756) / (997 * s) + (1000 * Mask(112, 0, _2728))
                        continue 
                require (997 * s) + (1000 * mem[_2712 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] = 997 * s * mem[_2712 + 18 len 14] / (997 * s) + (1000 * mem[_2712 + 50 len 14])
                idx = idx + 1
                s = _2664
                s = 997 * s * Mask(112, 0, _2728) / (997 * s) + (1000 * Mask(112, 0, _2756))
                continue 
            require mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1 < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
            if mem[(32 * mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160] - 1) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _2553 = mem[64]
            mem[mem[64]] = 2
            mem[mem[64] + 32 len 64] = call.data[calldata.size len 64]
            _2554 = mem[96]
            require mem[96] / 2 < mem[96]
            _2573 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 100] = this.address
            require ext_code.size(address(_2573))
            staticcall address(_2573).0x70a08231 with:
                    gas gas_remaining wei
                   args this.address
            mem[mem[64] + 96] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size) + 96
            require return_data.size >= 32
            _3340 = mem[96]
            idx = mem[96] / 2
            s = 0
            s = 0
            s = cd[4]
            while idx < _3340 - 1:
                require idx < mem[96]
                require 0 < mem[_2553]
                mem[_2553 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_2553]
                mem[_2553 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx - (_2554 / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (_2554 / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (_2554 / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3408 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3416 = mem[_3408]
                require mem[_3408] == mem[_3408 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _3451 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_3451)
                require ext_code.size(address(_3416))
                staticcall address(_3416).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_3451)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3464 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3468 = mem[_3464]
                require mem[_3464] == mem[_3464 + 12 len 20]
                if idx != _2554 / 2:
                    require ext_code.size(mem[_3464 + 12 len 20])
                    staticcall mem[_3464 + 12 len 20].token0() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3492 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_3492] == mem[_3492 + 12 len 20]
                    require idx - (_2554 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                    _3519 = mem[(32 * idx - (_2554 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                    require 0 < mem[_2553]
                    if mem[_2553 + 44 len 20] == mem[_3492 + 12 len 20]:
                        if idx + 2 >= mem[96]:
                            _3576 = mem[64]
                            mem[mem[64]] = 0
                            mem[64] = mem[64] + 32
                            mem[_3576 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3576 + 36] = 0
                            mem[_3576 + 68] = _3519
                            mem[_3576 + 100] = this.address
                            mem[_3576 + 132] = 128
                            mem[_3576 + 164] = mem[_3576]
                            s = 0
                            while s < mem[_3576]:
                                mem[s + _3576 + 196] = mem[s + _3576 + 32]
                                _3340 = mem[96]
                                s = s + 32
                                continue 
                            if ceil32(mem[_3576]) > mem[_3576]:
                                mem[mem[_3576] + _3576 + 196] = 0
                            require ext_code.size(address(_3468))
                            call address(_3468).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, _3519, address(this.address), 128, mem[_3576], mem[_3576 + 196 len ceil32(mem[_3576])]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _3340 = mem[96]
                            idx = idx + 1
                            s = _3468
                            s = this.address
                            s = _3519
                            continue 
                        require idx + -(_2554 / 2) + 1 < mem[96]
                        require ext_code.size(mem[(32 * idx + -(_2554 / 2) + 1) + 140 len 20])
                        staticcall mem[(32 * idx + -(_2554 / 2) + 1) + 140 len 20].factory() with:
                                gas gas_remaining wei
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3602 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _3618 = mem[_3602]
                        require mem[_3602] == mem[_3602 + 12 len 20]
                        require idx + 1 < mem[96]
                        require idx + 2 < mem[96]
                        _3695 = mem[(32 * idx + 2) + 128]
                        mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                        mem[mem[64] + 36] = address(_3695)
                        require ext_code.size(address(_3618))
                        staticcall address(_3618).getPair(address arg1, address arg2) with:
                                gas gas_remaining wei
                               args mem[mem[64] + 4], address(_3695)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3769 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _3791 = mem[_3769]
                        require mem[_3769] == mem[_3769 + 12 len 20]
                        _3839 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3839 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3839 + 36] = 0
                        mem[_3839 + 68] = _3519
                        mem[_3839 + 100] = address(_3791)
                        mem[_3839 + 132] = 128
                        mem[_3839 + 164] = mem[_3839]
                        s = 0
                        while s < mem[_3839]:
                            mem[s + _3839 + 196] = mem[s + _3839 + 32]
                            _3340 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3839]) > mem[_3839]:
                            mem[mem[_3839] + _3839 + 196] = 0
                        require ext_code.size(address(_3468))
                        call address(_3468).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _3519, address(_3791), 128, mem[_3839], mem[_3839 + 196 len ceil32(mem[_3839])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3340 = mem[96]
                        idx = idx + 1
                        s = _3468
                        s = _3791
                        s = _3519
                        continue 
                    if idx + 2 >= mem[96]:
                        _3580 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3580 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3580 + 36] = _3519
                        mem[_3580 + 68] = 0
                        mem[_3580 + 100] = this.address
                        mem[_3580 + 132] = 128
                        mem[_3580 + 164] = mem[_3580]
                        s = 0
                        while s < mem[_3580]:
                            mem[s + _3580 + 196] = mem[s + _3580 + 32]
                            _3340 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3580]) > mem[_3580]:
                            mem[mem[_3580] + _3580 + 196] = 0
                        require ext_code.size(address(_3468))
                        call address(_3468).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args _3519, 0, address(this.address), 128, mem[_3580], mem[_3580 + 196 len ceil32(mem[_3580])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3340 = mem[96]
                        idx = idx + 1
                        s = _3468
                        s = this.address
                        s = _3519
                        continue 
                    require idx + -(_2554 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2554 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2554 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3603 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3620 = mem[_3603]
                    require mem[_3603] == mem[_3603 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _3697 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_3697)
                    require ext_code.size(address(_3620))
                    staticcall address(_3620).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_3697)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3770 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3792 = mem[_3770]
                    require mem[_3770] == mem[_3770 + 12 len 20]
                    _3840 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3840 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3840 + 36] = _3519
                    mem[_3840 + 68] = 0
                    mem[_3840 + 100] = address(_3792)
                    mem[_3840 + 132] = 128
                    mem[_3840 + 164] = mem[_3840]
                    s = 0
                    while s < mem[_3840]:
                        mem[s + _3840 + 196] = mem[s + _3840 + 32]
                        _3340 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3840]) > mem[_3840]:
                        mem[mem[_3840] + _3840 + 196] = 0
                    require ext_code.size(address(_3468))
                    call address(_3468).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3840]) + _3840 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3340 = mem[96]
                    idx = idx + 1
                    s = _3468
                    s = _3792
                    s = _3519
                    continue 
                require 0 < mem[_2553]
                _3487 = mem[_2553 + 32]
                mem[mem[64] + 4] = mem[_3464 + 12 len 20]
                mem[mem[64] + 36] = s
                require ext_code.size(address(_3487))
                call address(_3487).0xa9059cbb with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4], s
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3504 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3504] == bool(mem[_3504])
                require ext_code.size(address(_3468))
                staticcall address(_3468).token0() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3584 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_3584] == mem[_3584 + 12 len 20]
                require idx - (_2554 / 2) < mem[(32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 160]
                _3647 = mem[(32 * idx - (_2554 / 2)) + (32 * ('cd', 68).length) + (32 * ('cd', 100).length) + 192]
                require 0 < mem[_2553]
                if mem[_2553 + 44 len 20] == mem[_3584 + 12 len 20]:
                    if idx + 2 >= mem[96]:
                        _3741 = mem[64]
                        mem[mem[64]] = 0
                        mem[64] = mem[64] + 32
                        mem[_3741 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3741 + 36] = 0
                        mem[_3741 + 68] = _3647
                        mem[_3741 + 100] = this.address
                        mem[_3741 + 132] = 128
                        mem[_3741 + 164] = mem[_3741]
                        s = 0
                        while s < mem[_3741]:
                            mem[s + _3741 + 196] = mem[s + _3741 + 32]
                            _3340 = mem[96]
                            s = s + 32
                            continue 
                        if ceil32(mem[_3741]) > mem[_3741]:
                            mem[mem[_3741] + _3741 + 196] = 0
                        require ext_code.size(address(_3468))
                        call address(_3468).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0, _3647, address(this.address), 128, mem[_3741], mem[_3741 + 196 len ceil32(mem[_3741])]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _3340 = mem[96]
                        idx = idx + 1
                        s = _3468
                        s = this.address
                        s = _3647
                        continue 
                    require idx + -(_2554 / 2) + 1 < mem[96]
                    require ext_code.size(mem[(32 * idx + -(_2554 / 2) + 1) + 140 len 20])
                    staticcall mem[(32 * idx + -(_2554 / 2) + 1) + 140 len 20].factory() with:
                            gas gas_remaining wei
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3771 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3794 = mem[_3771]
                    require mem[_3771] == mem[_3771 + 12 len 20]
                    require idx + 1 < mem[96]
                    require idx + 2 < mem[96]
                    _3865 = mem[(32 * idx + 2) + 128]
                    mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                    mem[mem[64] + 36] = address(_3865)
                    require ext_code.size(address(_3794))
                    staticcall address(_3794).getPair(address arg1, address arg2) with:
                            gas gas_remaining wei
                           args mem[mem[64] + 4], address(_3865)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3891 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _3915 = mem[_3891]
                    require mem[_3891] == mem[_3891 + 12 len 20]
                    _3923 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3923 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3923 + 36] = 0
                    mem[_3923 + 68] = _3647
                    mem[_3923 + 100] = address(_3915)
                    mem[_3923 + 132] = 128
                    mem[_3923 + 164] = mem[_3923]
                    s = 0
                    while s < mem[_3923]:
                        mem[s + _3923 + 196] = mem[s + _3923 + 32]
                        _3340 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3923]) > mem[_3923]:
                        mem[mem[_3923] + _3923 + 196] = 0
                    require ext_code.size(address(_3468))
                    call address(_3468).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3923]) + _3923 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3340 = mem[96]
                    idx = idx + 1
                    s = _3468
                    s = _3915
                    s = _3647
                    continue 
                if idx + 2 >= mem[96]:
                    _3745 = mem[64]
                    mem[mem[64]] = 0
                    mem[64] = mem[64] + 32
                    mem[_3745 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3745 + 36] = _3647
                    mem[_3745 + 68] = 0
                    mem[_3745 + 100] = this.address
                    mem[_3745 + 132] = 128
                    mem[_3745 + 164] = mem[_3745]
                    s = 0
                    while s < mem[_3745]:
                        mem[s + _3745 + 196] = mem[s + _3745 + 32]
                        _3340 = mem[96]
                        s = s + 32
                        continue 
                    if ceil32(mem[_3745]) > mem[_3745]:
                        mem[mem[_3745] + _3745 + 196] = 0
                    require ext_code.size(address(_3468))
                    call address(_3468).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len ceil32(mem[_3745]) + _3745 + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _3340 = mem[96]
                    idx = idx + 1
                    s = _3468
                    s = this.address
                    s = _3647
                    continue 
                require idx + -(_2554 / 2) + 1 < mem[96]
                require ext_code.size(mem[(32 * idx + -(_2554 / 2) + 1) + 140 len 20])
                staticcall mem[(32 * idx + -(_2554 / 2) + 1) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3772 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3796 = mem[_3772]
                require mem[_3772] == mem[_3772 + 12 len 20]
                require idx + 1 < mem[96]
                require idx + 2 < mem[96]
                _3867 = mem[(32 * idx + 2) + 128]
                mem[mem[64] + 4] = mem[(32 * idx + 1) + 140 len 20]
                mem[mem[64] + 36] = address(_3867)
                require ext_code.size(address(_3796))
                staticcall address(_3796).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_3867)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3892 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _3916 = mem[_3892]
                require mem[_3892] == mem[_3892 + 12 len 20]
                _3924 = mem[64]
                mem[mem[64]] = 0
                mem[64] = mem[64] + 32
                mem[_3924 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                mem[_3924 + 36] = _3647
                mem[_3924 + 68] = 0
                mem[_3924 + 100] = address(_3916)
                mem[_3924 + 132] = 128
                mem[_3924 + 164] = mem[_3924]
                s = 0
                while s < mem[_3924]:
                    mem[s + _3924 + 196] = mem[s + _3924 + 32]
                    _3340 = mem[96]
                    s = s + 32
                    continue 
                if ceil32(mem[_3924]) > mem[_3924]:
                    mem[mem[_3924] + _3924 + 196] = 0
                require ext_code.size(address(_3468))
                call address(_3468).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args _3647, 0, address(_3916), 128, mem[_3924], mem[_3924 + 196 len ceil32(mem[_3924])]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _3340 = mem[96]
                idx = idx + 1
                s = _3468
                s = _3916
                s = _3647
                continue 
            require _2554 / 2 < mem[96]
            _3361 = mem[(16 * Mask(251, 1, _2554)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_3361))
            staticcall address(_3361).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _3397 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_3397] < ext_call.return_data[0] - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
    require ext_code.size(sub_0195f4bfAddress)
    call sub_0195f4bfAddress.free(uint256 arg1) with:
         gas gas_remaining wei
        args ((16 * calldata.size) + 35154 / 41947)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
}

function sub_fc146f04(?) {
    require calldata.size - 4 >= 96
    require cd[68] <= test266151307()
    require cd[68] + 35 < calldata.size
    require ('cd', 68).length <= test266151307()
    require (32 * ('cd', 68).length) + 128 >= 96 and (32 * ('cd', 68).length) + 128 <= test266151307()
    mem[96] = ('cd', 68).length
    require calldata.size >= cd[68] + (32 * ('cd', 68).length) + 36
    idx = 0
    s = cd[68] + 36
    t = 128
    while idx < ('cd', 68).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    if msg.sender == owner:
        require ('cd', 68).length / 2 <= test266151307()
        mem[(32 * ('cd', 68).length) + 128] = ('cd', 68).length / 2
        mem[64] = (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 160
        if not Mask(255, 1, ('cd', 68).length):
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5434 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5451 = mem[_5434]
                require mem[_5434] == mem[_5434 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _5485 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_5485)
                require ext_code.size(address(_5451))
                staticcall address(_5451).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_5485)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5516 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5538 = mem[_5516]
                require mem[_5516] == mem[_5516 + 12 len 20]
                require ext_code.size(mem[_5516 + 12 len 20])
                staticcall mem[_5516 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5657 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _5752 = mem[_5657]
                require mem[_5657] == mem[_5657 + 18 len 14]
                _5835 = mem[_5657 + 32]
                require mem[_5657 + 32] == mem[_5657 + 50 len 14]
                require mem[_5657 + 64] == mem[_5657 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_5657 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_5657 + 50 len 14] / (997 * s) + (1000 * mem[_5657 + 18 len 14])
                        idx = idx + 1
                        s = _5538
                        s = 997 * s * Mask(112, 0, _5835) / (997 * s) + (1000 * Mask(112, 0, _5752))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_5657 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_5657 + 50 len 14] / (997 * s) + (1000 * mem[_5657 + 18 len 14])
                        idx = idx + 1
                        s = _5538
                        s = 997 * s * Mask(112, 0, _5835) / (997 * s) + (1000 * Mask(112, 0, _5752))
                        continue 
                require (997 * s) + (1000 * mem[_5657 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_5657 + 18 len 14] / (997 * s) + (1000 * mem[_5657 + 50 len 14])
                idx = idx + 1
                s = _5538
                s = 997 * s * Mask(112, 0, _5752) / (997 * s) + (1000 * Mask(112, 0, _5835))
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _5432 = mem[96]
            require mem[96] / 2 < mem[96]
            _5448 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_5448))
            staticcall address(_5448).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5468 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5484 = mem[_5468]
            _8092 = mem[96]
            idx = _5432 / 2
            s = 0
            s = 96
            s = cd[4]
            while idx < _8092 - 1:
                require idx + -(_5432 / 2) + 1 < mem[96]
                require idx - (_5432 / 2) < mem[96]
                require idx + -(_5432 / 2) + 1 < mem[96]
                if mem[(32 * idx - (_5432 / 2)) + 140 len 20] != mem[(32 * idx + -(_5432 / 2) + 1) + 140 len 20]:
                    require idx - (_5432 / 2) < mem[96]
                    if mem[(32 * idx - (_5432 / 2)) + 140 len 20] != mem[(32 * idx + -(_5432 / 2) + 1) + 140 len 20]:
                        _8165 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_8165 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_8165]
                        mem[_8165 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_8165]
                        mem[_8165 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_8165] - 1 < mem[_8165]
                        mem[_8165 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_8165] - 1) + _8165 + 44 len 20])
                        staticcall mem[(32 * mem[_8165] - 1) + _8165 + 44 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_8165 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8165 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_8165]
                        _8500 = mem[_8165 + 32]
                        require idx - (_5432 / 2) < mem[96]
                        _8516 = mem[(32 * idx - (_5432 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_8165 + 44 len 20])
                            staticcall mem[_8165 + 44 len 20].0x313ce567 with:
                                    gas gas_remaining wei
                            mem[_8165 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_8165 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_8165 + (2 * ceil32(return_data.size)) + 132] = address(_8516)
                            require ext_code.size(mem[_8165 + 44 len 20])
                            staticcall mem[_8165 + 44 len 20].0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_8516)
                            mem[_8165 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _8165 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_5432 / 2) < mem[96]
                                _8968 = mem[(32 * idx - (_5432 / 2)) + 128]
                                mem[_8165 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_8165 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_8165 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_8165 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_8165 + (4 * ceil32(return_data.size)) + 260] = mem[_8165]
                                s = 0
                                t = _8165 + (4 * ceil32(return_data.size)) + 292
                                u = _8165 + 32
                                while s < mem[_8165]:
                                    mem[t] = mem[u + 12 len 20]
                                    _8092 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_8165 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_8165 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_8968))
                                call address(_8968).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _8165 + (4 * ceil32(return_data.size)) + (32 * mem[_8165]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10740 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10820 = mem[_10740]
                                require mem[_10740] <= test266151307()
                                require _10740 + return_data.size > _10740 + mem[_10740] + 31
                                _10900 = mem[_10740 + mem[_10740]]
                                require mem[_10740 + mem[_10740]] <= test266151307()
                                require (32 * mem[_10740 + mem[_10740]]) + 32 >= 0 and _10740 + ceil32(return_data.size) + (32 * mem[_10740 + mem[_10740]]) + 32 <= test266151307()
                                mem[64] = _10740 + ceil32(return_data.size) + (32 * mem[_10740 + mem[_10740]]) + 32
                                mem[_10740 + ceil32(return_data.size)] = _10900
                                require return_data.size >= _10820 + (32 * _10900) + 32
                                t = _10740 + _10820 + 32
                                u = _10740 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _10900:
                                    mem[u] = mem[t]
                                    _8092 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_8165] - 1 < mem[_8165]
                                _11940 = mem[(32 * mem[_8165] - 1) + _8165 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_11940))
                                staticcall address(_11940).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12180 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _8092 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _8165
                                s = mem[_12180] - ext_call.return_data[0]
                                continue 
                            mem[_8165 + (4 * ceil32(return_data.size)) + 100] = address(_8516)
                            mem[_8165 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_8500))
                            call address(_8500).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_8516), -1
                            mem[_8165 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _8165 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_5432 / 2) < mem[96]
                            _9405 = mem[(32 * idx - (_5432 / 2)) + 128]
                            mem[_8165 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8165 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_8165 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_8165 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_8165 + (6 * ceil32(return_data.size)) + 260] = mem[_8165]
                            s = 0
                            t = _8165 + (6 * ceil32(return_data.size)) + 292
                            u = _8165 + 32
                            while s < mem[_8165]:
                                mem[t] = mem[u + 12 len 20]
                                _8092 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_8165 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_8165 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_9405))
                            call address(_9405).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _8165 + (6 * ceil32(return_data.size)) + (32 * mem[_8165]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10741 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10821 = mem[_10741]
                            require mem[_10741] <= test266151307()
                            require _10741 + return_data.size > _10741 + mem[_10741] + 31
                            _10901 = mem[_10741 + mem[_10741]]
                            require mem[_10741 + mem[_10741]] <= test266151307()
                            require (32 * mem[_10741 + mem[_10741]]) + 32 >= 0 and _10741 + ceil32(return_data.size) + (32 * mem[_10741 + mem[_10741]]) + 32 <= test266151307()
                            mem[64] = _10741 + ceil32(return_data.size) + (32 * mem[_10741 + mem[_10741]]) + 32
                            mem[_10741 + ceil32(return_data.size)] = _10901
                            require return_data.size >= _10821 + (32 * _10901) + 32
                            t = _10741 + _10821 + 32
                            u = _10741 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _10901:
                                mem[u] = mem[t]
                                _8092 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8165] - 1 < mem[_8165]
                            _11942 = mem[(32 * mem[_8165] - 1) + _8165 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11942))
                            staticcall address(_11942).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12181 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8092 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _8165
                            s = mem[_12181] - ext_call.return_data[0]
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 1
                        if not stor1[msg.sender]:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(address(_8500))
                        staticcall address(_8500).0x313ce567 with:
                                gas gas_remaining wei
                        mem[_8165 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_8165 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_8165 + (2 * ceil32(return_data.size)) + 132] = address(_8516)
                        require ext_code.size(address(_8500))
                        staticcall address(_8500).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(_8516)
                        mem[_8165 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8165 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_5432 / 2) < mem[96]
                            _9001 = mem[(32 * idx - (_5432 / 2)) + 128]
                            mem[_8165 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8165 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_8165 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_8165 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_8165 + (4 * ceil32(return_data.size)) + 260] = mem[_8165]
                            s = 0
                            t = _8165 + (4 * ceil32(return_data.size)) + 292
                            u = _8165 + 32
                            while s < mem[_8165]:
                                mem[t] = mem[u + 12 len 20]
                                _8092 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_8165 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_8165 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_9001))
                            call address(_9001).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _8165 + (4 * ceil32(return_data.size)) + (32 * mem[_8165]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10742 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10822 = mem[_10742]
                            require mem[_10742] <= test266151307()
                            require _10742 + return_data.size > _10742 + mem[_10742] + 31
                            _10902 = mem[_10742 + mem[_10742]]
                            require mem[_10742 + mem[_10742]] <= test266151307()
                            require (32 * mem[_10742 + mem[_10742]]) + 32 >= 0 and _10742 + ceil32(return_data.size) + (32 * mem[_10742 + mem[_10742]]) + 32 <= test266151307()
                            mem[64] = _10742 + ceil32(return_data.size) + (32 * mem[_10742 + mem[_10742]]) + 32
                            mem[_10742 + ceil32(return_data.size)] = _10902
                            require return_data.size >= _10822 + (32 * _10902) + 32
                            t = _10742 + _10822 + 32
                            u = _10742 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _10902:
                                mem[u] = mem[t]
                                _8092 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8165] - 1 < mem[_8165]
                            _11944 = mem[(32 * mem[_8165] - 1) + _8165 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11944))
                            staticcall address(_11944).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12182 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8092 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _8165
                            s = mem[_12182] - ext_call.return_data[0]
                            continue 
                        mem[_8165 + (4 * ceil32(return_data.size)) + 100] = address(_8516)
                        mem[_8165 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_8500))
                        call address(_8500).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_8516), -1
                        mem[_8165 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8165 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_5432 / 2) < mem[96]
                        _9442 = mem[(32 * idx - (_5432 / 2)) + 128]
                        mem[_8165 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8165 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_8165 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_8165 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_8165 + (6 * ceil32(return_data.size)) + 260] = mem[_8165]
                        s = 0
                        t = _8165 + (6 * ceil32(return_data.size)) + 292
                        u = _8165 + 32
                        while s < mem[_8165]:
                            mem[t] = mem[u + 12 len 20]
                            _8092 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_8165 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_8165 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_9442))
                        call address(_9442).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _8165 + (6 * ceil32(return_data.size)) + (32 * mem[_8165]) + -mem[64] + 288]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10743 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10823 = mem[_10743]
                        require mem[_10743] <= test266151307()
                        require _10743 + return_data.size > _10743 + mem[_10743] + 31
                        _10903 = mem[_10743 + mem[_10743]]
                        require mem[_10743 + mem[_10743]] <= test266151307()
                        require (32 * mem[_10743 + mem[_10743]]) + 32 >= 0 and _10743 + ceil32(return_data.size) + (32 * mem[_10743 + mem[_10743]]) + 32 <= test266151307()
                        mem[64] = _10743 + ceil32(return_data.size) + (32 * mem[_10743 + mem[_10743]]) + 32
                        mem[_10743 + ceil32(return_data.size)] = _10903
                        require return_data.size >= _10823 + (32 * _10903) + 32
                        t = _10743 + _10823 + 32
                        u = _10743 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _10903:
                            mem[u] = mem[t]
                            _8092 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8165] - 1 < mem[_8165]
                        _11946 = mem[(32 * mem[_8165] - 1) + _8165 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11946))
                        staticcall address(_11946).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12183 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8092 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _8165
                        s = mem[_12183] - ext_call.return_data[0]
                        continue 
                    _8167 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_8167 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_8167]
                    mem[_8167 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_8167]
                    mem[_8167 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_8167]
                    mem[_8167 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_8167] - 1 < mem[_8167]
                    mem[_8167 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_8167] - 1) + _8167 + 44 len 20])
                    staticcall mem[(32 * mem[_8167] - 1) + _8167 + 44 len 20].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_8167 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8167 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_8167]
                    _8532 = mem[_8167 + 32]
                    require idx + -(_5432 / 2) + 1 < mem[96]
                    _8548 = mem[(32 * idx + -(_5432 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_8167 + 44 len 20])
                        staticcall mem[_8167 + 44 len 20].0x313ce567 with:
                                gas gas_remaining wei
                        mem[_8167 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_8167 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_8167 + (2 * ceil32(return_data.size)) + 164] = address(_8548)
                        require ext_code.size(mem[_8167 + 44 len 20])
                        staticcall mem[_8167 + 44 len 20].0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(_8548)
                        mem[_8167 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8167 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_5432 / 2) + 1 < mem[96]
                            _9038 = mem[(32 * idx + -(_5432 / 2) + 1) + 128]
                            mem[_8167 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8167 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_8167 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_8167 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_8167 + (4 * ceil32(return_data.size)) + 292] = mem[_8167]
                            t = 0
                            u = _8167 + (4 * ceil32(return_data.size)) + 324
                            v = _8167 + 32
                            while t < mem[_8167]:
                                mem[u] = mem[v + 12 len 20]
                                _8092 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_8167 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_8167 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_9038))
                            call address(_9038).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8167 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_8167]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_8167 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _8167 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _10824 = mem[_8167 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_8167 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _8167 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _8167 + (4 * ceil32(return_data.size)) + mem[_8167 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _10904 = mem[_8167 + (4 * ceil32(return_data.size)) + mem[_8167 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_8167 + (4 * ceil32(return_data.size)) + mem[_8167 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_8167 + (4 * ceil32(return_data.size)) + mem[_8167 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8167 + (6 * ceil32(return_data.size)) + (32 * mem[_8167 + (4 * ceil32(return_data.size)) + mem[_8167 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _8167 + (6 * ceil32(return_data.size)) + (32 * mem[_8167 + (4 * ceil32(return_data.size)) + mem[_8167 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_8167 + (6 * ceil32(return_data.size)) + 128] = mem[_8167 + (4 * ceil32(return_data.size)) + mem[_8167 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require return_data.size >= _10824 + (32 * _10904) + 32
                            t = _8167 + (4 * ceil32(return_data.size)) + _10824 + 160
                            u = _8167 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _10904:
                                mem[u] = mem[t]
                                _8092 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8167] - 1 < mem[_8167]
                            _11948 = mem[(32 * mem[_8167] - 1) + _8167 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11948))
                            staticcall address(_11948).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12184 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8092 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _8167
                            s = mem[_12184] - ext_call.return_data[0]
                            continue 
                        mem[_8167 + (4 * ceil32(return_data.size)) + 132] = address(_8548)
                        mem[_8167 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_8532))
                        call address(_8532).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_8548), -1
                        mem[_8167 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8167 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_5432 / 2) + 1 < mem[96]
                        _9478 = mem[(32 * idx + -(_5432 / 2) + 1) + 128]
                        mem[_8167 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8167 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_8167 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_8167 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_8167 + (6 * ceil32(return_data.size)) + 292] = mem[_8167]
                        t = 0
                        u = _8167 + (6 * ceil32(return_data.size)) + 324
                        v = _8167 + 32
                        while t < mem[_8167]:
                            mem[u] = mem[v + 12 len 20]
                            _8092 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8167 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_8167 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_9478))
                        call address(_9478).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8167 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_8167]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8167 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8167 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _10825 = mem[_8167 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_8167 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8167 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _8167 + (6 * ceil32(return_data.size)) + mem[_8167 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _10905 = mem[_8167 + (6 * ceil32(return_data.size)) + mem[_8167 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_8167 + (6 * ceil32(return_data.size)) + mem[_8167 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_8167 + (6 * ceil32(return_data.size)) + mem[_8167 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8167 + (7 * ceil32(return_data.size)) + (32 * mem[_8167 + (6 * ceil32(return_data.size)) + mem[_8167 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _8167 + (7 * ceil32(return_data.size)) + (32 * mem[_8167 + (6 * ceil32(return_data.size)) + mem[_8167 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_8167 + (7 * ceil32(return_data.size)) + 128] = mem[_8167 + (6 * ceil32(return_data.size)) + mem[_8167 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require return_data.size >= _10825 + (32 * _10905) + 32
                        t = _8167 + (6 * ceil32(return_data.size)) + _10825 + 160
                        u = _8167 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _10905:
                            mem[u] = mem[t]
                            _8092 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8167] - 1 < mem[_8167]
                        _11950 = mem[(32 * mem[_8167] - 1) + _8167 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11950))
                        staticcall address(_11950).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12185 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8092 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _8167
                        s = mem[_12185] - ext_call.return_data[0]
                        continue 
                    mem[0] = msg.sender
                    mem[32] = 1
                    if not stor1[msg.sender]:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(address(_8532))
                    staticcall address(_8532).0x313ce567 with:
                            gas gas_remaining wei
                    mem[_8167 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_8167 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_8167 + (2 * ceil32(return_data.size)) + 164] = address(_8548)
                    require ext_code.size(address(_8532))
                    staticcall address(_8532).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(_8548)
                    mem[_8167 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8167 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_5432 / 2) + 1 < mem[96]
                        _9079 = mem[(32 * idx + -(_5432 / 2) + 1) + 128]
                        mem[_8167 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8167 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_8167 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_8167 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_8167 + (4 * ceil32(return_data.size)) + 292] = mem[_8167]
                        t = 0
                        u = _8167 + (4 * ceil32(return_data.size)) + 324
                        v = _8167 + 32
                        while t < mem[_8167]:
                            mem[u] = mem[v + 12 len 20]
                            _8092 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8167 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_8167 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_9079))
                        call address(_9079).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8167 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_8167]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8167 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8167 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _10826 = mem[_8167 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_8167 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8167 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _8167 + (4 * ceil32(return_data.size)) + mem[_8167 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _10906 = mem[_8167 + (4 * ceil32(return_data.size)) + mem[_8167 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_8167 + (4 * ceil32(return_data.size)) + mem[_8167 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_8167 + (4 * ceil32(return_data.size)) + mem[_8167 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8167 + (6 * ceil32(return_data.size)) + (32 * mem[_8167 + (4 * ceil32(return_data.size)) + mem[_8167 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _8167 + (6 * ceil32(return_data.size)) + (32 * mem[_8167 + (4 * ceil32(return_data.size)) + mem[_8167 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_8167 + (6 * ceil32(return_data.size)) + 128] = mem[_8167 + (4 * ceil32(return_data.size)) + mem[_8167 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require return_data.size >= _10826 + (32 * _10906) + 32
                        t = _8167 + (4 * ceil32(return_data.size)) + _10826 + 160
                        u = _8167 + (6 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _10906:
                            mem[u] = mem[t]
                            _8092 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8167] - 1 < mem[_8167]
                        _11952 = mem[(32 * mem[_8167] - 1) + _8167 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11952))
                        staticcall address(_11952).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12186 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8092 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _8167
                        s = mem[_12186] - ext_call.return_data[0]
                        continue 
                    mem[_8167 + (4 * ceil32(return_data.size)) + 132] = address(_8548)
                    mem[_8167 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_8532))
                    call address(_8532).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_8548), -1
                    mem[_8167 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8167 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_5432 / 2) + 1 < mem[96]
                    _9515 = mem[(32 * idx + -(_5432 / 2) + 1) + 128]
                    mem[_8167 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_8167 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_8167 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_8167 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_8167 + (6 * ceil32(return_data.size)) + 292] = mem[_8167]
                    t = 0
                    u = _8167 + (6 * ceil32(return_data.size)) + 324
                    v = _8167 + 32
                    while t < mem[_8167]:
                        mem[u] = mem[v + 12 len 20]
                        _8092 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_8167 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_8167 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_9515))
                    call address(_9515).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8167 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_8167]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_8167 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _8167 + (7 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    _10827 = mem[_8167 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                    require mem[_8167 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _8167 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _8167 + (6 * ceil32(return_data.size)) + mem[_8167 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                    _10907 = mem[_8167 + (6 * ceil32(return_data.size)) + mem[_8167 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                    require mem[_8167 + (6 * ceil32(return_data.size)) + mem[_8167 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                    require (32 * mem[_8167 + (6 * ceil32(return_data.size)) + mem[_8167 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8167 + (7 * ceil32(return_data.size)) + (32 * mem[_8167 + (6 * ceil32(return_data.size)) + mem[_8167 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                    mem[64] = _8167 + (7 * ceil32(return_data.size)) + (32 * mem[_8167 + (6 * ceil32(return_data.size)) + mem[_8167 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                    mem[_8167 + (7 * ceil32(return_data.size)) + 128] = mem[_8167 + (6 * ceil32(return_data.size)) + mem[_8167 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                    require return_data.size >= _10827 + (32 * _10907) + 32
                    t = _8167 + (6 * ceil32(return_data.size)) + _10827 + 160
                    u = _8167 + (7 * ceil32(return_data.size)) + 160
                    s = 0
                    while s < _10907:
                        mem[u] = mem[t]
                        _8092 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_8167] - 1 < mem[_8167]
                    _11954 = mem[(32 * mem[_8167] - 1) + _8167 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11954))
                    staticcall address(_11954).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12187 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8092 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _8167
                    s = mem[_12187] - ext_call.return_data[0]
                    continue 
                require idx + -(_5432 / 2) + 2 < mem[96]
                if mem[(32 * idx + -(_5432 / 2) + 2) + 140 len 20] != mem[(32 * idx + -(_5432 / 2) + 1) + 140 len 20]:
                    require idx + -(_5432 / 2) + 1 < mem[96]
                    require idx - (_5432 / 2) < mem[96]
                    if mem[(32 * idx - (_5432 / 2)) + 140 len 20] != mem[(32 * idx + -(_5432 / 2) + 1) + 140 len 20]:
                        _8252 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_8252 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_8252]
                        mem[_8252 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_8252]
                        mem[_8252 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_8252] - 1 < mem[_8252]
                        mem[_8252 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_8252] - 1) + _8252 + 44 len 20])
                        staticcall mem[(32 * mem[_8252] - 1) + _8252 + 44 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_8252 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8252 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_8252]
                        _8549 = mem[_8252 + 32]
                        require idx - (_5432 / 2) < mem[96]
                        _8568 = mem[(32 * idx - (_5432 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_8252 + 44 len 20])
                            staticcall mem[_8252 + 44 len 20].0x313ce567 with:
                                    gas gas_remaining wei
                            mem[_8252 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_8252 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_8252 + (2 * ceil32(return_data.size)) + 132] = address(_8568)
                            require ext_code.size(mem[_8252 + 44 len 20])
                            staticcall mem[_8252 + 44 len 20].0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_8568)
                            mem[_8252 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _8252 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_5432 / 2) < mem[96]
                                _9082 = mem[(32 * idx - (_5432 / 2)) + 128]
                                mem[_8252 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_8252 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_8252 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_8252 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_8252 + (4 * ceil32(return_data.size)) + 260] = mem[_8252]
                                s = 0
                                t = _8252 + (4 * ceil32(return_data.size)) + 292
                                u = _8252 + 32
                                while s < mem[_8252]:
                                    mem[t] = mem[u + 12 len 20]
                                    _8092 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_8252 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_8252 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_9082))
                                call address(_9082).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _8252 + (4 * ceil32(return_data.size)) + (32 * mem[_8252]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10748 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10828 = mem[_10748]
                                require mem[_10748] <= test266151307()
                                require _10748 + return_data.size > _10748 + mem[_10748] + 31
                                _10908 = mem[_10748 + mem[_10748]]
                                require mem[_10748 + mem[_10748]] <= test266151307()
                                require (32 * mem[_10748 + mem[_10748]]) + 32 >= 0 and _10748 + ceil32(return_data.size) + (32 * mem[_10748 + mem[_10748]]) + 32 <= test266151307()
                                mem[64] = _10748 + ceil32(return_data.size) + (32 * mem[_10748 + mem[_10748]]) + 32
                                mem[_10748 + ceil32(return_data.size)] = _10908
                                require return_data.size >= _10828 + (32 * _10908) + 32
                                t = _10748 + _10828 + 32
                                u = _10748 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _10908:
                                    mem[u] = mem[t]
                                    _8092 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_8252] - 1 < mem[_8252]
                                _11956 = mem[(32 * mem[_8252] - 1) + _8252 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_11956))
                                staticcall address(_11956).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12188 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _8092 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _8252
                                s = mem[_12188] - ext_call.return_data[0]
                                continue 
                            mem[_8252 + (4 * ceil32(return_data.size)) + 100] = address(_8568)
                            mem[_8252 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_8549))
                            call address(_8549).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_8568), -1
                            mem[_8252 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _8252 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_5432 / 2) < mem[96]
                            _9518 = mem[(32 * idx - (_5432 / 2)) + 128]
                            mem[_8252 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8252 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_8252 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_8252 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_8252 + (6 * ceil32(return_data.size)) + 260] = mem[_8252]
                            s = 0
                            t = _8252 + (6 * ceil32(return_data.size)) + 292
                            u = _8252 + 32
                            while s < mem[_8252]:
                                mem[t] = mem[u + 12 len 20]
                                _8092 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_8252 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_8252 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_9518))
                            call address(_9518).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _8252 + (6 * ceil32(return_data.size)) + (32 * mem[_8252]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10749 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10829 = mem[_10749]
                            require mem[_10749] <= test266151307()
                            require _10749 + return_data.size > _10749 + mem[_10749] + 31
                            _10909 = mem[_10749 + mem[_10749]]
                            require mem[_10749 + mem[_10749]] <= test266151307()
                            require (32 * mem[_10749 + mem[_10749]]) + 32 >= 0 and _10749 + ceil32(return_data.size) + (32 * mem[_10749 + mem[_10749]]) + 32 <= test266151307()
                            mem[64] = _10749 + ceil32(return_data.size) + (32 * mem[_10749 + mem[_10749]]) + 32
                            mem[_10749 + ceil32(return_data.size)] = _10909
                            require return_data.size >= _10829 + (32 * _10909) + 32
                            t = _10749 + _10829 + 32
                            u = _10749 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _10909:
                                mem[u] = mem[t]
                                _8092 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8252] - 1 < mem[_8252]
                            _11958 = mem[(32 * mem[_8252] - 1) + _8252 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11958))
                            staticcall address(_11958).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12189 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8092 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _8252
                            s = mem[_12189] - ext_call.return_data[0]
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 1
                        if not stor1[msg.sender]:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(address(_8549))
                        staticcall address(_8549).0x313ce567 with:
                                gas gas_remaining wei
                        mem[_8252 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_8252 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_8252 + (2 * ceil32(return_data.size)) + 132] = address(_8568)
                        require ext_code.size(address(_8549))
                        staticcall address(_8549).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(_8568)
                        mem[_8252 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8252 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_5432 / 2) < mem[96]
                            _9134 = mem[(32 * idx - (_5432 / 2)) + 128]
                            mem[_8252 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8252 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_8252 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_8252 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_8252 + (4 * ceil32(return_data.size)) + 260] = mem[_8252]
                            s = 0
                            t = _8252 + (4 * ceil32(return_data.size)) + 292
                            u = _8252 + 32
                            while s < mem[_8252]:
                                mem[t] = mem[u + 12 len 20]
                                _8092 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_8252 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_8252 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_9134))
                            call address(_9134).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _8252 + (4 * ceil32(return_data.size)) + (32 * mem[_8252]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10750 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10830 = mem[_10750]
                            require mem[_10750] <= test266151307()
                            require _10750 + return_data.size > _10750 + mem[_10750] + 31
                            _10910 = mem[_10750 + mem[_10750]]
                            require mem[_10750 + mem[_10750]] <= test266151307()
                            require (32 * mem[_10750 + mem[_10750]]) + 32 >= 0 and _10750 + ceil32(return_data.size) + (32 * mem[_10750 + mem[_10750]]) + 32 <= test266151307()
                            mem[64] = _10750 + ceil32(return_data.size) + (32 * mem[_10750 + mem[_10750]]) + 32
                            mem[_10750 + ceil32(return_data.size)] = _10910
                            require return_data.size >= _10830 + (32 * _10910) + 32
                            t = _10750 + _10830 + 32
                            u = _10750 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _10910:
                                mem[u] = mem[t]
                                _8092 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8252] - 1 < mem[_8252]
                            _11960 = mem[(32 * mem[_8252] - 1) + _8252 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11960))
                            staticcall address(_11960).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12190 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8092 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _8252
                            s = mem[_12190] - ext_call.return_data[0]
                            continue 
                        mem[_8252 + (4 * ceil32(return_data.size)) + 100] = address(_8568)
                        mem[_8252 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_8549))
                        call address(_8549).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_8568), -1
                        mem[_8252 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8252 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_5432 / 2) < mem[96]
                        _9566 = mem[(32 * idx - (_5432 / 2)) + 128]
                        mem[_8252 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8252 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_8252 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_8252 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_8252 + (6 * ceil32(return_data.size)) + 260] = mem[_8252]
                        s = 0
                        t = _8252 + (6 * ceil32(return_data.size)) + 292
                        u = _8252 + 32
                        while s < mem[_8252]:
                            mem[t] = mem[u + 12 len 20]
                            _8092 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_8252 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_8252 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_9566))
                        call address(_9566).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _8252 + (6 * ceil32(return_data.size)) + (32 * mem[_8252]) + -mem[64] + 288]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10751 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10831 = mem[_10751]
                        require mem[_10751] <= test266151307()
                        require _10751 + return_data.size > _10751 + mem[_10751] + 31
                        _10911 = mem[_10751 + mem[_10751]]
                        require mem[_10751 + mem[_10751]] <= test266151307()
                        require (32 * mem[_10751 + mem[_10751]]) + 32 >= 0 and _10751 + ceil32(return_data.size) + (32 * mem[_10751 + mem[_10751]]) + 32 <= test266151307()
                        mem[64] = _10751 + ceil32(return_data.size) + (32 * mem[_10751 + mem[_10751]]) + 32
                        mem[_10751 + ceil32(return_data.size)] = _10911
                        require return_data.size >= _10831 + (32 * _10911) + 32
                        t = _10751 + _10831 + 32
                        u = _10751 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _10911:
                            mem[u] = mem[t]
                            _8092 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8252] - 1 < mem[_8252]
                        _11962 = mem[(32 * mem[_8252] - 1) + _8252 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11962))
                        staticcall address(_11962).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12191 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8092 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _8252
                        s = mem[_12191] - ext_call.return_data[0]
                        continue 
                    _8254 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_8254 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_8254]
                    mem[_8254 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_8254]
                    mem[_8254 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_8254]
                    mem[_8254 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_8254] - 1 < mem[_8254]
                    mem[_8254 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_8254] - 1) + _8254 + 44 len 20])
                    staticcall mem[(32 * mem[_8254] - 1) + _8254 + 44 len 20].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_8254 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8254 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_8254]
                    _8585 = mem[_8254 + 32]
                    require idx + -(_5432 / 2) + 1 < mem[96]
                    _8602 = mem[(32 * idx + -(_5432 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_8254 + 44 len 20])
                        staticcall mem[_8254 + 44 len 20].0x313ce567 with:
                                gas gas_remaining wei
                        mem[_8254 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_8254 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_8254 + (2 * ceil32(return_data.size)) + 164] = address(_8602)
                        require ext_code.size(mem[_8254 + 44 len 20])
                        staticcall mem[_8254 + 44 len 20].0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(_8602)
                        mem[_8254 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8254 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_5432 / 2) + 1 < mem[96]
                            _9194 = mem[(32 * idx + -(_5432 / 2) + 1) + 128]
                            mem[_8254 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8254 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_8254 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_8254 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_8254 + (4 * ceil32(return_data.size)) + 292] = mem[_8254]
                            t = 0
                            u = _8254 + (4 * ceil32(return_data.size)) + 324
                            v = _8254 + 32
                            while t < mem[_8254]:
                                mem[u] = mem[v + 12 len 20]
                                _8092 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_8254 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_8254 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_9194))
                            call address(_9194).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8254 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_8254]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_8254 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _8254 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _10832 = mem[_8254 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_8254 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _8254 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _8254 + (4 * ceil32(return_data.size)) + mem[_8254 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _10912 = mem[_8254 + (4 * ceil32(return_data.size)) + mem[_8254 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_8254 + (4 * ceil32(return_data.size)) + mem[_8254 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_8254 + (4 * ceil32(return_data.size)) + mem[_8254 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8254 + (6 * ceil32(return_data.size)) + (32 * mem[_8254 + (4 * ceil32(return_data.size)) + mem[_8254 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _8254 + (6 * ceil32(return_data.size)) + (32 * mem[_8254 + (4 * ceil32(return_data.size)) + mem[_8254 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_8254 + (6 * ceil32(return_data.size)) + 128] = _10912
                            require return_data.size >= _10832 + (32 * _10912) + 32
                            t = _8254 + (4 * ceil32(return_data.size)) + _10832 + 160
                            u = _8254 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _10912:
                                mem[u] = mem[t]
                                _8092 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8254] - 1 < mem[_8254]
                            _11964 = mem[(32 * mem[_8254] - 1) + _8254 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11964))
                            staticcall address(_11964).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12192 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8092 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _8254
                            s = mem[_12192] - ext_call.return_data[0]
                            continue 
                        mem[_8254 + (4 * ceil32(return_data.size)) + 132] = address(_8602)
                        mem[_8254 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_8585))
                        call address(_8585).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_8602), -1
                        mem[_8254 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8254 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_5432 / 2) + 1 < mem[96]
                        _9621 = mem[(32 * idx + -(_5432 / 2) + 1) + 128]
                        mem[_8254 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8254 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_8254 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_8254 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_8254 + (6 * ceil32(return_data.size)) + 292] = mem[_8254]
                        t = 0
                        u = _8254 + (6 * ceil32(return_data.size)) + 324
                        v = _8254 + 32
                        while t < mem[_8254]:
                            mem[u] = mem[v + 12 len 20]
                            _8092 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8254 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_8254 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_9621))
                        call address(_9621).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8254 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_8254]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8254 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8254 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _10833 = mem[_8254 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_8254 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8254 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _8254 + (6 * ceil32(return_data.size)) + mem[_8254 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _10913 = mem[_8254 + (6 * ceil32(return_data.size)) + mem[_8254 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_8254 + (6 * ceil32(return_data.size)) + mem[_8254 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_8254 + (6 * ceil32(return_data.size)) + mem[_8254 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8254 + (7 * ceil32(return_data.size)) + (32 * mem[_8254 + (6 * ceil32(return_data.size)) + mem[_8254 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _8254 + (7 * ceil32(return_data.size)) + (32 * mem[_8254 + (6 * ceil32(return_data.size)) + mem[_8254 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_8254 + (7 * ceil32(return_data.size)) + 128] = mem[_8254 + (6 * ceil32(return_data.size)) + mem[_8254 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require return_data.size >= _10833 + (32 * _10913) + 32
                        t = _8254 + (6 * ceil32(return_data.size)) + _10833 + 160
                        u = _8254 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _10913:
                            mem[u] = mem[t]
                            _8092 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8254] - 1 < mem[_8254]
                        _11966 = mem[(32 * mem[_8254] - 1) + _8254 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11966))
                        staticcall address(_11966).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12193 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8092 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _8254
                        s = mem[_12193] - ext_call.return_data[0]
                        continue 
                    mem[0] = msg.sender
                    mem[32] = 1
                    if not stor1[msg.sender]:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(address(_8585))
                    staticcall address(_8585).0x313ce567 with:
                            gas gas_remaining wei
                    mem[_8254 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_8254 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_8254 + (2 * ceil32(return_data.size)) + 164] = address(_8602)
                    require ext_code.size(address(_8585))
                    staticcall address(_8585).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(_8602)
                    mem[_8254 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8254 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_5432 / 2) + 1 < mem[96]
                        _9251 = mem[(32 * idx + -(_5432 / 2) + 1) + 128]
                        mem[_8254 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8254 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_8254 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_8254 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_8254 + (4 * ceil32(return_data.size)) + 292] = mem[_8254]
                        t = 0
                        u = _8254 + (4 * ceil32(return_data.size)) + 324
                        v = _8254 + 32
                        while t < mem[_8254]:
                            mem[u] = mem[v + 12 len 20]
                            _8092 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8254 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_8254 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_9251))
                        call address(_9251).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8254 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_8254]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8254 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8254 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _10834 = mem[_8254 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_8254 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8254 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _8254 + (4 * ceil32(return_data.size)) + mem[_8254 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _10914 = mem[_8254 + (4 * ceil32(return_data.size)) + mem[_8254 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_8254 + (4 * ceil32(return_data.size)) + mem[_8254 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_8254 + (4 * ceil32(return_data.size)) + mem[_8254 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8254 + (6 * ceil32(return_data.size)) + (32 * mem[_8254 + (4 * ceil32(return_data.size)) + mem[_8254 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _8254 + (6 * ceil32(return_data.size)) + (32 * mem[_8254 + (4 * ceil32(return_data.size)) + mem[_8254 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_8254 + (6 * ceil32(return_data.size)) + 128] = _10914
                        require return_data.size >= _10834 + (32 * _10914) + 32
                        t = _8254 + (4 * ceil32(return_data.size)) + _10834 + 160
                        u = _8254 + (6 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _10914:
                            mem[u] = mem[t]
                            _8092 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8254] - 1 < mem[_8254]
                        _11968 = mem[(32 * mem[_8254] - 1) + _8254 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11968))
                        staticcall address(_11968).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12194 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8092 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _8254
                        s = mem[_12194] - ext_call.return_data[0]
                        continue 
                    mem[_8254 + (4 * ceil32(return_data.size)) + 132] = address(_8602)
                    mem[_8254 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_8585))
                    call address(_8585).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_8602), -1
                    mem[_8254 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8254 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_5432 / 2) + 1 < mem[96]
                    _9671 = mem[(32 * idx + -(_5432 / 2) + 1) + 128]
                    mem[_8254 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_8254 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_8254 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_8254 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_8254 + (6 * ceil32(return_data.size)) + 292] = mem[_8254]
                    t = 0
                    u = _8254 + (6 * ceil32(return_data.size)) + 324
                    v = _8254 + 32
                    while t < mem[_8254]:
                        mem[u] = mem[v + 12 len 20]
                        _8092 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_8254 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_8254 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_9671))
                    call address(_9671).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8254 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_8254]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_8254 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _8254 + (7 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    _10835 = mem[_8254 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                    require mem[_8254 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _8254 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _8254 + (6 * ceil32(return_data.size)) + mem[_8254 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                    _10915 = mem[_8254 + (6 * ceil32(return_data.size)) + mem[_8254 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                    require mem[_8254 + (6 * ceil32(return_data.size)) + mem[_8254 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                    require (32 * mem[_8254 + (6 * ceil32(return_data.size)) + mem[_8254 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8254 + (7 * ceil32(return_data.size)) + (32 * mem[_8254 + (6 * ceil32(return_data.size)) + mem[_8254 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                    mem[64] = _8254 + (7 * ceil32(return_data.size)) + (32 * mem[_8254 + (6 * ceil32(return_data.size)) + mem[_8254 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                    mem[_8254 + (7 * ceil32(return_data.size)) + 128] = mem[_8254 + (6 * ceil32(return_data.size)) + mem[_8254 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                    require return_data.size >= _10835 + (32 * _10915) + 32
                    t = _8254 + (6 * ceil32(return_data.size)) + _10835 + 160
                    u = _8254 + (7 * ceil32(return_data.size)) + 160
                    s = 0
                    while s < _10915:
                        mem[u] = mem[t]
                        _8092 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_8254] - 1 < mem[_8254]
                    _11970 = mem[(32 * mem[_8254] - 1) + _8254 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11970))
                    staticcall address(_11970).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12195 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8092 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _8254
                    s = mem[_12195] - ext_call.return_data[0]
                    continue 
                _8170 = mem[64]
                mem[mem[64]] = 4
                mem[64] = mem[64] + 160
                mem[_8170 + 32 len 128] = call.data[calldata.size len 128]
                require idx < mem[96]
                require 0 < mem[_8170]
                mem[_8170 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_8170]
                mem[_8170 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx + 2 < mem[96]
                require 2 < mem[_8170]
                mem[_8170 + 96] = mem[(32 * idx + 2) + 140 len 20]
                require idx + 3 < mem[96]
                require 3 < mem[_8170]
                mem[_8170 + 128] = mem[(32 * idx + 3) + 140 len 20]
                require mem[_8170] - 1 < mem[_8170]
                mem[_8170 + 164] = this.address
                require ext_code.size(mem[(32 * mem[_8170] - 1) + _8170 + 44 len 20])
                staticcall mem[(32 * mem[_8170] - 1) + _8170 + 44 len 20].0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_8170 + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _8170 + ceil32(return_data.size) + 160
                require return_data.size >= 32
                require 0 < mem[_8170]
                _8570 = mem[_8170 + 32]
                require idx + -(_5432 / 2) + 2 < mem[96]
                _8587 = mem[(32 * idx + -(_5432 / 2) + 2) + 128]
                if msg.sender == owner:
                    require ext_code.size(mem[_8170 + 44 len 20])
                    staticcall mem[_8170 + 44 len 20].0x313ce567 with:
                            gas gas_remaining wei
                    mem[_8170 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_8170 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_8170 + (2 * ceil32(return_data.size)) + 196] = address(_8587)
                    require ext_code.size(mem[_8170 + 44 len 20])
                    staticcall mem[_8170 + 44 len 20].0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(_8587)
                    mem[_8170 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8170 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_5432 / 2) + 2 < mem[96]
                        _9139 = mem[(32 * idx + -(_5432 / 2) + 2) + 128]
                        mem[_8170 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8170 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_8170 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_8170 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_8170 + (4 * ceil32(return_data.size)) + 324] = mem[_8170]
                        t = 0
                        u = _8170 + (4 * ceil32(return_data.size)) + 356
                        v = _8170 + 32
                        while t < mem[_8170]:
                            mem[u] = mem[v + 12 len 20]
                            _8092 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8170 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_8170 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_9139))
                        call address(_9139).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8170 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_8170]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8170 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8170 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        _10836 = mem[_8170 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                        require mem[_8170 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8170 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _8170 + (4 * ceil32(return_data.size)) + mem[_8170 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                        _10916 = mem[_8170 + (4 * ceil32(return_data.size)) + mem[_8170 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                        require mem[_8170 + (4 * ceil32(return_data.size)) + mem[_8170 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                        require (32 * mem[_8170 + (4 * ceil32(return_data.size)) + mem[_8170 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _8170 + (6 * ceil32(return_data.size)) + (32 * mem[_8170 + (4 * ceil32(return_data.size)) + mem[_8170 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                        mem[64] = _8170 + (6 * ceil32(return_data.size)) + (32 * mem[_8170 + (4 * ceil32(return_data.size)) + mem[_8170 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                        mem[_8170 + (6 * ceil32(return_data.size)) + 160] = _10916
                        require return_data.size >= _10836 + (32 * _10916) + 32
                        t = _8170 + (4 * ceil32(return_data.size)) + _10836 + 192
                        u = _8170 + (6 * ceil32(return_data.size)) + 192
                        s = 0
                        while s < _10916:
                            mem[u] = mem[t]
                            _8092 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8170] - 1 < mem[_8170]
                        _11972 = mem[(32 * mem[_8170] - 1) + _8170 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11972))
                        staticcall address(_11972).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12196 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8092 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _8170
                        s = mem[_12196] - ext_call.return_data[0]
                        continue 
                    mem[_8170 + (4 * ceil32(return_data.size)) + 164] = address(_8587)
                    mem[_8170 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_8570))
                    call address(_8570).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_8587), -1
                    mem[_8170 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8170 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_5432 / 2) + 2 < mem[96]
                    _9571 = mem[(32 * idx + -(_5432 / 2) + 2) + 128]
                    mem[_8170 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_8170 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_8170 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_8170 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_8170 + (6 * ceil32(return_data.size)) + 324] = mem[_8170]
                    t = 0
                    u = _8170 + (6 * ceil32(return_data.size)) + 356
                    v = _8170 + 32
                    while t < mem[_8170]:
                        mem[u] = mem[v + 12 len 20]
                        _8092 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_8170 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_8170 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_9571))
                    call address(_9571).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8170 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_8170]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_8170 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _8170 + (7 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    _10837 = mem[_8170 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                    require mem[_8170 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _8170 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _8170 + (6 * ceil32(return_data.size)) + mem[_8170 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                    _10917 = mem[_8170 + (6 * ceil32(return_data.size)) + mem[_8170 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                    require mem[_8170 + (6 * ceil32(return_data.size)) + mem[_8170 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                    require (32 * mem[_8170 + (6 * ceil32(return_data.size)) + mem[_8170 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _8170 + (7 * ceil32(return_data.size)) + (32 * mem[_8170 + (6 * ceil32(return_data.size)) + mem[_8170 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                    mem[64] = _8170 + (7 * ceil32(return_data.size)) + (32 * mem[_8170 + (6 * ceil32(return_data.size)) + mem[_8170 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                    mem[_8170 + (7 * ceil32(return_data.size)) + 160] = _10917
                    require return_data.size >= _10837 + (32 * _10917) + 32
                    t = _8170 + (6 * ceil32(return_data.size)) + _10837 + 192
                    u = _8170 + (7 * ceil32(return_data.size)) + 192
                    s = 0
                    while s < _10917:
                        mem[u] = mem[t]
                        _8092 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_8170] - 1 < mem[_8170]
                    _11974 = mem[(32 * mem[_8170] - 1) + _8170 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11974))
                    staticcall address(_11974).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12197 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8092 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _8170
                    s = mem[_12197] - ext_call.return_data[0]
                    continue 
                mem[0] = msg.sender
                mem[32] = 1
                if not stor1[msg.sender]:
                    revert with 0, 'Ownable: caller is not the owner'
                require ext_code.size(address(_8570))
                staticcall address(_8570).0x313ce567 with:
                        gas gas_remaining wei
                mem[_8170 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                mem[_8170 + (2 * ceil32(return_data.size)) + 164] = this.address
                mem[_8170 + (2 * ceil32(return_data.size)) + 196] = address(_8587)
                require ext_code.size(address(_8570))
                staticcall address(_8570).0xdd62ed3e with:
                        gas gas_remaining wei
                       args address(this.address), address(_8587)
                mem[_8170 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _8170 + (4 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                    require idx + -(_5432 / 2) + 2 < mem[96]
                    _9199 = mem[(32 * idx + -(_5432 / 2) + 2) + 128]
                    mem[_8170 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_8170 + (4 * ceil32(return_data.size)) + 164] = s
                    mem[_8170 + (4 * ceil32(return_data.size)) + 196] = 0
                    mem[_8170 + (4 * ceil32(return_data.size)) + 228] = 160
                    mem[_8170 + (4 * ceil32(return_data.size)) + 324] = mem[_8170]
                    t = 0
                    u = _8170 + (4 * ceil32(return_data.size)) + 356
                    v = _8170 + 32
                    while t < mem[_8170]:
                        mem[u] = mem[v + 12 len 20]
                        _8092 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_8170 + (4 * ceil32(return_data.size)) + 260] = this.address
                    mem[_8170 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_9199))
                    call address(_9199).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8170 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_8170]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_8170 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _8170 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    _10838 = mem[_8170 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                    require mem[_8170 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _8170 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _8170 + (4 * ceil32(return_data.size)) + mem[_8170 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                    _10918 = mem[_8170 + (4 * ceil32(return_data.size)) + mem[_8170 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                    require mem[_8170 + (4 * ceil32(return_data.size)) + mem[_8170 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                    require (32 * mem[_8170 + (4 * ceil32(return_data.size)) + mem[_8170 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _8170 + (6 * ceil32(return_data.size)) + (32 * mem[_8170 + (4 * ceil32(return_data.size)) + mem[_8170 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                    mem[64] = _8170 + (6 * ceil32(return_data.size)) + (32 * mem[_8170 + (4 * ceil32(return_data.size)) + mem[_8170 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                    mem[_8170 + (6 * ceil32(return_data.size)) + 160] = _10918
                    require return_data.size >= _10838 + (32 * _10918) + 32
                    t = _8170 + (4 * ceil32(return_data.size)) + _10838 + 192
                    u = _8170 + (6 * ceil32(return_data.size)) + 192
                    s = 0
                    while s < _10918:
                        mem[u] = mem[t]
                        _8092 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_8170] - 1 < mem[_8170]
                    _11976 = mem[(32 * mem[_8170] - 1) + _8170 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11976))
                    staticcall address(_11976).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12198 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8092 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _8170
                    s = mem[_12198] - ext_call.return_data[0]
                    continue 
                mem[_8170 + (4 * ceil32(return_data.size)) + 164] = address(_8587)
                mem[_8170 + (4 * ceil32(return_data.size)) + 196] = -1
                require ext_code.size(address(_8570))
                call address(_8570).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_8587), -1
                mem[_8170 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _8170 + (6 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require idx + -(_5432 / 2) + 2 < mem[96]
                _9626 = mem[(32 * idx + -(_5432 / 2) + 2) + 128]
                mem[_8170 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                mem[_8170 + (6 * ceil32(return_data.size)) + 164] = s
                mem[_8170 + (6 * ceil32(return_data.size)) + 196] = 0
                mem[_8170 + (6 * ceil32(return_data.size)) + 228] = 160
                mem[_8170 + (6 * ceil32(return_data.size)) + 324] = mem[_8170]
                t = 0
                u = _8170 + (6 * ceil32(return_data.size)) + 356
                v = _8170 + 32
                while t < mem[_8170]:
                    mem[u] = mem[v + 12 len 20]
                    _8092 = mem[96]
                    t = t + 1
                    u = u + 32
                    v = v + 32
                    continue 
                mem[_8170 + (6 * ceil32(return_data.size)) + 260] = this.address
                mem[_8170 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                require ext_code.size(address(_9626))
                call address(_9626).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                     gas gas_remaining wei
                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8170 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_8170]) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[_8170 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = _8170 + (7 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                _10839 = mem[_8170 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                require mem[_8170 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                require _8170 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _8170 + (6 * ceil32(return_data.size)) + mem[_8170 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                _10919 = mem[_8170 + (6 * ceil32(return_data.size)) + mem[_8170 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                require mem[_8170 + (6 * ceil32(return_data.size)) + mem[_8170 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                require (32 * mem[_8170 + (6 * ceil32(return_data.size)) + mem[_8170 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _8170 + (7 * ceil32(return_data.size)) + (32 * mem[_8170 + (6 * ceil32(return_data.size)) + mem[_8170 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                mem[64] = _8170 + (7 * ceil32(return_data.size)) + (32 * mem[_8170 + (6 * ceil32(return_data.size)) + mem[_8170 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                mem[_8170 + (7 * ceil32(return_data.size)) + 160] = _10919
                require return_data.size >= _10839 + (32 * _10919) + 32
                t = _8170 + (6 * ceil32(return_data.size)) + _10839 + 192
                u = _8170 + (7 * ceil32(return_data.size)) + 192
                s = 0
                while s < _10919:
                    mem[u] = mem[t]
                    _8092 = mem[96]
                    t = t + 32
                    u = u + 32
                    s = s + 1
                    continue 
                require mem[_8170] - 1 < mem[_8170]
                _11978 = mem[(32 * mem[_8170] - 1) + _8170 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_11978))
                staticcall address(_11978).0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12199 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8092 = mem[96]
                idx = idx + 3
                s = ext_call.return_data[0]
                s = _8170
                s = mem[_12199] - ext_call.return_data[0]
                continue 
            require _5432 / 2 < mem[96]
            _8104 = mem[(16 * Mask(251, 1, _5432)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_8104))
            staticcall address(_8104).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8144 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_8144] < _5484 - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            mem[(32 * ('cd', 68).length) + 160 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5437 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5455 = mem[_5437]
                require mem[_5437] == mem[_5437 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _5488 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_5488)
                require ext_code.size(address(_5455))
                staticcall address(_5455).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_5488)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5521 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5541 = mem[_5521]
                require mem[_5521] == mem[_5521 + 12 len 20]
                require ext_code.size(mem[_5521 + 12 len 20])
                staticcall mem[_5521 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5663 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _5761 = mem[_5663]
                require mem[_5663] == mem[_5663 + 18 len 14]
                _5843 = mem[_5663 + 32]
                require mem[_5663 + 32] == mem[_5663 + 50 len 14]
                require mem[_5663 + 64] == mem[_5663 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_5663 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_5663 + 50 len 14] / (997 * s) + (1000 * mem[_5663 + 18 len 14])
                        idx = idx + 1
                        s = _5541
                        s = 997 * s * Mask(112, 0, _5843) / (997 * s) + (1000 * Mask(112, 0, _5761))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_5663 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_5663 + 50 len 14] / (997 * s) + (1000 * mem[_5663 + 18 len 14])
                        idx = idx + 1
                        s = _5541
                        s = 997 * s * Mask(112, 0, _5843) / (997 * s) + (1000 * Mask(112, 0, _5761))
                        continue 
                require (997 * s) + (1000 * mem[_5663 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_5663 + 18 len 14] / (997 * s) + (1000 * mem[_5663 + 50 len 14])
                idx = idx + 1
                s = _5541
                s = 997 * s * Mask(112, 0, _5761) / (997 * s) + (1000 * Mask(112, 0, _5843))
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _5435 = mem[96]
            require mem[96] / 2 < mem[96]
            _5452 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_5452))
            staticcall address(_5452).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5470 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5487 = mem[_5470]
            _8093 = mem[96]
            idx = _5435 / 2
            s = 0
            s = 96
            s = cd[4]
            while idx < _8093 - 1:
                require idx + -(_5435 / 2) + 1 < mem[96]
                require idx - (_5435 / 2) < mem[96]
                require idx + -(_5435 / 2) + 1 < mem[96]
                if mem[(32 * idx - (_5435 / 2)) + 140 len 20] != mem[(32 * idx + -(_5435 / 2) + 1) + 140 len 20]:
                    require idx - (_5435 / 2) < mem[96]
                    if mem[(32 * idx - (_5435 / 2)) + 140 len 20] != mem[(32 * idx + -(_5435 / 2) + 1) + 140 len 20]:
                        _8173 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_8173 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_8173]
                        mem[_8173 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_8173]
                        mem[_8173 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_8173] - 1 < mem[_8173]
                        mem[_8173 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_8173] - 1) + _8173 + 44 len 20])
                        staticcall mem[(32 * mem[_8173] - 1) + _8173 + 44 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_8173 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8173 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_8173]
                        _8504 = mem[_8173 + 32]
                        require idx - (_5435 / 2) < mem[96]
                        _8520 = mem[(32 * idx - (_5435 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_8173 + 44 len 20])
                            staticcall mem[_8173 + 44 len 20].0x313ce567 with:
                                    gas gas_remaining wei
                            mem[_8173 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_8173 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_8173 + (2 * ceil32(return_data.size)) + 132] = address(_8520)
                            require ext_code.size(mem[_8173 + 44 len 20])
                            staticcall mem[_8173 + 44 len 20].0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_8520)
                            mem[_8173 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _8173 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_5435 / 2) < mem[96]
                                _8976 = mem[(32 * idx - (_5435 / 2)) + 128]
                                mem[_8173 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_8173 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_8173 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_8173 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_8173 + (4 * ceil32(return_data.size)) + 260] = mem[_8173]
                                s = 0
                                t = _8173 + (4 * ceil32(return_data.size)) + 292
                                u = _8173 + 32
                                while s < mem[_8173]:
                                    mem[t] = mem[u + 12 len 20]
                                    _8093 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_8173 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_8173 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_8976))
                                call address(_8976).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _8173 + (4 * ceil32(return_data.size)) + (32 * mem[_8173]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10760 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10840 = mem[_10760]
                                require mem[_10760] <= test266151307()
                                require _10760 + return_data.size > _10760 + mem[_10760] + 31
                                _10920 = mem[_10760 + mem[_10760]]
                                require mem[_10760 + mem[_10760]] <= test266151307()
                                require (32 * mem[_10760 + mem[_10760]]) + 32 >= 0 and _10760 + ceil32(return_data.size) + (32 * mem[_10760 + mem[_10760]]) + 32 <= test266151307()
                                mem[64] = _10760 + ceil32(return_data.size) + (32 * mem[_10760 + mem[_10760]]) + 32
                                mem[_10760 + ceil32(return_data.size)] = _10920
                                require return_data.size >= _10840 + (32 * _10920) + 32
                                t = _10760 + _10840 + 32
                                u = _10760 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _10920:
                                    mem[u] = mem[t]
                                    _8093 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_8173] - 1 < mem[_8173]
                                _11980 = mem[(32 * mem[_8173] - 1) + _8173 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_11980))
                                staticcall address(_11980).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12200 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _8093 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _8173
                                s = mem[_12200] - ext_call.return_data[0]
                                continue 
                            mem[_8173 + (4 * ceil32(return_data.size)) + 100] = address(_8520)
                            mem[_8173 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_8504))
                            call address(_8504).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_8520), -1
                            mem[_8173 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _8173 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_5435 / 2) < mem[96]
                            _9414 = mem[(32 * idx - (_5435 / 2)) + 128]
                            mem[_8173 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8173 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_8173 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_8173 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_8173 + (6 * ceil32(return_data.size)) + 260] = mem[_8173]
                            s = 0
                            t = _8173 + (6 * ceil32(return_data.size)) + 292
                            u = _8173 + 32
                            while s < mem[_8173]:
                                mem[t] = mem[u + 12 len 20]
                                _8093 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_8173 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_8173 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_9414))
                            call address(_9414).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _8173 + (6 * ceil32(return_data.size)) + (32 * mem[_8173]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10761 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10841 = mem[_10761]
                            require mem[_10761] <= test266151307()
                            require _10761 + return_data.size > _10761 + mem[_10761] + 31
                            _10921 = mem[_10761 + mem[_10761]]
                            require mem[_10761 + mem[_10761]] <= test266151307()
                            require (32 * mem[_10761 + mem[_10761]]) + 32 >= 0 and _10761 + ceil32(return_data.size) + (32 * mem[_10761 + mem[_10761]]) + 32 <= test266151307()
                            mem[64] = _10761 + ceil32(return_data.size) + (32 * mem[_10761 + mem[_10761]]) + 32
                            mem[_10761 + ceil32(return_data.size)] = _10921
                            require return_data.size >= _10841 + (32 * _10921) + 32
                            t = _10761 + _10841 + 32
                            u = _10761 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _10921:
                                mem[u] = mem[t]
                                _8093 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8173] - 1 < mem[_8173]
                            _11982 = mem[(32 * mem[_8173] - 1) + _8173 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11982))
                            staticcall address(_11982).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12201 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8093 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _8173
                            s = mem[_12201] - ext_call.return_data[0]
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 1
                        if not stor1[msg.sender]:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(address(_8504))
                        staticcall address(_8504).0x313ce567 with:
                                gas gas_remaining wei
                        mem[_8173 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_8173 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_8173 + (2 * ceil32(return_data.size)) + 132] = address(_8520)
                        require ext_code.size(address(_8504))
                        staticcall address(_8504).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(_8520)
                        mem[_8173 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8173 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_5435 / 2) < mem[96]
                            _9010 = mem[(32 * idx - (_5435 / 2)) + 128]
                            mem[_8173 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8173 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_8173 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_8173 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_8173 + (4 * ceil32(return_data.size)) + 260] = mem[_8173]
                            s = 0
                            t = _8173 + (4 * ceil32(return_data.size)) + 292
                            u = _8173 + 32
                            while s < mem[_8173]:
                                mem[t] = mem[u + 12 len 20]
                                _8093 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_8173 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_8173 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_9010))
                            call address(_9010).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _8173 + (4 * ceil32(return_data.size)) + (32 * mem[_8173]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10762 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10842 = mem[_10762]
                            require mem[_10762] <= test266151307()
                            require _10762 + return_data.size > _10762 + mem[_10762] + 31
                            _10922 = mem[_10762 + mem[_10762]]
                            require mem[_10762 + mem[_10762]] <= test266151307()
                            require (32 * mem[_10762 + mem[_10762]]) + 32 >= 0 and _10762 + ceil32(return_data.size) + (32 * mem[_10762 + mem[_10762]]) + 32 <= test266151307()
                            mem[64] = _10762 + ceil32(return_data.size) + (32 * mem[_10762 + mem[_10762]]) + 32
                            mem[_10762 + ceil32(return_data.size)] = _10922
                            require return_data.size >= _10842 + (32 * _10922) + 32
                            t = _10762 + _10842 + 32
                            u = _10762 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _10922:
                                mem[u] = mem[t]
                                _8093 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8173] - 1 < mem[_8173]
                            _11984 = mem[(32 * mem[_8173] - 1) + _8173 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11984))
                            staticcall address(_11984).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12202 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8093 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _8173
                            s = mem[_12202] - ext_call.return_data[0]
                            continue 
                        mem[_8173 + (4 * ceil32(return_data.size)) + 100] = address(_8520)
                        mem[_8173 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_8504))
                        call address(_8504).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_8520), -1
                        mem[_8173 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8173 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_5435 / 2) < mem[96]
                        _9451 = mem[(32 * idx - (_5435 / 2)) + 128]
                        mem[_8173 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8173 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_8173 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_8173 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_8173 + (6 * ceil32(return_data.size)) + 260] = mem[_8173]
                        s = 0
                        t = _8173 + (6 * ceil32(return_data.size)) + 292
                        u = _8173 + 32
                        while s < mem[_8173]:
                            mem[t] = mem[u + 12 len 20]
                            _8093 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_8173 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_8173 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_9451))
                        call address(_9451).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _8173 + (6 * ceil32(return_data.size)) + (32 * mem[_8173]) + -mem[64] + 288]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10763 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10843 = mem[_10763]
                        require mem[_10763] <= test266151307()
                        require _10763 + return_data.size > _10763 + mem[_10763] + 31
                        _10923 = mem[_10763 + mem[_10763]]
                        require mem[_10763 + mem[_10763]] <= test266151307()
                        require (32 * mem[_10763 + mem[_10763]]) + 32 >= 0 and _10763 + ceil32(return_data.size) + (32 * mem[_10763 + mem[_10763]]) + 32 <= test266151307()
                        mem[64] = _10763 + ceil32(return_data.size) + (32 * mem[_10763 + mem[_10763]]) + 32
                        mem[_10763 + ceil32(return_data.size)] = _10923
                        require return_data.size >= _10843 + (32 * _10923) + 32
                        t = _10763 + _10843 + 32
                        u = _10763 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _10923:
                            mem[u] = mem[t]
                            _8093 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8173] - 1 < mem[_8173]
                        _11986 = mem[(32 * mem[_8173] - 1) + _8173 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11986))
                        staticcall address(_11986).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12203 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8093 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _8173
                        s = mem[_12203] - ext_call.return_data[0]
                        continue 
                    _8175 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_8175 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_8175]
                    mem[_8175 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_8175]
                    mem[_8175 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_8175]
                    mem[_8175 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_8175] - 1 < mem[_8175]
                    mem[_8175 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_8175] - 1) + _8175 + 44 len 20])
                    staticcall mem[(32 * mem[_8175] - 1) + _8175 + 44 len 20].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_8175 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8175 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_8175]
                    _8536 = mem[_8175 + 32]
                    require idx + -(_5435 / 2) + 1 < mem[96]
                    _8553 = mem[(32 * idx + -(_5435 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_8175 + 44 len 20])
                        staticcall mem[_8175 + 44 len 20].0x313ce567 with:
                                gas gas_remaining wei
                        mem[_8175 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_8175 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_8175 + (2 * ceil32(return_data.size)) + 164] = address(_8553)
                        require ext_code.size(mem[_8175 + 44 len 20])
                        staticcall mem[_8175 + 44 len 20].0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(_8553)
                        mem[_8175 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8175 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_5435 / 2) + 1 < mem[96]
                            _9048 = mem[(32 * idx + -(_5435 / 2) + 1) + 128]
                            mem[_8175 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8175 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_8175 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_8175 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_8175 + (4 * ceil32(return_data.size)) + 292] = mem[_8175]
                            t = 0
                            u = _8175 + (4 * ceil32(return_data.size)) + 324
                            v = _8175 + 32
                            while t < mem[_8175]:
                                mem[u] = mem[v + 12 len 20]
                                _8093 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_8175 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_8175 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_9048))
                            call address(_9048).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8175 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_8175]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_8175 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _8175 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _10844 = mem[_8175 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_8175 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _8175 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _8175 + (4 * ceil32(return_data.size)) + mem[_8175 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _10924 = mem[_8175 + (4 * ceil32(return_data.size)) + mem[_8175 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_8175 + (4 * ceil32(return_data.size)) + mem[_8175 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_8175 + (4 * ceil32(return_data.size)) + mem[_8175 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8175 + (6 * ceil32(return_data.size)) + (32 * mem[_8175 + (4 * ceil32(return_data.size)) + mem[_8175 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _8175 + (6 * ceil32(return_data.size)) + (32 * mem[_8175 + (4 * ceil32(return_data.size)) + mem[_8175 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_8175 + (6 * ceil32(return_data.size)) + 128] = _10924
                            require return_data.size >= _10844 + (32 * _10924) + 32
                            t = _8175 + (4 * ceil32(return_data.size)) + _10844 + 160
                            u = _8175 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _10924:
                                mem[u] = mem[t]
                                _8093 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8175] - 1 < mem[_8175]
                            _11988 = mem[(32 * mem[_8175] - 1) + _8175 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11988))
                            staticcall address(_11988).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12204 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8093 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _8175
                            s = mem[_12204] - ext_call.return_data[0]
                            continue 
                        mem[_8175 + (4 * ceil32(return_data.size)) + 132] = address(_8553)
                        mem[_8175 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_8536))
                        call address(_8536).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_8553), -1
                        mem[_8175 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8175 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_5435 / 2) + 1 < mem[96]
                        _9487 = mem[(32 * idx + -(_5435 / 2) + 1) + 128]
                        mem[_8175 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8175 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_8175 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_8175 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_8175 + (6 * ceil32(return_data.size)) + 292] = mem[_8175]
                        t = 0
                        u = _8175 + (6 * ceil32(return_data.size)) + 324
                        v = _8175 + 32
                        while t < mem[_8175]:
                            mem[u] = mem[v + 12 len 20]
                            _8093 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8175 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_8175 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_9487))
                        call address(_9487).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8175 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_8175]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8175 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8175 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _10845 = mem[_8175 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_8175 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8175 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _8175 + (6 * ceil32(return_data.size)) + mem[_8175 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _10925 = mem[_8175 + (6 * ceil32(return_data.size)) + mem[_8175 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_8175 + (6 * ceil32(return_data.size)) + mem[_8175 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_8175 + (6 * ceil32(return_data.size)) + mem[_8175 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8175 + (7 * ceil32(return_data.size)) + (32 * mem[_8175 + (6 * ceil32(return_data.size)) + mem[_8175 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _8175 + (7 * ceil32(return_data.size)) + (32 * mem[_8175 + (6 * ceil32(return_data.size)) + mem[_8175 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_8175 + (7 * ceil32(return_data.size)) + 128] = mem[_8175 + (6 * ceil32(return_data.size)) + mem[_8175 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require return_data.size >= _10845 + (32 * _10925) + 32
                        t = _8175 + (6 * ceil32(return_data.size)) + _10845 + 160
                        u = _8175 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _10925:
                            mem[u] = mem[t]
                            _8093 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8175] - 1 < mem[_8175]
                        _11990 = mem[(32 * mem[_8175] - 1) + _8175 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11990))
                        staticcall address(_11990).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12205 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8093 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _8175
                        s = mem[_12205] - ext_call.return_data[0]
                        continue 
                    mem[0] = msg.sender
                    mem[32] = 1
                    if not stor1[msg.sender]:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(address(_8536))
                    staticcall address(_8536).0x313ce567 with:
                            gas gas_remaining wei
                    mem[_8175 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_8175 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_8175 + (2 * ceil32(return_data.size)) + 164] = address(_8553)
                    require ext_code.size(address(_8536))
                    staticcall address(_8536).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(_8553)
                    mem[_8175 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8175 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_5435 / 2) + 1 < mem[96]
                        _9092 = mem[(32 * idx + -(_5435 / 2) + 1) + 128]
                        mem[_8175 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8175 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_8175 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_8175 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_8175 + (4 * ceil32(return_data.size)) + 292] = mem[_8175]
                        t = 0
                        u = _8175 + (4 * ceil32(return_data.size)) + 324
                        v = _8175 + 32
                        while t < mem[_8175]:
                            mem[u] = mem[v + 12 len 20]
                            _8093 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8175 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_8175 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_9092))
                        call address(_9092).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8175 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_8175]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8175 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8175 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _10846 = mem[_8175 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_8175 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8175 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _8175 + (4 * ceil32(return_data.size)) + mem[_8175 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _10926 = mem[_8175 + (4 * ceil32(return_data.size)) + mem[_8175 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_8175 + (4 * ceil32(return_data.size)) + mem[_8175 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_8175 + (4 * ceil32(return_data.size)) + mem[_8175 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8175 + (6 * ceil32(return_data.size)) + (32 * mem[_8175 + (4 * ceil32(return_data.size)) + mem[_8175 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _8175 + (6 * ceil32(return_data.size)) + (32 * mem[_8175 + (4 * ceil32(return_data.size)) + mem[_8175 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_8175 + (6 * ceil32(return_data.size)) + 128] = _10926
                        require return_data.size >= _10846 + (32 * _10926) + 32
                        t = _8175 + (4 * ceil32(return_data.size)) + _10846 + 160
                        u = _8175 + (6 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _10926:
                            mem[u] = mem[t]
                            _8093 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8175] - 1 < mem[_8175]
                        _11992 = mem[(32 * mem[_8175] - 1) + _8175 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_11992))
                        staticcall address(_11992).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12206 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8093 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _8175
                        s = mem[_12206] - ext_call.return_data[0]
                        continue 
                    mem[_8175 + (4 * ceil32(return_data.size)) + 132] = address(_8553)
                    mem[_8175 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_8536))
                    call address(_8536).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_8553), -1
                    mem[_8175 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8175 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_5435 / 2) + 1 < mem[96]
                    _9527 = mem[(32 * idx + -(_5435 / 2) + 1) + 128]
                    mem[_8175 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_8175 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_8175 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_8175 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_8175 + (6 * ceil32(return_data.size)) + 292] = mem[_8175]
                    t = 0
                    u = _8175 + (6 * ceil32(return_data.size)) + 324
                    v = _8175 + 32
                    while t < mem[_8175]:
                        mem[u] = mem[v + 12 len 20]
                        _8093 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_8175 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_8175 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_9527))
                    call address(_9527).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8175 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_8175]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_8175 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _8175 + (7 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    _10847 = mem[_8175 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                    require mem[_8175 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _8175 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _8175 + (6 * ceil32(return_data.size)) + mem[_8175 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                    _10927 = mem[_8175 + (6 * ceil32(return_data.size)) + mem[_8175 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                    require mem[_8175 + (6 * ceil32(return_data.size)) + mem[_8175 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                    require (32 * mem[_8175 + (6 * ceil32(return_data.size)) + mem[_8175 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8175 + (7 * ceil32(return_data.size)) + (32 * mem[_8175 + (6 * ceil32(return_data.size)) + mem[_8175 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                    mem[64] = _8175 + (7 * ceil32(return_data.size)) + (32 * mem[_8175 + (6 * ceil32(return_data.size)) + mem[_8175 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                    mem[_8175 + (7 * ceil32(return_data.size)) + 128] = mem[_8175 + (6 * ceil32(return_data.size)) + mem[_8175 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                    require return_data.size >= _10847 + (32 * _10927) + 32
                    t = _8175 + (6 * ceil32(return_data.size)) + _10847 + 160
                    u = _8175 + (7 * ceil32(return_data.size)) + 160
                    s = 0
                    while s < _10927:
                        mem[u] = mem[t]
                        _8093 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_8175] - 1 < mem[_8175]
                    _11994 = mem[(32 * mem[_8175] - 1) + _8175 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_11994))
                    staticcall address(_11994).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12207 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8093 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _8175
                    s = mem[_12207] - ext_call.return_data[0]
                    continue 
                require idx + -(_5435 / 2) + 2 < mem[96]
                if mem[(32 * idx + -(_5435 / 2) + 2) + 140 len 20] != mem[(32 * idx + -(_5435 / 2) + 1) + 140 len 20]:
                    require idx + -(_5435 / 2) + 1 < mem[96]
                    require idx - (_5435 / 2) < mem[96]
                    if mem[(32 * idx - (_5435 / 2)) + 140 len 20] != mem[(32 * idx + -(_5435 / 2) + 1) + 140 len 20]:
                        _8262 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_8262 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_8262]
                        mem[_8262 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_8262]
                        mem[_8262 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_8262] - 1 < mem[_8262]
                        mem[_8262 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_8262] - 1) + _8262 + 44 len 20])
                        staticcall mem[(32 * mem[_8262] - 1) + _8262 + 44 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_8262 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8262 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_8262]
                        _8554 = mem[_8262 + 32]
                        require idx - (_5435 / 2) < mem[96]
                        _8572 = mem[(32 * idx - (_5435 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_8262 + 44 len 20])
                            staticcall mem[_8262 + 44 len 20].0x313ce567 with:
                                    gas gas_remaining wei
                            mem[_8262 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_8262 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_8262 + (2 * ceil32(return_data.size)) + 132] = address(_8572)
                            require ext_code.size(mem[_8262 + 44 len 20])
                            staticcall mem[_8262 + 44 len 20].0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_8572)
                            mem[_8262 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _8262 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_5435 / 2) < mem[96]
                                _9095 = mem[(32 * idx - (_5435 / 2)) + 128]
                                mem[_8262 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_8262 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_8262 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_8262 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_8262 + (4 * ceil32(return_data.size)) + 260] = mem[_8262]
                                t = 0
                                u = _8262 + (4 * ceil32(return_data.size)) + 292
                                v = _8262 + 32
                                while t < mem[_8262]:
                                    mem[u] = mem[v + 12 len 20]
                                    _8093 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_8262 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_8262 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_9095))
                                call address(_9095).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8262 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_8262]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_8262 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _8262 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _10848 = mem[_8262 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_8262 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _8262 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _8262 + (4 * ceil32(return_data.size)) + mem[_8262 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _10928 = mem[_8262 + (4 * ceil32(return_data.size)) + mem[_8262 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_8262 + (4 * ceil32(return_data.size)) + mem[_8262 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_8262 + (4 * ceil32(return_data.size)) + mem[_8262 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _8262 + (6 * ceil32(return_data.size)) + (32 * mem[_8262 + (4 * ceil32(return_data.size)) + mem[_8262 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _8262 + (6 * ceil32(return_data.size)) + (32 * mem[_8262 + (4 * ceil32(return_data.size)) + mem[_8262 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_8262 + (6 * ceil32(return_data.size)) + 96] = mem[_8262 + (4 * ceil32(return_data.size)) + mem[_8262 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require return_data.size >= _10848 + (32 * _10928) + 32
                                t = _8262 + (4 * ceil32(return_data.size)) + _10848 + 128
                                u = _8262 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _10928:
                                    mem[u] = mem[t]
                                    _8093 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_8262] - 1 < mem[_8262]
                                _11996 = mem[(32 * mem[_8262] - 1) + _8262 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_11996))
                                staticcall address(_11996).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12208 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _8093 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _8262
                                s = mem[_12208] - ext_call.return_data[0]
                                continue 
                            mem[_8262 + (4 * ceil32(return_data.size)) + 100] = address(_8572)
                            mem[_8262 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_8554))
                            call address(_8554).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_8572), -1
                            mem[_8262 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _8262 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_5435 / 2) < mem[96]
                            _9530 = mem[(32 * idx - (_5435 / 2)) + 128]
                            mem[_8262 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8262 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_8262 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_8262 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_8262 + (6 * ceil32(return_data.size)) + 260] = mem[_8262]
                            t = 0
                            u = _8262 + (6 * ceil32(return_data.size)) + 292
                            v = _8262 + 32
                            while t < mem[_8262]:
                                mem[u] = mem[v + 12 len 20]
                                _8093 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_8262 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_8262 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_9530))
                            call address(_9530).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8262 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_8262]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_8262 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _8262 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _10849 = mem[_8262 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_8262 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _8262 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _8262 + (6 * ceil32(return_data.size)) + mem[_8262 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _10929 = mem[_8262 + (6 * ceil32(return_data.size)) + mem[_8262 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_8262 + (6 * ceil32(return_data.size)) + mem[_8262 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_8262 + (6 * ceil32(return_data.size)) + mem[_8262 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _8262 + (7 * ceil32(return_data.size)) + (32 * mem[_8262 + (6 * ceil32(return_data.size)) + mem[_8262 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _8262 + (7 * ceil32(return_data.size)) + (32 * mem[_8262 + (6 * ceil32(return_data.size)) + mem[_8262 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_8262 + (7 * ceil32(return_data.size)) + 96] = mem[_8262 + (6 * ceil32(return_data.size)) + mem[_8262 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require return_data.size >= _10849 + (32 * _10929) + 32
                            t = _8262 + (6 * ceil32(return_data.size)) + _10849 + 128
                            u = _8262 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _10929:
                                mem[u] = mem[t]
                                _8093 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8262] - 1 < mem[_8262]
                            _11998 = mem[(32 * mem[_8262] - 1) + _8262 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_11998))
                            staticcall address(_11998).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12209 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8093 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _8262
                            s = mem[_12209] - ext_call.return_data[0]
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 1
                        if not stor1[msg.sender]:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(address(_8554))
                        staticcall address(_8554).0x313ce567 with:
                                gas gas_remaining wei
                        mem[_8262 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_8262 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_8262 + (2 * ceil32(return_data.size)) + 132] = address(_8572)
                        require ext_code.size(address(_8554))
                        staticcall address(_8554).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(_8572)
                        mem[_8262 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8262 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_5435 / 2) < mem[96]
                            _9149 = mem[(32 * idx - (_5435 / 2)) + 128]
                            mem[_8262 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8262 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_8262 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_8262 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_8262 + (4 * ceil32(return_data.size)) + 260] = mem[_8262]
                            t = 0
                            u = _8262 + (4 * ceil32(return_data.size)) + 292
                            v = _8262 + 32
                            while t < mem[_8262]:
                                mem[u] = mem[v + 12 len 20]
                                _8093 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_8262 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_8262 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_9149))
                            call address(_9149).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8262 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_8262]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_8262 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _8262 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _10850 = mem[_8262 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_8262 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _8262 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _8262 + (4 * ceil32(return_data.size)) + mem[_8262 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _10930 = mem[_8262 + (4 * ceil32(return_data.size)) + mem[_8262 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_8262 + (4 * ceil32(return_data.size)) + mem[_8262 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_8262 + (4 * ceil32(return_data.size)) + mem[_8262 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _8262 + (6 * ceil32(return_data.size)) + (32 * mem[_8262 + (4 * ceil32(return_data.size)) + mem[_8262 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _8262 + (6 * ceil32(return_data.size)) + (32 * mem[_8262 + (4 * ceil32(return_data.size)) + mem[_8262 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_8262 + (6 * ceil32(return_data.size)) + 96] = mem[_8262 + (4 * ceil32(return_data.size)) + mem[_8262 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require return_data.size >= _10850 + (32 * _10930) + 32
                            t = _8262 + (4 * ceil32(return_data.size)) + _10850 + 128
                            u = _8262 + (6 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _10930:
                                mem[u] = mem[t]
                                _8093 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8262] - 1 < mem[_8262]
                            _12000 = mem[(32 * mem[_8262] - 1) + _8262 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12000))
                            staticcall address(_12000).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12210 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8093 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _8262
                            s = mem[_12210] - ext_call.return_data[0]
                            continue 
                        mem[_8262 + (4 * ceil32(return_data.size)) + 100] = address(_8572)
                        mem[_8262 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_8554))
                        call address(_8554).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_8572), -1
                        mem[_8262 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8262 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_5435 / 2) < mem[96]
                        _9580 = mem[(32 * idx - (_5435 / 2)) + 128]
                        mem[_8262 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8262 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_8262 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_8262 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_8262 + (6 * ceil32(return_data.size)) + 260] = mem[_8262]
                        t = 0
                        u = _8262 + (6 * ceil32(return_data.size)) + 292
                        v = _8262 + 32
                        while t < mem[_8262]:
                            mem[u] = mem[v + 12 len 20]
                            _8093 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8262 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_8262 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_9580))
                        call address(_9580).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8262 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_8262]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8262 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8262 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _10851 = mem[_8262 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                        require mem[_8262 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8262 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _8262 + (6 * ceil32(return_data.size)) + mem[_8262 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                        _10931 = mem[_8262 + (6 * ceil32(return_data.size)) + mem[_8262 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require mem[_8262 + (6 * ceil32(return_data.size)) + mem[_8262 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                        require (32 * mem[_8262 + (6 * ceil32(return_data.size)) + mem[_8262 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _8262 + (7 * ceil32(return_data.size)) + (32 * mem[_8262 + (6 * ceil32(return_data.size)) + mem[_8262 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                        mem[64] = _8262 + (7 * ceil32(return_data.size)) + (32 * mem[_8262 + (6 * ceil32(return_data.size)) + mem[_8262 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                        mem[_8262 + (7 * ceil32(return_data.size)) + 96] = mem[_8262 + (6 * ceil32(return_data.size)) + mem[_8262 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require return_data.size >= _10851 + (32 * _10931) + 32
                        t = _8262 + (6 * ceil32(return_data.size)) + _10851 + 128
                        u = _8262 + (7 * ceil32(return_data.size)) + 128
                        s = 0
                        while s < _10931:
                            mem[u] = mem[t]
                            _8093 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8262] - 1 < mem[_8262]
                        _12002 = mem[(32 * mem[_8262] - 1) + _8262 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12002))
                        staticcall address(_12002).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12211 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8093 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _8262
                        s = mem[_12211] - ext_call.return_data[0]
                        continue 
                    _8264 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_8264 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_8264]
                    mem[_8264 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_8264]
                    mem[_8264 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_8264]
                    mem[_8264 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_8264] - 1 < mem[_8264]
                    mem[_8264 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_8264] - 1) + _8264 + 44 len 20])
                    staticcall mem[(32 * mem[_8264] - 1) + _8264 + 44 len 20].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_8264 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8264 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_8264]
                    _8589 = mem[_8264 + 32]
                    require idx + -(_5435 / 2) + 1 < mem[96]
                    _8605 = mem[(32 * idx + -(_5435 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_8264 + 44 len 20])
                        staticcall mem[_8264 + 44 len 20].0x313ce567 with:
                                gas gas_remaining wei
                        mem[_8264 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_8264 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_8264 + (2 * ceil32(return_data.size)) + 164] = address(_8605)
                        require ext_code.size(mem[_8264 + 44 len 20])
                        staticcall mem[_8264 + 44 len 20].0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(_8605)
                        mem[_8264 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8264 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_5435 / 2) + 1 < mem[96]
                            _9208 = mem[(32 * idx + -(_5435 / 2) + 1) + 128]
                            mem[_8264 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8264 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_8264 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_8264 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_8264 + (4 * ceil32(return_data.size)) + 292] = mem[_8264]
                            t = 0
                            u = _8264 + (4 * ceil32(return_data.size)) + 324
                            v = _8264 + 32
                            while t < mem[_8264]:
                                mem[u] = mem[v + 12 len 20]
                                _8093 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_8264 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_8264 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_9208))
                            call address(_9208).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8264 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_8264]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_8264 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _8264 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _10852 = mem[_8264 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_8264 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _8264 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _8264 + (4 * ceil32(return_data.size)) + mem[_8264 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _10932 = mem[_8264 + (4 * ceil32(return_data.size)) + mem[_8264 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_8264 + (4 * ceil32(return_data.size)) + mem[_8264 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_8264 + (4 * ceil32(return_data.size)) + mem[_8264 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8264 + (6 * ceil32(return_data.size)) + (32 * mem[_8264 + (4 * ceil32(return_data.size)) + mem[_8264 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _8264 + (6 * ceil32(return_data.size)) + (32 * mem[_8264 + (4 * ceil32(return_data.size)) + mem[_8264 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_8264 + (6 * ceil32(return_data.size)) + 128] = mem[_8264 + (4 * ceil32(return_data.size)) + mem[_8264 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require return_data.size >= _10852 + (32 * _10932) + 32
                            t = _8264 + (4 * ceil32(return_data.size)) + _10852 + 160
                            u = _8264 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _10932:
                                mem[u] = mem[t]
                                _8093 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8264] - 1 < mem[_8264]
                            _12004 = mem[(32 * mem[_8264] - 1) + _8264 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12004))
                            staticcall address(_12004).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12212 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8093 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _8264
                            s = mem[_12212] - ext_call.return_data[0]
                            continue 
                        mem[_8264 + (4 * ceil32(return_data.size)) + 132] = address(_8605)
                        mem[_8264 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_8589))
                        call address(_8589).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_8605), -1
                        mem[_8264 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8264 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_5435 / 2) + 1 < mem[96]
                        _9633 = mem[(32 * idx + -(_5435 / 2) + 1) + 128]
                        mem[_8264 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8264 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_8264 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_8264 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_8264 + (6 * ceil32(return_data.size)) + 292] = mem[_8264]
                        t = 0
                        u = _8264 + (6 * ceil32(return_data.size)) + 324
                        v = _8264 + 32
                        while t < mem[_8264]:
                            mem[u] = mem[v + 12 len 20]
                            _8093 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8264 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_8264 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_9633))
                        call address(_9633).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8264 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_8264]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8264 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8264 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _10853 = mem[_8264 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_8264 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8264 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _8264 + (6 * ceil32(return_data.size)) + mem[_8264 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _10933 = mem[_8264 + (6 * ceil32(return_data.size)) + mem[_8264 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_8264 + (6 * ceil32(return_data.size)) + mem[_8264 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_8264 + (6 * ceil32(return_data.size)) + mem[_8264 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8264 + (7 * ceil32(return_data.size)) + (32 * mem[_8264 + (6 * ceil32(return_data.size)) + mem[_8264 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _8264 + (7 * ceil32(return_data.size)) + (32 * mem[_8264 + (6 * ceil32(return_data.size)) + mem[_8264 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_8264 + (7 * ceil32(return_data.size)) + 128] = mem[_8264 + (6 * ceil32(return_data.size)) + mem[_8264 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require return_data.size >= _10853 + (32 * _10933) + 32
                        t = _8264 + (6 * ceil32(return_data.size)) + _10853 + 160
                        u = _8264 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _10933:
                            mem[u] = mem[t]
                            _8093 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8264] - 1 < mem[_8264]
                        _12006 = mem[(32 * mem[_8264] - 1) + _8264 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12006))
                        staticcall address(_12006).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12213 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8093 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _8264
                        s = mem[_12213] - ext_call.return_data[0]
                        continue 
                    mem[0] = msg.sender
                    mem[32] = 1
                    if not stor1[msg.sender]:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(address(_8589))
                    staticcall address(_8589).0x313ce567 with:
                            gas gas_remaining wei
                    mem[_8264 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_8264 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_8264 + (2 * ceil32(return_data.size)) + 164] = address(_8605)
                    require ext_code.size(address(_8589))
                    staticcall address(_8589).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(_8605)
                    mem[_8264 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8264 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_5435 / 2) + 1 < mem[96]
                        _9263 = mem[(32 * idx + -(_5435 / 2) + 1) + 128]
                        mem[_8264 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8264 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_8264 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_8264 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_8264 + (4 * ceil32(return_data.size)) + 292] = mem[_8264]
                        t = 0
                        u = _8264 + (4 * ceil32(return_data.size)) + 324
                        v = _8264 + 32
                        while t < mem[_8264]:
                            mem[u] = mem[v + 12 len 20]
                            _8093 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8264 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_8264 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_9263))
                        call address(_9263).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8264 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_8264]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8264 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8264 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _10854 = mem[_8264 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_8264 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8264 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _8264 + (4 * ceil32(return_data.size)) + mem[_8264 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _10934 = mem[_8264 + (4 * ceil32(return_data.size)) + mem[_8264 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_8264 + (4 * ceil32(return_data.size)) + mem[_8264 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_8264 + (4 * ceil32(return_data.size)) + mem[_8264 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8264 + (6 * ceil32(return_data.size)) + (32 * mem[_8264 + (4 * ceil32(return_data.size)) + mem[_8264 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _8264 + (6 * ceil32(return_data.size)) + (32 * mem[_8264 + (4 * ceil32(return_data.size)) + mem[_8264 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_8264 + (6 * ceil32(return_data.size)) + 128] = mem[_8264 + (4 * ceil32(return_data.size)) + mem[_8264 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require return_data.size >= _10854 + (32 * _10934) + 32
                        t = _8264 + (4 * ceil32(return_data.size)) + _10854 + 160
                        u = _8264 + (6 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _10934:
                            mem[u] = mem[t]
                            _8093 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8264] - 1 < mem[_8264]
                        _12008 = mem[(32 * mem[_8264] - 1) + _8264 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12008))
                        staticcall address(_12008).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12214 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8093 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _8264
                        s = mem[_12214] - ext_call.return_data[0]
                        continue 
                    mem[_8264 + (4 * ceil32(return_data.size)) + 132] = address(_8605)
                    mem[_8264 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_8589))
                    call address(_8589).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_8605), -1
                    mem[_8264 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8264 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_5435 / 2) + 1 < mem[96]
                    _9681 = mem[(32 * idx + -(_5435 / 2) + 1) + 128]
                    mem[_8264 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_8264 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_8264 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_8264 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_8264 + (6 * ceil32(return_data.size)) + 292] = mem[_8264]
                    t = 0
                    u = _8264 + (6 * ceil32(return_data.size)) + 324
                    v = _8264 + 32
                    while t < mem[_8264]:
                        mem[u] = mem[v + 12 len 20]
                        _8093 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_8264 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_8264 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_9681))
                    call address(_9681).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8264 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_8264]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_8264 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _8264 + (7 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    _10855 = mem[_8264 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                    require mem[_8264 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _8264 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _8264 + (6 * ceil32(return_data.size)) + mem[_8264 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                    _10935 = mem[_8264 + (6 * ceil32(return_data.size)) + mem[_8264 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                    require mem[_8264 + (6 * ceil32(return_data.size)) + mem[_8264 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                    require (32 * mem[_8264 + (6 * ceil32(return_data.size)) + mem[_8264 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8264 + (7 * ceil32(return_data.size)) + (32 * mem[_8264 + (6 * ceil32(return_data.size)) + mem[_8264 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                    mem[64] = _8264 + (7 * ceil32(return_data.size)) + (32 * mem[_8264 + (6 * ceil32(return_data.size)) + mem[_8264 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                    mem[_8264 + (7 * ceil32(return_data.size)) + 128] = mem[_8264 + (6 * ceil32(return_data.size)) + mem[_8264 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                    require return_data.size >= _10855 + (32 * _10935) + 32
                    t = _8264 + (6 * ceil32(return_data.size)) + _10855 + 160
                    u = _8264 + (7 * ceil32(return_data.size)) + 160
                    s = 0
                    while s < _10935:
                        mem[u] = mem[t]
                        _8093 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_8264] - 1 < mem[_8264]
                    _12010 = mem[(32 * mem[_8264] - 1) + _8264 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12010))
                    staticcall address(_12010).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12215 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8093 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _8264
                    s = mem[_12215] - ext_call.return_data[0]
                    continue 
                _8178 = mem[64]
                mem[mem[64]] = 4
                mem[64] = mem[64] + 160
                mem[_8178 + 32 len 128] = call.data[calldata.size len 128]
                require idx < mem[96]
                require 0 < mem[_8178]
                mem[_8178 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_8178]
                mem[_8178 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx + 2 < mem[96]
                require 2 < mem[_8178]
                mem[_8178 + 96] = mem[(32 * idx + 2) + 140 len 20]
                require idx + 3 < mem[96]
                require 3 < mem[_8178]
                mem[_8178 + 128] = mem[(32 * idx + 3) + 140 len 20]
                require mem[_8178] - 1 < mem[_8178]
                mem[_8178 + 164] = this.address
                require ext_code.size(mem[(32 * mem[_8178] - 1) + _8178 + 44 len 20])
                staticcall mem[(32 * mem[_8178] - 1) + _8178 + 44 len 20].0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_8178 + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _8178 + ceil32(return_data.size) + 160
                require return_data.size >= 32
                require 0 < mem[_8178]
                _8574 = mem[_8178 + 32]
                require idx + -(_5435 / 2) + 2 < mem[96]
                _8591 = mem[(32 * idx + -(_5435 / 2) + 2) + 128]
                if msg.sender == owner:
                    require ext_code.size(mem[_8178 + 44 len 20])
                    staticcall mem[_8178 + 44 len 20].0x313ce567 with:
                            gas gas_remaining wei
                    mem[_8178 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_8178 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_8178 + (2 * ceil32(return_data.size)) + 196] = address(_8591)
                    require ext_code.size(mem[_8178 + 44 len 20])
                    staticcall mem[_8178 + 44 len 20].0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(_8591)
                    mem[_8178 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8178 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_5435 / 2) + 2 < mem[96]
                        _9154 = mem[(32 * idx + -(_5435 / 2) + 2) + 128]
                        mem[_8178 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8178 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_8178 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_8178 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_8178 + (4 * ceil32(return_data.size)) + 324] = mem[_8178]
                        s = 0
                        t = _8178 + (4 * ceil32(return_data.size)) + 356
                        u = _8178 + 32
                        while s < mem[_8178]:
                            mem[t] = mem[u + 12 len 20]
                            _8093 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_8178 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_8178 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_9154))
                        call address(_9154).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _8178 + (4 * ceil32(return_data.size)) + (32 * mem[_8178]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10776 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10856 = mem[_10776]
                        require mem[_10776] <= test266151307()
                        require _10776 + return_data.size > _10776 + mem[_10776] + 31
                        _10936 = mem[_10776 + mem[_10776]]
                        require mem[_10776 + mem[_10776]] <= test266151307()
                        require (32 * mem[_10776 + mem[_10776]]) + 32 >= 0 and _10776 + ceil32(return_data.size) + (32 * mem[_10776 + mem[_10776]]) + 32 <= test266151307()
                        mem[64] = _10776 + ceil32(return_data.size) + (32 * mem[_10776 + mem[_10776]]) + 32
                        mem[_10776 + ceil32(return_data.size)] = _10936
                        require return_data.size >= _10856 + (32 * _10936) + 32
                        t = _10776 + _10856 + 32
                        u = _10776 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _10936:
                            mem[u] = mem[t]
                            _8093 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8178] - 1 < mem[_8178]
                        _12012 = mem[(32 * mem[_8178] - 1) + _8178 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12012))
                        staticcall address(_12012).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12216 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8093 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _8178
                        s = mem[_12216] - ext_call.return_data[0]
                        continue 
                    mem[_8178 + (4 * ceil32(return_data.size)) + 164] = address(_8591)
                    mem[_8178 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_8574))
                    call address(_8574).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_8591), -1
                    mem[_8178 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8178 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_5435 / 2) + 2 < mem[96]
                    _9585 = mem[(32 * idx + -(_5435 / 2) + 2) + 128]
                    mem[_8178 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_8178 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_8178 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_8178 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_8178 + (6 * ceil32(return_data.size)) + 324] = mem[_8178]
                    s = 0
                    t = _8178 + (6 * ceil32(return_data.size)) + 356
                    u = _8178 + 32
                    while s < mem[_8178]:
                        mem[t] = mem[u + 12 len 20]
                        _8093 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_8178 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_8178 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_9585))
                    call address(_9585).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _8178 + (6 * ceil32(return_data.size)) + (32 * mem[_8178]) + -mem[64] + 352]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10777 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10857 = mem[_10777]
                    require mem[_10777] <= test266151307()
                    require _10777 + return_data.size > _10777 + mem[_10777] + 31
                    _10937 = mem[_10777 + mem[_10777]]
                    require mem[_10777 + mem[_10777]] <= test266151307()
                    require (32 * mem[_10777 + mem[_10777]]) + 32 >= 0 and _10777 + ceil32(return_data.size) + (32 * mem[_10777 + mem[_10777]]) + 32 <= test266151307()
                    mem[64] = _10777 + ceil32(return_data.size) + (32 * mem[_10777 + mem[_10777]]) + 32
                    mem[_10777 + ceil32(return_data.size)] = _10937
                    require return_data.size >= _10857 + (32 * _10937) + 32
                    t = _10777 + _10857 + 32
                    u = _10777 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _10937:
                        mem[u] = mem[t]
                        _8093 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_8178] - 1 < mem[_8178]
                    _12014 = mem[(32 * mem[_8178] - 1) + _8178 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12014))
                    staticcall address(_12014).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12217 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8093 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _8178
                    s = mem[_12217] - ext_call.return_data[0]
                    continue 
                mem[0] = msg.sender
                mem[32] = 1
                if not stor1[msg.sender]:
                    revert with 0, 'Ownable: caller is not the owner'
                require ext_code.size(address(_8574))
                staticcall address(_8574).0x313ce567 with:
                        gas gas_remaining wei
                mem[_8178 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                mem[_8178 + (2 * ceil32(return_data.size)) + 164] = this.address
                mem[_8178 + (2 * ceil32(return_data.size)) + 196] = address(_8591)
                require ext_code.size(address(_8574))
                staticcall address(_8574).0xdd62ed3e with:
                        gas gas_remaining wei
                       args address(this.address), address(_8591)
                mem[_8178 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _8178 + (4 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                    require idx + -(_5435 / 2) + 2 < mem[96]
                    _9213 = mem[(32 * idx + -(_5435 / 2) + 2) + 128]
                    mem[_8178 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_8178 + (4 * ceil32(return_data.size)) + 164] = s
                    mem[_8178 + (4 * ceil32(return_data.size)) + 196] = 0
                    mem[_8178 + (4 * ceil32(return_data.size)) + 228] = 160
                    mem[_8178 + (4 * ceil32(return_data.size)) + 324] = mem[_8178]
                    s = 0
                    t = _8178 + (4 * ceil32(return_data.size)) + 356
                    u = _8178 + 32
                    while s < mem[_8178]:
                        mem[t] = mem[u + 12 len 20]
                        _8093 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_8178 + (4 * ceil32(return_data.size)) + 260] = this.address
                    mem[_8178 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_9213))
                    call address(_9213).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _8178 + (4 * ceil32(return_data.size)) + (32 * mem[_8178]) + -mem[64] + 352]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10778 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10858 = mem[_10778]
                    require mem[_10778] <= test266151307()
                    require _10778 + return_data.size > _10778 + mem[_10778] + 31
                    _10938 = mem[_10778 + mem[_10778]]
                    require mem[_10778 + mem[_10778]] <= test266151307()
                    require (32 * mem[_10778 + mem[_10778]]) + 32 >= 0 and _10778 + ceil32(return_data.size) + (32 * mem[_10778 + mem[_10778]]) + 32 <= test266151307()
                    mem[64] = _10778 + ceil32(return_data.size) + (32 * mem[_10778 + mem[_10778]]) + 32
                    mem[_10778 + ceil32(return_data.size)] = _10938
                    require return_data.size >= _10858 + (32 * _10938) + 32
                    t = _10778 + _10858 + 32
                    u = _10778 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _10938:
                        mem[u] = mem[t]
                        _8093 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_8178] - 1 < mem[_8178]
                    _12016 = mem[(32 * mem[_8178] - 1) + _8178 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12016))
                    staticcall address(_12016).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12218 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8093 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _8178
                    s = mem[_12218] - ext_call.return_data[0]
                    continue 
                mem[_8178 + (4 * ceil32(return_data.size)) + 164] = address(_8591)
                mem[_8178 + (4 * ceil32(return_data.size)) + 196] = -1
                require ext_code.size(address(_8574))
                call address(_8574).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_8591), -1
                mem[_8178 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _8178 + (6 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require idx + -(_5435 / 2) + 2 < mem[96]
                _9638 = mem[(32 * idx + -(_5435 / 2) + 2) + 128]
                mem[_8178 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                mem[_8178 + (6 * ceil32(return_data.size)) + 164] = s
                mem[_8178 + (6 * ceil32(return_data.size)) + 196] = 0
                mem[_8178 + (6 * ceil32(return_data.size)) + 228] = 160
                mem[_8178 + (6 * ceil32(return_data.size)) + 324] = mem[_8178]
                s = 0
                t = _8178 + (6 * ceil32(return_data.size)) + 356
                u = _8178 + 32
                while s < mem[_8178]:
                    mem[t] = mem[u + 12 len 20]
                    _8093 = mem[96]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_8178 + (6 * ceil32(return_data.size)) + 260] = this.address
                mem[_8178 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                require ext_code.size(address(_9638))
                call address(_9638).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _8178 + (6 * ceil32(return_data.size)) + (32 * mem[_8178]) + -mem[64] + 352]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10779 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10859 = mem[_10779]
                require mem[_10779] <= test266151307()
                require _10779 + return_data.size > _10779 + mem[_10779] + 31
                _10939 = mem[_10779 + mem[_10779]]
                require mem[_10779 + mem[_10779]] <= test266151307()
                require (32 * mem[_10779 + mem[_10779]]) + 32 >= 0 and _10779 + ceil32(return_data.size) + (32 * mem[_10779 + mem[_10779]]) + 32 <= test266151307()
                mem[64] = _10779 + ceil32(return_data.size) + (32 * mem[_10779 + mem[_10779]]) + 32
                mem[_10779 + ceil32(return_data.size)] = _10939
                require return_data.size >= _10859 + (32 * _10939) + 32
                t = _10779 + _10859 + 32
                u = _10779 + ceil32(return_data.size) + 32
                s = 0
                while s < _10939:
                    mem[u] = mem[t]
                    _8093 = mem[96]
                    t = t + 32
                    u = u + 32
                    s = s + 1
                    continue 
                require mem[_8178] - 1 < mem[_8178]
                _12018 = mem[(32 * mem[_8178] - 1) + _8178 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_12018))
                staticcall address(_12018).0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12219 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8093 = mem[96]
                idx = idx + 3
                s = ext_call.return_data[0]
                s = _8178
                s = mem[_12219] - ext_call.return_data[0]
                continue 
            require _5435 / 2 < mem[96]
            _8108 = mem[(16 * Mask(251, 1, _5435)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_8108))
            staticcall address(_8108).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8148 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_8148] < _5487 - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
    else:
        mem[0] = msg.sender
        mem[32] = 1
        if not stor1[msg.sender]:
            revert with 0, 'Ownable: caller is not the owner'
        require ('cd', 68).length / 2 <= test266151307()
        mem[(32 * ('cd', 68).length) + 128] = ('cd', 68).length / 2
        mem[64] = (32 * ('cd', 68).length) + (16 * Mask(251, 1, ('cd', 68).length)) + 160
        if not Mask(255, 1, ('cd', 68).length):
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5440 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5459 = mem[_5440]
                require mem[_5440] == mem[_5440 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _5491 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_5491)
                require ext_code.size(address(_5459))
                staticcall address(_5459).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_5491)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5526 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5544 = mem[_5526]
                require mem[_5526] == mem[_5526 + 12 len 20]
                require ext_code.size(mem[_5526 + 12 len 20])
                staticcall mem[_5526 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5669 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _5770 = mem[_5669]
                require mem[_5669] == mem[_5669 + 18 len 14]
                _5851 = mem[_5669 + 32]
                require mem[_5669 + 32] == mem[_5669 + 50 len 14]
                require mem[_5669 + 64] == mem[_5669 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_5669 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_5669 + 50 len 14] / (997 * s) + (1000 * mem[_5669 + 18 len 14])
                        idx = idx + 1
                        s = _5544
                        s = 997 * s * Mask(112, 0, _5851) / (997 * s) + (1000 * Mask(112, 0, _5770))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_5669 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_5669 + 50 len 14] / (997 * s) + (1000 * mem[_5669 + 18 len 14])
                        idx = idx + 1
                        s = _5544
                        s = 997 * s * Mask(112, 0, _5851) / (997 * s) + (1000 * Mask(112, 0, _5770))
                        continue 
                require (997 * s) + (1000 * mem[_5669 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_5669 + 18 len 14] / (997 * s) + (1000 * mem[_5669 + 50 len 14])
                idx = idx + 1
                s = _5544
                s = 997 * s * Mask(112, 0, _5770) / (997 * s) + (1000 * Mask(112, 0, _5851))
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _5438 = mem[96]
            require mem[96] / 2 < mem[96]
            _5456 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_5456))
            staticcall address(_5456).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5472 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5490 = mem[_5472]
            _8094 = mem[96]
            idx = _5438 / 2
            s = 0
            s = 96
            s = cd[4]
            while idx < _8094 - 1:
                require idx + -(_5438 / 2) + 1 < mem[96]
                require idx - (_5438 / 2) < mem[96]
                require idx + -(_5438 / 2) + 1 < mem[96]
                if mem[(32 * idx - (_5438 / 2)) + 140 len 20] != mem[(32 * idx + -(_5438 / 2) + 1) + 140 len 20]:
                    require idx - (_5438 / 2) < mem[96]
                    if mem[(32 * idx - (_5438 / 2)) + 140 len 20] != mem[(32 * idx + -(_5438 / 2) + 1) + 140 len 20]:
                        _8181 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_8181 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_8181]
                        mem[_8181 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_8181]
                        mem[_8181 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_8181] - 1 < mem[_8181]
                        mem[_8181 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_8181] - 1) + _8181 + 44 len 20])
                        staticcall mem[(32 * mem[_8181] - 1) + _8181 + 44 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_8181 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8181 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_8181]
                        _8508 = mem[_8181 + 32]
                        require idx - (_5438 / 2) < mem[96]
                        _8524 = mem[(32 * idx - (_5438 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_8181 + 44 len 20])
                            staticcall mem[_8181 + 44 len 20].0x313ce567 with:
                                    gas gas_remaining wei
                            mem[_8181 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_8181 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_8181 + (2 * ceil32(return_data.size)) + 132] = address(_8524)
                            require ext_code.size(mem[_8181 + 44 len 20])
                            staticcall mem[_8181 + 44 len 20].0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_8524)
                            mem[_8181 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _8181 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_5438 / 2) < mem[96]
                                _8984 = mem[(32 * idx - (_5438 / 2)) + 128]
                                mem[_8181 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_8181 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_8181 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_8181 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_8181 + (4 * ceil32(return_data.size)) + 260] = mem[_8181]
                                t = 0
                                u = _8181 + (4 * ceil32(return_data.size)) + 292
                                v = _8181 + 32
                                while t < mem[_8181]:
                                    mem[u] = mem[v + 12 len 20]
                                    _8094 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_8181 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_8181 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_8984))
                                call address(_8984).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8181 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_8181]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_8181 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _8181 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _10860 = mem[_8181 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_8181 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _8181 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _8181 + (4 * ceil32(return_data.size)) + mem[_8181 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _10940 = mem[_8181 + (4 * ceil32(return_data.size)) + mem[_8181 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_8181 + (4 * ceil32(return_data.size)) + mem[_8181 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_8181 + (4 * ceil32(return_data.size)) + mem[_8181 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _8181 + (6 * ceil32(return_data.size)) + (32 * mem[_8181 + (4 * ceil32(return_data.size)) + mem[_8181 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _8181 + (6 * ceil32(return_data.size)) + (32 * mem[_8181 + (4 * ceil32(return_data.size)) + mem[_8181 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_8181 + (6 * ceil32(return_data.size)) + 96] = _10940
                                require return_data.size >= _10860 + (32 * _10940) + 32
                                t = _8181 + (4 * ceil32(return_data.size)) + _10860 + 128
                                u = _8181 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _10940:
                                    mem[u] = mem[t]
                                    _8094 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_8181] - 1 < mem[_8181]
                                _12020 = mem[(32 * mem[_8181] - 1) + _8181 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_12020))
                                staticcall address(_12020).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12220 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _8094 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _8181
                                s = mem[_12220] - ext_call.return_data[0]
                                continue 
                            mem[_8181 + (4 * ceil32(return_data.size)) + 100] = address(_8524)
                            mem[_8181 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_8508))
                            call address(_8508).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_8524), -1
                            mem[_8181 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _8181 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_5438 / 2) < mem[96]
                            _9423 = mem[(32 * idx - (_5438 / 2)) + 128]
                            mem[_8181 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8181 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_8181 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_8181 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_8181 + (6 * ceil32(return_data.size)) + 260] = mem[_8181]
                            t = 0
                            u = _8181 + (6 * ceil32(return_data.size)) + 292
                            v = _8181 + 32
                            while t < mem[_8181]:
                                mem[u] = mem[v + 12 len 20]
                                _8094 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_8181 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_8181 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_9423))
                            call address(_9423).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8181 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_8181]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_8181 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _8181 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _10861 = mem[_8181 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_8181 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _8181 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _8181 + (6 * ceil32(return_data.size)) + mem[_8181 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _10941 = mem[_8181 + (6 * ceil32(return_data.size)) + mem[_8181 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_8181 + (6 * ceil32(return_data.size)) + mem[_8181 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_8181 + (6 * ceil32(return_data.size)) + mem[_8181 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _8181 + (7 * ceil32(return_data.size)) + (32 * mem[_8181 + (6 * ceil32(return_data.size)) + mem[_8181 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _8181 + (7 * ceil32(return_data.size)) + (32 * mem[_8181 + (6 * ceil32(return_data.size)) + mem[_8181 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_8181 + (7 * ceil32(return_data.size)) + 96] = mem[_8181 + (6 * ceil32(return_data.size)) + mem[_8181 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require return_data.size >= _10861 + (32 * _10941) + 32
                            t = _8181 + (6 * ceil32(return_data.size)) + _10861 + 128
                            u = _8181 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _10941:
                                mem[u] = mem[t]
                                _8094 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8181] - 1 < mem[_8181]
                            _12022 = mem[(32 * mem[_8181] - 1) + _8181 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12022))
                            staticcall address(_12022).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12221 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8094 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _8181
                            s = mem[_12221] - ext_call.return_data[0]
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 1
                        if not stor1[msg.sender]:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(address(_8508))
                        staticcall address(_8508).0x313ce567 with:
                                gas gas_remaining wei
                        mem[_8181 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_8181 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_8181 + (2 * ceil32(return_data.size)) + 132] = address(_8524)
                        require ext_code.size(address(_8508))
                        staticcall address(_8508).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(_8524)
                        mem[_8181 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8181 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_5438 / 2) < mem[96]
                            _9019 = mem[(32 * idx - (_5438 / 2)) + 128]
                            mem[_8181 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8181 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_8181 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_8181 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_8181 + (4 * ceil32(return_data.size)) + 260] = mem[_8181]
                            t = 0
                            u = _8181 + (4 * ceil32(return_data.size)) + 292
                            v = _8181 + 32
                            while t < mem[_8181]:
                                mem[u] = mem[v + 12 len 20]
                                _8094 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_8181 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_8181 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_9019))
                            call address(_9019).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8181 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_8181]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_8181 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _8181 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _10862 = mem[_8181 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_8181 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _8181 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _8181 + (4 * ceil32(return_data.size)) + mem[_8181 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _10942 = mem[_8181 + (4 * ceil32(return_data.size)) + mem[_8181 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_8181 + (4 * ceil32(return_data.size)) + mem[_8181 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_8181 + (4 * ceil32(return_data.size)) + mem[_8181 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _8181 + (6 * ceil32(return_data.size)) + (32 * mem[_8181 + (4 * ceil32(return_data.size)) + mem[_8181 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _8181 + (6 * ceil32(return_data.size)) + (32 * mem[_8181 + (4 * ceil32(return_data.size)) + mem[_8181 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_8181 + (6 * ceil32(return_data.size)) + 96] = _10942
                            require return_data.size >= _10862 + (32 * _10942) + 32
                            t = _8181 + (4 * ceil32(return_data.size)) + _10862 + 128
                            u = _8181 + (6 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _10942:
                                mem[u] = mem[t]
                                _8094 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8181] - 1 < mem[_8181]
                            _12024 = mem[(32 * mem[_8181] - 1) + _8181 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12024))
                            staticcall address(_12024).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12222 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8094 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _8181
                            s = mem[_12222] - ext_call.return_data[0]
                            continue 
                        mem[_8181 + (4 * ceil32(return_data.size)) + 100] = address(_8524)
                        mem[_8181 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_8508))
                        call address(_8508).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_8524), -1
                        mem[_8181 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8181 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_5438 / 2) < mem[96]
                        _9460 = mem[(32 * idx - (_5438 / 2)) + 128]
                        mem[_8181 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8181 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_8181 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_8181 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_8181 + (6 * ceil32(return_data.size)) + 260] = mem[_8181]
                        t = 0
                        u = _8181 + (6 * ceil32(return_data.size)) + 292
                        v = _8181 + 32
                        while t < mem[_8181]:
                            mem[u] = mem[v + 12 len 20]
                            _8094 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8181 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_8181 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_9460))
                        call address(_9460).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8181 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_8181]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8181 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8181 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _10863 = mem[_8181 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                        require mem[_8181 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8181 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _8181 + (6 * ceil32(return_data.size)) + mem[_8181 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                        _10943 = mem[_8181 + (6 * ceil32(return_data.size)) + mem[_8181 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require mem[_8181 + (6 * ceil32(return_data.size)) + mem[_8181 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                        require (32 * mem[_8181 + (6 * ceil32(return_data.size)) + mem[_8181 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _8181 + (7 * ceil32(return_data.size)) + (32 * mem[_8181 + (6 * ceil32(return_data.size)) + mem[_8181 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                        mem[64] = _8181 + (7 * ceil32(return_data.size)) + (32 * mem[_8181 + (6 * ceil32(return_data.size)) + mem[_8181 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                        mem[_8181 + (7 * ceil32(return_data.size)) + 96] = mem[_8181 + (6 * ceil32(return_data.size)) + mem[_8181 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require return_data.size >= _10863 + (32 * _10943) + 32
                        t = _8181 + (6 * ceil32(return_data.size)) + _10863 + 128
                        u = _8181 + (7 * ceil32(return_data.size)) + 128
                        s = 0
                        while s < _10943:
                            mem[u] = mem[t]
                            _8094 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8181] - 1 < mem[_8181]
                        _12026 = mem[(32 * mem[_8181] - 1) + _8181 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12026))
                        staticcall address(_12026).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12223 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8094 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _8181
                        s = mem[_12223] - ext_call.return_data[0]
                        continue 
                    _8183 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_8183 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_8183]
                    mem[_8183 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_8183]
                    mem[_8183 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_8183]
                    mem[_8183 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_8183] - 1 < mem[_8183]
                    mem[_8183 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_8183] - 1) + _8183 + 44 len 20])
                    staticcall mem[(32 * mem[_8183] - 1) + _8183 + 44 len 20].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_8183 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8183 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_8183]
                    _8540 = mem[_8183 + 32]
                    require idx + -(_5438 / 2) + 1 < mem[96]
                    _8558 = mem[(32 * idx + -(_5438 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_8183 + 44 len 20])
                        staticcall mem[_8183 + 44 len 20].0x313ce567 with:
                                gas gas_remaining wei
                        mem[_8183 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_8183 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_8183 + (2 * ceil32(return_data.size)) + 164] = address(_8558)
                        require ext_code.size(mem[_8183 + 44 len 20])
                        staticcall mem[_8183 + 44 len 20].0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(_8558)
                        mem[_8183 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8183 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_5438 / 2) + 1 < mem[96]
                            _9058 = mem[(32 * idx + -(_5438 / 2) + 1) + 128]
                            mem[_8183 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8183 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_8183 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_8183 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_8183 + (4 * ceil32(return_data.size)) + 292] = mem[_8183]
                            t = 0
                            u = _8183 + (4 * ceil32(return_data.size)) + 324
                            v = _8183 + 32
                            while t < mem[_8183]:
                                mem[u] = mem[v + 12 len 20]
                                _8094 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_8183 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_8183 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_9058))
                            call address(_9058).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8183 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_8183]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_8183 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _8183 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _10864 = mem[_8183 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_8183 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _8183 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _8183 + (4 * ceil32(return_data.size)) + mem[_8183 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _10944 = mem[_8183 + (4 * ceil32(return_data.size)) + mem[_8183 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_8183 + (4 * ceil32(return_data.size)) + mem[_8183 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_8183 + (4 * ceil32(return_data.size)) + mem[_8183 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8183 + (6 * ceil32(return_data.size)) + (32 * mem[_8183 + (4 * ceil32(return_data.size)) + mem[_8183 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _8183 + (6 * ceil32(return_data.size)) + (32 * mem[_8183 + (4 * ceil32(return_data.size)) + mem[_8183 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_8183 + (6 * ceil32(return_data.size)) + 128] = _10944
                            require return_data.size >= _10864 + (32 * _10944) + 32
                            t = _8183 + (4 * ceil32(return_data.size)) + _10864 + 160
                            u = _8183 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _10944:
                                mem[u] = mem[t]
                                _8094 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8183] - 1 < mem[_8183]
                            _12028 = mem[(32 * mem[_8183] - 1) + _8183 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12028))
                            staticcall address(_12028).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12224 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8094 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _8183
                            s = mem[_12224] - ext_call.return_data[0]
                            continue 
                        mem[_8183 + (4 * ceil32(return_data.size)) + 132] = address(_8558)
                        mem[_8183 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_8540))
                        call address(_8540).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_8558), -1
                        mem[_8183 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8183 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_5438 / 2) + 1 < mem[96]
                        _9496 = mem[(32 * idx + -(_5438 / 2) + 1) + 128]
                        mem[_8183 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8183 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_8183 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_8183 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_8183 + (6 * ceil32(return_data.size)) + 292] = mem[_8183]
                        t = 0
                        u = _8183 + (6 * ceil32(return_data.size)) + 324
                        v = _8183 + 32
                        while t < mem[_8183]:
                            mem[u] = mem[v + 12 len 20]
                            _8094 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8183 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_8183 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_9496))
                        call address(_9496).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8183 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_8183]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8183 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8183 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _10865 = mem[_8183 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_8183 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8183 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _8183 + (6 * ceil32(return_data.size)) + mem[_8183 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _10945 = mem[_8183 + (6 * ceil32(return_data.size)) + mem[_8183 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_8183 + (6 * ceil32(return_data.size)) + mem[_8183 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_8183 + (6 * ceil32(return_data.size)) + mem[_8183 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8183 + (7 * ceil32(return_data.size)) + (32 * mem[_8183 + (6 * ceil32(return_data.size)) + mem[_8183 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _8183 + (7 * ceil32(return_data.size)) + (32 * mem[_8183 + (6 * ceil32(return_data.size)) + mem[_8183 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_8183 + (7 * ceil32(return_data.size)) + 128] = _10945
                        require return_data.size >= _10865 + (32 * _10945) + 32
                        t = _8183 + (6 * ceil32(return_data.size)) + _10865 + 160
                        u = _8183 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _10945:
                            mem[u] = mem[t]
                            _8094 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8183] - 1 < mem[_8183]
                        _12030 = mem[(32 * mem[_8183] - 1) + _8183 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12030))
                        staticcall address(_12030).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12225 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8094 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _8183
                        s = mem[_12225] - ext_call.return_data[0]
                        continue 
                    mem[0] = msg.sender
                    mem[32] = 1
                    if not stor1[msg.sender]:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(address(_8540))
                    staticcall address(_8540).0x313ce567 with:
                            gas gas_remaining wei
                    mem[_8183 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_8183 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_8183 + (2 * ceil32(return_data.size)) + 164] = address(_8558)
                    require ext_code.size(address(_8540))
                    staticcall address(_8540).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(_8558)
                    mem[_8183 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8183 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_5438 / 2) + 1 < mem[96]
                        _9105 = mem[(32 * idx + -(_5438 / 2) + 1) + 128]
                        mem[_8183 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8183 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_8183 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_8183 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_8183 + (4 * ceil32(return_data.size)) + 292] = mem[_8183]
                        t = 0
                        u = _8183 + (4 * ceil32(return_data.size)) + 324
                        v = _8183 + 32
                        while t < mem[_8183]:
                            mem[u] = mem[v + 12 len 20]
                            _8094 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8183 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_8183 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_9105))
                        call address(_9105).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8183 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_8183]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8183 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8183 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _10866 = mem[_8183 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_8183 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8183 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _8183 + (4 * ceil32(return_data.size)) + mem[_8183 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _10946 = mem[_8183 + (4 * ceil32(return_data.size)) + mem[_8183 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_8183 + (4 * ceil32(return_data.size)) + mem[_8183 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_8183 + (4 * ceil32(return_data.size)) + mem[_8183 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8183 + (6 * ceil32(return_data.size)) + (32 * mem[_8183 + (4 * ceil32(return_data.size)) + mem[_8183 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _8183 + (6 * ceil32(return_data.size)) + (32 * mem[_8183 + (4 * ceil32(return_data.size)) + mem[_8183 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_8183 + (6 * ceil32(return_data.size)) + 128] = _10946
                        require return_data.size >= _10866 + (32 * _10946) + 32
                        t = _8183 + (4 * ceil32(return_data.size)) + _10866 + 160
                        u = _8183 + (6 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _10946:
                            mem[u] = mem[t]
                            _8094 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8183] - 1 < mem[_8183]
                        _12032 = mem[(32 * mem[_8183] - 1) + _8183 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12032))
                        staticcall address(_12032).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12226 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8094 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _8183
                        s = mem[_12226] - ext_call.return_data[0]
                        continue 
                    mem[_8183 + (4 * ceil32(return_data.size)) + 132] = address(_8558)
                    mem[_8183 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_8540))
                    call address(_8540).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_8558), -1
                    mem[_8183 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8183 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_5438 / 2) + 1 < mem[96]
                    _9539 = mem[(32 * idx + -(_5438 / 2) + 1) + 128]
                    mem[_8183 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_8183 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_8183 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_8183 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_8183 + (6 * ceil32(return_data.size)) + 292] = mem[_8183]
                    t = 0
                    u = _8183 + (6 * ceil32(return_data.size)) + 324
                    v = _8183 + 32
                    while t < mem[_8183]:
                        mem[u] = mem[v + 12 len 20]
                        _8094 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_8183 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_8183 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_9539))
                    call address(_9539).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8183 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_8183]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_8183 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _8183 + (7 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    _10867 = mem[_8183 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                    require mem[_8183 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _8183 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _8183 + (6 * ceil32(return_data.size)) + mem[_8183 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                    _10947 = mem[_8183 + (6 * ceil32(return_data.size)) + mem[_8183 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                    require mem[_8183 + (6 * ceil32(return_data.size)) + mem[_8183 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                    require (32 * mem[_8183 + (6 * ceil32(return_data.size)) + mem[_8183 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8183 + (7 * ceil32(return_data.size)) + (32 * mem[_8183 + (6 * ceil32(return_data.size)) + mem[_8183 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                    mem[64] = _8183 + (7 * ceil32(return_data.size)) + (32 * mem[_8183 + (6 * ceil32(return_data.size)) + mem[_8183 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                    mem[_8183 + (7 * ceil32(return_data.size)) + 128] = _10947
                    require return_data.size >= _10867 + (32 * _10947) + 32
                    t = _8183 + (6 * ceil32(return_data.size)) + _10867 + 160
                    u = _8183 + (7 * ceil32(return_data.size)) + 160
                    s = 0
                    while s < _10947:
                        mem[u] = mem[t]
                        _8094 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_8183] - 1 < mem[_8183]
                    _12034 = mem[(32 * mem[_8183] - 1) + _8183 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12034))
                    staticcall address(_12034).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12227 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8094 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _8183
                    s = mem[_12227] - ext_call.return_data[0]
                    continue 
                require idx + -(_5438 / 2) + 2 < mem[96]
                if mem[(32 * idx + -(_5438 / 2) + 2) + 140 len 20] != mem[(32 * idx + -(_5438 / 2) + 1) + 140 len 20]:
                    require idx + -(_5438 / 2) + 1 < mem[96]
                    require idx - (_5438 / 2) < mem[96]
                    if mem[(32 * idx - (_5438 / 2)) + 140 len 20] != mem[(32 * idx + -(_5438 / 2) + 1) + 140 len 20]:
                        _8272 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_8272 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_8272]
                        mem[_8272 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_8272]
                        mem[_8272 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_8272] - 1 < mem[_8272]
                        mem[_8272 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_8272] - 1) + _8272 + 44 len 20])
                        staticcall mem[(32 * mem[_8272] - 1) + _8272 + 44 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_8272 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8272 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_8272]
                        _8559 = mem[_8272 + 32]
                        require idx - (_5438 / 2) < mem[96]
                        _8576 = mem[(32 * idx - (_5438 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_8272 + 44 len 20])
                            staticcall mem[_8272 + 44 len 20].0x313ce567 with:
                                    gas gas_remaining wei
                            mem[_8272 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_8272 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_8272 + (2 * ceil32(return_data.size)) + 132] = address(_8576)
                            require ext_code.size(mem[_8272 + 44 len 20])
                            staticcall mem[_8272 + 44 len 20].0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_8576)
                            mem[_8272 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _8272 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_5438 / 2) < mem[96]
                                _9108 = mem[(32 * idx - (_5438 / 2)) + 128]
                                mem[_8272 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_8272 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_8272 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_8272 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_8272 + (4 * ceil32(return_data.size)) + 260] = mem[_8272]
                                t = 0
                                u = _8272 + (4 * ceil32(return_data.size)) + 292
                                v = _8272 + 32
                                while t < mem[_8272]:
                                    mem[u] = mem[v + 12 len 20]
                                    _8094 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_8272 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_8272 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_9108))
                                call address(_9108).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8272 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_8272]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_8272 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _8272 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _10868 = mem[_8272 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_8272 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _8272 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _8272 + (4 * ceil32(return_data.size)) + mem[_8272 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _10948 = mem[_8272 + (4 * ceil32(return_data.size)) + mem[_8272 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_8272 + (4 * ceil32(return_data.size)) + mem[_8272 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_8272 + (4 * ceil32(return_data.size)) + mem[_8272 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _8272 + (6 * ceil32(return_data.size)) + (32 * mem[_8272 + (4 * ceil32(return_data.size)) + mem[_8272 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _8272 + (6 * ceil32(return_data.size)) + (32 * mem[_8272 + (4 * ceil32(return_data.size)) + mem[_8272 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_8272 + (6 * ceil32(return_data.size)) + 96] = _10948
                                require return_data.size >= _10868 + (32 * _10948) + 32
                                t = _8272 + (4 * ceil32(return_data.size)) + _10868 + 128
                                u = _8272 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _10948:
                                    mem[u] = mem[t]
                                    _8094 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_8272] - 1 < mem[_8272]
                                _12036 = mem[(32 * mem[_8272] - 1) + _8272 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_12036))
                                staticcall address(_12036).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12228 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _8094 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _8272
                                s = mem[_12228] - ext_call.return_data[0]
                                continue 
                            mem[_8272 + (4 * ceil32(return_data.size)) + 100] = address(_8576)
                            mem[_8272 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_8559))
                            call address(_8559).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_8576), -1
                            mem[_8272 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _8272 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_5438 / 2) < mem[96]
                            _9542 = mem[(32 * idx - (_5438 / 2)) + 128]
                            mem[_8272 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8272 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_8272 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_8272 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_8272 + (6 * ceil32(return_data.size)) + 260] = mem[_8272]
                            t = 0
                            u = _8272 + (6 * ceil32(return_data.size)) + 292
                            v = _8272 + 32
                            while t < mem[_8272]:
                                mem[u] = mem[v + 12 len 20]
                                _8094 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_8272 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_8272 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_9542))
                            call address(_9542).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8272 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_8272]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_8272 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _8272 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _10869 = mem[_8272 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_8272 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _8272 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _8272 + (6 * ceil32(return_data.size)) + mem[_8272 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _10949 = mem[_8272 + (6 * ceil32(return_data.size)) + mem[_8272 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_8272 + (6 * ceil32(return_data.size)) + mem[_8272 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_8272 + (6 * ceil32(return_data.size)) + mem[_8272 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _8272 + (7 * ceil32(return_data.size)) + (32 * mem[_8272 + (6 * ceil32(return_data.size)) + mem[_8272 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _8272 + (7 * ceil32(return_data.size)) + (32 * mem[_8272 + (6 * ceil32(return_data.size)) + mem[_8272 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_8272 + (7 * ceil32(return_data.size)) + 96] = mem[_8272 + (6 * ceil32(return_data.size)) + mem[_8272 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require return_data.size >= _10869 + (32 * _10949) + 32
                            t = _8272 + (6 * ceil32(return_data.size)) + _10869 + 128
                            u = _8272 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _10949:
                                mem[u] = mem[t]
                                _8094 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8272] - 1 < mem[_8272]
                            _12038 = mem[(32 * mem[_8272] - 1) + _8272 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12038))
                            staticcall address(_12038).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12229 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8094 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _8272
                            s = mem[_12229] - ext_call.return_data[0]
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 1
                        if not stor1[msg.sender]:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(address(_8559))
                        staticcall address(_8559).0x313ce567 with:
                                gas gas_remaining wei
                        mem[_8272 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_8272 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_8272 + (2 * ceil32(return_data.size)) + 132] = address(_8576)
                        require ext_code.size(address(_8559))
                        staticcall address(_8559).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(_8576)
                        mem[_8272 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8272 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_5438 / 2) < mem[96]
                            _9164 = mem[(32 * idx - (_5438 / 2)) + 128]
                            mem[_8272 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8272 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_8272 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_8272 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_8272 + (4 * ceil32(return_data.size)) + 260] = mem[_8272]
                            t = 0
                            u = _8272 + (4 * ceil32(return_data.size)) + 292
                            v = _8272 + 32
                            while t < mem[_8272]:
                                mem[u] = mem[v + 12 len 20]
                                _8094 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_8272 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_8272 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_9164))
                            call address(_9164).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8272 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_8272]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_8272 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _8272 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _10870 = mem[_8272 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_8272 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _8272 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _8272 + (4 * ceil32(return_data.size)) + mem[_8272 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _10950 = mem[_8272 + (4 * ceil32(return_data.size)) + mem[_8272 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_8272 + (4 * ceil32(return_data.size)) + mem[_8272 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_8272 + (4 * ceil32(return_data.size)) + mem[_8272 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _8272 + (6 * ceil32(return_data.size)) + (32 * mem[_8272 + (4 * ceil32(return_data.size)) + mem[_8272 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _8272 + (6 * ceil32(return_data.size)) + (32 * mem[_8272 + (4 * ceil32(return_data.size)) + mem[_8272 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_8272 + (6 * ceil32(return_data.size)) + 96] = _10950
                            require return_data.size >= _10870 + (32 * _10950) + 32
                            t = _8272 + (4 * ceil32(return_data.size)) + _10870 + 128
                            u = _8272 + (6 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _10950:
                                mem[u] = mem[t]
                                _8094 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8272] - 1 < mem[_8272]
                            _12040 = mem[(32 * mem[_8272] - 1) + _8272 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12040))
                            staticcall address(_12040).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12230 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8094 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _8272
                            s = mem[_12230] - ext_call.return_data[0]
                            continue 
                        mem[_8272 + (4 * ceil32(return_data.size)) + 100] = address(_8576)
                        mem[_8272 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_8559))
                        call address(_8559).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_8576), -1
                        mem[_8272 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8272 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_5438 / 2) < mem[96]
                        _9594 = mem[(32 * idx - (_5438 / 2)) + 128]
                        mem[_8272 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8272 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_8272 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_8272 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_8272 + (6 * ceil32(return_data.size)) + 260] = mem[_8272]
                        t = 0
                        u = _8272 + (6 * ceil32(return_data.size)) + 292
                        v = _8272 + 32
                        while t < mem[_8272]:
                            mem[u] = mem[v + 12 len 20]
                            _8094 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8272 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_8272 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_9594))
                        call address(_9594).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8272 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_8272]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8272 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8272 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _10871 = mem[_8272 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                        require mem[_8272 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8272 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _8272 + (6 * ceil32(return_data.size)) + mem[_8272 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                        _10951 = mem[_8272 + (6 * ceil32(return_data.size)) + mem[_8272 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require mem[_8272 + (6 * ceil32(return_data.size)) + mem[_8272 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                        require (32 * mem[_8272 + (6 * ceil32(return_data.size)) + mem[_8272 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _8272 + (7 * ceil32(return_data.size)) + (32 * mem[_8272 + (6 * ceil32(return_data.size)) + mem[_8272 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                        mem[64] = _8272 + (7 * ceil32(return_data.size)) + (32 * mem[_8272 + (6 * ceil32(return_data.size)) + mem[_8272 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                        mem[_8272 + (7 * ceil32(return_data.size)) + 96] = mem[_8272 + (6 * ceil32(return_data.size)) + mem[_8272 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require return_data.size >= _10871 + (32 * _10951) + 32
                        t = _8272 + (6 * ceil32(return_data.size)) + _10871 + 128
                        u = _8272 + (7 * ceil32(return_data.size)) + 128
                        s = 0
                        while s < _10951:
                            mem[u] = mem[t]
                            _8094 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8272] - 1 < mem[_8272]
                        _12042 = mem[(32 * mem[_8272] - 1) + _8272 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12042))
                        staticcall address(_12042).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12231 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8094 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _8272
                        s = mem[_12231] - ext_call.return_data[0]
                        continue 
                    _8274 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_8274 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_8274]
                    mem[_8274 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_8274]
                    mem[_8274 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_8274]
                    mem[_8274 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_8274] - 1 < mem[_8274]
                    mem[_8274 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_8274] - 1) + _8274 + 44 len 20])
                    staticcall mem[(32 * mem[_8274] - 1) + _8274 + 44 len 20].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_8274 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8274 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_8274]
                    _8593 = mem[_8274 + 32]
                    require idx + -(_5438 / 2) + 1 < mem[96]
                    _8608 = mem[(32 * idx + -(_5438 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_8274 + 44 len 20])
                        staticcall mem[_8274 + 44 len 20].0x313ce567 with:
                                gas gas_remaining wei
                        mem[_8274 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_8274 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_8274 + (2 * ceil32(return_data.size)) + 164] = address(_8608)
                        require ext_code.size(mem[_8274 + 44 len 20])
                        staticcall mem[_8274 + 44 len 20].0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(_8608)
                        mem[_8274 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8274 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_5438 / 2) + 1 < mem[96]
                            _9222 = mem[(32 * idx + -(_5438 / 2) + 1) + 128]
                            mem[_8274 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8274 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_8274 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_8274 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_8274 + (4 * ceil32(return_data.size)) + 292] = mem[_8274]
                            t = 0
                            u = _8274 + (4 * ceil32(return_data.size)) + 324
                            v = _8274 + 32
                            while t < mem[_8274]:
                                mem[u] = mem[v + 12 len 20]
                                _8094 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_8274 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_8274 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_9222))
                            call address(_9222).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8274 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_8274]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_8274 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _8274 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _10872 = mem[_8274 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_8274 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _8274 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _8274 + (4 * ceil32(return_data.size)) + mem[_8274 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _10952 = mem[_8274 + (4 * ceil32(return_data.size)) + mem[_8274 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_8274 + (4 * ceil32(return_data.size)) + mem[_8274 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_8274 + (4 * ceil32(return_data.size)) + mem[_8274 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8274 + (6 * ceil32(return_data.size)) + (32 * mem[_8274 + (4 * ceil32(return_data.size)) + mem[_8274 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _8274 + (6 * ceil32(return_data.size)) + (32 * mem[_8274 + (4 * ceil32(return_data.size)) + mem[_8274 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_8274 + (6 * ceil32(return_data.size)) + 128] = _10952
                            require return_data.size >= _10872 + (32 * _10952) + 32
                            t = _8274 + (4 * ceil32(return_data.size)) + _10872 + 160
                            u = _8274 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _10952:
                                mem[u] = mem[t]
                                _8094 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8274] - 1 < mem[_8274]
                            _12044 = mem[(32 * mem[_8274] - 1) + _8274 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12044))
                            staticcall address(_12044).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12232 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8094 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _8274
                            s = mem[_12232] - ext_call.return_data[0]
                            continue 
                        mem[_8274 + (4 * ceil32(return_data.size)) + 132] = address(_8608)
                        mem[_8274 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_8593))
                        call address(_8593).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_8608), -1
                        mem[_8274 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8274 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_5438 / 2) + 1 < mem[96]
                        _9645 = mem[(32 * idx + -(_5438 / 2) + 1) + 128]
                        mem[_8274 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8274 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_8274 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_8274 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_8274 + (6 * ceil32(return_data.size)) + 292] = mem[_8274]
                        t = 0
                        u = _8274 + (6 * ceil32(return_data.size)) + 324
                        v = _8274 + 32
                        while t < mem[_8274]:
                            mem[u] = mem[v + 12 len 20]
                            _8094 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8274 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_8274 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_9645))
                        call address(_9645).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8274 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_8274]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8274 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8274 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _10873 = mem[_8274 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_8274 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8274 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _8274 + (6 * ceil32(return_data.size)) + mem[_8274 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _10953 = mem[_8274 + (6 * ceil32(return_data.size)) + mem[_8274 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_8274 + (6 * ceil32(return_data.size)) + mem[_8274 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_8274 + (6 * ceil32(return_data.size)) + mem[_8274 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8274 + (7 * ceil32(return_data.size)) + (32 * mem[_8274 + (6 * ceil32(return_data.size)) + mem[_8274 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _8274 + (7 * ceil32(return_data.size)) + (32 * mem[_8274 + (6 * ceil32(return_data.size)) + mem[_8274 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_8274 + (7 * ceil32(return_data.size)) + 128] = _10953
                        require return_data.size >= _10873 + (32 * _10953) + 32
                        t = _8274 + (6 * ceil32(return_data.size)) + _10873 + 160
                        u = _8274 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _10953:
                            mem[u] = mem[t]
                            _8094 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8274] - 1 < mem[_8274]
                        _12046 = mem[(32 * mem[_8274] - 1) + _8274 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12046))
                        staticcall address(_12046).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12233 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8094 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _8274
                        s = mem[_12233] - ext_call.return_data[0]
                        continue 
                    mem[0] = msg.sender
                    mem[32] = 1
                    if not stor1[msg.sender]:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(address(_8593))
                    staticcall address(_8593).0x313ce567 with:
                            gas gas_remaining wei
                    mem[_8274 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_8274 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_8274 + (2 * ceil32(return_data.size)) + 164] = address(_8608)
                    require ext_code.size(address(_8593))
                    staticcall address(_8593).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(_8608)
                    mem[_8274 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8274 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_5438 / 2) + 1 < mem[96]
                        _9275 = mem[(32 * idx + -(_5438 / 2) + 1) + 128]
                        mem[_8274 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8274 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_8274 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_8274 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_8274 + (4 * ceil32(return_data.size)) + 292] = mem[_8274]
                        t = 0
                        u = _8274 + (4 * ceil32(return_data.size)) + 324
                        v = _8274 + 32
                        while t < mem[_8274]:
                            mem[u] = mem[v + 12 len 20]
                            _8094 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8274 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_8274 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_9275))
                        call address(_9275).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8274 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_8274]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8274 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8274 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _10874 = mem[_8274 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_8274 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8274 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _8274 + (4 * ceil32(return_data.size)) + mem[_8274 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _10954 = mem[_8274 + (4 * ceil32(return_data.size)) + mem[_8274 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_8274 + (4 * ceil32(return_data.size)) + mem[_8274 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_8274 + (4 * ceil32(return_data.size)) + mem[_8274 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8274 + (6 * ceil32(return_data.size)) + (32 * mem[_8274 + (4 * ceil32(return_data.size)) + mem[_8274 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _8274 + (6 * ceil32(return_data.size)) + (32 * mem[_8274 + (4 * ceil32(return_data.size)) + mem[_8274 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_8274 + (6 * ceil32(return_data.size)) + 128] = _10954
                        require return_data.size >= _10874 + (32 * _10954) + 32
                        t = _8274 + (4 * ceil32(return_data.size)) + _10874 + 160
                        u = _8274 + (6 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _10954:
                            mem[u] = mem[t]
                            _8094 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8274] - 1 < mem[_8274]
                        _12048 = mem[(32 * mem[_8274] - 1) + _8274 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12048))
                        staticcall address(_12048).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12234 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8094 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _8274
                        s = mem[_12234] - ext_call.return_data[0]
                        continue 
                    mem[_8274 + (4 * ceil32(return_data.size)) + 132] = address(_8608)
                    mem[_8274 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_8593))
                    call address(_8593).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_8608), -1
                    mem[_8274 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8274 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_5438 / 2) + 1 < mem[96]
                    _9691 = mem[(32 * idx + -(_5438 / 2) + 1) + 128]
                    mem[_8274 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_8274 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_8274 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_8274 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_8274 + (6 * ceil32(return_data.size)) + 292] = mem[_8274]
                    t = 0
                    u = _8274 + (6 * ceil32(return_data.size)) + 324
                    v = _8274 + 32
                    while t < mem[_8274]:
                        mem[u] = mem[v + 12 len 20]
                        _8094 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_8274 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_8274 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_9691))
                    call address(_9691).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8274 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_8274]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_8274 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _8274 + (7 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    _10875 = mem[_8274 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                    require mem[_8274 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _8274 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _8274 + (6 * ceil32(return_data.size)) + mem[_8274 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                    _10955 = mem[_8274 + (6 * ceil32(return_data.size)) + mem[_8274 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                    require mem[_8274 + (6 * ceil32(return_data.size)) + mem[_8274 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                    require (32 * mem[_8274 + (6 * ceil32(return_data.size)) + mem[_8274 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8274 + (7 * ceil32(return_data.size)) + (32 * mem[_8274 + (6 * ceil32(return_data.size)) + mem[_8274 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                    mem[64] = _8274 + (7 * ceil32(return_data.size)) + (32 * mem[_8274 + (6 * ceil32(return_data.size)) + mem[_8274 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                    mem[_8274 + (7 * ceil32(return_data.size)) + 128] = _10955
                    require return_data.size >= _10875 + (32 * _10955) + 32
                    t = _8274 + (6 * ceil32(return_data.size)) + _10875 + 160
                    u = _8274 + (7 * ceil32(return_data.size)) + 160
                    s = 0
                    while s < _10955:
                        mem[u] = mem[t]
                        _8094 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_8274] - 1 < mem[_8274]
                    _12050 = mem[(32 * mem[_8274] - 1) + _8274 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12050))
                    staticcall address(_12050).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12235 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8094 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _8274
                    s = mem[_12235] - ext_call.return_data[0]
                    continue 
                _8186 = mem[64]
                mem[mem[64]] = 4
                mem[64] = mem[64] + 160
                mem[_8186 + 32 len 128] = call.data[calldata.size len 128]
                require idx < mem[96]
                require 0 < mem[_8186]
                mem[_8186 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_8186]
                mem[_8186 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx + 2 < mem[96]
                require 2 < mem[_8186]
                mem[_8186 + 96] = mem[(32 * idx + 2) + 140 len 20]
                require idx + 3 < mem[96]
                require 3 < mem[_8186]
                mem[_8186 + 128] = mem[(32 * idx + 3) + 140 len 20]
                require mem[_8186] - 1 < mem[_8186]
                mem[_8186 + 164] = this.address
                require ext_code.size(mem[(32 * mem[_8186] - 1) + _8186 + 44 len 20])
                staticcall mem[(32 * mem[_8186] - 1) + _8186 + 44 len 20].0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_8186 + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _8186 + ceil32(return_data.size) + 160
                require return_data.size >= 32
                require 0 < mem[_8186]
                _8578 = mem[_8186 + 32]
                require idx + -(_5438 / 2) + 2 < mem[96]
                _8595 = mem[(32 * idx + -(_5438 / 2) + 2) + 128]
                if msg.sender == owner:
                    require ext_code.size(mem[_8186 + 44 len 20])
                    staticcall mem[_8186 + 44 len 20].0x313ce567 with:
                            gas gas_remaining wei
                    mem[_8186 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_8186 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_8186 + (2 * ceil32(return_data.size)) + 196] = address(_8595)
                    require ext_code.size(mem[_8186 + 44 len 20])
                    staticcall mem[_8186 + 44 len 20].0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(_8595)
                    mem[_8186 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8186 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_5438 / 2) + 2 < mem[96]
                        _9169 = mem[(32 * idx + -(_5438 / 2) + 2) + 128]
                        mem[_8186 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8186 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_8186 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_8186 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_8186 + (4 * ceil32(return_data.size)) + 324] = mem[_8186]
                        t = 0
                        u = _8186 + (4 * ceil32(return_data.size)) + 356
                        v = _8186 + 32
                        while t < mem[_8186]:
                            mem[u] = mem[v + 12 len 20]
                            _8094 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8186 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_8186 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_9169))
                        call address(_9169).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8186 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_8186]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8186 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8186 + (6 * ceil32(return_data.size)) + 160
                        require return_data.size >= 32
                        _10876 = mem[_8186 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                        require mem[_8186 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8186 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _8186 + (4 * ceil32(return_data.size)) + mem[_8186 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                        _10956 = mem[_8186 + (4 * ceil32(return_data.size)) + mem[_8186 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                        require mem[_8186 + (4 * ceil32(return_data.size)) + mem[_8186 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                        require (32 * mem[_8186 + (4 * ceil32(return_data.size)) + mem[_8186 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _8186 + (6 * ceil32(return_data.size)) + (32 * mem[_8186 + (4 * ceil32(return_data.size)) + mem[_8186 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                        mem[64] = _8186 + (6 * ceil32(return_data.size)) + (32 * mem[_8186 + (4 * ceil32(return_data.size)) + mem[_8186 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                        mem[_8186 + (6 * ceil32(return_data.size)) + 160] = _10956
                        require return_data.size >= _10876 + (32 * _10956) + 32
                        t = _8186 + (4 * ceil32(return_data.size)) + _10876 + 192
                        u = _8186 + (6 * ceil32(return_data.size)) + 192
                        s = 0
                        while s < _10956:
                            mem[u] = mem[t]
                            _8094 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8186] - 1 < mem[_8186]
                        _12052 = mem[(32 * mem[_8186] - 1) + _8186 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12052))
                        staticcall address(_12052).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12236 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8094 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _8186
                        s = mem[_12236] - ext_call.return_data[0]
                        continue 
                    mem[_8186 + (4 * ceil32(return_data.size)) + 164] = address(_8595)
                    mem[_8186 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_8578))
                    call address(_8578).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_8595), -1
                    mem[_8186 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8186 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_5438 / 2) + 2 < mem[96]
                    _9599 = mem[(32 * idx + -(_5438 / 2) + 2) + 128]
                    mem[_8186 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_8186 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_8186 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_8186 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_8186 + (6 * ceil32(return_data.size)) + 324] = mem[_8186]
                    t = 0
                    u = _8186 + (6 * ceil32(return_data.size)) + 356
                    v = _8186 + 32
                    while t < mem[_8186]:
                        mem[u] = mem[v + 12 len 20]
                        _8094 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_8186 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_8186 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_9599))
                    call address(_9599).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8186 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_8186]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_8186 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _8186 + (7 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    _10877 = mem[_8186 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                    require mem[_8186 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _8186 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _8186 + (6 * ceil32(return_data.size)) + mem[_8186 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                    _10957 = mem[_8186 + (6 * ceil32(return_data.size)) + mem[_8186 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                    require mem[_8186 + (6 * ceil32(return_data.size)) + mem[_8186 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                    require (32 * mem[_8186 + (6 * ceil32(return_data.size)) + mem[_8186 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _8186 + (7 * ceil32(return_data.size)) + (32 * mem[_8186 + (6 * ceil32(return_data.size)) + mem[_8186 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                    mem[64] = _8186 + (7 * ceil32(return_data.size)) + (32 * mem[_8186 + (6 * ceil32(return_data.size)) + mem[_8186 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                    mem[_8186 + (7 * ceil32(return_data.size)) + 160] = mem[_8186 + (6 * ceil32(return_data.size)) + mem[_8186 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                    require return_data.size >= _10877 + (32 * _10957) + 32
                    t = _8186 + (6 * ceil32(return_data.size)) + _10877 + 192
                    u = _8186 + (7 * ceil32(return_data.size)) + 192
                    s = 0
                    while s < _10957:
                        mem[u] = mem[t]
                        _8094 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_8186] - 1 < mem[_8186]
                    _12054 = mem[(32 * mem[_8186] - 1) + _8186 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12054))
                    staticcall address(_12054).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12237 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8094 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _8186
                    s = mem[_12237] - ext_call.return_data[0]
                    continue 
                mem[0] = msg.sender
                mem[32] = 1
                if not stor1[msg.sender]:
                    revert with 0, 'Ownable: caller is not the owner'
                require ext_code.size(address(_8578))
                staticcall address(_8578).0x313ce567 with:
                        gas gas_remaining wei
                mem[_8186 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                mem[_8186 + (2 * ceil32(return_data.size)) + 164] = this.address
                mem[_8186 + (2 * ceil32(return_data.size)) + 196] = address(_8595)
                require ext_code.size(address(_8578))
                staticcall address(_8578).0xdd62ed3e with:
                        gas gas_remaining wei
                       args address(this.address), address(_8595)
                mem[_8186 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _8186 + (4 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                    require idx + -(_5438 / 2) + 2 < mem[96]
                    _9227 = mem[(32 * idx + -(_5438 / 2) + 2) + 128]
                    mem[_8186 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_8186 + (4 * ceil32(return_data.size)) + 164] = s
                    mem[_8186 + (4 * ceil32(return_data.size)) + 196] = 0
                    mem[_8186 + (4 * ceil32(return_data.size)) + 228] = 160
                    mem[_8186 + (4 * ceil32(return_data.size)) + 324] = mem[_8186]
                    t = 0
                    u = _8186 + (4 * ceil32(return_data.size)) + 356
                    v = _8186 + 32
                    while t < mem[_8186]:
                        mem[u] = mem[v + 12 len 20]
                        _8094 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_8186 + (4 * ceil32(return_data.size)) + 260] = this.address
                    mem[_8186 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_9227))
                    call address(_9227).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8186 + (4 * ceil32(return_data.size)) + 324 len (32 * mem[_8186]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_8186 + (4 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _8186 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    _10878 = mem[_8186 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                    require mem[_8186 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _8186 + (4 * ceil32(return_data.size)) + return_data.size + 160 > _8186 + (4 * ceil32(return_data.size)) + mem[_8186 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                    _10958 = mem[_8186 + (4 * ceil32(return_data.size)) + mem[_8186 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                    require mem[_8186 + (4 * ceil32(return_data.size)) + mem[_8186 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                    require (32 * mem[_8186 + (4 * ceil32(return_data.size)) + mem[_8186 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _8186 + (6 * ceil32(return_data.size)) + (32 * mem[_8186 + (4 * ceil32(return_data.size)) + mem[_8186 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                    mem[64] = _8186 + (6 * ceil32(return_data.size)) + (32 * mem[_8186 + (4 * ceil32(return_data.size)) + mem[_8186 + (4 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                    mem[_8186 + (6 * ceil32(return_data.size)) + 160] = _10958
                    require return_data.size >= _10878 + (32 * _10958) + 32
                    t = _8186 + (4 * ceil32(return_data.size)) + _10878 + 192
                    u = _8186 + (6 * ceil32(return_data.size)) + 192
                    s = 0
                    while s < _10958:
                        mem[u] = mem[t]
                        _8094 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_8186] - 1 < mem[_8186]
                    _12056 = mem[(32 * mem[_8186] - 1) + _8186 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12056))
                    staticcall address(_12056).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12238 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8094 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _8186
                    s = mem[_12238] - ext_call.return_data[0]
                    continue 
                mem[_8186 + (4 * ceil32(return_data.size)) + 164] = address(_8595)
                mem[_8186 + (4 * ceil32(return_data.size)) + 196] = -1
                require ext_code.size(address(_8578))
                call address(_8578).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_8595), -1
                mem[_8186 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _8186 + (6 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require idx + -(_5438 / 2) + 2 < mem[96]
                _9650 = mem[(32 * idx + -(_5438 / 2) + 2) + 128]
                mem[_8186 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                mem[_8186 + (6 * ceil32(return_data.size)) + 164] = s
                mem[_8186 + (6 * ceil32(return_data.size)) + 196] = 0
                mem[_8186 + (6 * ceil32(return_data.size)) + 228] = 160
                mem[_8186 + (6 * ceil32(return_data.size)) + 324] = mem[_8186]
                t = 0
                u = _8186 + (6 * ceil32(return_data.size)) + 356
                v = _8186 + 32
                while t < mem[_8186]:
                    mem[u] = mem[v + 12 len 20]
                    _8094 = mem[96]
                    t = t + 1
                    u = u + 32
                    v = v + 32
                    continue 
                mem[_8186 + (6 * ceil32(return_data.size)) + 260] = this.address
                mem[_8186 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                require ext_code.size(address(_9650))
                call address(_9650).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                     gas gas_remaining wei
                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8186 + (6 * ceil32(return_data.size)) + 324 len (32 * mem[_8186]) + 32]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[_8186 + (6 * ceil32(return_data.size)) + 160 len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = _8186 + (7 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                _10879 = mem[_8186 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32
                require mem[_8186 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                require _8186 + (6 * ceil32(return_data.size)) + return_data.size + 160 > _8186 + (6 * ceil32(return_data.size)) + mem[_8186 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 191
                _10959 = mem[_8186 + (6 * ceil32(return_data.size)) + mem[_8186 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                require mem[_8186 + (6 * ceil32(return_data.size)) + mem[_8186 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160] <= test266151307()
                require (32 * mem[_8186 + (6 * ceil32(return_data.size)) + mem[_8186 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 32 >= 0 and _8186 + (7 * ceil32(return_data.size)) + (32 * mem[_8186 + (6 * ceil32(return_data.size)) + mem[_8186 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192 <= test266151307()
                mem[64] = _8186 + (7 * ceil32(return_data.size)) + (32 * mem[_8186 + (6 * ceil32(return_data.size)) + mem[_8186 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]) + 192
                mem[_8186 + (7 * ceil32(return_data.size)) + 160] = mem[_8186 + (6 * ceil32(return_data.size)) + mem[_8186 + (6 * ceil32(return_data.size)) + 160 len 4], Mask(224, 32, s) >> 32 + 160]
                require return_data.size >= _10879 + (32 * _10959) + 32
                t = _8186 + (6 * ceil32(return_data.size)) + _10879 + 192
                u = _8186 + (7 * ceil32(return_data.size)) + 192
                s = 0
                while s < _10959:
                    mem[u] = mem[t]
                    _8094 = mem[96]
                    t = t + 32
                    u = u + 32
                    s = s + 1
                    continue 
                require mem[_8186] - 1 < mem[_8186]
                _12058 = mem[(32 * mem[_8186] - 1) + _8186 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_12058))
                staticcall address(_12058).0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12239 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8094 = mem[96]
                idx = idx + 3
                s = ext_call.return_data[0]
                s = _8186
                s = mem[_12239] - ext_call.return_data[0]
                continue 
            require _5438 / 2 < mem[96]
            _8112 = mem[(16 * Mask(251, 1, _5438)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_8112))
            staticcall address(_8112).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8152 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_8152] < _5490 - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
        else:
            mem[(32 * ('cd', 68).length) + 160 len 16 * Mask(251, 1, ('cd', 68).length)] = call.data[calldata.size len 16 * Mask(251, 1, ('cd', 68).length)]
            idx = ('cd', 68).length / 2
            s = 0
            s = cd[4]
            while idx < ('cd', 68).length - 1:
                require idx - (('cd', 68).length / 2) < mem[96]
                require ext_code.size(mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20])
                staticcall mem[(32 * idx - (('cd', 68).length / 2)) + 140 len 20].factory() with:
                        gas gas_remaining wei
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5443 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5463 = mem[_5443]
                require mem[_5443] == mem[_5443 + 12 len 20]
                require idx < mem[96]
                require idx + 1 < mem[96]
                _5494 = mem[(32 * idx + 1) + 128]
                mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
                mem[mem[64] + 36] = address(_5494)
                require ext_code.size(address(_5463))
                staticcall address(_5463).getPair(address arg1, address arg2) with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4], address(_5494)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5531 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _5547 = mem[_5531]
                require mem[_5531] == mem[_5531 + 12 len 20]
                require ext_code.size(mem[_5531 + 12 len 20])
                staticcall mem[_5531 + 12 len 20].getReserves() with:
                        gas gas_remaining wei
                mem[mem[64] len 96] = ext_call.return_data[0 len 96]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _5675 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 96
                _5779 = mem[_5675]
                require mem[_5675] == mem[_5675 + 18 len 14]
                _5859 = mem[_5675 + 32]
                require mem[_5675 + 32] == mem[_5675 + 50 len 14]
                require mem[_5675 + 64] == mem[_5675 + 92 len 4]
                require idx < mem[96]
                require idx + 1 < mem[96]
                if mem[(32 * idx) + 140 len 20] == mem[(32 * idx + 1) + 140 len 20]:
                    revert with 0, 'MdexSwapFactory: IDENTICAL_ADDRESSES'
                if mem[(32 * idx) + 140 len 20] < mem[(32 * idx + 1) + 140 len 20]:
                    if not mem[(32 * idx) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_5675 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_5675 + 50 len 14] / (997 * s) + (1000 * mem[_5675 + 18 len 14])
                        idx = idx + 1
                        s = _5547
                        s = 997 * s * Mask(112, 0, _5859) / (997 * s) + (1000 * Mask(112, 0, _5779))
                        continue 
                else:
                    if not mem[(32 * idx + 1) + 140 len 20]:
                        revert with 0, 'MdexSwapFactory: ZERO_ADDRESS'
                    require idx < mem[96]
                    if mem[(32 * idx + 1) + 140 len 20] == mem[(32 * idx) + 140 len 20]:
                        require (997 * s) + (1000 * mem[_5675 + 18 len 14])
                        require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                        mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_5675 + 50 len 14] / (997 * s) + (1000 * mem[_5675 + 18 len 14])
                        idx = idx + 1
                        s = _5547
                        s = 997 * s * Mask(112, 0, _5859) / (997 * s) + (1000 * Mask(112, 0, _5779))
                        continue 
                require (997 * s) + (1000 * mem[_5675 + 50 len 14])
                require idx - (('cd', 68).length / 2) < mem[(32 * ('cd', 68).length) + 128]
                mem[(32 * idx - (('cd', 68).length / 2)) + (32 * ('cd', 68).length) + 160] = 997 * s * mem[_5675 + 18 len 14] / (997 * s) + (1000 * mem[_5675 + 50 len 14])
                idx = idx + 1
                s = _5547
                s = 997 * s * Mask(112, 0, _5779) / (997 * s) + (1000 * Mask(112, 0, _5859))
                continue 
            require mem[(32 * ('cd', 68).length) + 128] - 1 < mem[(32 * ('cd', 68).length) + 128]
            if mem[(32 * mem[(32 * ('cd', 68).length) + 128] - 1) + (32 * ('cd', 68).length) + 160] < cd[36] * cd[4] / 10000:
                revert with 0, 'e1'
            _5441 = mem[96]
            require mem[96] / 2 < mem[96]
            _5460 = mem[(16 * Mask(251, 1, mem[96])) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_5460))
            staticcall address(_5460).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _5474 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _5493 = mem[_5474]
            _8095 = mem[96]
            idx = _5441 / 2
            s = 0
            s = 96
            s = cd[4]
            while idx < _8095 - 1:
                require idx + -(_5441 / 2) + 1 < mem[96]
                require idx - (_5441 / 2) < mem[96]
                require idx + -(_5441 / 2) + 1 < mem[96]
                if mem[(32 * idx - (_5441 / 2)) + 140 len 20] != mem[(32 * idx + -(_5441 / 2) + 1) + 140 len 20]:
                    require idx - (_5441 / 2) < mem[96]
                    if mem[(32 * idx - (_5441 / 2)) + 140 len 20] != mem[(32 * idx + -(_5441 / 2) + 1) + 140 len 20]:
                        _8189 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_8189 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_8189]
                        mem[_8189 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_8189]
                        mem[_8189 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_8189] - 1 < mem[_8189]
                        mem[_8189 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_8189] - 1) + _8189 + 44 len 20])
                        staticcall mem[(32 * mem[_8189] - 1) + _8189 + 44 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_8189 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8189 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_8189]
                        _8512 = mem[_8189 + 32]
                        require idx - (_5441 / 2) < mem[96]
                        _8528 = mem[(32 * idx - (_5441 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_8189 + 44 len 20])
                            staticcall mem[_8189 + 44 len 20].0x313ce567 with:
                                    gas gas_remaining wei
                            mem[_8189 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_8189 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_8189 + (2 * ceil32(return_data.size)) + 132] = address(_8528)
                            require ext_code.size(mem[_8189 + 44 len 20])
                            staticcall mem[_8189 + 44 len 20].0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_8528)
                            mem[_8189 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _8189 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_5441 / 2) < mem[96]
                                _8992 = mem[(32 * idx - (_5441 / 2)) + 128]
                                mem[_8189 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_8189 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_8189 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_8189 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_8189 + (4 * ceil32(return_data.size)) + 260] = mem[_8189]
                                t = 0
                                u = _8189 + (4 * ceil32(return_data.size)) + 292
                                v = _8189 + 32
                                while t < mem[_8189]:
                                    mem[u] = mem[v + 12 len 20]
                                    _8095 = mem[96]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[_8189 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_8189 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_8992))
                                call address(_8992).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8189 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_8189]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                mem[_8189 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = _8189 + (6 * ceil32(return_data.size)) + 96
                                require return_data.size >= 32
                                _10880 = mem[_8189 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                                require mem[_8189 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                                require _8189 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _8189 + (4 * ceil32(return_data.size)) + mem[_8189 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                                _10960 = mem[_8189 + (4 * ceil32(return_data.size)) + mem[_8189 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require mem[_8189 + (4 * ceil32(return_data.size)) + mem[_8189 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                                require (32 * mem[_8189 + (4 * ceil32(return_data.size)) + mem[_8189 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _8189 + (6 * ceil32(return_data.size)) + (32 * mem[_8189 + (4 * ceil32(return_data.size)) + mem[_8189 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                                mem[64] = _8189 + (6 * ceil32(return_data.size)) + (32 * mem[_8189 + (4 * ceil32(return_data.size)) + mem[_8189 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                                mem[_8189 + (6 * ceil32(return_data.size)) + 96] = mem[_8189 + (4 * ceil32(return_data.size)) + mem[_8189 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                                require return_data.size >= _10880 + (32 * _10960) + 32
                                t = _8189 + (4 * ceil32(return_data.size)) + _10880 + 128
                                u = _8189 + (6 * ceil32(return_data.size)) + 128
                                s = 0
                                while s < _10960:
                                    mem[u] = mem[t]
                                    _8095 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_8189] - 1 < mem[_8189]
                                _12060 = mem[(32 * mem[_8189] - 1) + _8189 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_12060))
                                staticcall address(_12060).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12240 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _8095 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _8189
                                s = mem[_12240] - ext_call.return_data[0]
                                continue 
                            mem[_8189 + (4 * ceil32(return_data.size)) + 100] = address(_8528)
                            mem[_8189 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_8512))
                            call address(_8512).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_8528), -1
                            mem[_8189 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _8189 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_5441 / 2) < mem[96]
                            _9432 = mem[(32 * idx - (_5441 / 2)) + 128]
                            mem[_8189 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8189 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_8189 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_8189 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_8189 + (6 * ceil32(return_data.size)) + 260] = mem[_8189]
                            t = 0
                            u = _8189 + (6 * ceil32(return_data.size)) + 292
                            v = _8189 + 32
                            while t < mem[_8189]:
                                mem[u] = mem[v + 12 len 20]
                                _8095 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_8189 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_8189 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_9432))
                            call address(_9432).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8189 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_8189]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_8189 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _8189 + (7 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _10881 = mem[_8189 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_8189 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _8189 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _8189 + (6 * ceil32(return_data.size)) + mem[_8189 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _10961 = mem[_8189 + (6 * ceil32(return_data.size)) + mem[_8189 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_8189 + (6 * ceil32(return_data.size)) + mem[_8189 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_8189 + (6 * ceil32(return_data.size)) + mem[_8189 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _8189 + (7 * ceil32(return_data.size)) + (32 * mem[_8189 + (6 * ceil32(return_data.size)) + mem[_8189 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _8189 + (7 * ceil32(return_data.size)) + (32 * mem[_8189 + (6 * ceil32(return_data.size)) + mem[_8189 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_8189 + (7 * ceil32(return_data.size)) + 96] = mem[_8189 + (6 * ceil32(return_data.size)) + mem[_8189 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require return_data.size >= _10881 + (32 * _10961) + 32
                            t = _8189 + (6 * ceil32(return_data.size)) + _10881 + 128
                            u = _8189 + (7 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _10961:
                                mem[u] = mem[t]
                                _8095 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8189] - 1 < mem[_8189]
                            _12062 = mem[(32 * mem[_8189] - 1) + _8189 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12062))
                            staticcall address(_12062).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12241 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8095 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _8189
                            s = mem[_12241] - ext_call.return_data[0]
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 1
                        if not stor1[msg.sender]:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(address(_8512))
                        staticcall address(_8512).0x313ce567 with:
                                gas gas_remaining wei
                        mem[_8189 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_8189 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_8189 + (2 * ceil32(return_data.size)) + 132] = address(_8528)
                        require ext_code.size(address(_8512))
                        staticcall address(_8512).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(_8528)
                        mem[_8189 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8189 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_5441 / 2) < mem[96]
                            _9028 = mem[(32 * idx - (_5441 / 2)) + 128]
                            mem[_8189 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8189 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_8189 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_8189 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_8189 + (4 * ceil32(return_data.size)) + 260] = mem[_8189]
                            t = 0
                            u = _8189 + (4 * ceil32(return_data.size)) + 292
                            v = _8189 + 32
                            while t < mem[_8189]:
                                mem[u] = mem[v + 12 len 20]
                                _8095 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_8189 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_8189 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_9028))
                            call address(_9028).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8189 + (4 * ceil32(return_data.size)) + 260 len (32 * mem[_8189]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_8189 + (4 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _8189 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            _10882 = mem[_8189 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                            require mem[_8189 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _8189 + (4 * ceil32(return_data.size)) + return_data.size + 96 > _8189 + (4 * ceil32(return_data.size)) + mem[_8189 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                            _10962 = mem[_8189 + (4 * ceil32(return_data.size)) + mem[_8189 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require mem[_8189 + (4 * ceil32(return_data.size)) + mem[_8189 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                            require (32 * mem[_8189 + (4 * ceil32(return_data.size)) + mem[_8189 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _8189 + (6 * ceil32(return_data.size)) + (32 * mem[_8189 + (4 * ceil32(return_data.size)) + mem[_8189 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                            mem[64] = _8189 + (6 * ceil32(return_data.size)) + (32 * mem[_8189 + (4 * ceil32(return_data.size)) + mem[_8189 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                            mem[_8189 + (6 * ceil32(return_data.size)) + 96] = mem[_8189 + (4 * ceil32(return_data.size)) + mem[_8189 + (4 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                            require return_data.size >= _10882 + (32 * _10962) + 32
                            t = _8189 + (4 * ceil32(return_data.size)) + _10882 + 128
                            u = _8189 + (6 * ceil32(return_data.size)) + 128
                            s = 0
                            while s < _10962:
                                mem[u] = mem[t]
                                _8095 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8189] - 1 < mem[_8189]
                            _12064 = mem[(32 * mem[_8189] - 1) + _8189 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12064))
                            staticcall address(_12064).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12242 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8095 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _8189
                            s = mem[_12242] - ext_call.return_data[0]
                            continue 
                        mem[_8189 + (4 * ceil32(return_data.size)) + 100] = address(_8528)
                        mem[_8189 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_8512))
                        call address(_8512).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_8528), -1
                        mem[_8189 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8189 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_5441 / 2) < mem[96]
                        _9469 = mem[(32 * idx - (_5441 / 2)) + 128]
                        mem[_8189 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8189 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_8189 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_8189 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_8189 + (6 * ceil32(return_data.size)) + 260] = mem[_8189]
                        t = 0
                        u = _8189 + (6 * ceil32(return_data.size)) + 292
                        v = _8189 + 32
                        while t < mem[_8189]:
                            mem[u] = mem[v + 12 len 20]
                            _8095 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8189 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_8189 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_9469))
                        call address(_9469).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8189 + (6 * ceil32(return_data.size)) + 260 len (32 * mem[_8189]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8189 + (6 * ceil32(return_data.size)) + 96 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8189 + (7 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        _10883 = mem[_8189 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32
                        require mem[_8189 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8189 + (6 * ceil32(return_data.size)) + return_data.size + 96 > _8189 + (6 * ceil32(return_data.size)) + mem[_8189 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 127
                        _10963 = mem[_8189 + (6 * ceil32(return_data.size)) + mem[_8189 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require mem[_8189 + (6 * ceil32(return_data.size)) + mem[_8189 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96] <= test266151307()
                        require (32 * mem[_8189 + (6 * ceil32(return_data.size)) + mem[_8189 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 32 >= 0 and _8189 + (7 * ceil32(return_data.size)) + (32 * mem[_8189 + (6 * ceil32(return_data.size)) + mem[_8189 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128 <= test266151307()
                        mem[64] = _8189 + (7 * ceil32(return_data.size)) + (32 * mem[_8189 + (6 * ceil32(return_data.size)) + mem[_8189 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]) + 128
                        mem[_8189 + (7 * ceil32(return_data.size)) + 96] = mem[_8189 + (6 * ceil32(return_data.size)) + mem[_8189 + (6 * ceil32(return_data.size)) + 96 len 4], Mask(224, 32, s) >> 32 + 96]
                        require return_data.size >= _10883 + (32 * _10963) + 32
                        t = _8189 + (6 * ceil32(return_data.size)) + _10883 + 128
                        u = _8189 + (7 * ceil32(return_data.size)) + 128
                        s = 0
                        while s < _10963:
                            mem[u] = mem[t]
                            _8095 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8189] - 1 < mem[_8189]
                        _12066 = mem[(32 * mem[_8189] - 1) + _8189 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12066))
                        staticcall address(_12066).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12243 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8095 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _8189
                        s = mem[_12243] - ext_call.return_data[0]
                        continue 
                    _8191 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_8191 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_8191]
                    mem[_8191 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_8191]
                    mem[_8191 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_8191]
                    mem[_8191 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_8191] - 1 < mem[_8191]
                    mem[_8191 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_8191] - 1) + _8191 + 44 len 20])
                    staticcall mem[(32 * mem[_8191] - 1) + _8191 + 44 len 20].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_8191 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8191 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_8191]
                    _8544 = mem[_8191 + 32]
                    require idx + -(_5441 / 2) + 1 < mem[96]
                    _8563 = mem[(32 * idx + -(_5441 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_8191 + 44 len 20])
                        staticcall mem[_8191 + 44 len 20].0x313ce567 with:
                                gas gas_remaining wei
                        mem[_8191 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_8191 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_8191 + (2 * ceil32(return_data.size)) + 164] = address(_8563)
                        require ext_code.size(mem[_8191 + 44 len 20])
                        staticcall mem[_8191 + 44 len 20].0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(_8563)
                        mem[_8191 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8191 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_5441 / 2) + 1 < mem[96]
                            _9068 = mem[(32 * idx + -(_5441 / 2) + 1) + 128]
                            mem[_8191 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8191 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_8191 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_8191 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_8191 + (4 * ceil32(return_data.size)) + 292] = mem[_8191]
                            t = 0
                            u = _8191 + (4 * ceil32(return_data.size)) + 324
                            v = _8191 + 32
                            while t < mem[_8191]:
                                mem[u] = mem[v + 12 len 20]
                                _8095 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_8191 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_8191 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_9068))
                            call address(_9068).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8191 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_8191]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_8191 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _8191 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _10884 = mem[_8191 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_8191 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _8191 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _8191 + (4 * ceil32(return_data.size)) + mem[_8191 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _10964 = mem[_8191 + (4 * ceil32(return_data.size)) + mem[_8191 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_8191 + (4 * ceil32(return_data.size)) + mem[_8191 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_8191 + (4 * ceil32(return_data.size)) + mem[_8191 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8191 + (6 * ceil32(return_data.size)) + (32 * mem[_8191 + (4 * ceil32(return_data.size)) + mem[_8191 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _8191 + (6 * ceil32(return_data.size)) + (32 * mem[_8191 + (4 * ceil32(return_data.size)) + mem[_8191 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_8191 + (6 * ceil32(return_data.size)) + 128] = mem[_8191 + (4 * ceil32(return_data.size)) + mem[_8191 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require return_data.size >= _10884 + (32 * _10964) + 32
                            t = _8191 + (4 * ceil32(return_data.size)) + _10884 + 160
                            u = _8191 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _10964:
                                mem[u] = mem[t]
                                _8095 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8191] - 1 < mem[_8191]
                            _12068 = mem[(32 * mem[_8191] - 1) + _8191 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12068))
                            staticcall address(_12068).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12244 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8095 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _8191
                            s = mem[_12244] - ext_call.return_data[0]
                            continue 
                        mem[_8191 + (4 * ceil32(return_data.size)) + 132] = address(_8563)
                        mem[_8191 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_8544))
                        call address(_8544).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_8563), -1
                        mem[_8191 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8191 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_5441 / 2) + 1 < mem[96]
                        _9505 = mem[(32 * idx + -(_5441 / 2) + 1) + 128]
                        mem[_8191 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8191 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_8191 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_8191 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_8191 + (6 * ceil32(return_data.size)) + 292] = mem[_8191]
                        t = 0
                        u = _8191 + (6 * ceil32(return_data.size)) + 324
                        v = _8191 + 32
                        while t < mem[_8191]:
                            mem[u] = mem[v + 12 len 20]
                            _8095 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8191 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_8191 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_9505))
                        call address(_9505).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8191 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_8191]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8191 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8191 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _10885 = mem[_8191 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_8191 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8191 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _8191 + (6 * ceil32(return_data.size)) + mem[_8191 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _10965 = mem[_8191 + (6 * ceil32(return_data.size)) + mem[_8191 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_8191 + (6 * ceil32(return_data.size)) + mem[_8191 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_8191 + (6 * ceil32(return_data.size)) + mem[_8191 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8191 + (7 * ceil32(return_data.size)) + (32 * mem[_8191 + (6 * ceil32(return_data.size)) + mem[_8191 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _8191 + (7 * ceil32(return_data.size)) + (32 * mem[_8191 + (6 * ceil32(return_data.size)) + mem[_8191 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_8191 + (7 * ceil32(return_data.size)) + 128] = _10965
                        require return_data.size >= _10885 + (32 * _10965) + 32
                        t = _8191 + (6 * ceil32(return_data.size)) + _10885 + 160
                        u = _8191 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _10965:
                            mem[u] = mem[t]
                            _8095 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8191] - 1 < mem[_8191]
                        _12070 = mem[(32 * mem[_8191] - 1) + _8191 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12070))
                        staticcall address(_12070).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12245 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8095 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _8191
                        s = mem[_12245] - ext_call.return_data[0]
                        continue 
                    mem[0] = msg.sender
                    mem[32] = 1
                    if not stor1[msg.sender]:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(address(_8544))
                    staticcall address(_8544).0x313ce567 with:
                            gas gas_remaining wei
                    mem[_8191 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_8191 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_8191 + (2 * ceil32(return_data.size)) + 164] = address(_8563)
                    require ext_code.size(address(_8544))
                    staticcall address(_8544).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(_8563)
                    mem[_8191 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8191 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_5441 / 2) + 1 < mem[96]
                        _9118 = mem[(32 * idx + -(_5441 / 2) + 1) + 128]
                        mem[_8191 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8191 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_8191 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_8191 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_8191 + (4 * ceil32(return_data.size)) + 292] = mem[_8191]
                        t = 0
                        u = _8191 + (4 * ceil32(return_data.size)) + 324
                        v = _8191 + 32
                        while t < mem[_8191]:
                            mem[u] = mem[v + 12 len 20]
                            _8095 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8191 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_8191 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_9118))
                        call address(_9118).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8191 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_8191]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8191 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8191 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _10886 = mem[_8191 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_8191 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8191 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _8191 + (4 * ceil32(return_data.size)) + mem[_8191 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _10966 = mem[_8191 + (4 * ceil32(return_data.size)) + mem[_8191 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_8191 + (4 * ceil32(return_data.size)) + mem[_8191 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_8191 + (4 * ceil32(return_data.size)) + mem[_8191 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8191 + (6 * ceil32(return_data.size)) + (32 * mem[_8191 + (4 * ceil32(return_data.size)) + mem[_8191 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _8191 + (6 * ceil32(return_data.size)) + (32 * mem[_8191 + (4 * ceil32(return_data.size)) + mem[_8191 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_8191 + (6 * ceil32(return_data.size)) + 128] = mem[_8191 + (4 * ceil32(return_data.size)) + mem[_8191 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require return_data.size >= _10886 + (32 * _10966) + 32
                        t = _8191 + (4 * ceil32(return_data.size)) + _10886 + 160
                        u = _8191 + (6 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _10966:
                            mem[u] = mem[t]
                            _8095 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8191] - 1 < mem[_8191]
                        _12072 = mem[(32 * mem[_8191] - 1) + _8191 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12072))
                        staticcall address(_12072).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12246 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8095 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _8191
                        s = mem[_12246] - ext_call.return_data[0]
                        continue 
                    mem[_8191 + (4 * ceil32(return_data.size)) + 132] = address(_8563)
                    mem[_8191 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_8544))
                    call address(_8544).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_8563), -1
                    mem[_8191 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8191 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_5441 / 2) + 1 < mem[96]
                    _9551 = mem[(32 * idx + -(_5441 / 2) + 1) + 128]
                    mem[_8191 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_8191 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_8191 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_8191 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_8191 + (6 * ceil32(return_data.size)) + 292] = mem[_8191]
                    t = 0
                    u = _8191 + (6 * ceil32(return_data.size)) + 324
                    v = _8191 + 32
                    while t < mem[_8191]:
                        mem[u] = mem[v + 12 len 20]
                        _8095 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_8191 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_8191 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_9551))
                    call address(_9551).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8191 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_8191]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_8191 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _8191 + (7 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    _10887 = mem[_8191 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                    require mem[_8191 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _8191 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _8191 + (6 * ceil32(return_data.size)) + mem[_8191 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                    _10967 = mem[_8191 + (6 * ceil32(return_data.size)) + mem[_8191 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                    require mem[_8191 + (6 * ceil32(return_data.size)) + mem[_8191 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                    require (32 * mem[_8191 + (6 * ceil32(return_data.size)) + mem[_8191 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8191 + (7 * ceil32(return_data.size)) + (32 * mem[_8191 + (6 * ceil32(return_data.size)) + mem[_8191 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                    mem[64] = _8191 + (7 * ceil32(return_data.size)) + (32 * mem[_8191 + (6 * ceil32(return_data.size)) + mem[_8191 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                    mem[_8191 + (7 * ceil32(return_data.size)) + 128] = _10967
                    require return_data.size >= _10887 + (32 * _10967) + 32
                    t = _8191 + (6 * ceil32(return_data.size)) + _10887 + 160
                    u = _8191 + (7 * ceil32(return_data.size)) + 160
                    s = 0
                    while s < _10967:
                        mem[u] = mem[t]
                        _8095 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_8191] - 1 < mem[_8191]
                    _12074 = mem[(32 * mem[_8191] - 1) + _8191 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12074))
                    staticcall address(_12074).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12247 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8095 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _8191
                    s = mem[_12247] - ext_call.return_data[0]
                    continue 
                require idx + -(_5441 / 2) + 2 < mem[96]
                if mem[(32 * idx + -(_5441 / 2) + 2) + 140 len 20] != mem[(32 * idx + -(_5441 / 2) + 1) + 140 len 20]:
                    require idx + -(_5441 / 2) + 1 < mem[96]
                    require idx - (_5441 / 2) < mem[96]
                    if mem[(32 * idx - (_5441 / 2)) + 140 len 20] != mem[(32 * idx + -(_5441 / 2) + 1) + 140 len 20]:
                        _8282 = mem[64]
                        mem[mem[64]] = 2
                        mem[64] = mem[64] + 96
                        mem[_8282 + 32 len 64] = call.data[calldata.size len 64]
                        require idx < mem[96]
                        require 0 < mem[_8282]
                        mem[_8282 + 32] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[_8282]
                        mem[_8282 + 64] = mem[(32 * idx + 1) + 140 len 20]
                        require mem[_8282] - 1 < mem[_8282]
                        mem[_8282 + 100] = this.address
                        require ext_code.size(mem[(32 * mem[_8282] - 1) + _8282 + 44 len 20])
                        staticcall mem[(32 * mem[_8282] - 1) + _8282 + 44 len 20].0x70a08231 with:
                                gas gas_remaining wei
                               args this.address
                        mem[_8282 + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8282 + ceil32(return_data.size) + 96
                        require return_data.size >= 32
                        require 0 < mem[_8282]
                        _8564 = mem[_8282 + 32]
                        require idx - (_5441 / 2) < mem[96]
                        _8580 = mem[(32 * idx - (_5441 / 2)) + 128]
                        if msg.sender == owner:
                            require ext_code.size(mem[_8282 + 44 len 20])
                            staticcall mem[_8282 + 44 len 20].0x313ce567 with:
                                    gas gas_remaining wei
                            mem[_8282 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                            mem[_8282 + (2 * ceil32(return_data.size)) + 100] = this.address
                            mem[_8282 + (2 * ceil32(return_data.size)) + 132] = address(_8580)
                            require ext_code.size(mem[_8282 + 44 len 20])
                            staticcall mem[_8282 + 44 len 20].0xdd62ed3e with:
                                    gas gas_remaining wei
                                   args address(this.address), address(_8580)
                            mem[_8282 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _8282 + (4 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                                require idx - (_5441 / 2) < mem[96]
                                _9121 = mem[(32 * idx - (_5441 / 2)) + 128]
                                mem[_8282 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                                mem[_8282 + (4 * ceil32(return_data.size)) + 100] = s
                                mem[_8282 + (4 * ceil32(return_data.size)) + 132] = 0
                                mem[_8282 + (4 * ceil32(return_data.size)) + 164] = 160
                                mem[_8282 + (4 * ceil32(return_data.size)) + 260] = mem[_8282]
                                s = 0
                                t = _8282 + (4 * ceil32(return_data.size)) + 292
                                u = _8282 + 32
                                while s < mem[_8282]:
                                    mem[t] = mem[u + 12 len 20]
                                    _8095 = mem[96]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_8282 + (4 * ceil32(return_data.size)) + 196] = this.address
                                mem[_8282 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                                require ext_code.size(address(_9121))
                                call address(_9121).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _8282 + (4 * ceil32(return_data.size)) + (32 * mem[_8282]) + -mem[64] + 288]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _10808 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _10888 = mem[_10808]
                                require mem[_10808] <= test266151307()
                                require _10808 + return_data.size > _10808 + mem[_10808] + 31
                                _10968 = mem[_10808 + mem[_10808]]
                                require mem[_10808 + mem[_10808]] <= test266151307()
                                require (32 * mem[_10808 + mem[_10808]]) + 32 >= 0 and _10808 + ceil32(return_data.size) + (32 * mem[_10808 + mem[_10808]]) + 32 <= test266151307()
                                mem[64] = _10808 + ceil32(return_data.size) + (32 * mem[_10808 + mem[_10808]]) + 32
                                mem[_10808 + ceil32(return_data.size)] = _10968
                                require return_data.size >= _10888 + (32 * _10968) + 32
                                t = _10808 + _10888 + 32
                                u = _10808 + ceil32(return_data.size) + 32
                                s = 0
                                while s < _10968:
                                    mem[u] = mem[t]
                                    _8095 = mem[96]
                                    t = t + 32
                                    u = u + 32
                                    s = s + 1
                                    continue 
                                require mem[_8282] - 1 < mem[_8282]
                                _12076 = mem[(32 * mem[_8282] - 1) + _8282 + 32]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_12076))
                                staticcall address(_12076).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _12248 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _8095 = mem[96]
                                idx = idx + 1
                                s = ext_call.return_data[0]
                                s = _8282
                                s = mem[_12248] - ext_call.return_data[0]
                                continue 
                            mem[_8282 + (4 * ceil32(return_data.size)) + 100] = address(_8580)
                            mem[_8282 + (4 * ceil32(return_data.size)) + 132] = -1
                            require ext_code.size(address(_8564))
                            call address(_8564).approve(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(_8580), -1
                            mem[_8282 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[64] = _8282 + (6 * ceil32(return_data.size)) + 96
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            require idx - (_5441 / 2) < mem[96]
                            _9554 = mem[(32 * idx - (_5441 / 2)) + 128]
                            mem[_8282 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8282 + (6 * ceil32(return_data.size)) + 100] = s
                            mem[_8282 + (6 * ceil32(return_data.size)) + 132] = 0
                            mem[_8282 + (6 * ceil32(return_data.size)) + 164] = 160
                            mem[_8282 + (6 * ceil32(return_data.size)) + 260] = mem[_8282]
                            s = 0
                            t = _8282 + (6 * ceil32(return_data.size)) + 292
                            u = _8282 + 32
                            while s < mem[_8282]:
                                mem[t] = mem[u + 12 len 20]
                                _8095 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_8282 + (6 * ceil32(return_data.size)) + 196] = this.address
                            mem[_8282 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_9554))
                            call address(_9554).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _8282 + (6 * ceil32(return_data.size)) + (32 * mem[_8282]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10809 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10889 = mem[_10809]
                            require mem[_10809] <= test266151307()
                            require _10809 + return_data.size > _10809 + mem[_10809] + 31
                            _10969 = mem[_10809 + mem[_10809]]
                            require mem[_10809 + mem[_10809]] <= test266151307()
                            require (32 * mem[_10809 + mem[_10809]]) + 32 >= 0 and _10809 + ceil32(return_data.size) + (32 * mem[_10809 + mem[_10809]]) + 32 <= test266151307()
                            mem[64] = _10809 + ceil32(return_data.size) + (32 * mem[_10809 + mem[_10809]]) + 32
                            mem[_10809 + ceil32(return_data.size)] = _10969
                            require return_data.size >= _10889 + (32 * _10969) + 32
                            t = _10809 + _10889 + 32
                            u = _10809 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _10969:
                                mem[u] = mem[t]
                                _8095 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8282] - 1 < mem[_8282]
                            _12078 = mem[(32 * mem[_8282] - 1) + _8282 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12078))
                            staticcall address(_12078).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12249 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8095 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _8282
                            s = mem[_12249] - ext_call.return_data[0]
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 1
                        if not stor1[msg.sender]:
                            revert with 0, 'Ownable: caller is not the owner'
                        require ext_code.size(address(_8564))
                        staticcall address(_8564).0x313ce567 with:
                                gas gas_remaining wei
                        mem[_8282 + ceil32(return_data.size) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_8282 + (2 * ceil32(return_data.size)) + 100] = this.address
                        mem[_8282 + (2 * ceil32(return_data.size)) + 132] = address(_8580)
                        require ext_code.size(address(_8564))
                        staticcall address(_8564).0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(_8580)
                        mem[_8282 + (2 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8282 + (4 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx - (_5441 / 2) < mem[96]
                            _9179 = mem[(32 * idx - (_5441 / 2)) + 128]
                            mem[_8282 + (4 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8282 + (4 * ceil32(return_data.size)) + 100] = s
                            mem[_8282 + (4 * ceil32(return_data.size)) + 132] = 0
                            mem[_8282 + (4 * ceil32(return_data.size)) + 164] = 160
                            mem[_8282 + (4 * ceil32(return_data.size)) + 260] = mem[_8282]
                            s = 0
                            t = _8282 + (4 * ceil32(return_data.size)) + 292
                            u = _8282 + 32
                            while s < mem[_8282]:
                                mem[t] = mem[u + 12 len 20]
                                _8095 = mem[96]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_8282 + (4 * ceil32(return_data.size)) + 196] = this.address
                            mem[_8282 + (4 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                            require ext_code.size(address(_9179))
                            call address(_9179).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _8282 + (4 * ceil32(return_data.size)) + (32 * mem[_8282]) + -mem[64] + 288]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _10810 = mem[64]
                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _10890 = mem[_10810]
                            require mem[_10810] <= test266151307()
                            require _10810 + return_data.size > _10810 + mem[_10810] + 31
                            _10970 = mem[_10810 + mem[_10810]]
                            require mem[_10810 + mem[_10810]] <= test266151307()
                            require (32 * mem[_10810 + mem[_10810]]) + 32 >= 0 and _10810 + ceil32(return_data.size) + (32 * mem[_10810 + mem[_10810]]) + 32 <= test266151307()
                            mem[64] = _10810 + ceil32(return_data.size) + (32 * mem[_10810 + mem[_10810]]) + 32
                            mem[_10810 + ceil32(return_data.size)] = _10970
                            require return_data.size >= _10890 + (32 * _10970) + 32
                            t = _10810 + _10890 + 32
                            u = _10810 + ceil32(return_data.size) + 32
                            s = 0
                            while s < _10970:
                                mem[u] = mem[t]
                                _8095 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8282] - 1 < mem[_8282]
                            _12080 = mem[(32 * mem[_8282] - 1) + _8282 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12080))
                            staticcall address(_12080).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12250 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8095 = mem[96]
                            idx = idx + 1
                            s = ext_call.return_data[0]
                            s = _8282
                            s = mem[_12250] - ext_call.return_data[0]
                            continue 
                        mem[_8282 + (4 * ceil32(return_data.size)) + 100] = address(_8580)
                        mem[_8282 + (4 * ceil32(return_data.size)) + 132] = -1
                        require ext_code.size(address(_8564))
                        call address(_8564).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_8580), -1
                        mem[_8282 + (4 * ceil32(return_data.size)) + 96] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8282 + (6 * ceil32(return_data.size)) + 96
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx - (_5441 / 2) < mem[96]
                        _9608 = mem[(32 * idx - (_5441 / 2)) + 128]
                        mem[_8282 + (6 * ceil32(return_data.size)) + 96] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8282 + (6 * ceil32(return_data.size)) + 100] = s
                        mem[_8282 + (6 * ceil32(return_data.size)) + 132] = 0
                        mem[_8282 + (6 * ceil32(return_data.size)) + 164] = 160
                        mem[_8282 + (6 * ceil32(return_data.size)) + 260] = mem[_8282]
                        s = 0
                        t = _8282 + (6 * ceil32(return_data.size)) + 292
                        u = _8282 + 32
                        while s < mem[_8282]:
                            mem[t] = mem[u + 12 len 20]
                            _8095 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_8282 + (6 * ceil32(return_data.size)) + 196] = this.address
                        mem[_8282 + (6 * ceil32(return_data.size)) + 228] = block.timestamp + 60
                        require ext_code.size(address(_9608))
                        call address(_9608).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _8282 + (6 * ceil32(return_data.size)) + (32 * mem[_8282]) + -mem[64] + 288]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10811 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10891 = mem[_10811]
                        require mem[_10811] <= test266151307()
                        require _10811 + return_data.size > _10811 + mem[_10811] + 31
                        _10971 = mem[_10811 + mem[_10811]]
                        require mem[_10811 + mem[_10811]] <= test266151307()
                        require (32 * mem[_10811 + mem[_10811]]) + 32 >= 0 and _10811 + ceil32(return_data.size) + (32 * mem[_10811 + mem[_10811]]) + 32 <= test266151307()
                        mem[64] = _10811 + ceil32(return_data.size) + (32 * mem[_10811 + mem[_10811]]) + 32
                        mem[_10811 + ceil32(return_data.size)] = _10971
                        require return_data.size >= _10891 + (32 * _10971) + 32
                        t = _10811 + _10891 + 32
                        u = _10811 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _10971:
                            mem[u] = mem[t]
                            _8095 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8282] - 1 < mem[_8282]
                        _12082 = mem[(32 * mem[_8282] - 1) + _8282 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12082))
                        staticcall address(_12082).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12251 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8095 = mem[96]
                        idx = idx + 1
                        s = ext_call.return_data[0]
                        s = _8282
                        s = mem[_12251] - ext_call.return_data[0]
                        continue 
                    _8284 = mem[64]
                    mem[mem[64]] = 3
                    mem[64] = mem[64] + 128
                    mem[_8284 + 32 len 96] = call.data[calldata.size len 96]
                    require idx < mem[96]
                    require 0 < mem[_8284]
                    mem[_8284 + 32] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[_8284]
                    mem[_8284 + 64] = mem[(32 * idx + 1) + 140 len 20]
                    require idx + 2 < mem[96]
                    require 2 < mem[_8284]
                    mem[_8284 + 96] = mem[(32 * idx + 2) + 140 len 20]
                    require mem[_8284] - 1 < mem[_8284]
                    mem[_8284 + 132] = this.address
                    require ext_code.size(mem[(32 * mem[_8284] - 1) + _8284 + 44 len 20])
                    staticcall mem[(32 * mem[_8284] - 1) + _8284 + 44 len 20].0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[_8284 + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8284 + ceil32(return_data.size) + 128
                    require return_data.size >= 32
                    require 0 < mem[_8284]
                    _8597 = mem[_8284 + 32]
                    require idx + -(_5441 / 2) + 1 < mem[96]
                    _8611 = mem[(32 * idx + -(_5441 / 2) + 1) + 128]
                    if msg.sender == owner:
                        require ext_code.size(mem[_8284 + 44 len 20])
                        staticcall mem[_8284 + 44 len 20].0x313ce567 with:
                                gas gas_remaining wei
                        mem[_8284 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                        mem[_8284 + (2 * ceil32(return_data.size)) + 132] = this.address
                        mem[_8284 + (2 * ceil32(return_data.size)) + 164] = address(_8611)
                        require ext_code.size(mem[_8284 + 44 len 20])
                        staticcall mem[_8284 + 44 len 20].0xdd62ed3e with:
                                gas gas_remaining wei
                               args address(this.address), address(_8611)
                        mem[_8284 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8284 + (4 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                            require idx + -(_5441 / 2) + 1 < mem[96]
                            _9236 = mem[(32 * idx + -(_5441 / 2) + 1) + 128]
                            mem[_8284 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                            mem[_8284 + (4 * ceil32(return_data.size)) + 132] = s
                            mem[_8284 + (4 * ceil32(return_data.size)) + 164] = 0
                            mem[_8284 + (4 * ceil32(return_data.size)) + 196] = 160
                            mem[_8284 + (4 * ceil32(return_data.size)) + 292] = mem[_8284]
                            t = 0
                            u = _8284 + (4 * ceil32(return_data.size)) + 324
                            v = _8284 + 32
                            while t < mem[_8284]:
                                mem[u] = mem[v + 12 len 20]
                                _8095 = mem[96]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[_8284 + (4 * ceil32(return_data.size)) + 228] = this.address
                            mem[_8284 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                            require ext_code.size(address(_9236))
                            call address(_9236).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8284 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_8284]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            mem[_8284 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                            mem[64] = _8284 + (6 * ceil32(return_data.size)) + 128
                            require return_data.size >= 32
                            _10892 = mem[_8284 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                            require mem[_8284 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                            require _8284 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _8284 + (4 * ceil32(return_data.size)) + mem[_8284 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                            _10972 = mem[_8284 + (4 * ceil32(return_data.size)) + mem[_8284 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                            require mem[_8284 + (4 * ceil32(return_data.size)) + mem[_8284 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                            require (32 * mem[_8284 + (4 * ceil32(return_data.size)) + mem[_8284 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8284 + (6 * ceil32(return_data.size)) + (32 * mem[_8284 + (4 * ceil32(return_data.size)) + mem[_8284 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                            mem[64] = _8284 + (6 * ceil32(return_data.size)) + (32 * mem[_8284 + (4 * ceil32(return_data.size)) + mem[_8284 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                            mem[_8284 + (6 * ceil32(return_data.size)) + 128] = _10972
                            require return_data.size >= _10892 + (32 * _10972) + 32
                            t = _8284 + (4 * ceil32(return_data.size)) + _10892 + 160
                            u = _8284 + (6 * ceil32(return_data.size)) + 160
                            s = 0
                            while s < _10972:
                                mem[u] = mem[t]
                                _8095 = mem[96]
                                t = t + 32
                                u = u + 32
                                s = s + 1
                                continue 
                            require mem[_8284] - 1 < mem[_8284]
                            _12084 = mem[(32 * mem[_8284] - 1) + _8284 + 32]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_12084))
                            staticcall address(_12084).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _12252 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _8095 = mem[96]
                            idx = idx + 2
                            s = ext_call.return_data[0]
                            s = _8284
                            s = mem[_12252] - ext_call.return_data[0]
                            continue 
                        mem[_8284 + (4 * ceil32(return_data.size)) + 132] = address(_8611)
                        mem[_8284 + (4 * ceil32(return_data.size)) + 164] = -1
                        require ext_code.size(address(_8597))
                        call address(_8597).approve(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(_8611), -1
                        mem[_8284 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[64] = _8284 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        require idx + -(_5441 / 2) + 1 < mem[96]
                        _9657 = mem[(32 * idx + -(_5441 / 2) + 1) + 128]
                        mem[_8284 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8284 + (6 * ceil32(return_data.size)) + 132] = s
                        mem[_8284 + (6 * ceil32(return_data.size)) + 164] = 0
                        mem[_8284 + (6 * ceil32(return_data.size)) + 196] = 160
                        mem[_8284 + (6 * ceil32(return_data.size)) + 292] = mem[_8284]
                        t = 0
                        u = _8284 + (6 * ceil32(return_data.size)) + 324
                        v = _8284 + 32
                        while t < mem[_8284]:
                            mem[u] = mem[v + 12 len 20]
                            _8095 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8284 + (6 * ceil32(return_data.size)) + 228] = this.address
                        mem[_8284 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_9657))
                        call address(_9657).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8284 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_8284]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8284 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8284 + (7 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _10893 = mem[_8284 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_8284 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8284 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _8284 + (6 * ceil32(return_data.size)) + mem[_8284 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _10973 = mem[_8284 + (6 * ceil32(return_data.size)) + mem[_8284 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_8284 + (6 * ceil32(return_data.size)) + mem[_8284 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_8284 + (6 * ceil32(return_data.size)) + mem[_8284 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8284 + (7 * ceil32(return_data.size)) + (32 * mem[_8284 + (6 * ceil32(return_data.size)) + mem[_8284 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _8284 + (7 * ceil32(return_data.size)) + (32 * mem[_8284 + (6 * ceil32(return_data.size)) + mem[_8284 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_8284 + (7 * ceil32(return_data.size)) + 128] = _10973
                        require return_data.size >= _10893 + (32 * _10973) + 32
                        t = _8284 + (6 * ceil32(return_data.size)) + _10893 + 160
                        u = _8284 + (7 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _10973:
                            mem[u] = mem[t]
                            _8095 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8284] - 1 < mem[_8284]
                        _12086 = mem[(32 * mem[_8284] - 1) + _8284 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12086))
                        staticcall address(_12086).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12253 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8095 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _8284
                        s = mem[_12253] - ext_call.return_data[0]
                        continue 
                    mem[0] = msg.sender
                    mem[32] = 1
                    if not stor1[msg.sender]:
                        revert with 0, 'Ownable: caller is not the owner'
                    require ext_code.size(address(_8597))
                    staticcall address(_8597).0x313ce567 with:
                            gas gas_remaining wei
                    mem[_8284 + ceil32(return_data.size) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_8284 + (2 * ceil32(return_data.size)) + 132] = this.address
                    mem[_8284 + (2 * ceil32(return_data.size)) + 164] = address(_8611)
                    require ext_code.size(address(_8597))
                    staticcall address(_8597).0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(_8611)
                    mem[_8284 + (2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8284 + (4 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_5441 / 2) + 1 < mem[96]
                        _9287 = mem[(32 * idx + -(_5441 / 2) + 1) + 128]
                        mem[_8284 + (4 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8284 + (4 * ceil32(return_data.size)) + 132] = s
                        mem[_8284 + (4 * ceil32(return_data.size)) + 164] = 0
                        mem[_8284 + (4 * ceil32(return_data.size)) + 196] = 160
                        mem[_8284 + (4 * ceil32(return_data.size)) + 292] = mem[_8284]
                        t = 0
                        u = _8284 + (4 * ceil32(return_data.size)) + 324
                        v = _8284 + 32
                        while t < mem[_8284]:
                            mem[u] = mem[v + 12 len 20]
                            _8095 = mem[96]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[_8284 + (4 * ceil32(return_data.size)) + 228] = this.address
                        mem[_8284 + (4 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                        require ext_code.size(address(_9287))
                        call address(_9287).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8284 + (4 * ceil32(return_data.size)) + 292 len (32 * mem[_8284]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        mem[_8284 + (4 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = _8284 + (6 * ceil32(return_data.size)) + 128
                        require return_data.size >= 32
                        _10894 = mem[_8284 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                        require mem[_8284 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                        require _8284 + (4 * ceil32(return_data.size)) + return_data.size + 128 > _8284 + (4 * ceil32(return_data.size)) + mem[_8284 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                        _10974 = mem[_8284 + (4 * ceil32(return_data.size)) + mem[_8284 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                        require mem[_8284 + (4 * ceil32(return_data.size)) + mem[_8284 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                        require (32 * mem[_8284 + (4 * ceil32(return_data.size)) + mem[_8284 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8284 + (6 * ceil32(return_data.size)) + (32 * mem[_8284 + (4 * ceil32(return_data.size)) + mem[_8284 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                        mem[64] = _8284 + (6 * ceil32(return_data.size)) + (32 * mem[_8284 + (4 * ceil32(return_data.size)) + mem[_8284 + (4 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                        mem[_8284 + (6 * ceil32(return_data.size)) + 128] = _10974
                        require return_data.size >= _10894 + (32 * _10974) + 32
                        t = _8284 + (4 * ceil32(return_data.size)) + _10894 + 160
                        u = _8284 + (6 * ceil32(return_data.size)) + 160
                        s = 0
                        while s < _10974:
                            mem[u] = mem[t]
                            _8095 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8284] - 1 < mem[_8284]
                        _12088 = mem[(32 * mem[_8284] - 1) + _8284 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12088))
                        staticcall address(_12088).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12254 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8095 = mem[96]
                        idx = idx + 2
                        s = ext_call.return_data[0]
                        s = _8284
                        s = mem[_12254] - ext_call.return_data[0]
                        continue 
                    mem[_8284 + (4 * ceil32(return_data.size)) + 132] = address(_8611)
                    mem[_8284 + (4 * ceil32(return_data.size)) + 164] = -1
                    require ext_code.size(address(_8597))
                    call address(_8597).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_8611), -1
                    mem[_8284 + (4 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8284 + (6 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_5441 / 2) + 1 < mem[96]
                    _9701 = mem[(32 * idx + -(_5441 / 2) + 1) + 128]
                    mem[_8284 + (6 * ceil32(return_data.size)) + 128] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_8284 + (6 * ceil32(return_data.size)) + 132] = s
                    mem[_8284 + (6 * ceil32(return_data.size)) + 164] = 0
                    mem[_8284 + (6 * ceil32(return_data.size)) + 196] = 160
                    mem[_8284 + (6 * ceil32(return_data.size)) + 292] = mem[_8284]
                    t = 0
                    u = _8284 + (6 * ceil32(return_data.size)) + 324
                    v = _8284 + 32
                    while t < mem[_8284]:
                        mem[u] = mem[v + 12 len 20]
                        _8095 = mem[96]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[_8284 + (6 * ceil32(return_data.size)) + 228] = this.address
                    mem[_8284 + (6 * ceil32(return_data.size)) + 260] = block.timestamp + 60
                    require ext_code.size(address(_9701))
                    call address(_9701).swapExactTokensForTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args s, 0, 160, address(this.address), block.timestamp + 60, mem[_8284 + (6 * ceil32(return_data.size)) + 292 len (32 * mem[_8284]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[_8284 + (6 * ceil32(return_data.size)) + 128 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = _8284 + (7 * ceil32(return_data.size)) + 128
                    require return_data.size >= 32
                    _10895 = mem[_8284 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32
                    require mem[_8284 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 <= test266151307()
                    require _8284 + (6 * ceil32(return_data.size)) + return_data.size + 128 > _8284 + (6 * ceil32(return_data.size)) + mem[_8284 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 159
                    _10975 = mem[_8284 + (6 * ceil32(return_data.size)) + mem[_8284 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]
                    require mem[_8284 + (6 * ceil32(return_data.size)) + mem[_8284 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128] <= test266151307()
                    require (32 * mem[_8284 + (6 * ceil32(return_data.size)) + mem[_8284 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 32 >= 0 and _8284 + (7 * ceil32(return_data.size)) + (32 * mem[_8284 + (6 * ceil32(return_data.size)) + mem[_8284 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160 <= test266151307()
                    mem[64] = _8284 + (7 * ceil32(return_data.size)) + (32 * mem[_8284 + (6 * ceil32(return_data.size)) + mem[_8284 + (6 * ceil32(return_data.size)) + 128 len 4], Mask(224, 32, s) >> 32 + 128]) + 160
                    mem[_8284 + (7 * ceil32(return_data.size)) + 128] = _10975
                    require return_data.size >= _10895 + (32 * _10975) + 32
                    t = _8284 + (6 * ceil32(return_data.size)) + _10895 + 160
                    u = _8284 + (7 * ceil32(return_data.size)) + 160
                    s = 0
                    while s < _10975:
                        mem[u] = mem[t]
                        _8095 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_8284] - 1 < mem[_8284]
                    _12090 = mem[(32 * mem[_8284] - 1) + _8284 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12090))
                    staticcall address(_12090).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12255 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8095 = mem[96]
                    idx = idx + 2
                    s = ext_call.return_data[0]
                    s = _8284
                    s = mem[_12255] - ext_call.return_data[0]
                    continue 
                _8194 = mem[64]
                mem[mem[64]] = 4
                mem[64] = mem[64] + 160
                mem[_8194 + 32 len 128] = call.data[calldata.size len 128]
                require idx < mem[96]
                require 0 < mem[_8194]
                mem[_8194 + 32] = mem[(32 * idx) + 140 len 20]
                require idx + 1 < mem[96]
                require 1 < mem[_8194]
                mem[_8194 + 64] = mem[(32 * idx + 1) + 140 len 20]
                require idx + 2 < mem[96]
                require 2 < mem[_8194]
                mem[_8194 + 96] = mem[(32 * idx + 2) + 140 len 20]
                require idx + 3 < mem[96]
                require 3 < mem[_8194]
                mem[_8194 + 128] = mem[(32 * idx + 3) + 140 len 20]
                require mem[_8194] - 1 < mem[_8194]
                mem[_8194 + 164] = this.address
                require ext_code.size(mem[(32 * mem[_8194] - 1) + _8194 + 44 len 20])
                staticcall mem[(32 * mem[_8194] - 1) + _8194 + 44 len 20].0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[_8194 + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _8194 + ceil32(return_data.size) + 160
                require return_data.size >= 32
                require 0 < mem[_8194]
                _8582 = mem[_8194 + 32]
                require idx + -(_5441 / 2) + 2 < mem[96]
                _8599 = mem[(32 * idx + -(_5441 / 2) + 2) + 128]
                if msg.sender == owner:
                    require ext_code.size(mem[_8194 + 44 len 20])
                    staticcall mem[_8194 + 44 len 20].0x313ce567 with:
                            gas gas_remaining wei
                    mem[_8194 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                    mem[_8194 + (2 * ceil32(return_data.size)) + 164] = this.address
                    mem[_8194 + (2 * ceil32(return_data.size)) + 196] = address(_8599)
                    require ext_code.size(mem[_8194 + 44 len 20])
                    staticcall mem[_8194 + 44 len 20].0xdd62ed3e with:
                            gas gas_remaining wei
                           args address(this.address), address(_8599)
                    mem[_8194 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8194 + (4 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                        require idx + -(_5441 / 2) + 2 < mem[96]
                        _9184 = mem[(32 * idx + -(_5441 / 2) + 2) + 128]
                        mem[_8194 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                        mem[_8194 + (4 * ceil32(return_data.size)) + 164] = s
                        mem[_8194 + (4 * ceil32(return_data.size)) + 196] = 0
                        mem[_8194 + (4 * ceil32(return_data.size)) + 228] = 160
                        mem[_8194 + (4 * ceil32(return_data.size)) + 324] = mem[_8194]
                        s = 0
                        t = _8194 + (4 * ceil32(return_data.size)) + 356
                        u = _8194 + 32
                        while s < mem[_8194]:
                            mem[t] = mem[u + 12 len 20]
                            _8095 = mem[96]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_8194 + (4 * ceil32(return_data.size)) + 260] = this.address
                        mem[_8194 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                        require ext_code.size(address(_9184))
                        call address(_9184).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _8194 + (4 * ceil32(return_data.size)) + (32 * mem[_8194]) + -mem[64] + 352]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _10816 = mem[64]
                        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _10896 = mem[_10816]
                        require mem[_10816] <= test266151307()
                        require _10816 + return_data.size > _10816 + mem[_10816] + 31
                        _10976 = mem[_10816 + mem[_10816]]
                        require mem[_10816 + mem[_10816]] <= test266151307()
                        require (32 * mem[_10816 + mem[_10816]]) + 32 >= 0 and _10816 + ceil32(return_data.size) + (32 * mem[_10816 + mem[_10816]]) + 32 <= test266151307()
                        mem[64] = _10816 + ceil32(return_data.size) + (32 * mem[_10816 + mem[_10816]]) + 32
                        mem[_10816 + ceil32(return_data.size)] = _10976
                        require return_data.size >= _10896 + (32 * _10976) + 32
                        t = _10816 + _10896 + 32
                        u = _10816 + ceil32(return_data.size) + 32
                        s = 0
                        while s < _10976:
                            mem[u] = mem[t]
                            _8095 = mem[96]
                            t = t + 32
                            u = u + 32
                            s = s + 1
                            continue 
                        require mem[_8194] - 1 < mem[_8194]
                        _12092 = mem[(32 * mem[_8194] - 1) + _8194 + 32]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_12092))
                        staticcall address(_12092).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _12256 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _8095 = mem[96]
                        idx = idx + 3
                        s = ext_call.return_data[0]
                        s = _8194
                        s = mem[_12256] - ext_call.return_data[0]
                        continue 
                    mem[_8194 + (4 * ceil32(return_data.size)) + 164] = address(_8599)
                    mem[_8194 + (4 * ceil32(return_data.size)) + 196] = -1
                    require ext_code.size(address(_8582))
                    call address(_8582).approve(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(_8599), -1
                    mem[_8194 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    mem[64] = _8194 + (6 * ceil32(return_data.size)) + 160
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    require idx + -(_5441 / 2) + 2 < mem[96]
                    _9613 = mem[(32 * idx + -(_5441 / 2) + 2) + 128]
                    mem[_8194 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_8194 + (6 * ceil32(return_data.size)) + 164] = s
                    mem[_8194 + (6 * ceil32(return_data.size)) + 196] = 0
                    mem[_8194 + (6 * ceil32(return_data.size)) + 228] = 160
                    mem[_8194 + (6 * ceil32(return_data.size)) + 324] = mem[_8194]
                    s = 0
                    t = _8194 + (6 * ceil32(return_data.size)) + 356
                    u = _8194 + 32
                    while s < mem[_8194]:
                        mem[t] = mem[u + 12 len 20]
                        _8095 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_8194 + (6 * ceil32(return_data.size)) + 260] = this.address
                    mem[_8194 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_9613))
                    call address(_9613).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _8194 + (6 * ceil32(return_data.size)) + (32 * mem[_8194]) + -mem[64] + 352]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10817 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10897 = mem[_10817]
                    require mem[_10817] <= test266151307()
                    require _10817 + return_data.size > _10817 + mem[_10817] + 31
                    _10977 = mem[_10817 + mem[_10817]]
                    require mem[_10817 + mem[_10817]] <= test266151307()
                    require (32 * mem[_10817 + mem[_10817]]) + 32 >= 0 and _10817 + ceil32(return_data.size) + (32 * mem[_10817 + mem[_10817]]) + 32 <= test266151307()
                    mem[64] = _10817 + ceil32(return_data.size) + (32 * mem[_10817 + mem[_10817]]) + 32
                    mem[_10817 + ceil32(return_data.size)] = _10977
                    require return_data.size >= _10897 + (32 * _10977) + 32
                    t = _10817 + _10897 + 32
                    u = _10817 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _10977:
                        mem[u] = mem[t]
                        _8095 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_8194] - 1 < mem[_8194]
                    _12094 = mem[(32 * mem[_8194] - 1) + _8194 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12094))
                    staticcall address(_12094).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12257 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8095 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _8194
                    s = mem[_12257] - ext_call.return_data[0]
                    continue 
                mem[0] = msg.sender
                mem[32] = 1
                if not stor1[msg.sender]:
                    revert with 0, 'Ownable: caller is not the owner'
                require ext_code.size(address(_8582))
                staticcall address(_8582).0x313ce567 with:
                        gas gas_remaining wei
                mem[_8194 + ceil32(return_data.size) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[31 len 1]
                mem[_8194 + (2 * ceil32(return_data.size)) + 164] = this.address
                mem[_8194 + (2 * ceil32(return_data.size)) + 196] = address(_8599)
                require ext_code.size(address(_8582))
                staticcall address(_8582).0xdd62ed3e with:
                        gas gas_remaining wei
                       args address(this.address), address(_8599)
                mem[_8194 + (2 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _8194 + (4 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                if ext_call.return_data[0] >= 10000 * 10^uint8(ext_call.return_data[0]):
                    require idx + -(_5441 / 2) + 2 < mem[96]
                    _9241 = mem[(32 * idx + -(_5441 / 2) + 2) + 128]
                    mem[_8194 + (4 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                    mem[_8194 + (4 * ceil32(return_data.size)) + 164] = s
                    mem[_8194 + (4 * ceil32(return_data.size)) + 196] = 0
                    mem[_8194 + (4 * ceil32(return_data.size)) + 228] = 160
                    mem[_8194 + (4 * ceil32(return_data.size)) + 324] = mem[_8194]
                    s = 0
                    t = _8194 + (4 * ceil32(return_data.size)) + 356
                    u = _8194 + 32
                    while s < mem[_8194]:
                        mem[t] = mem[u + 12 len 20]
                        _8095 = mem[96]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_8194 + (4 * ceil32(return_data.size)) + 260] = this.address
                    mem[_8194 + (4 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                    require ext_code.size(address(_9241))
                    call address(_9241).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _8194 + (4 * ceil32(return_data.size)) + (32 * mem[_8194]) + -mem[64] + 352]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _10818 = mem[64]
                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _10898 = mem[_10818]
                    require mem[_10818] <= test266151307()
                    require _10818 + return_data.size > _10818 + mem[_10818] + 31
                    _10978 = mem[_10818 + mem[_10818]]
                    require mem[_10818 + mem[_10818]] <= test266151307()
                    require (32 * mem[_10818 + mem[_10818]]) + 32 >= 0 and _10818 + ceil32(return_data.size) + (32 * mem[_10818 + mem[_10818]]) + 32 <= test266151307()
                    mem[64] = _10818 + ceil32(return_data.size) + (32 * mem[_10818 + mem[_10818]]) + 32
                    mem[_10818 + ceil32(return_data.size)] = _10978
                    require return_data.size >= _10898 + (32 * _10978) + 32
                    t = _10818 + _10898 + 32
                    u = _10818 + ceil32(return_data.size) + 32
                    s = 0
                    while s < _10978:
                        mem[u] = mem[t]
                        _8095 = mem[96]
                        t = t + 32
                        u = u + 32
                        s = s + 1
                        continue 
                    require mem[_8194] - 1 < mem[_8194]
                    _12096 = mem[(32 * mem[_8194] - 1) + _8194 + 32]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_12096))
                    staticcall address(_12096).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _12258 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _8095 = mem[96]
                    idx = idx + 3
                    s = ext_call.return_data[0]
                    s = _8194
                    s = mem[_12258] - ext_call.return_data[0]
                    continue 
                mem[_8194 + (4 * ceil32(return_data.size)) + 164] = address(_8599)
                mem[_8194 + (4 * ceil32(return_data.size)) + 196] = -1
                require ext_code.size(address(_8582))
                call address(_8582).approve(address arg1, uint256 arg2) with:
                     gas gas_remaining wei
                    args address(_8599), -1
                mem[_8194 + (4 * ceil32(return_data.size)) + 160] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = _8194 + (6 * ceil32(return_data.size)) + 160
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                require idx + -(_5441 / 2) + 2 < mem[96]
                _9662 = mem[(32 * idx + -(_5441 / 2) + 2) + 128]
                mem[_8194 + (6 * ceil32(return_data.size)) + 160] = 0x38ed173900000000000000000000000000000000000000000000000000000000
                mem[_8194 + (6 * ceil32(return_data.size)) + 164] = s
                mem[_8194 + (6 * ceil32(return_data.size)) + 196] = 0
                mem[_8194 + (6 * ceil32(return_data.size)) + 228] = 160
                mem[_8194 + (6 * ceil32(return_data.size)) + 324] = mem[_8194]
                s = 0
                t = _8194 + (6 * ceil32(return_data.size)) + 356
                u = _8194 + 32
                while s < mem[_8194]:
                    mem[t] = mem[u + 12 len 20]
                    _8095 = mem[96]
                    s = s + 1
                    t = t + 32
                    u = u + 32
                    continue 
                mem[_8194 + (6 * ceil32(return_data.size)) + 260] = this.address
                mem[_8194 + (6 * ceil32(return_data.size)) + 292] = block.timestamp + 60
                require ext_code.size(address(_9662))
                call address(_9662).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _8194 + (6 * ceil32(return_data.size)) + (32 * mem[_8194]) + -mem[64] + 352]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _10819 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _10899 = mem[_10819]
                require mem[_10819] <= test266151307()
                require _10819 + return_data.size > _10819 + mem[_10819] + 31
                _10979 = mem[_10819 + mem[_10819]]
                require mem[_10819 + mem[_10819]] <= test266151307()
                require (32 * mem[_10819 + mem[_10819]]) + 32 >= 0 and _10819 + ceil32(return_data.size) + (32 * mem[_10819 + mem[_10819]]) + 32 <= test266151307()
                mem[64] = _10819 + ceil32(return_data.size) + (32 * mem[_10819 + mem[_10819]]) + 32
                mem[_10819 + ceil32(return_data.size)] = _10979
                require return_data.size >= _10899 + (32 * _10979) + 32
                t = _10819 + _10899 + 32
                u = _10819 + ceil32(return_data.size) + 32
                s = 0
                while s < _10979:
                    mem[u] = mem[t]
                    _8095 = mem[96]
                    t = t + 32
                    u = u + 32
                    s = s + 1
                    continue 
                require mem[_8194] - 1 < mem[_8194]
                _12098 = mem[(32 * mem[_8194] - 1) + _8194 + 32]
                mem[mem[64] + 4] = this.address
                require ext_code.size(address(_12098))
                staticcall address(_12098).0x70a08231 with:
                        gas gas_remaining wei
                       args address(this.address)
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _12259 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _8095 = mem[96]
                idx = idx + 3
                s = ext_call.return_data[0]
                s = _8194
                s = mem[_12259] - ext_call.return_data[0]
                continue 
            require _5441 / 2 < mem[96]
            _8116 = mem[(16 * Mask(251, 1, _5441)) + 128]
            mem[mem[64] + 4] = this.address
            require ext_code.size(address(_8116))
            staticcall address(_8116).0x70a08231 with:
                    gas gas_remaining wei
                   args address(this.address)
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _8156 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            if mem[_8156] < _5493 - cd[4] + (cd[36] * cd[4] / 10000):
                revert with 0, 'INSUFFICIENT_OUTPUT_AMOUNT_my2'
}



}
