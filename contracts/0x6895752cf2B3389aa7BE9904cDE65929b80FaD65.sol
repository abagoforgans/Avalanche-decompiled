contract main {




// =====================  Runtime code  =====================


#
#  - buy(uint256 arg1)
#
uint8 stor0;
uint8 stor0; offset 8
uint16 stor0;
address owner;
uint256 sub_f65e6912;
uint256 sub_a09c39da;
mapping of uint256 sub_9fa6b4a0;
array of struct sub_9cc8525d;
mapping of struct sub_57ba1b20;
mapping of uint8 stor106;
address stor107;
mapping of uint256 sub_764d55f7;
mapping of address sub_6aafcaa9;
mapping of struct stor110;
mapping of uint256 sub_fc2d2735;
mapping of uint256 sub_b24fea7b;
mapping of uint8 stor113;

function listed(uint256 arg1) {
    require calldata.size - 4 >= 32
    return bool(stor106[arg1])
}

function sub_57ba1b20(?) {
    require calldata.size - 4 >= 32
    return sub_57ba1b20[arg1].field_256
}

function sub_5a23f64b(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return bool(stor113[arg1])
}

function sub_6aafcaa9(?) {
    require calldata.size - 4 >= 32
    return sub_6aafcaa9[arg1]
}

function sub_764d55f7(?) {
    require calldata.size - 4 >= 32
    return sub_764d55f7[arg1]
}

function owner() {
    return owner
}

function sub_9cc8525d(?) {
    require calldata.size - 4 >= 64
    require arg2 < sub_9cc8525d[arg1].field_0
    return sub_9cc8525d[arg1][arg2].field_0, 
           sub_9cc8525d[arg1][arg2].field_256,
           sub_9cc8525d[arg1][arg2].field_512,
           sub_9cc8525d[arg1][arg2].field_768,
           sub_9cc8525d[arg1][arg2].field_1024,
           sub_9cc8525d[arg1][arg2].field_1280,
           sub_9cc8525d[arg1][arg2].field_1536,
           sub_9cc8525d[arg1][arg2].field_1792
}

function sub_9fa6b4a0(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return sub_9fa6b4a0[arg1]
}

function sub_a09c39da(?) {
    return sub_a09c39da
}

function sub_ad35efd4(?) {
    require calldata.size - 4 >= 32
    return bool(sub_57ba1b20[arg1].field_928)
}

function sub_b24fea7b(?) {
    require calldata.size - 4 >= 32
    return sub_b24fea7b[arg1]
}

function sales(uint256 arg1) {
    require calldata.size - 4 >= 32
    return sub_57ba1b20[arg1].field_0, 
           sub_57ba1b20[arg1].field_256,
           sub_57ba1b20[arg1].field_512,
           sub_57ba1b20[arg1].field_768,
           bool(sub_57ba1b20[arg1].field_928)
}

function sub_f65e6912(?) {
    return sub_f65e6912
}

function sub_fc2d2735(?) {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    return sub_fc2d2735[arg1][arg2]
}

function sub_70413b2c(?) {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
}

function sub_8379dcda(?) {
    require calldata.size - 4 >= 32
    if arg1:
        if arg1 != 1:
            return 0
    return 1
}

function renounceOwnership() {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    owner = 0
    emit OwnershipTransferred(owner, 0);
}

function sub_2304f567(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor113[address(arg1)] = 0
}

function sub_edea8d69(?) {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    stor113[address(arg1)] = 1
}

function setPoundage(uint256 arg1) {
    require calldata.size - 4 >= 32
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg1 > 100:
        revert with 0, 'poundage out of range '
    sub_f65e6912 = arg1
}

function sub_cf893953(?) {
    require calldata.size - 4 >= 64
    require arg2 == bool(arg2)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_57ba1b20[arg1].field_928 = Mask(96, 0, bool(arg2))
    emit 0xe2666231: bool(arg2), msg.sender, arg1
}

function transferOwnership(address arg1) {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    owner = arg1
    emit OwnershipTransferred(owner, arg1);
}

function sub_c364061a(?) {
    require calldata.size - 4 >= 128
    require arg4 == address(arg4)
    if not stor113[msg.sender]:
        revert with 0, 'changeRoyalties: no permission'
    if not arg1:
        if sub_fc2d2735[address(arg4)][arg3] > !arg2:
            revert with 0, 17
        sub_fc2d2735[address(arg4)][arg3] += arg2
    else:
        if 1 == arg1:
            if sub_fc2d2735[address(arg4)][arg3] < arg2:
                revert with 0, 17
            sub_fc2d2735[address(arg4)][arg3] -= arg2
}

function sub_8354bc15(?) {
    require calldata.size - 4 >= 32
    if not stor106[arg1]:
        revert with 0, 'not on sale'
    if not sub_57ba1b20[arg1].field_928:
        revert with 0, 'not on sale'
    if stor107 != msg.sender:
        require ext_code.size(stor107)
        staticcall stor107.0x6352211e with:
                gas gas_remaining wei
               args arg1
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == ext_call.return_data[12 len 20]
        require msg.sender == ext_call.return_data[12 len 20]
    sub_57ba1b20[arg1].field_928 = 0
    emit 0x5d052bf7: msg.sender, arg1
}

function sub_d88b4a44(?) {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    if arg3:
        if arg3 != 1:
            revert with 0, 'rWithdraw: token not supported'
    if arg2 > sub_fc2d2735[msg.sender][arg3]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'rWithdraw: royalties balances is not enough'
    if not arg3:
        if sub_fc2d2735[msg.sender][arg3] < arg2:
            revert with 0, 17
        sub_fc2d2735[msg.sender][arg3] -= arg2
        call address(arg1) with:
           value arg2 wei
             gas 2300 * is_zero(value) wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
    emit Withdraw(arg2, arg3, msg.sender, address(arg1));
}

function sub_4dfd2d46(?) {
    require calldata.size - 4 >= 96
    require arg2 == address(arg2)
    require address(arg2)
    require ext_code.size(stor107)
    call stor107.mintTo(address arg1) with:
         gas gas_remaining wei
        args address(arg2)
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    stor106[ext_call.return_data[0]] = 1
    sub_57ba1b20[ext_call.return_data[0]].field_0 = 0
    sub_57ba1b20[ext_call.return_data[0]].field_256 = arg3
    sub_57ba1b20[ext_call.return_data[0]].field_512 = address(arg2)
    sub_57ba1b20[ext_call.return_data[0]].field_768 = address(arg2)
    sub_57ba1b20[ext_call.return_data[0]].field_928 = 0
    emit 0x67fd955e: arg3, ext_call.return_data[0], address(arg2), arg1
    return ext_call.return_data[0]
}

function sub_93ad62a3(?) {
    require calldata.size - 4 >= 192
    require arg3 == address(arg3)
    require arg4 == bool(arg4)
    require arg6 == address(arg6)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not stor106[arg1]:
        stor106[arg1] = 1
        sub_57ba1b20[arg1].field_0 = arg2
        sub_57ba1b20[arg1].field_256 = arg5
        sub_57ba1b20[arg1].field_512 = address(arg3)
        sub_57ba1b20[arg1].field_768 = address(arg6)
        sub_57ba1b20[arg1].field_928 = Mask(96, 0, bool(arg4))
    else:
        sub_57ba1b20[arg1].field_0 = arg2
        if address(arg3):
            sub_57ba1b20[arg1].field_512 = address(arg3)
        if bool(arg4) != bool(sub_57ba1b20[arg1].field_928):
            sub_57ba1b20[arg1].field_928 = Mask(96, 0, bool(arg4))
        if arg5:
            sub_57ba1b20[arg1].field_256 = arg5
        if address(arg6):
            sub_57ba1b20[arg1].field_768 = address(arg6)
    emit 0xae0dc5b5: arg2, address(arg3), bool(arg4), arg5, address(arg6), msg.sender, arg1
}

function sub_3323103b(?) {
    require calldata.size - 4 >= 96
    require arg1 == address(arg1)
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if arg2 > sub_b24fea7b[arg3]:
        revert with 0, 'withdraw: balance is not enough'
    if sub_b24fea7b[arg3] < arg2:
        revert with 0, 17
    sub_b24fea7b[arg3] -= arg2
    if not arg3:
        call address(arg1) with:
           value arg2 wei
             gas 2300 * is_zero(value) wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
    else:
        if 1 == arg3:
            require ext_code.size(sub_6aafcaa9[arg3])
            call sub_6aafcaa9[arg3].0xa9059cbb with:
                 gas gas_remaining wei
                args address(arg1), arg2
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == bool(ext_call.return_data[0])
    emit Withdraw(arg2, arg3, msg.sender, address(arg1));
}

function sub_70fe24d4(?) {
    require calldata.size - 4 >= 96
    require arg2 == address(arg2)
    require arg3 <= test266151307()
    require arg3 + 35 < calldata.size
    if arg3.length > test266151307():
        revert with 0, 65
    if ceil32(ceil32(arg3.length)) + 97 < 96 or ceil32(ceil32(arg3.length)) + 97 > test266151307():
        revert with 0, 65
    require arg3 + arg3.length + 36 <= calldata.size
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    sub_6aafcaa9[arg1] = address(arg2)
    if stor110[arg1].field_0:
        if stor110[arg1].field_0 == uint255(stor110[arg1].field_0) * 0.5 < 32:
            revert with 0, 34
        if arg3.length:
            stor110[arg1][].field_0 = Array(len=arg3.length, data=arg3[all])
        else:
            stor110[arg1].field_0 = 0
            idx = 0
            while (uint255(stor110[arg1].field_0) * 0.5) + 31 / 32 > idx:
                stor110[arg1][idx].field_0 = 0
                idx = idx + 1
                continue 
    else:
        if stor110[arg1].field_0 == stor110[arg1].field_1 < 32:
            revert with 0, 34
        if arg3.length:
            stor110[arg1][].field_0 = Array(len=arg3.length, data=arg3[all])
        else:
            stor110[arg1].field_0 = 0
            idx = 0
            while stor110[arg1].field_1 + 31 / 32 > idx:
                stor110[arg1][idx].field_0 = 0
                idx = idx + 1
                continue 
}

function getRecord(uint256 arg1) {
    require calldata.size - 4 >= 32
    mem[0] = arg1
    mem[32] = 104
    mem[64] = (32 * sub_9cc8525d[arg1].field_0) + 128
    mem[96] = sub_9cc8525d[arg1].field_0
    s = 128
    idx = 0
    while idx < sub_9cc8525d[arg1].field_0:
        mem[0] = sha3(arg1, 104)
        _18 = mem[64]
        mem[64] = mem[64] + 256
        mem[_18] = sub_9cc8525d[arg1][idx].field_0
        mem[_18 + 32] = sub_9cc8525d[arg1][idx].field_256
        mem[_18 + 64] = sub_9cc8525d[arg1][idx].field_512
        mem[_18 + 96] = sub_9cc8525d[arg1][idx].field_768
        mem[_18 + 128] = sub_9cc8525d[arg1][idx].field_1024
        mem[_18 + 160] = sub_9cc8525d[arg1][idx].field_1280
        mem[_18 + 192] = sub_9cc8525d[arg1][idx].field_1536
        mem[_18 + 224] = sub_9cc8525d[arg1][idx].field_1792
        mem[s] = _18
        s = s + 32
        idx = idx + 1
        continue 
    _19 = mem[64]
    mem[mem[64]] = 32
    _20 = mem[96]
    mem[mem[64] + 32] = mem[96]
    idx = 0
    s = 128
    t = mem[64] + 64
    while idx < _20:
        _31 = mem[s]
        mem[t] = mem[mem[s] + 12 len 20]
        mem[t + 32] = mem[_31 + 44 len 20]
        mem[t + 64] = mem[_31 + 76 len 20]
        mem[t + 96] = mem[_31 + 96]
        mem[t + 128] = mem[_31 + 128]
        mem[t + 160] = mem[_31 + 160]
        mem[t + 192] = mem[_31 + 192]
        mem[t + 224] = mem[_31 + 224]
        idx = idx + 1
        s = s + 32
        t = t + 256
        continue 
    return memory
      from mem[64]
       len _19 + (256 * _20) + -mem[64] + 64
}

function initialize(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if uint8(stor0.field_8):
        stor107 = arg1
        sub_f65e6912 = 15
        owner = msg.sender
        emit OwnershipTransferred(owner, msg.sender);
    else:
        if uint8(stor0.field_0):
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
        if uint8(stor0.field_8):
            stor107 = arg1
            sub_f65e6912 = 15
            owner = msg.sender
            emit OwnershipTransferred(owner, msg.sender);
        else:
            uint16(stor0.field_0) = 257
            stor107 = arg1
            sub_f65e6912 = 15
            if uint8(stor0.field_0):
                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
            if uint8(stor0.field_8):
                owner = msg.sender
                emit OwnershipTransferred(owner, msg.sender);
            else:
                uint16(stor0.field_0) = 257
                if uint8(stor0.field_0):
                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
                if uint8(stor0.field_8):
                    owner = msg.sender
                    emit OwnershipTransferred(owner, msg.sender);
                else:
                    uint16(stor0.field_0) = 257
                    uint8(stor0.field_8) = 0
                    if uint8(stor0.field_0):
                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Initializable: contract is already initialized'
                    if uint8(stor0.field_8):
                        owner = msg.sender
                        emit OwnershipTransferred(owner, msg.sender);
                    else:
                        uint16(stor0.field_0) = 257
                        owner = msg.sender
                        emit OwnershipTransferred(owner, msg.sender);
                        uint8(stor0.field_8) = 0
                        uint8(stor0.field_8) = 0
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not uint8(stor0.field_8):
        uint8(stor0.field_8) = 0
}

function sub_f5379db8(?) {
    require calldata.size - 4 >= 128
    require ext_code.size(stor107)
    staticcall stor107.0x6352211e with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if ext_call.return_data[12 len 20] != msg.sender:
        revert with 0, 'trade: sender dont hold the nft'
    require ext_code.size(stor107)
    staticcall stor107.isApprovedPlate(uint256 arg1) with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == bool(ext_call.return_data[0])
    if not ext_call.return_data[0]:
        revert with 0, 'trade: not approve to platform'
    if arg4:
        if arg4 != 1:
            revert with 0, 'onSale: payType is not supported'
    require ext_code.size(stor107)
    staticcall stor107.getCreator(uint256 arg1) with:
            gas gas_remaining wei
           args arg1
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    if msg.sender == ext_call.return_data[12 len 20]:
        if stor106[arg1]:
            sub_57ba1b20[arg1].field_0 = arg2
        else:
            stor106[arg1] = 1
            sub_57ba1b20[arg1].field_0 = arg2
            sub_57ba1b20[arg1].field_256 = arg3
            sub_57ba1b20[arg1].field_512 = msg.sender
            sub_57ba1b20[arg1].field_768 = msg.sender
            sub_57ba1b20[arg1].field_928 = 0
    else:
        if not stor106[arg1]:
            stor106[arg1] = 1
            require ext_code.size(stor107)
            staticcall stor107.getCreator(uint256 arg1) with:
                    gas gas_remaining wei
                   args arg1
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
            mem[(4 * ceil32(return_data.size)) + 160] = ext_call.return_data[12 len 20]
            sub_57ba1b20[arg1].field_0 = arg2
            sub_57ba1b20[arg1].field_256 = arg3
            sub_57ba1b20[arg1].field_512 = mem[(4 * ceil32(return_data.size)) + 172 len 20]
            sub_57ba1b20[arg1].field_768 = msg.sender
            sub_57ba1b20[arg1].field_928 = 1
        sub_57ba1b20[arg1].field_0 = arg2
    sub_57ba1b20[arg1].field_768 = msg.sender
    sub_57ba1b20[arg1].field_928 = 1
    sub_57ba1b20[arg1].field_936 = Mask(88, 168, msg.sender) >> 168
    sub_764d55f7[arg1] = arg4
    emit 0xaa1d2ed2: arg2, arg3, arg4, msg.sender, arg1
}

function tokenName(uint256 arg1) {
    require calldata.size - 4 >= 32
    if stor110[arg1].field_0:
        if stor110[arg1].field_0 == uint255(stor110[arg1].field_0) * 0.5 < 32:
            revert with 0, 34
        if stor110[arg1].field_0:
            if stor110[arg1].field_0 == uint255(stor110[arg1].field_0) * 0.5 < 32:
                revert with 0, 34
            if Mask(256, -1, stor110[arg1].field_0):
                if 31 < uint255(stor110[arg1].field_0) * 0.5:
                    mem[128] = stor110[arg1].field_0
                    idx = 128
                    s = 0
                    while (uint255(stor110[arg1].field_0) * 0.5) + 96 > idx:
                        mem[idx + 32] = stor110[arg1][s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor110[arg1].field_0), data=mem[128 len ceil32(uint255(stor110[arg1].field_0) * 0.5)])
                mem[128] = 256 * stor110[arg1].field_8
        else:
            if stor110[arg1].field_0 == stor110[arg1].field_1 < 32:
                revert with 0, 34
            if stor110[arg1].field_1:
                if 31 < stor110[arg1].field_1:
                    mem[128] = stor110[arg1].field_0
                    idx = 128
                    s = 0
                    while stor110[arg1].field_1 + 96 > idx:
                        mem[idx + 32] = stor110[arg1][s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor110[arg1].field_0), data=mem[128 len ceil32(uint255(stor110[arg1].field_0) * 0.5)])
                mem[128] = 256 * stor110[arg1].field_8
        mem[ceil32(uint255(stor110[arg1].field_0) * 0.5) + 192 len ceil32(uint255(stor110[arg1].field_0) * 0.5)] = mem[128 len ceil32(uint255(stor110[arg1].field_0) * 0.5)]
        if ceil32(uint255(stor110[arg1].field_0) * 0.5) > uint255(stor110[arg1].field_0) * 0.5:
            mem[(uint255(stor110[arg1].field_0) * 0.5) + ceil32(uint255(stor110[arg1].field_0) * 0.5) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor110[arg1].field_0), data=mem[128 len ceil32(uint255(stor110[arg1].field_0) * 0.5)], mem[(2 * ceil32(uint255(stor110[arg1].field_0) * 0.5)) + 192 len 2 * ceil32(uint255(stor110[arg1].field_0) * 0.5)]), 
    if stor110[arg1].field_0 == stor110[arg1].field_1 < 32:
        revert with 0, 34
    if stor110[arg1].field_0:
        if stor110[arg1].field_0 == uint255(stor110[arg1].field_0) * 0.5 < 32:
            revert with 0, 34
        if Mask(256, -1, stor110[arg1].field_0):
            if 31 < uint255(stor110[arg1].field_0) * 0.5:
                mem[128] = stor110[arg1].field_0
                idx = 128
                s = 0
                while (uint255(stor110[arg1].field_0) * 0.5) + 96 > idx:
                    mem[idx + 32] = stor110[arg1][s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor110[arg1].field_0, data=mem[128 len ceil32(stor110[arg1].field_1)])
            mem[128] = 256 * stor110[arg1].field_8
    else:
        if stor110[arg1].field_0 == stor110[arg1].field_1 < 32:
            revert with 0, 34
        if stor110[arg1].field_1:
            if 31 < stor110[arg1].field_1:
                mem[128] = stor110[arg1].field_0
                idx = 128
                s = 0
                while stor110[arg1].field_1 + 96 > idx:
                    mem[idx + 32] = stor110[arg1][s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor110[arg1].field_0, data=mem[128 len ceil32(stor110[arg1].field_1)])
            mem[128] = 256 * stor110[arg1].field_8
    mem[ceil32(stor110[arg1].field_1) + 192 len ceil32(stor110[arg1].field_1)] = mem[128 len ceil32(stor110[arg1].field_1)]
    if ceil32(stor110[arg1].field_1) > stor110[arg1].field_1:
        mem[stor110[arg1].field_1 + ceil32(stor110[arg1].field_1) + 192] = 0
    return Array(len=stor110[arg1].field_0, data=mem[128 len ceil32(stor110[arg1].field_1)], mem[(2 * ceil32(stor110[arg1].field_1)) + 192 len 2 * ceil32(stor110[arg1].field_1)]), 
}

function _fallback() payable {
    if calldata.size < 4:
        require not calldata.size
    else:
        if unknown_0x9cc8525d(?????) > uint32(call.func_hash) >> 224:
            if unknown_0x70413b2c(?????) > uint32(call.func_hash) >> 224:
                if unknown_0x4dfd2d46(?????) <= uint32(call.func_hash) >> 224:
                    if uint32(call.func_hash) >> 224 != unknown_0x4dfd2d46(?????):
                        if unknown_0x57ba1b20(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            return sub_57ba1b20[arg1].field_256
                        if unknown_0x5a23f64b(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            require arg1 == address(arg1)
                            return bool(stor113[arg1])
                        require unknown_0x6aafcaa9(?????) == uint32(call.func_hash) >> 224
                        require not msg.value
                        require calldata.size - 4 >= 32
                        return sub_6aafcaa9[arg1]
                    require not msg.value
                    require calldata.size - 4 >= 96
                    require arg2 == address(arg2)
                    require address(arg2)
                    require ext_code.size(stor107)
                    call stor107.mintTo(address arg1) with:
                         gas gas_remaining wei
                        args address(arg2)
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    stor106[ext_call.return_data[0]] = 1
                    sub_57ba1b20[ext_call.return_data[0]].field_0 = 0
                    sub_57ba1b20[ext_call.return_data[0]].field_256 = arg3
                    sub_57ba1b20[ext_call.return_data[0]].field_512 = address(arg2)
                    sub_57ba1b20[ext_call.return_data[0]].field_768 = address(arg2)
                    sub_57ba1b20[ext_call.return_data[0]].field_928 = 0
                    emit 0x67fd955e: arg3, ext_call.return_data[0], address(arg2), arg1
                    return ext_call.return_data[0]
                if getRecord(uint256 arg1) == uint32(call.func_hash) >> 224:
                    require not msg.value
                    require calldata.size - 4 >= 32
                    mem[0] = arg1
                    mem[32] = 104
                    mem[64] = (32 * sub_9cc8525d[arg1].field_0) + 160
                    mem[128] = sub_9cc8525d[arg1].field_0
                    s = 160
                    idx = 0
                    while idx < sub_9cc8525d[arg1].field_0:
                        mem[0] = sha3(arg1, 104)
                        _24885 = mem[64]
                        mem[64] = mem[64] + 256
                        mem[_24885] = sub_9cc8525d[arg1][idx].field_0
                        mem[_24885 + 32] = sub_9cc8525d[arg1][idx].field_256
                        mem[_24885 + 64] = sub_9cc8525d[arg1][idx].field_512
                        mem[_24885 + 96] = sub_9cc8525d[arg1][idx].field_768
                        mem[_24885 + 128] = sub_9cc8525d[arg1][idx].field_1024
                        mem[_24885 + 160] = sub_9cc8525d[arg1][idx].field_1280
                        mem[_24885 + 192] = sub_9cc8525d[arg1][idx].field_1536
                        mem[_24885 + 224] = sub_9cc8525d[arg1][idx].field_1792
                        mem[s] = _24885
                        s = s + 32
                        idx = idx + 1
                        continue 
                    _25280 = mem[64]
                    mem[mem[64]] = 32
                    _26241 = mem[128]
                    mem[mem[64] + 32] = mem[128]
                    idx = 0
                    s = 160
                    t = mem[64] + 64
                    while idx < _26241:
                        _45296 = mem[s]
                        mem[t] = mem[mem[s] + 12 len 20]
                        mem[t + 32] = mem[_45296 + 44 len 20]
                        mem[t + 64] = mem[_45296 + 76 len 20]
                        mem[t + 96] = mem[_45296 + 96]
                        mem[t + 128] = mem[_45296 + 128]
                        mem[t + 160] = mem[_45296 + 160]
                        mem[t + 192] = mem[_45296 + 192]
                        mem[t + 224] = mem[_45296 + 224]
                        idx = idx + 1
                        s = s + 32
                        t = t + 256
                        continue 
                    return memory
                      from mem[64]
                       len _25280 + (256 * _26241) + -mem[64] + 64
                if listed(uint256 arg1) == uint32(call.func_hash) >> 224:
                    require not msg.value
                    require calldata.size - 4 >= 32
                    return bool(stor106[arg1])
                if unknown_0x2304f567(?????) == uint32(call.func_hash) >> 224:
                    require not msg.value
                    require calldata.size - 4 >= 32
                    require arg1 == address(arg1)
                    if owner != msg.sender:
                        revert with 0, 'Ownable: caller is not the owner'
                    stor113[address(arg1)] = 0
                else:
                    require unknown_0x3323103b(?????) == uint32(call.func_hash) >> 224
                    require not msg.value
                    require calldata.size - 4 >= 96
                    require arg1 == address(arg1)
                    if owner != msg.sender:
                        revert with 0, 'Ownable: caller is not the owner'
                    if arg2 > sub_b24fea7b[arg3]:
                        revert with 0, 'withdraw: balance is not enough'
                    if sub_b24fea7b[arg3] < arg2:
                        revert with 0, 17
                    sub_b24fea7b[arg3] -= arg2
                    if not arg3:
                        call address(arg1) with:
                           value arg2 wei
                             gas 2300 * is_zero(value) wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if 1 == arg3:
                            require ext_code.size(sub_6aafcaa9[arg3])
                            call sub_6aafcaa9[arg3].0xa9059cbb with:
                                 gas gas_remaining wei
                                args address(arg1), arg2
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    emit Withdraw(arg2, arg3, msg.sender, address(arg1));
            else:
                if unknown_0x8354bc15(?????) > uint32(call.func_hash) >> 224:
                    if unknown_0x70413b2c(?????) == uint32(call.func_hash) >> 224:
                        require not msg.value
                        if owner != msg.sender:
                            revert with 0, 'Ownable: caller is not the owner'
                    else:
                        if uint32(call.func_hash) >> 224 != unknown_0x70fe24d4(?????):
                            if uint32(call.func_hash) >> 224 != unknown_0x715018a6(?????):
                                require unknown_0x764d55f7(?????) == uint32(call.func_hash) >> 224
                                require not msg.value
                                require calldata.size - 4 >= 32
                                return sub_764d55f7[arg1]
                            require not msg.value
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            owner = 0
                            emit OwnershipTransferred(owner, 0);
                        else:
                            require not msg.value
                            require calldata.size - 4 >= 96
                            require arg2 == address(arg2)
                            require arg3 <= test266151307()
                            require arg3 + 35 < calldata.size
                            if arg3.length > test266151307():
                                revert with 0, 65
                            if ceil32(ceil32(arg3.length)) + 129 < 128 or ceil32(ceil32(arg3.length)) + 129 > test266151307():
                                revert with 0, 65
                            require arg3 + arg3.length + 36 <= calldata.size
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            sub_6aafcaa9[arg1] = address(arg2)
                            if stor110[arg1].field_0:
                                if stor110[arg1].field_0 == uint255(stor110[arg1].field_0) * 0.5 < 32:
                                    revert with 0, 34
                                if arg3.length:
                                    stor110[arg1][].field_0 = Array(len=arg3.length, data=arg3[all])
                                else:
                                    stor110[arg1].field_0 = 0
                                    idx = 0
                                    while (uint255(stor110[arg1].field_0) * 0.5) + 31 / 32 > idx:
                                        stor110[arg1][idx].field_0 = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                if stor110[arg1].field_0 == stor110[arg1].field_1 < 32:
                                    revert with 0, 34
                                if arg3.length:
                                    stor110[arg1][].field_0 = Array(len=arg3.length, data=arg3[all])
                                else:
                                    stor110[arg1].field_0 = 0
                                    idx = 0
                                    while stor110[arg1].field_1 + 31 / 32 > idx:
                                        stor110[arg1][idx].field_0 = 0
                                        idx = idx + 1
                                        continue 
                else:
                    if unknown_0x8354bc15(?????) == uint32(call.func_hash) >> 224:
                        require not msg.value
                        require calldata.size - 4 >= 32
                        if not stor106[arg1]:
                            revert with 0, 'not on sale'
                        if not sub_57ba1b20[arg1].field_928:
                            revert with 0, 'not on sale'
                        if stor107 != msg.sender:
                            require ext_code.size(stor107)
                            staticcall stor107.0x6352211e with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            require msg.sender == ext_call.return_data[12 len 20]
                        sub_57ba1b20[arg1].field_928 = 0
                        emit 0x5d052bf7: msg.sender, arg1
                    else:
                        if unknown_0x8379dcda(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            if arg1:
                                if arg1 != 1:
                                    return 0
                            return 1
                        if unknown_0x8da5cb5b(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            return owner
                        if uint32(call.func_hash) >> 224 != unknown_0x93ad62a3(?????):
                            require unknown_0x9a570b4d(?????) == uint32(call.func_hash) >> 224
                            require not msg.value
                            require calldata.size - 4 >= 32
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            if arg1 > 100:
                                revert with 0, 'poundage out of range '
                            sub_f65e6912 = arg1
                        else:
                            require not msg.value
                            require calldata.size - 4 >= 192
                            require arg3 == address(arg3)
                            require arg4 == bool(arg4)
                            require arg6 == address(arg6)
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            if not stor106[arg1]:
                                stor106[arg1] = 1
                                sub_57ba1b20[arg1].field_0 = arg2
                                sub_57ba1b20[arg1].field_256 = arg5
                                sub_57ba1b20[arg1].field_512 = address(arg3)
                                sub_57ba1b20[arg1].field_768 = address(arg6)
                                sub_57ba1b20[arg1].field_928 = Mask(96, 0, bool(arg4))
                            else:
                                sub_57ba1b20[arg1].field_0 = arg2
                                if address(arg3):
                                    sub_57ba1b20[arg1].field_512 = address(arg3)
                                if bool(arg4) != bool(sub_57ba1b20[arg1].field_928):
                                    sub_57ba1b20[arg1].field_928 = Mask(96, 0, bool(arg4))
                                if arg5:
                                    sub_57ba1b20[arg1].field_256 = arg5
                                if address(arg6):
                                    sub_57ba1b20[arg1].field_768 = address(arg6)
                            emit 0xae0dc5b5: arg2, address(arg3), bool(arg4), arg5, address(arg6), msg.sender, arg1
        else:
            if unknown_0xcf893953(?????) > uint32(call.func_hash) >> 224:
                if unknown_0xb24fea7b(?????) > uint32(call.func_hash) >> 224:
                    if unknown_0x9cc8525d(?????) == uint32(call.func_hash) >> 224:
                        require not msg.value
                        require calldata.size - 4 >= 64
                        require arg2 < sub_9cc8525d[arg1].field_0
                        return sub_9cc8525d[arg1][arg2].field_0, 
                               sub_9cc8525d[arg1][arg2].field_256,
                               sub_9cc8525d[arg1][arg2].field_512,
                               sub_9cc8525d[arg1][arg2].field_768,
                               sub_9cc8525d[arg1][arg2].field_1024,
                               sub_9cc8525d[arg1][arg2].field_1280,
                               sub_9cc8525d[arg1][arg2].field_1536,
                               sub_9cc8525d[arg1][arg2].field_1792
                    if unknown_0x9fa6b4a0(?????) == uint32(call.func_hash) >> 224:
                        require not msg.value
                        require calldata.size - 4 >= 32
                        require arg1 == address(arg1)
                        return sub_9fa6b4a0[arg1]
                    if unknown_0xa09c39da(?????) == uint32(call.func_hash) >> 224:
                        require not msg.value
                        return sub_a09c39da
                    require unknown_0xad35efd4(?????) == uint32(call.func_hash) >> 224
                    require not msg.value
                    require calldata.size - 4 >= 32
                    return bool(sub_57ba1b20[arg1].field_928)
                if unknown_0xb24fea7b(?????) == uint32(call.func_hash) >> 224:
                    require not msg.value
                    require calldata.size - 4 >= 32
                    return sub_b24fea7b[arg1]
                if unknown_0xb5f522f7(?????) == uint32(call.func_hash) >> 224:
                    require not msg.value
                    require calldata.size - 4 >= 32
                    return sub_57ba1b20[arg1].field_0, 
                           sub_57ba1b20[arg1].field_256,
                           sub_57ba1b20[arg1].field_512,
                           sub_57ba1b20[arg1].field_768,
                           bool(sub_57ba1b20[arg1].field_928)
                if unknown_0xc364061a(?????) == uint32(call.func_hash) >> 224:
                    require not msg.value
                    require calldata.size - 4 >= 128
                    require arg4 == address(arg4)
                    if not stor113[msg.sender]:
                        revert with 0, 'changeRoyalties: no permission'
                    if not arg1:
                        if sub_fc2d2735[address(arg4)][arg3] > !arg2:
                            revert with 0, 17
                        sub_fc2d2735[address(arg4)][arg3] += arg2
                    else:
                        if 1 == arg1:
                            if sub_fc2d2735[address(arg4)][arg3] < arg2:
                                revert with 0, 17
                            sub_fc2d2735[address(arg4)][arg3] -= arg2
                else:
                    require unknown_0xc4d66de8(?????) == uint32(call.func_hash) >> 224
                    require calldata.size - 4 >= 32
                    require arg1 == address(arg1)
                    if uint8(stor0.field_8):
                        stor107 = address(arg1)
                        sub_f65e6912 = 15
                        owner = msg.sender
                        emit OwnershipTransferred(owner, msg.sender);
                    else:
                        if uint8(stor0.field_0):
                            revert with 0, 'Initializable: contract is already initialized'
                        if uint8(stor0.field_8):
                            stor107 = address(arg1)
                            sub_f65e6912 = 15
                            owner = msg.sender
                            emit OwnershipTransferred(owner, msg.sender);
                        else:
                            uint16(stor0.field_0) = 257
                            stor107 = address(arg1)
                            sub_f65e6912 = 15
                            if uint8(stor0.field_0):
                                revert with 0, 'Initializable: contract is already initialized'
                            if uint8(stor0.field_8):
                                owner = msg.sender
                                emit OwnershipTransferred(owner, msg.sender);
                            else:
                                uint16(stor0.field_0) = 257
                                if uint8(stor0.field_0):
                                    revert with 0, 'Initializable: contract is already initialized'
                                if uint8(stor0.field_8):
                                    owner = msg.sender
                                    emit OwnershipTransferred(owner, msg.sender);
                                else:
                                    uint16(stor0.field_0) = 257
                                    uint8(stor0.field_8) = 0
                                    if uint8(stor0.field_0):
                                        revert with 0, 'Initializable: contract is already initialized'
                                    if uint8(stor0.field_8):
                                        owner = msg.sender
                                        emit OwnershipTransferred(owner, msg.sender);
                                    else:
                                        uint16(stor0.field_0) = 257
                                        owner = msg.sender
                                        emit OwnershipTransferred(owner, msg.sender);
                                        uint8(stor0.field_8) = 0
                                        uint8(stor0.field_8) = 0
                    if owner != msg.sender:
                        revert with 0, 'Ownable: caller is not the owner'
                    if not uint8(stor0.field_8):
                        uint8(stor0.field_8) = 0
            else:
                if unknown_0xedea8d69(?????) <= uint32(call.func_hash) >> 224:
                    if unknown_0xedea8d69(?????) == uint32(call.func_hash) >> 224:
                        require not msg.value
                        require calldata.size - 4 >= 32
                        require arg1 == address(arg1)
                        if owner != msg.sender:
                            revert with 0, 'Ownable: caller is not the owner'
                        stor113[address(arg1)] = 1
                    else:
                        if unknown_0xf2fde38b(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 32
                            require arg1 == address(arg1)
                            if owner != msg.sender:
                                revert with 0, 'Ownable: caller is not the owner'
                            if not address(arg1):
                                revert with 0, 'Ownable: new owner is the zero address'
                            owner = address(arg1)
                            emit OwnershipTransferred(owner, address(arg1));
                        else:
                            if uint32(call.func_hash) >> 224 != unknown_0xf5379db8(?????):
                                if unknown_0xf65e6912(?????) == uint32(call.func_hash) >> 224:
                                    require not msg.value
                                    return sub_f65e6912
                                require unknown_0xfc2d2735(?????) == uint32(call.func_hash) >> 224
                                require not msg.value
                                require calldata.size - 4 >= 64
                                require arg1 == address(arg1)
                                return sub_fc2d2735[arg1][arg2]
                            require not msg.value
                            require calldata.size - 4 >= 128
                            require ext_code.size(stor107)
                            staticcall stor107.0x6352211e with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if ext_call.return_data[12 len 20] != msg.sender:
                                revert with 0, 'trade: sender dont hold the nft'
                            require ext_code.size(stor107)
                            staticcall stor107.isApprovedPlate(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if not ext_call.return_data[0]:
                                revert with 0, 'trade: not approve to platform'
                            if arg4:
                                if arg4 != 1:
                                    revert with 0, 'onSale: payType is not supported'
                            require ext_code.size(stor107)
                            staticcall stor107.getCreator(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args arg1
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                            if msg.sender == ext_call.return_data[12 len 20]:
                                if stor106[arg1]:
                                    sub_57ba1b20[arg1].field_0 = arg2
                                else:
                                    stor106[arg1] = 1
                                    sub_57ba1b20[arg1].field_0 = arg2
                                    sub_57ba1b20[arg1].field_256 = arg3
                                    sub_57ba1b20[arg1].field_512 = msg.sender
                                    sub_57ba1b20[arg1].field_768 = msg.sender
                                    sub_57ba1b20[arg1].field_928 = 0
                            else:
                                if not stor106[arg1]:
                                    stor106[arg1] = 1
                                    require ext_code.size(stor107)
                                    staticcall stor107.getCreator(uint256 arg1) with:
                                            gas gas_remaining wei
                                           args arg1
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                    mem[(4 * ceil32(return_data.size)) + 192] = ext_call.return_data[12 len 20]
                                    sub_57ba1b20[arg1].field_0 = arg2
                                    sub_57ba1b20[arg1].field_256 = arg3
                                    sub_57ba1b20[arg1].field_512 = mem[(4 * ceil32(return_data.size)) + 204 len 20]
                                    sub_57ba1b20[arg1].field_768 = msg.sender
                                    sub_57ba1b20[arg1].field_928 = 1
                                sub_57ba1b20[arg1].field_0 = arg2
                            sub_57ba1b20[arg1].field_768 = msg.sender
                            sub_57ba1b20[arg1].field_928 = 1
                            sub_57ba1b20[arg1].field_936 = Mask(88, 168, msg.sender) >> 168
                            sub_764d55f7[arg1] = arg4
                            emit 0xaa1d2ed2: arg2, arg3, arg4, msg.sender, arg1
                else:
                    if unknown_0xcf893953(?????) == uint32(call.func_hash) >> 224:
                        require not msg.value
                        require calldata.size - 4 >= 64
                        require arg2 == bool(arg2)
                        if owner != msg.sender:
                            revert with 0, 'Ownable: caller is not the owner'
                        sub_57ba1b20[arg1].field_928 = Mask(96, 0, bool(arg2))
                        emit 0xe2666231: bool(arg2), msg.sender, arg1
                    else:
                        if unknown_0xd88b4a44(?????) == uint32(call.func_hash) >> 224:
                            require not msg.value
                            require calldata.size - 4 >= 96
                            require arg1 == address(arg1)
                            if arg3:
                                if arg3 != 1:
                                    revert with 0, 'rWithdraw: token not supported'
                            if arg2 > sub_fc2d2735[msg.sender][arg3]:
                                revert with 0, 'rWithdraw: royalties balances is not enough'
                            if not arg3:
                                if sub_fc2d2735[msg.sender][arg3] < arg2:
                                    revert with 0, 17
                                sub_fc2d2735[msg.sender][arg3] -= arg2
                                call address(arg1) with:
                                   value arg2 wei
                                     gas 2300 * is_zero(value) wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                            emit Withdraw(arg2, arg3, msg.sender, address(arg1));
                        else:
                            if uint32(call.func_hash) >> 224 != unknown_0xd96a094a(?????):
                                require unknown_0xe725f877(?????) == uint32(call.func_hash) >> 224
                                require not msg.value
                                require calldata.size - 4 >= 32
                                if stor110[arg1].field_0:
                                    if stor110[arg1].field_0 == uint255(stor110[arg1].field_0) * 0.5 < 32:
                                        revert with 0, 34
                                    if stor110[arg1].field_0:
                                        if stor110[arg1].field_0 == uint255(stor110[arg1].field_0) * 0.5 < 32:
                                            revert with 0, 34
                                        if Mask(256, -1, stor110[arg1].field_0):
                                            if 31 < uint255(stor110[arg1].field_0) * 0.5:
                                                mem[160] = stor110[arg1].field_0
                                                idx = 160
                                                s = 0
                                                while (uint255(stor110[arg1].field_0) * 0.5) + 128 > idx:
                                                    mem[idx + 32] = stor110[arg1][s].field_256
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                return Array(len=2 * Mask(256, -1, stor110[arg1].field_0), data=mem[160 len ceil32(uint255(stor110[arg1].field_0) * 0.5)])
                                            mem[160] = 256 * stor110[arg1].field_8
                                    else:
                                        if stor110[arg1].field_0 == stor110[arg1].field_1 < 32:
                                            revert with 0, 34
                                        if stor110[arg1].field_1:
                                            if 31 < stor110[arg1].field_1:
                                                mem[160] = stor110[arg1].field_0
                                                idx = 160
                                                s = 0
                                                while stor110[arg1].field_1 + 128 > idx:
                                                    mem[idx + 32] = stor110[arg1][s].field_256
                                                    idx = idx + 32
                                                    s = s + 1
                                                    continue 
                                                return Array(len=2 * Mask(256, -1, stor110[arg1].field_0), data=mem[160 len ceil32(uint255(stor110[arg1].field_0) * 0.5)])
                                            mem[160] = 256 * stor110[arg1].field_8
                                    mem[ceil32(uint255(stor110[arg1].field_0) * 0.5) + 224 len ceil32(uint255(stor110[arg1].field_0) * 0.5)] = mem[160 len ceil32(uint255(stor110[arg1].field_0) * 0.5)]
                                    if ceil32(uint255(stor110[arg1].field_0) * 0.5) > uint255(stor110[arg1].field_0) * 0.5:
                                        mem[(uint255(stor110[arg1].field_0) * 0.5) + ceil32(uint255(stor110[arg1].field_0) * 0.5) + 224] = 0
                                    return Array(len=2 * Mask(256, -1, stor110[arg1].field_0), data=mem[160 len ceil32(uint255(stor110[arg1].field_0) * 0.5)], mem[(2 * ceil32(uint255(stor110[arg1].field_0) * 0.5)) + 224 len 2 * ceil32(uint255(stor110[arg1].field_0) * 0.5)]), 
                                if stor110[arg1].field_0 == stor110[arg1].field_1 < 32:
                                    revert with 0, 34
                                if stor110[arg1].field_0:
                                    if stor110[arg1].field_0 == uint255(stor110[arg1].field_0) * 0.5 < 32:
                                        revert with 0, 34
                                    if Mask(256, -1, stor110[arg1].field_0):
                                        if 31 < uint255(stor110[arg1].field_0) * 0.5:
                                            mem[160] = stor110[arg1].field_0
                                            idx = 160
                                            s = 0
                                            while (uint255(stor110[arg1].field_0) * 0.5) + 128 > idx:
                                                mem[idx + 32] = stor110[arg1][s].field_256
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            return Array(len=stor110[arg1].field_0, data=mem[160 len ceil32(stor110[arg1].field_1)])
                                        mem[160] = 256 * stor110[arg1].field_8
                                else:
                                    if stor110[arg1].field_0 == stor110[arg1].field_1 < 32:
                                        revert with 0, 34
                                    if stor110[arg1].field_1:
                                        if 31 < stor110[arg1].field_1:
                                            mem[160] = stor110[arg1].field_0
                                            idx = 160
                                            s = 0
                                            while stor110[arg1].field_1 + 128 > idx:
                                                mem[idx + 32] = stor110[arg1][s].field_256
                                                idx = idx + 32
                                                s = s + 1
                                                continue 
                                            return Array(len=stor110[arg1].field_0, data=mem[160 len ceil32(stor110[arg1].field_1)])
                                        mem[160] = 256 * stor110[arg1].field_8
                                mem[ceil32(stor110[arg1].field_1) + 224 len ceil32(stor110[arg1].field_1)] = mem[160 len ceil32(stor110[arg1].field_1)]
                                if ceil32(stor110[arg1].field_1) > stor110[arg1].field_1:
                                    mem[stor110[arg1].field_1 + ceil32(stor110[arg1].field_1) + 224] = 0
                                return Array(len=stor110[arg1].field_0, data=mem[160 len ceil32(stor110[arg1].field_1)], mem[(2 * ceil32(stor110[arg1].field_1)) + 224 len 2 * ceil32(stor110[arg1].field_1)]), 
                            require calldata.size - 4 >= 32
                            if not stor106[arg1]:
                                revert with 0, 'not on shelves'
                            if not sub_57ba1b20[arg1].field_928:
                                revert with 0, 'not on sale'
                            mem[132] = arg1
                            require ext_code.size(stor107)
                            staticcall stor107.isApprovedPlate(uint256 arg1) with:
                                    gas gas_remaining wei
                                   args arg1
                            mem[128] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0]:
                                if not sub_57ba1b20[arg1].field_768:
                                    revert with 0, 'sellers can't buy for themselves'
                                if msg.sender == sub_57ba1b20[arg1].field_768:
                                    revert with 0, 'sellers can't buy for themselves'
                                if not sub_764d55f7[arg1]:
                                    if msg.value < sub_57ba1b20[arg1].field_0:
                                        revert with 0, 'don't have enough money'
                                    if sub_f65e6912 > 100:
                                        revert with 0, 'percent invalid'
                                    if not sub_57ba1b20[arg1].field_0:
                                        if 100 < sub_f65e6912:
                                            revert with 0, 17
                                        if -sub_f65e6912 + 100 < sub_57ba1b20[arg1].field_256:
                                            if sub_57ba1b20[arg1].field_0 < 0:
                                                revert with 0, 17
                                            if sub_b24fea7b[stor108[arg1]] > -1:
                                                revert with 0, 17
                                            if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                if not sub_764d55f7[arg1]:
                                                    mem[ceil32(return_data.size) + 128] = 1
                                                    mem[ceil32(return_data.size) + 192] = 1
                                                    mem[64] = ceil32(return_data.size) + 256
                                                    mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                    if 0 > !sub_57ba1b20[arg1].field_0:
                                                        revert with 0, 17
                                                    mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0
                                                    mem[0] = sub_764d55f7[arg1]
                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                        revert with 0, 'pay: token addr not exists'
                                                    if not sub_764d55f7[arg1]:
                                                        idx = 0
                                                        s = 0
                                                        while idx < 1:
                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                revert with 0, 50
                                                            if idx >= mem[ceil32(return_data.size) + 192]:
                                                                revert with 0, 50
                                                            call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                               value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                 gas gas_remaining wei
                                                            if return_data.size:
                                                                _27685 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                mem[_27685] = return_data.size
                                                                mem[_27685 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                revert with 0, 'pays:transfer failed'
                                                            if idx == -1:
                                                                revert with 0, 17
                                                            idx = idx + 1
                                                            s = ext_call.success
                                                            continue 
                                                        _25758 = mem[64]
                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                        mem[mem[64] + 32] = 128
                                                        _26814 = mem[ceil32(return_data.size) + 128]
                                                        mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                        idx = 0
                                                        s = mem[64] + 160
                                                        t = ceil32(return_data.size) + 160
                                                        while idx < _26814:
                                                            mem[s] = mem[t + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[_25758 + 64] = (32 * _26814) + 160
                                                        _45783 = mem[ceil32(return_data.size) + 192]
                                                        mem[_25758 + (32 * _26814) + 160] = mem[ceil32(return_data.size) + 192]
                                                        mem[_25758 + (32 * _26814) + 192 len 32 * _45783] = mem[ceil32(return_data.size) + 224 len 32 * _45783]
                                                        mem[_25758 + 96] = msg.sender
                                                        emit 0x7c53e1df: mem[mem[64] len _25758 + (32 * _26814) + (32 * _45783) + -mem[64] + 192]
                                                    else:
                                                        mem[0] = sub_764d55f7[arg1]
                                                        mem[32] = 109
                                                        idx = 0
                                                        while idx < 1:
                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                revert with 0, 50
                                                            if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                _27683 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                if idx >= mem[ceil32(return_data.size) + 192]:
                                                                    revert with 0, 50
                                                                _28480 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                _29439 = mem[64]
                                                                mem[mem[64] + 36] = msg.sender
                                                                mem[mem[64] + 68] = address(_27683)
                                                                mem[mem[64] + 100] = _28480
                                                                _29440 = mem[64]
                                                                mem[mem[64]] = 100
                                                                mem[64] = mem[64] + 132
                                                                mem[_29440 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29440 + 36 len 28]
                                                                mem[64] = _29439 + 196
                                                                mem[_29439 + 132] = 32
                                                                mem[_29439 + 164] = 'SafeERC20: low-level call failed'
                                                                if eth.balance(this.address) < 0:
                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                    revert with 0, 'Address: call to non-contract'
                                                                _34154 = mem[_29440]
                                                                s = 0
                                                                while s < _34154:
                                                                    mem[s + _29439 + 196] = mem[s + _29440 + 32]
                                                                    s = s + 32
                                                                    continue 
                                                                if ceil32(_34154) > _34154:
                                                                    mem[_34154 + _29439 + 196] = 0
                                                                call sub_6aafcaa9[stor108[arg1]].mem[_29439 + 196 len 4] with:
                                                                     gas gas_remaining wei
                                                                    args mem[_29439 + 200 len _34154 - 4]
                                                                if not return_data.size:
                                                                    if not ext_call.success:
                                                                        if mem[96]:
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        mem[_29439 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[_29439 + 200] = 32
                                                                        idx = 0
                                                                        while idx < 32:
                                                                            mem[idx + _29439 + 264] = mem[idx + _29439 + 164]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 32, 32, mem[_29439 + 264]
                                                                    if mem[96]:
                                                                        require mem[96] >= 32
                                                                        require mem[128] == bool(mem[128])
                                                                        if not mem[128]:
                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                else:
                                                                    mem[64] = _29439 + ceil32(return_data.size) + 197
                                                                    mem[_29439 + 196] = return_data.size
                                                                    mem[_29439 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        if return_data.size:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[_29439 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[_29439 + ceil32(return_data.size) + 201] = 32
                                                                        idx = 0
                                                                        while idx < 32:
                                                                            mem[idx + _29439 + ceil32(return_data.size) + 265] = mem[idx + _29439 + 164]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 32, 32, mem[_29439 + ceil32(return_data.size) + 265]
                                                                    if return_data.size:
                                                                        require return_data.size >= 32
                                                                        require mem[_29439 + 228] == bool(mem[_29439 + 228])
                                                                        if not mem[_29439 + 228]:
                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                            if idx == -1:
                                                                revert with 0, 17
                                                            idx = idx + 1
                                                            continue 
                                                        _25756 = mem[64]
                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                        mem[mem[64] + 32] = 128
                                                        _26812 = mem[ceil32(return_data.size) + 128]
                                                        mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                        idx = 0
                                                        s = mem[64] + 160
                                                        t = ceil32(return_data.size) + 160
                                                        while idx < _26812:
                                                            mem[s] = mem[t + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[_25756 + 64] = (32 * _26812) + 160
                                                        _45780 = mem[ceil32(return_data.size) + 192]
                                                        mem[_25756 + (32 * _26812) + 160] = mem[ceil32(return_data.size) + 192]
                                                        mem[_25756 + (32 * _26812) + 192 len 32 * _45780] = mem[ceil32(return_data.size) + 224 len 32 * _45780]
                                                        mem[_25756 + 96] = msg.sender
                                                        emit 0x7c53e1df: mem[mem[64] len _25756 + (32 * _26812) + (32 * _45780) + -mem[64] + 192]
                                                else:
                                                    if 1 == sub_764d55f7[arg1]:
                                                        mem[ceil32(return_data.size) + 128] = 2
                                                        mem[ceil32(return_data.size) + 224] = 2
                                                        mem[64] = ceil32(return_data.size) + 320
                                                        mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                        if 0 > !sub_57ba1b20[arg1].field_0:
                                                            revert with 0, 17
                                                        mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0
                                                        mem[ceil32(return_data.size) + 192] = this.address
                                                        mem[ceil32(return_data.size) + 288] = 0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 2:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[ceil32(return_data.size) + 224]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                   value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27682 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27682] = return_data.size
                                                                    mem[_27682 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _25753 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26808 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26808:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25753 + 64] = (32 * _26808) + 160
                                                            _45778 = mem[ceil32(return_data.size) + 224]
                                                            mem[_25753 + (32 * _26808) + 160] = mem[ceil32(return_data.size) + 224]
                                                            mem[_25753 + (32 * _26808) + 192 len 32 * _45778] = mem[ceil32(return_data.size) + 256 len 32 * _45778]
                                                            mem[_25753 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25753 + (32 * _26808) + (32 * _45778) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 2:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    _27680 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                    if idx >= mem[ceil32(return_data.size) + 224]:
                                                                        revert with 0, 50
                                                                    _28475 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                    _29434 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27680)
                                                                    mem[mem[64] + 100] = _28475
                                                                    _29435 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29435 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29435 + 36 len 28]
                                                                    mem[64] = _29434 + 196
                                                                    mem[_29434 + 132] = 32
                                                                    mem[_29434 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _34144 = mem[_29435]
                                                                    s = 0
                                                                    while s < _34144:
                                                                        mem[s + _29434 + 196] = mem[s + _29435 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_34144) > _34144:
                                                                        mem[_34144 + _29434 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29434 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29434 + 200 len _34144 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29434 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29434 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29434 + 264] = mem[idx + _29434 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29434 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29434 + ceil32(return_data.size) + 197
                                                                        mem[_29434 + 196] = return_data.size
                                                                        mem[_29434 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29434 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29434 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29434 + ceil32(return_data.size) + 265] = mem[idx + _29434 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29434 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29434 + 228] == bool(mem[_29434 + 228])
                                                                            if not mem[_29434 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _25751 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26806 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26806:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25751 + 64] = (32 * _26806) + 160
                                                            _45775 = mem[ceil32(return_data.size) + 224]
                                                            mem[_25751 + (32 * _26806) + 160] = mem[ceil32(return_data.size) + 224]
                                                            mem[_25751 + (32 * _26806) + 192 len 32 * _45775] = mem[ceil32(return_data.size) + 256 len 32 * _45775]
                                                            mem[_25751 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25751 + (32 * _26806) + (32 * _45775) + -mem[64] + 192]
                                            else:
                                                if not sub_57ba1b20[arg1].field_0:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[ceil32(return_data.size) + 128] = 1
                                                        mem[ceil32(return_data.size) + 192] = 1
                                                        mem[64] = ceil32(return_data.size) + 256
                                                        mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                        mem[ceil32(return_data.size) + 224] = 0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        mem[32] = 109
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[ceil32(return_data.size) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                   value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27673 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27673] = return_data.size
                                                                    mem[_27673 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26790 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26790:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 64] = (32 * _26790) + 160
                                                            _45763 = mem[ceil32(return_data.size) + 192]
                                                            mem[mem[64] + (32 * _26790) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[mem[64] + (32 * _26790) + 192 len 32 * _45763] = mem[ceil32(return_data.size) + 224 len 32 * _45763]
                                                            mem[mem[64] + 96] = msg.sender
                                                            emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26790) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26790) + (32 * _45763) + 64]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    _27671 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    _28460 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                    _29419 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27671)
                                                                    mem[mem[64] + 100] = _28460
                                                                    _29420 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29420 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29420 + 36 len 28]
                                                                    mem[64] = _29419 + 196
                                                                    mem[_29419 + 132] = 32
                                                                    mem[_29419 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _34114 = mem[_29420]
                                                                    s = 0
                                                                    while s < _34114:
                                                                        mem[s + _29419 + 196] = mem[s + _29420 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_34114) > _34114:
                                                                        mem[_34114 + _29419 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29419 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29419 + 200 len _34114 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29419 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29419 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29419 + 264] = mem[idx + _29419 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29419 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29419 + ceil32(return_data.size) + 197
                                                                        mem[_29419 + 196] = return_data.size
                                                                        mem[_29419 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29419 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29419 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29419 + ceil32(return_data.size) + 265] = mem[idx + _29419 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29419 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29419 + 228] == bool(mem[_29419 + 228])
                                                                            if not mem[_29419 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _25736 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26788 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26788:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25736 + 64] = (32 * _26788) + 160
                                                            _45760 = mem[ceil32(return_data.size) + 192]
                                                            mem[_25736 + (32 * _26788) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[_25736 + (32 * _26788) + 192 len 32 * _45760] = mem[ceil32(return_data.size) + 224 len 32 * _45760]
                                                            mem[_25736 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25736 + (32 * _26788) + (32 * _45760) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 2
                                                            mem[ceil32(return_data.size) + 224] = 2
                                                            mem[64] = ceil32(return_data.size) + 320
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[ceil32(return_data.size) + 256] = 0
                                                            mem[ceil32(return_data.size) + 192] = this.address
                                                            if 0 > !sub_57ba1b20[arg1].field_0:
                                                                revert with 0, 17
                                                            mem[ceil32(return_data.size) + 288] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27670 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27670] = return_data.size
                                                                        mem[_27670 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25733 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26784 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26784:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25733 + 64] = (32 * _26784) + 160
                                                                _45758 = mem[ceil32(return_data.size) + 224]
                                                                mem[_25733 + (32 * _26784) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[_25733 + (32 * _26784) + 192 len 32 * _45758] = mem[ceil32(return_data.size) + 256 len 32 * _45758]
                                                                mem[_25733 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25733 + (32 * _26784) + (32 * _45758) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27668 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        _28455 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                        _29414 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27668)
                                                                        mem[mem[64] + 100] = _28455
                                                                        _29415 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29415 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29415 + 36 len 28]
                                                                        mem[64] = _29414 + 196
                                                                        mem[_29414 + 132] = 32
                                                                        mem[_29414 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34104 = mem[_29415]
                                                                        s = 0
                                                                        while s < _34104:
                                                                            mem[s + _29414 + 196] = mem[s + _29415 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34104) > _34104:
                                                                            mem[_34104 + _29414 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29414 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29414 + 200 len _34104 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29414 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29414 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29414 + 264] = mem[idx + _29414 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29414 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29414 + ceil32(return_data.size) + 197
                                                                            mem[_29414 + 196] = return_data.size
                                                                            mem[_29414 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29414 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29414 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29414 + ceil32(return_data.size) + 265] = mem[idx + _29414 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29414 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29414 + 228] == bool(mem[_29414 + 228])
                                                                                if not mem[_29414 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25731 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26782 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26782:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25731 + 64] = (32 * _26782) + 160
                                                                _45755 = mem[ceil32(return_data.size) + 224]
                                                                mem[_25731 + (32 * _26782) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[_25731 + (32 * _26782) + 192 len 32 * _45755] = mem[ceil32(return_data.size) + 256 len 32 * _45755]
                                                                mem[_25731 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25731 + (32 * _26782) + (32 * _45755) + -mem[64] + 192]
                                                else:
                                                    if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !sub_57ba1b20[arg1].field_0:
                                                        revert with 0, 17
                                                    sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] += sub_57ba1b20[arg1].field_0
                                                    if not sub_764d55f7[arg1]:
                                                        mem[ceil32(return_data.size) + 128] = 1
                                                        mem[ceil32(return_data.size) + 192] = 1
                                                        mem[64] = ceil32(return_data.size) + 256
                                                        mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                        mem[ceil32(return_data.size) + 224] = 0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[ceil32(return_data.size) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                   value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27679 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27679] = return_data.size
                                                                    mem[_27679 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _25748 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26802 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26802:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25748 + 64] = (32 * _26802) + 160
                                                            _45773 = mem[ceil32(return_data.size) + 192]
                                                            mem[_25748 + (32 * _26802) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[_25748 + (32 * _26802) + 192 len 32 * _45773] = mem[ceil32(return_data.size) + 224 len 32 * _45773]
                                                            mem[_25748 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25748 + (32 * _26802) + (32 * _45773) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    _27677 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    _28470 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                    _29429 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27677)
                                                                    mem[mem[64] + 100] = _28470
                                                                    _29430 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29430 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29430 + 36 len 28]
                                                                    mem[64] = _29429 + 196
                                                                    mem[_29429 + 132] = 32
                                                                    mem[_29429 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _34134 = mem[_29430]
                                                                    s = 0
                                                                    while s < _34134:
                                                                        mem[s + _29429 + 196] = mem[s + _29430 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_34134) > _34134:
                                                                        mem[_34134 + _29429 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29429 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29429 + 200 len _34134 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29429 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29429 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29429 + 264] = mem[idx + _29429 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29429 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29429 + ceil32(return_data.size) + 197
                                                                        mem[_29429 + 196] = return_data.size
                                                                        mem[_29429 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29429 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29429 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29429 + ceil32(return_data.size) + 265] = mem[idx + _29429 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29429 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29429 + 228] == bool(mem[_29429 + 228])
                                                                            if not mem[_29429 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _25746 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26800 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26800:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25746 + 64] = (32 * _26800) + 160
                                                            _45770 = mem[ceil32(return_data.size) + 192]
                                                            mem[_25746 + (32 * _26800) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[_25746 + (32 * _26800) + 192 len 32 * _45770] = mem[ceil32(return_data.size) + 224 len 32 * _45770]
                                                            mem[_25746 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25746 + (32 * _26800) + (32 * _45770) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 2
                                                            mem[ceil32(return_data.size) + 224] = 2
                                                            mem[64] = ceil32(return_data.size) + 320
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[ceil32(return_data.size) + 256] = 0
                                                            mem[ceil32(return_data.size) + 192] = this.address
                                                            if 0 > !sub_57ba1b20[arg1].field_0:
                                                                revert with 0, 17
                                                            mem[ceil32(return_data.size) + 288] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27676 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27676] = return_data.size
                                                                        mem[_27676 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25743 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26796 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26796:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25743 + 64] = (32 * _26796) + 160
                                                                _45768 = mem[ceil32(return_data.size) + 224]
                                                                mem[_25743 + (32 * _26796) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[_25743 + (32 * _26796) + 192 len 32 * _45768] = mem[ceil32(return_data.size) + 256 len 32 * _45768]
                                                                mem[_25743 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25743 + (32 * _26796) + (32 * _45768) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27674 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        _28465 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                        _29424 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27674)
                                                                        mem[mem[64] + 100] = _28465
                                                                        _29425 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29425 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29425 + 36 len 28]
                                                                        mem[64] = _29424 + 196
                                                                        mem[_29424 + 132] = 32
                                                                        mem[_29424 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34124 = mem[_29425]
                                                                        s = 0
                                                                        while s < _34124:
                                                                            mem[s + _29424 + 196] = mem[s + _29425 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34124) > _34124:
                                                                            mem[_34124 + _29424 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29424 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29424 + 200 len _34124 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29424 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29424 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29424 + 264] = mem[idx + _29424 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29424 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29424 + ceil32(return_data.size) + 197
                                                                            mem[_29424 + 196] = return_data.size
                                                                            mem[_29424 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29424 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29424 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29424 + ceil32(return_data.size) + 265] = mem[idx + _29424 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29424 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29424 + 228] == bool(mem[_29424 + 228])
                                                                                if not mem[_29424 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25741 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26794 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26794:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25741 + 64] = (32 * _26794) + 160
                                                                _45765 = mem[ceil32(return_data.size) + 224]
                                                                mem[_25741 + (32 * _26794) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[_25741 + (32 * _26794) + 192 len 32 * _45765] = mem[ceil32(return_data.size) + 256 len 32 * _45765]
                                                                mem[_25741 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25741 + (32 * _26794) + (32 * _45765) + -mem[64] + 192]
                                            require ext_code.size(stor107)
                                            call stor107.0x23b872dd with:
                                                 gas gas_remaining wei
                                                args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            sub_57ba1b20[arg1].field_928 = 0
                                            emit 0xcc45266b: sub_57ba1b20[arg1].field_0, 0, sub_57ba1b20[arg1].field_0, 0, sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                        else:
                                            if sub_57ba1b20[arg1].field_256 > 100:
                                                revert with 0, 'percent invalid'
                                            if not sub_57ba1b20[arg1].field_0:
                                                if sub_57ba1b20[arg1].field_0 < 0:
                                                    revert with 0, 17
                                                if sub_b24fea7b[stor108[arg1]] > -1:
                                                    revert with 0, 17
                                                if sub_57ba1b20[arg1].field_768 != sub_57ba1b20[arg1].field_512:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[ceil32(return_data.size) + 128] = 1
                                                        mem[ceil32(return_data.size) + 192] = 1
                                                        mem[64] = ceil32(return_data.size) + 256
                                                        mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                        mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[ceil32(return_data.size) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                   value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27661 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27661] = return_data.size
                                                                    mem[_27661 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _25718 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26766 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26766:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25718 + 64] = (32 * _26766) + 160
                                                            _45743 = mem[ceil32(return_data.size) + 192]
                                                            mem[_25718 + (32 * _26766) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[_25718 + (32 * _26766) + 192 len 32 * _45743] = mem[ceil32(return_data.size) + 224 len 32 * _45743]
                                                            mem[_25718 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25718 + (32 * _26766) + (32 * _45743) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    _27659 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    _28440 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                    _29399 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27659)
                                                                    mem[mem[64] + 100] = _28440
                                                                    _29400 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29400 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29400 + 36 len 28]
                                                                    mem[64] = _29399 + 196
                                                                    mem[_29399 + 132] = 32
                                                                    mem[_29399 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _34074 = mem[_29400]
                                                                    s = 0
                                                                    while s < _34074:
                                                                        mem[s + _29399 + 196] = mem[s + _29400 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_34074) > _34074:
                                                                        mem[_34074 + _29399 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29399 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29399 + 200 len _34074 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29399 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29399 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29399 + 264] = mem[idx + _29399 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29399 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29399 + ceil32(return_data.size) + 197
                                                                        mem[_29399 + 196] = return_data.size
                                                                        mem[_29399 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29399 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29399 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29399 + ceil32(return_data.size) + 265] = mem[idx + _29399 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29399 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29399 + 228] == bool(mem[_29399 + 228])
                                                                            if not mem[_29399 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _25716 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26764 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26764:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25716 + 64] = (32 * _26764) + 160
                                                            _45740 = mem[ceil32(return_data.size) + 192]
                                                            mem[_25716 + (32 * _26764) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[_25716 + (32 * _26764) + 192 len 32 * _45740] = mem[ceil32(return_data.size) + 224 len 32 * _45740]
                                                            mem[_25716 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25716 + (32 * _26764) + (32 * _45740) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 2
                                                            mem[ceil32(return_data.size) + 224] = 2
                                                            mem[64] = ceil32(return_data.size) + 320
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0
                                                            mem[ceil32(return_data.size) + 192] = this.address
                                                            mem[ceil32(return_data.size) + 288] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27658 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27658] = return_data.size
                                                                        mem[_27658 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25713 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26760 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26760:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25713 + 64] = (32 * _26760) + 160
                                                                _45738 = mem[ceil32(return_data.size) + 224]
                                                                mem[_25713 + (32 * _26760) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[_25713 + (32 * _26760) + 192 len 32 * _45738] = mem[ceil32(return_data.size) + 256 len 32 * _45738]
                                                                mem[_25713 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25713 + (32 * _26760) + (32 * _45738) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27656 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        _28435 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                        _29394 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27656)
                                                                        mem[mem[64] + 100] = _28435
                                                                        _29395 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29395 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29395 + 36 len 28]
                                                                        mem[64] = _29394 + 196
                                                                        mem[_29394 + 132] = 32
                                                                        mem[_29394 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34064 = mem[_29395]
                                                                        s = 0
                                                                        while s < _34064:
                                                                            mem[s + _29394 + 196] = mem[s + _29395 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34064) > _34064:
                                                                            mem[_34064 + _29394 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29394 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29394 + 200 len _34064 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29394 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29394 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29394 + 264] = mem[idx + _29394 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29394 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29394 + ceil32(return_data.size) + 197
                                                                            mem[_29394 + 196] = return_data.size
                                                                            mem[_29394 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29394 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29394 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29394 + ceil32(return_data.size) + 265] = mem[idx + _29394 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29394 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29394 + 228] == bool(mem[_29394 + 228])
                                                                                if not mem[_29394 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25711 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26758 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26758:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25711 + 64] = (32 * _26758) + 160
                                                                _45735 = mem[ceil32(return_data.size) + 224]
                                                                mem[_25711 + (32 * _26758) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[_25711 + (32 * _26758) + 192 len 32 * _45735] = mem[ceil32(return_data.size) + 256 len 32 * _45735]
                                                                mem[_25711 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25711 + (32 * _26758) + (32 * _45735) + -mem[64] + 192]
                                                else:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[ceil32(return_data.size) + 128] = 1
                                                        mem[ceil32(return_data.size) + 192] = 1
                                                        mem[64] = ceil32(return_data.size) + 256
                                                        mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                        if sub_57ba1b20[arg1].field_0 > -1:
                                                            revert with 0, 17
                                                        mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[ceil32(return_data.size) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                   value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27667 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27667] = return_data.size
                                                                    mem[_27667 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _25728 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26778 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26778:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25728 + 64] = (32 * _26778) + 160
                                                            _45753 = mem[ceil32(return_data.size) + 192]
                                                            mem[_25728 + (32 * _26778) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[_25728 + (32 * _26778) + 192 len 32 * _45753] = mem[ceil32(return_data.size) + 224 len 32 * _45753]
                                                            mem[_25728 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25728 + (32 * _26778) + (32 * _45753) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    _27665 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    _28450 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                    _29409 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27665)
                                                                    mem[mem[64] + 100] = _28450
                                                                    _29410 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29410 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29410 + 36 len 28]
                                                                    mem[64] = _29409 + 196
                                                                    mem[_29409 + 132] = 32
                                                                    mem[_29409 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _34094 = mem[_29410]
                                                                    s = 0
                                                                    while s < _34094:
                                                                        mem[s + _29409 + 196] = mem[s + _29410 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_34094) > _34094:
                                                                        mem[_34094 + _29409 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29409 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29409 + 200 len _34094 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29409 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29409 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29409 + 264] = mem[idx + _29409 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29409 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29409 + ceil32(return_data.size) + 197
                                                                        mem[_29409 + 196] = return_data.size
                                                                        mem[_29409 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29409 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29409 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29409 + ceil32(return_data.size) + 265] = mem[idx + _29409 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29409 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29409 + 228] == bool(mem[_29409 + 228])
                                                                            if not mem[_29409 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _25726 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26776 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26776:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25726 + 64] = (32 * _26776) + 160
                                                            _45750 = mem[ceil32(return_data.size) + 192]
                                                            mem[_25726 + (32 * _26776) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[_25726 + (32 * _26776) + 192 len 32 * _45750] = mem[ceil32(return_data.size) + 224 len 32 * _45750]
                                                            mem[_25726 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25726 + (32 * _26776) + (32 * _45750) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 2
                                                            mem[ceil32(return_data.size) + 224] = 2
                                                            mem[64] = ceil32(return_data.size) + 320
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 > -1:
                                                                revert with 0, 17
                                                            mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0
                                                            mem[ceil32(return_data.size) + 192] = this.address
                                                            mem[ceil32(return_data.size) + 288] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27664 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27664] = return_data.size
                                                                        mem[_27664 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26772 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26772:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _26772) + 160
                                                                _45748 = mem[ceil32(return_data.size) + 224]
                                                                mem[mem[64] + (32 * _26772) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[mem[64] + (32 * _26772) + 192 len 32 * _45748] = mem[ceil32(return_data.size) + 256 len 32 * _45748]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26772) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26772) + (32 * _45748) + 64]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27662 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        _28445 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                        _29404 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27662)
                                                                        mem[mem[64] + 100] = _28445
                                                                        _29405 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29405 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29405 + 36 len 28]
                                                                        mem[64] = _29404 + 196
                                                                        mem[_29404 + 132] = 32
                                                                        mem[_29404 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34084 = mem[_29405]
                                                                        s = 0
                                                                        while s < _34084:
                                                                            mem[s + _29404 + 196] = mem[s + _29405 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34084) > _34084:
                                                                            mem[_34084 + _29404 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29404 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29404 + 200 len _34084 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29404 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29404 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29404 + 264] = mem[idx + _29404 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29404 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29404 + ceil32(return_data.size) + 197
                                                                            mem[_29404 + 196] = return_data.size
                                                                            mem[_29404 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29404 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29404 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29404 + ceil32(return_data.size) + 265] = mem[idx + _29404 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29404 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29404 + 228] == bool(mem[_29404 + 228])
                                                                                if not mem[_29404 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25721 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26770 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26770:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25721 + 64] = (32 * _26770) + 160
                                                                _45745 = mem[ceil32(return_data.size) + 224]
                                                                mem[_25721 + (32 * _26770) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[_25721 + (32 * _26770) + 192 len 32 * _45745] = mem[ceil32(return_data.size) + 256 len 32 * _45745]
                                                                mem[_25721 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25721 + (32 * _26770) + (32 * _45745) + -mem[64] + 192]
                                                require ext_code.size(stor107)
                                                call stor107.0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                sub_57ba1b20[arg1].field_928 = 0
                                                emit 0xcc45266b: sub_57ba1b20[arg1].field_0, 0, 0, sub_57ba1b20[arg1].field_0, sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                            else:
                                                if sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / sub_57ba1b20[arg1].field_0 != sub_57ba1b20[arg1].field_256:
                                                    revert with 0, 'arithmetic error'
                                                if sub_57ba1b20[arg1].field_0 < 0:
                                                    revert with 0, 17
                                                if sub_57ba1b20[arg1].field_0 < sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                    revert with 0, 17
                                                if sub_b24fea7b[stor108[arg1]] > -1:
                                                    revert with 0, 17
                                                if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[ceil32(return_data.size) + 128] = 1
                                                        mem[ceil32(return_data.size) + 192] = 1
                                                        mem[64] = ceil32(return_data.size) + 256
                                                        mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                        if sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                            revert with 0, 17
                                                        mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[ceil32(return_data.size) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                   value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27655 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27655] = return_data.size
                                                                    mem[_27655 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _25708 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26754 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26754:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25708 + 64] = (32 * _26754) + 160
                                                            _45733 = mem[ceil32(return_data.size) + 192]
                                                            mem[_25708 + (32 * _26754) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[_25708 + (32 * _26754) + 192 len 32 * _45733] = mem[ceil32(return_data.size) + 224 len 32 * _45733]
                                                            mem[_25708 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25708 + (32 * _26754) + (32 * _45733) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    _27653 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    _28430 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                    _29389 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27653)
                                                                    mem[mem[64] + 100] = _28430
                                                                    _29390 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29390 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29390 + 36 len 28]
                                                                    mem[64] = _29389 + 196
                                                                    mem[_29389 + 132] = 32
                                                                    mem[_29389 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _34054 = mem[_29390]
                                                                    s = 0
                                                                    while s < _34054:
                                                                        mem[s + _29389 + 196] = mem[s + _29390 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_34054) > _34054:
                                                                        mem[_34054 + _29389 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29389 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29389 + 200 len _34054 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29389 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29389 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29389 + 264] = mem[idx + _29389 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29389 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29389 + ceil32(return_data.size) + 197
                                                                        mem[_29389 + 196] = return_data.size
                                                                        mem[_29389 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29389 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29389 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29389 + ceil32(return_data.size) + 265] = mem[idx + _29389 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29389 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29389 + 228] == bool(mem[_29389 + 228])
                                                                            if not mem[_29389 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _25706 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26752 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26752:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25706 + 64] = (32 * _26752) + 160
                                                            _45730 = mem[ceil32(return_data.size) + 192]
                                                            mem[_25706 + (32 * _26752) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[_25706 + (32 * _26752) + 192 len 32 * _45730] = mem[ceil32(return_data.size) + 224 len 32 * _45730]
                                                            mem[_25706 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25706 + (32 * _26752) + (32 * _45730) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 2
                                                            mem[ceil32(return_data.size) + 224] = 2
                                                            mem[64] = ceil32(return_data.size) + 320
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0
                                                            mem[ceil32(return_data.size) + 192] = this.address
                                                            mem[ceil32(return_data.size) + 288] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27652 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27652] = return_data.size
                                                                        mem[_27652 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25703 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26748 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26748:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25703 + 64] = (32 * _26748) + 160
                                                                _45728 = mem[ceil32(return_data.size) + 224]
                                                                mem[_25703 + (32 * _26748) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[_25703 + (32 * _26748) + 192 len 32 * _45728] = mem[ceil32(return_data.size) + 256 len 32 * _45728]
                                                                mem[_25703 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25703 + (32 * _26748) + (32 * _45728) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27650 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        _28425 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                        _29384 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27650)
                                                                        mem[mem[64] + 100] = _28425
                                                                        _29385 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29385 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29385 + 36 len 28]
                                                                        mem[64] = _29384 + 196
                                                                        mem[_29384 + 132] = 32
                                                                        mem[_29384 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34044 = mem[_29385]
                                                                        s = 0
                                                                        while s < _34044:
                                                                            mem[s + _29384 + 196] = mem[s + _29385 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34044) > _34044:
                                                                            mem[_34044 + _29384 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29384 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29384 + 200 len _34044 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29384 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29384 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29384 + 264] = mem[idx + _29384 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29384 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29384 + ceil32(return_data.size) + 197
                                                                            mem[_29384 + 196] = return_data.size
                                                                            mem[_29384 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29384 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29384 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29384 + ceil32(return_data.size) + 265] = mem[idx + _29384 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29384 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29384 + 228] == bool(mem[_29384 + 228])
                                                                                if not mem[_29384 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25701 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26746 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26746:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25701 + 64] = (32 * _26746) + 160
                                                                _45725 = mem[ceil32(return_data.size) + 224]
                                                                mem[_25701 + (32 * _26746) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[_25701 + (32 * _26746) + 192 len 32 * _45725] = mem[ceil32(return_data.size) + 256 len 32 * _45725]
                                                                mem[_25701 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25701 + (32 * _26746) + (32 * _45725) + -mem[64] + 192]
                                                else:
                                                    if not sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 1
                                                            mem[ceil32(return_data.size) + 192] = 1
                                                            mem[64] = ceil32(return_data.size) + 256
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27643 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27643] = return_data.size
                                                                        mem[_27643 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25688 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26730 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26730:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25688 + 64] = (32 * _26730) + 160
                                                                _45713 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25688 + (32 * _26730) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25688 + (32 * _26730) + 192 len 32 * _45713] = mem[ceil32(return_data.size) + 224 len 32 * _45713]
                                                                mem[_25688 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25688 + (32 * _26730) + (32 * _45713) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27641 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 192]:
                                                                            revert with 0, 50
                                                                        _28410 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                        _29369 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27641)
                                                                        mem[mem[64] + 100] = _28410
                                                                        _29370 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29370 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29370 + 36 len 28]
                                                                        mem[64] = _29369 + 196
                                                                        mem[_29369 + 132] = 32
                                                                        mem[_29369 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34014 = mem[_29370]
                                                                        s = 0
                                                                        while s < _34014:
                                                                            mem[s + _29369 + 196] = mem[s + _29370 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34014) > _34014:
                                                                            mem[_34014 + _29369 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29369 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29369 + 200 len _34014 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29369 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29369 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29369 + 264] = mem[idx + _29369 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29369 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29369 + ceil32(return_data.size) + 197
                                                                            mem[_29369 + 196] = return_data.size
                                                                            mem[_29369 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29369 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29369 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29369 + ceil32(return_data.size) + 265] = mem[idx + _29369 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29369 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29369 + 228] == bool(mem[_29369 + 228])
                                                                                if not mem[_29369 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25686 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26728 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26728:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25686 + 64] = (32 * _26728) + 160
                                                                _45710 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25686 + (32 * _26728) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25686 + (32 * _26728) + 192 len 32 * _45710] = mem[ceil32(return_data.size) + 224 len 32 * _45710]
                                                                mem[_25686 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25686 + (32 * _26728) + (32 * _45710) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[ceil32(return_data.size) + 128] = 2
                                                                mem[ceil32(return_data.size) + 224] = 2
                                                                mem[64] = ceil32(return_data.size) + 320
                                                                mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[ceil32(return_data.size) + 192] = this.address
                                                                if 0 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                    revert with 0, 17
                                                                mem[ceil32(return_data.size) + 288] = sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                           value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27640 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27640] = return_data.size
                                                                            mem[_27640 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25683 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26724 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26724:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25683 + 64] = (32 * _26724) + 160
                                                                    _45708 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25683 + (32 * _26724) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25683 + (32 * _26724) + 192 len 32 * _45708] = mem[ceil32(return_data.size) + 256 len 32 * _45708]
                                                                    mem[_25683 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25683 + (32 * _26724) + (32 * _45708) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            _27638 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                            if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                revert with 0, 50
                                                                            _28405 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                            _29364 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27638)
                                                                            mem[mem[64] + 100] = _28405
                                                                            _29365 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29365 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29365 + 36 len 28]
                                                                            mem[64] = _29364 + 196
                                                                            mem[_29364 + 132] = 32
                                                                            mem[_29364 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34004 = mem[_29365]
                                                                            s = 0
                                                                            while s < _34004:
                                                                                mem[s + _29364 + 196] = mem[s + _29365 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34004) > _34004:
                                                                                mem[_34004 + _29364 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29364 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29364 + 200 len _34004 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29364 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29364 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29364 + 264] = mem[idx + _29364 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29364 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29364 + ceil32(return_data.size) + 197
                                                                                mem[_29364 + 196] = return_data.size
                                                                                mem[_29364 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29364 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29364 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29364 + ceil32(return_data.size) + 265] = mem[idx + _29364 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29364 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29364 + 228] == bool(mem[_29364 + 228])
                                                                                    if not mem[_29364 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25681 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26722 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26722:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25681 + 64] = (32 * _26722) + 160
                                                                    _45705 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25681 + (32 * _26722) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25681 + (32 * _26722) + 192 len 32 * _45705] = mem[ceil32(return_data.size) + 256 len 32 * _45705]
                                                                    mem[_25681 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25681 + (32 * _26722) + (32 * _45705) + -mem[64] + 192]
                                                    else:
                                                        if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                            revert with 0, 17
                                                        sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] += sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                        if not sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 1
                                                            mem[ceil32(return_data.size) + 192] = 1
                                                            mem[64] = ceil32(return_data.size) + 256
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27649 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27649] = return_data.size
                                                                        mem[_27649 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25698 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26742 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26742:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25698 + 64] = (32 * _26742) + 160
                                                                _45723 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25698 + (32 * _26742) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25698 + (32 * _26742) + 192 len 32 * _45723] = mem[ceil32(return_data.size) + 224 len 32 * _45723]
                                                                mem[_25698 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25698 + (32 * _26742) + (32 * _45723) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27647 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 192]:
                                                                            revert with 0, 50
                                                                        _28420 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                        _29379 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27647)
                                                                        mem[mem[64] + 100] = _28420
                                                                        _29380 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29380 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29380 + 36 len 28]
                                                                        mem[64] = _29379 + 196
                                                                        mem[_29379 + 132] = 32
                                                                        mem[_29379 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34034 = mem[_29380]
                                                                        s = 0
                                                                        while s < _34034:
                                                                            mem[s + _29379 + 196] = mem[s + _29380 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34034) > _34034:
                                                                            mem[_34034 + _29379 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29379 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29379 + 200 len _34034 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29379 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29379 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29379 + 264] = mem[idx + _29379 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29379 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29379 + ceil32(return_data.size) + 197
                                                                            mem[_29379 + 196] = return_data.size
                                                                            mem[_29379 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29379 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29379 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29379 + ceil32(return_data.size) + 265] = mem[idx + _29379 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29379 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29379 + 228] == bool(mem[_29379 + 228])
                                                                                if not mem[_29379 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25696 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26740 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26740:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25696 + 64] = (32 * _26740) + 160
                                                                _45720 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25696 + (32 * _26740) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25696 + (32 * _26740) + 192 len 32 * _45720] = mem[ceil32(return_data.size) + 224 len 32 * _45720]
                                                                mem[_25696 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25696 + (32 * _26740) + (32 * _45720) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[ceil32(return_data.size) + 128] = 2
                                                                mem[ceil32(return_data.size) + 224] = 2
                                                                mem[64] = ceil32(return_data.size) + 320
                                                                mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[ceil32(return_data.size) + 192] = this.address
                                                                if 0 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                    revert with 0, 17
                                                                mem[ceil32(return_data.size) + 288] = sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                           value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27646 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27646] = return_data.size
                                                                            mem[_27646 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25693 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26736 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26736:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25693 + 64] = (32 * _26736) + 160
                                                                    _45718 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25693 + (32 * _26736) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25693 + (32 * _26736) + 192 len 32 * _45718] = mem[ceil32(return_data.size) + 256 len 32 * _45718]
                                                                    mem[_25693 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25693 + (32 * _26736) + (32 * _45718) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            _27644 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                            if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                revert with 0, 50
                                                                            _28415 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                            _29374 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27644)
                                                                            mem[mem[64] + 100] = _28415
                                                                            _29375 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29375 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29375 + 36 len 28]
                                                                            mem[64] = _29374 + 196
                                                                            mem[_29374 + 132] = 32
                                                                            mem[_29374 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34024 = mem[_29375]
                                                                            s = 0
                                                                            while s < _34024:
                                                                                mem[s + _29374 + 196] = mem[s + _29375 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34024) > _34024:
                                                                                mem[_34024 + _29374 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29374 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29374 + 200 len _34024 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29374 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29374 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29374 + 264] = mem[idx + _29374 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29374 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29374 + ceil32(return_data.size) + 197
                                                                                mem[_29374 + 196] = return_data.size
                                                                                mem[_29374 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29374 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29374 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29374 + ceil32(return_data.size) + 265] = mem[idx + _29374 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29374 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29374 + 228] == bool(mem[_29374 + 228])
                                                                                    if not mem[_29374 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25691 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26734 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26734:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25691 + 64] = (32 * _26734) + 160
                                                                    _45715 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25691 + (32 * _26734) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25691 + (32 * _26734) + 192 len 32 * _45715] = mem[ceil32(return_data.size) + 256 len 32 * _45715]
                                                                    mem[_25691 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25691 + (32 * _26734) + (32 * _45715) + -mem[64] + 192]
                                                require ext_code.size(stor107)
                                                call stor107.0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                sub_57ba1b20[arg1].field_928 = 0
                                                emit 0xcc45266b: sub_57ba1b20[arg1].field_0, 0, sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100), sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                    else:
                                        if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / sub_57ba1b20[arg1].field_0 != sub_f65e6912:
                                            revert with 0, 'arithmetic error'
                                        if 100 < sub_f65e6912:
                                            revert with 0, 17
                                        if -sub_f65e6912 + 100 < sub_57ba1b20[arg1].field_256:
                                            if sub_57ba1b20[arg1].field_0 < sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100:
                                                revert with 0, 17
                                            if sub_b24fea7b[stor108[arg1]] > !(sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                revert with 0, 17
                                            sub_b24fea7b[stor108[arg1]] += sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                            if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                if not sub_764d55f7[arg1]:
                                                    mem[ceil32(return_data.size) + 128] = 1
                                                    mem[ceil32(return_data.size) + 192] = 1
                                                    mem[64] = ceil32(return_data.size) + 256
                                                    mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                    if 0 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                        revert with 0, 17
                                                    mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                    mem[0] = sub_764d55f7[arg1]
                                                    mem[32] = 109
                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                        revert with 0, 'pay: token addr not exists'
                                                    if not sub_764d55f7[arg1]:
                                                        idx = 0
                                                        s = 0
                                                        while idx < 1:
                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                revert with 0, 50
                                                            if idx >= mem[ceil32(return_data.size) + 192]:
                                                                revert with 0, 50
                                                            call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                               value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                 gas gas_remaining wei
                                                            if return_data.size:
                                                                _27637 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                mem[_27637] = return_data.size
                                                                mem[_27637 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                revert with 0, 'pays:transfer failed'
                                                            if idx == -1:
                                                                revert with 0, 17
                                                            idx = idx + 1
                                                            s = ext_call.success
                                                            continue 
                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                        mem[mem[64] + 32] = 128
                                                        _26718 = mem[ceil32(return_data.size) + 128]
                                                        mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                        idx = 0
                                                        s = mem[64] + 160
                                                        t = ceil32(return_data.size) + 160
                                                        while idx < _26718:
                                                            mem[s] = mem[t + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 64] = (32 * _26718) + 160
                                                        _45703 = mem[ceil32(return_data.size) + 192]
                                                        mem[mem[64] + (32 * _26718) + 160] = mem[ceil32(return_data.size) + 192]
                                                        mem[mem[64] + (32 * _26718) + 192 len 32 * _45703] = mem[ceil32(return_data.size) + 224 len 32 * _45703]
                                                        mem[mem[64] + 96] = msg.sender
                                                        emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26718) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26718) + (32 * _45703) + 64]
                                                    else:
                                                        mem[0] = sub_764d55f7[arg1]
                                                        mem[32] = 109
                                                        idx = 0
                                                        while idx < 1:
                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                revert with 0, 50
                                                            if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                _27635 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                if idx >= mem[ceil32(return_data.size) + 192]:
                                                                    revert with 0, 50
                                                                _28400 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                _29359 = mem[64]
                                                                mem[mem[64] + 36] = msg.sender
                                                                mem[mem[64] + 68] = address(_27635)
                                                                mem[mem[64] + 100] = _28400
                                                                _29360 = mem[64]
                                                                mem[mem[64]] = 100
                                                                mem[64] = mem[64] + 132
                                                                mem[_29360 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29360 + 36 len 28]
                                                                mem[64] = _29359 + 196
                                                                mem[_29359 + 132] = 32
                                                                mem[_29359 + 164] = 'SafeERC20: low-level call failed'
                                                                if eth.balance(this.address) < 0:
                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                    revert with 0, 'Address: call to non-contract'
                                                                _33994 = mem[_29360]
                                                                s = 0
                                                                while s < _33994:
                                                                    mem[s + _29359 + 196] = mem[s + _29360 + 32]
                                                                    s = s + 32
                                                                    continue 
                                                                if ceil32(_33994) > _33994:
                                                                    mem[_33994 + _29359 + 196] = 0
                                                                call sub_6aafcaa9[stor108[arg1]].mem[_29359 + 196 len 4] with:
                                                                     gas gas_remaining wei
                                                                    args mem[_29359 + 200 len _33994 - 4]
                                                                if not return_data.size:
                                                                    if not ext_call.success:
                                                                        if mem[96]:
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        mem[_29359 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[_29359 + 200] = 32
                                                                        idx = 0
                                                                        while idx < 32:
                                                                            mem[idx + _29359 + 264] = mem[idx + _29359 + 164]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 32, 32, mem[_29359 + 264]
                                                                    if mem[96]:
                                                                        require mem[96] >= 32
                                                                        require mem[128] == bool(mem[128])
                                                                        if not mem[128]:
                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                else:
                                                                    mem[64] = _29359 + ceil32(return_data.size) + 197
                                                                    mem[_29359 + 196] = return_data.size
                                                                    mem[_29359 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        if return_data.size:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[_29359 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[_29359 + ceil32(return_data.size) + 201] = 32
                                                                        idx = 0
                                                                        while idx < 32:
                                                                            mem[idx + _29359 + ceil32(return_data.size) + 265] = mem[idx + _29359 + 164]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 32, 32, mem[_29359 + ceil32(return_data.size) + 265]
                                                                    if return_data.size:
                                                                        require return_data.size >= 32
                                                                        require mem[_29359 + 228] == bool(mem[_29359 + 228])
                                                                        if not mem[_29359 + 228]:
                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                            if idx == -1:
                                                                revert with 0, 17
                                                            idx = idx + 1
                                                            continue 
                                                        _25676 = mem[64]
                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                        mem[mem[64] + 32] = 128
                                                        _26716 = mem[ceil32(return_data.size) + 128]
                                                        mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                        idx = 0
                                                        s = mem[64] + 160
                                                        t = ceil32(return_data.size) + 160
                                                        while idx < _26716:
                                                            mem[s] = mem[t + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[_25676 + 64] = (32 * _26716) + 160
                                                        _45700 = mem[ceil32(return_data.size) + 192]
                                                        mem[_25676 + (32 * _26716) + 160] = mem[ceil32(return_data.size) + 192]
                                                        mem[_25676 + (32 * _26716) + 192 len 32 * _45700] = mem[ceil32(return_data.size) + 224 len 32 * _45700]
                                                        mem[_25676 + 96] = msg.sender
                                                        emit 0x7c53e1df: mem[mem[64] len _25676 + (32 * _26716) + (32 * _45700) + -mem[64] + 192]
                                                else:
                                                    if 1 == sub_764d55f7[arg1]:
                                                        mem[ceil32(return_data.size) + 128] = 2
                                                        mem[ceil32(return_data.size) + 224] = 2
                                                        mem[64] = ceil32(return_data.size) + 320
                                                        mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                        if 0 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                            revert with 0, 17
                                                        mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                        mem[ceil32(return_data.size) + 192] = this.address
                                                        mem[ceil32(return_data.size) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 2:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[ceil32(return_data.size) + 224]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                   value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27634 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27634] = return_data.size
                                                                    mem[_27634 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _25673 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26712 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26712:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25673 + 64] = (32 * _26712) + 160
                                                            _45698 = mem[ceil32(return_data.size) + 224]
                                                            mem[_25673 + (32 * _26712) + 160] = mem[ceil32(return_data.size) + 224]
                                                            mem[_25673 + (32 * _26712) + 192 len 32 * _45698] = mem[ceil32(return_data.size) + 256 len 32 * _45698]
                                                            mem[_25673 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25673 + (32 * _26712) + (32 * _45698) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 2:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    _27632 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                    if idx >= mem[ceil32(return_data.size) + 224]:
                                                                        revert with 0, 50
                                                                    _28395 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                    _29354 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27632)
                                                                    mem[mem[64] + 100] = _28395
                                                                    _29355 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29355 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29355 + 36 len 28]
                                                                    mem[64] = _29354 + 196
                                                                    mem[_29354 + 132] = 32
                                                                    mem[_29354 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _33984 = mem[_29355]
                                                                    s = 0
                                                                    while s < _33984:
                                                                        mem[s + _29354 + 196] = mem[s + _29355 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_33984) > _33984:
                                                                        mem[_33984 + _29354 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29354 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29354 + 200 len _33984 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29354 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29354 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29354 + 264] = mem[idx + _29354 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29354 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29354 + ceil32(return_data.size) + 197
                                                                        mem[_29354 + 196] = return_data.size
                                                                        mem[_29354 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29354 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29354 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29354 + ceil32(return_data.size) + 265] = mem[idx + _29354 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29354 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29354 + 228] == bool(mem[_29354 + 228])
                                                                            if not mem[_29354 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _25671 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26710 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26710:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25671 + 64] = (32 * _26710) + 160
                                                            _45695 = mem[ceil32(return_data.size) + 224]
                                                            mem[_25671 + (32 * _26710) + 160] = mem[ceil32(return_data.size) + 224]
                                                            mem[_25671 + (32 * _26710) + 192 len 32 * _45695] = mem[ceil32(return_data.size) + 256 len 32 * _45695]
                                                            mem[_25671 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25671 + (32 * _26710) + (32 * _45695) + -mem[64] + 192]
                                            else:
                                                if not sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                    if not sub_764d55f7[arg1]:
                                                        mem[ceil32(return_data.size) + 128] = 1
                                                        mem[ceil32(return_data.size) + 192] = 1
                                                        mem[64] = ceil32(return_data.size) + 256
                                                        mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                        mem[ceil32(return_data.size) + 224] = 0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[ceil32(return_data.size) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                   value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27625 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27625] = return_data.size
                                                                    mem[_27625 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _25658 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26694 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26694:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25658 + 64] = (32 * _26694) + 160
                                                            _45683 = mem[ceil32(return_data.size) + 192]
                                                            mem[_25658 + (32 * _26694) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[_25658 + (32 * _26694) + 192 len 32 * _45683] = mem[ceil32(return_data.size) + 224 len 32 * _45683]
                                                            mem[_25658 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25658 + (32 * _26694) + (32 * _45683) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    _27623 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    _28380 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                    _29339 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27623)
                                                                    mem[mem[64] + 100] = _28380
                                                                    _29340 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29340 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29340 + 36 len 28]
                                                                    mem[64] = _29339 + 196
                                                                    mem[_29339 + 132] = 32
                                                                    mem[_29339 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _33954 = mem[_29340]
                                                                    s = 0
                                                                    while s < _33954:
                                                                        mem[s + _29339 + 196] = mem[s + _29340 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_33954) > _33954:
                                                                        mem[_33954 + _29339 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29339 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29339 + 200 len _33954 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29339 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29339 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29339 + 264] = mem[idx + _29339 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29339 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29339 + ceil32(return_data.size) + 197
                                                                        mem[_29339 + 196] = return_data.size
                                                                        mem[_29339 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29339 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29339 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29339 + ceil32(return_data.size) + 265] = mem[idx + _29339 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29339 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29339 + 228] == bool(mem[_29339 + 228])
                                                                            if not mem[_29339 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26692 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26692:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 64] = (32 * _26692) + 160
                                                            _45680 = mem[ceil32(return_data.size) + 192]
                                                            mem[mem[64] + (32 * _26692) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[mem[64] + (32 * _26692) + 192 len 32 * _45680] = mem[ceil32(return_data.size) + 224 len 32 * _45680]
                                                            mem[mem[64] + 96] = msg.sender
                                                            emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26692) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26692) + (32 * _45680) + 64]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 2
                                                            mem[ceil32(return_data.size) + 224] = 2
                                                            mem[64] = ceil32(return_data.size) + 320
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[ceil32(return_data.size) + 256] = 0
                                                            mem[ceil32(return_data.size) + 192] = this.address
                                                            if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                                revert with 0, 17
                                                            mem[ceil32(return_data.size) + 288] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27622 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27622] = return_data.size
                                                                        mem[_27622 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25653 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26688 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26688:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25653 + 64] = (32 * _26688) + 160
                                                                _45678 = mem[ceil32(return_data.size) + 224]
                                                                mem[_25653 + (32 * _26688) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[_25653 + (32 * _26688) + 192 len 32 * _45678] = mem[ceil32(return_data.size) + 256 len 32 * _45678]
                                                                mem[_25653 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25653 + (32 * _26688) + (32 * _45678) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27620 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        _28375 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                        _29334 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27620)
                                                                        mem[mem[64] + 100] = _28375
                                                                        _29335 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29335 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29335 + 36 len 28]
                                                                        mem[64] = _29334 + 196
                                                                        mem[_29334 + 132] = 32
                                                                        mem[_29334 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33944 = mem[_29335]
                                                                        s = 0
                                                                        while s < _33944:
                                                                            mem[s + _29334 + 196] = mem[s + _29335 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33944) > _33944:
                                                                            mem[_33944 + _29334 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29334 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29334 + 200 len _33944 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29334 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29334 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29334 + 264] = mem[idx + _29334 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29334 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29334 + ceil32(return_data.size) + 197
                                                                            mem[_29334 + 196] = return_data.size
                                                                            mem[_29334 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29334 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29334 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29334 + ceil32(return_data.size) + 265] = mem[idx + _29334 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29334 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29334 + 228] == bool(mem[_29334 + 228])
                                                                                if not mem[_29334 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26686 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26686:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _26686) + 160
                                                                _45675 = mem[ceil32(return_data.size) + 224]
                                                                mem[mem[64] + (32 * _26686) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[mem[64] + (32 * _26686) + 192 len 32 * _45675] = mem[ceil32(return_data.size) + 256 len 32 * _45675]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26686) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26686) + (32 * _45675) + 64]
                                                else:
                                                    if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                        revert with 0, 17
                                                    sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] = sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] + sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                    if not sub_764d55f7[arg1]:
                                                        mem[ceil32(return_data.size) + 128] = 1
                                                        mem[ceil32(return_data.size) + 192] = 1
                                                        mem[64] = ceil32(return_data.size) + 256
                                                        mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                        mem[ceil32(return_data.size) + 224] = 0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        mem[32] = 109
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[ceil32(return_data.size) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                   value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27631 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27631] = return_data.size
                                                                    mem[_27631 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26706 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26706:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 64] = (32 * _26706) + 160
                                                            _45693 = mem[ceil32(return_data.size) + 192]
                                                            mem[mem[64] + (32 * _26706) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[mem[64] + (32 * _26706) + 192 len 32 * _45693] = mem[ceil32(return_data.size) + 224 len 32 * _45693]
                                                            mem[mem[64] + 96] = msg.sender
                                                            emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26706) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26706) + (32 * _45693) + 64]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    _27629 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    _28390 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                    _29349 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27629)
                                                                    mem[mem[64] + 100] = _28390
                                                                    _29350 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29350 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29350 + 36 len 28]
                                                                    mem[64] = _29349 + 196
                                                                    mem[_29349 + 132] = 32
                                                                    mem[_29349 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _33974 = mem[_29350]
                                                                    s = 0
                                                                    while s < _33974:
                                                                        mem[s + _29349 + 196] = mem[s + _29350 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_33974) > _33974:
                                                                        mem[_33974 + _29349 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29349 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29349 + 200 len _33974 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29349 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29349 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29349 + 264] = mem[idx + _29349 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29349 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29349 + ceil32(return_data.size) + 197
                                                                        mem[_29349 + 196] = return_data.size
                                                                        mem[_29349 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29349 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29349 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29349 + ceil32(return_data.size) + 265] = mem[idx + _29349 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29349 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29349 + 228] == bool(mem[_29349 + 228])
                                                                            if not mem[_29349 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26704 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26704:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 64] = (32 * _26704) + 160
                                                            _45690 = mem[ceil32(return_data.size) + 192]
                                                            mem[mem[64] + (32 * _26704) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[mem[64] + (32 * _26704) + 192 len 32 * _45690] = mem[ceil32(return_data.size) + 224 len 32 * _45690]
                                                            mem[mem[64] + 96] = msg.sender
                                                            emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26704) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26704) + (32 * _45690) + 64]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 2
                                                            mem[ceil32(return_data.size) + 224] = 2
                                                            mem[64] = ceil32(return_data.size) + 320
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[ceil32(return_data.size) + 256] = 0
                                                            mem[ceil32(return_data.size) + 192] = this.address
                                                            if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                                revert with 0, 17
                                                            mem[ceil32(return_data.size) + 288] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27628 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27628] = return_data.size
                                                                        mem[_27628 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25663 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26700 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26700:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25663 + 64] = (32 * _26700) + 160
                                                                _45688 = mem[ceil32(return_data.size) + 224]
                                                                mem[_25663 + (32 * _26700) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[_25663 + (32 * _26700) + 192 len 32 * _45688] = mem[ceil32(return_data.size) + 256 len 32 * _45688]
                                                                mem[_25663 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25663 + (32 * _26700) + (32 * _45688) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27626 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        _28385 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                        _29344 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27626)
                                                                        mem[mem[64] + 100] = _28385
                                                                        _29345 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29345 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29345 + 36 len 28]
                                                                        mem[64] = _29344 + 196
                                                                        mem[_29344 + 132] = 32
                                                                        mem[_29344 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33964 = mem[_29345]
                                                                        s = 0
                                                                        while s < _33964:
                                                                            mem[s + _29344 + 196] = mem[s + _29345 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33964) > _33964:
                                                                            mem[_33964 + _29344 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29344 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29344 + 200 len _33964 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29344 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29344 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29344 + 264] = mem[idx + _29344 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29344 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29344 + ceil32(return_data.size) + 197
                                                                            mem[_29344 + 196] = return_data.size
                                                                            mem[_29344 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29344 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29344 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29344 + ceil32(return_data.size) + 265] = mem[idx + _29344 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29344 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29344 + 228] == bool(mem[_29344 + 228])
                                                                                if not mem[_29344 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26698 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26698:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _26698) + 160
                                                                _45685 = mem[ceil32(return_data.size) + 224]
                                                                mem[mem[64] + (32 * _26698) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[mem[64] + (32 * _26698) + 192 len 32 * _45685] = mem[ceil32(return_data.size) + 256 len 32 * _45685]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26698) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26698) + (32 * _45685) + 64]
                                            require ext_code.size(stor107)
                                            call stor107.0x23b872dd with:
                                                 gas gas_remaining wei
                                                args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            sub_57ba1b20[arg1].field_928 = 0
                                            emit 0xcc45266b: sub_57ba1b20[arg1].field_0, sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100), 0, sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                        else:
                                            if sub_57ba1b20[arg1].field_256 > 100:
                                                revert with 0, 'percent invalid'
                                            if not sub_57ba1b20[arg1].field_0:
                                                if sub_57ba1b20[arg1].field_0 < sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100:
                                                    revert with 0, 17
                                                if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) < 0:
                                                    revert with 0, 17
                                                if sub_b24fea7b[stor108[arg1]] > !(sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                    revert with 0, 17
                                                sub_b24fea7b[stor108[arg1]] += sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                if sub_57ba1b20[arg1].field_768 != sub_57ba1b20[arg1].field_512:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[ceil32(return_data.size) + 128] = 1
                                                        mem[ceil32(return_data.size) + 192] = 1
                                                        mem[64] = ceil32(return_data.size) + 256
                                                        mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                        mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[ceil32(return_data.size) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                   value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27613 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27613] = return_data.size
                                                                    mem[_27613 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _25638 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26670 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26670:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25638 + 64] = (32 * _26670) + 160
                                                            _45663 = mem[ceil32(return_data.size) + 192]
                                                            mem[_25638 + (32 * _26670) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[_25638 + (32 * _26670) + 192 len 32 * _45663] = mem[ceil32(return_data.size) + 224 len 32 * _45663]
                                                            mem[_25638 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25638 + (32 * _26670) + (32 * _45663) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    _27611 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    _28360 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                    _29319 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27611)
                                                                    mem[mem[64] + 100] = _28360
                                                                    _29320 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29320 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29320 + 36 len 28]
                                                                    mem[64] = _29319 + 196
                                                                    mem[_29319 + 132] = 32
                                                                    mem[_29319 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _33914 = mem[_29320]
                                                                    s = 0
                                                                    while s < _33914:
                                                                        mem[s + _29319 + 196] = mem[s + _29320 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_33914) > _33914:
                                                                        mem[_33914 + _29319 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29319 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29319 + 200 len _33914 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29319 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29319 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29319 + 264] = mem[idx + _29319 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29319 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29319 + ceil32(return_data.size) + 197
                                                                        mem[_29319 + 196] = return_data.size
                                                                        mem[_29319 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29319 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29319 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29319 + ceil32(return_data.size) + 265] = mem[idx + _29319 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29319 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29319 + 228] == bool(mem[_29319 + 228])
                                                                            if not mem[_29319 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _25636 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26668 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26668:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25636 + 64] = (32 * _26668) + 160
                                                            _45660 = mem[ceil32(return_data.size) + 192]
                                                            mem[_25636 + (32 * _26668) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[_25636 + (32 * _26668) + 192 len 32 * _45660] = mem[ceil32(return_data.size) + 224 len 32 * _45660]
                                                            mem[_25636 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25636 + (32 * _26668) + (32 * _45660) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 2
                                                            mem[ceil32(return_data.size) + 224] = 2
                                                            mem[64] = ceil32(return_data.size) + 320
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[ceil32(return_data.size) + 192] = this.address
                                                            if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > -1:
                                                                revert with 0, 17
                                                            mem[ceil32(return_data.size) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27610 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27610] = return_data.size
                                                                        mem[_27610 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25633 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26664 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26664:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25633 + 64] = (32 * _26664) + 160
                                                                _45658 = mem[ceil32(return_data.size) + 224]
                                                                mem[_25633 + (32 * _26664) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[_25633 + (32 * _26664) + 192 len 32 * _45658] = mem[ceil32(return_data.size) + 256 len 32 * _45658]
                                                                mem[_25633 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25633 + (32 * _26664) + (32 * _45658) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27608 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        _28355 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                        _29314 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27608)
                                                                        mem[mem[64] + 100] = _28355
                                                                        _29315 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29315 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29315 + 36 len 28]
                                                                        mem[64] = _29314 + 196
                                                                        mem[_29314 + 132] = 32
                                                                        mem[_29314 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33904 = mem[_29315]
                                                                        s = 0
                                                                        while s < _33904:
                                                                            mem[s + _29314 + 196] = mem[s + _29315 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33904) > _33904:
                                                                            mem[_33904 + _29314 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29314 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29314 + 200 len _33904 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29314 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29314 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29314 + 264] = mem[idx + _29314 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29314 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29314 + ceil32(return_data.size) + 197
                                                                            mem[_29314 + 196] = return_data.size
                                                                            mem[_29314 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29314 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29314 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29314 + ceil32(return_data.size) + 265] = mem[idx + _29314 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29314 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29314 + 228] == bool(mem[_29314 + 228])
                                                                                if not mem[_29314 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25631 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26662 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26662:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25631 + 64] = (32 * _26662) + 160
                                                                _45655 = mem[ceil32(return_data.size) + 224]
                                                                mem[_25631 + (32 * _26662) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[_25631 + (32 * _26662) + 192 len 32 * _45655] = mem[ceil32(return_data.size) + 256 len 32 * _45655]
                                                                mem[_25631 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25631 + (32 * _26662) + (32 * _45655) + -mem[64] + 192]
                                                else:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[ceil32(return_data.size) + 128] = 1
                                                        mem[ceil32(return_data.size) + 192] = 1
                                                        mem[64] = ceil32(return_data.size) + 256
                                                        mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                        if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) > -1:
                                                            revert with 0, 17
                                                        mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[ceil32(return_data.size) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                   value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27619 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27619] = return_data.size
                                                                    mem[_27619 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _25648 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26682 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26682:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25648 + 64] = (32 * _26682) + 160
                                                            _45673 = mem[ceil32(return_data.size) + 192]
                                                            mem[_25648 + (32 * _26682) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[_25648 + (32 * _26682) + 192 len 32 * _45673] = mem[ceil32(return_data.size) + 224 len 32 * _45673]
                                                            mem[_25648 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25648 + (32 * _26682) + (32 * _45673) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    _27617 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    _28370 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                    _29329 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27617)
                                                                    mem[mem[64] + 100] = _28370
                                                                    _29330 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29330 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29330 + 36 len 28]
                                                                    mem[64] = _29329 + 196
                                                                    mem[_29329 + 132] = 32
                                                                    mem[_29329 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _33934 = mem[_29330]
                                                                    s = 0
                                                                    while s < _33934:
                                                                        mem[s + _29329 + 196] = mem[s + _29330 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_33934) > _33934:
                                                                        mem[_33934 + _29329 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29329 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29329 + 200 len _33934 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29329 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29329 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29329 + 264] = mem[idx + _29329 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29329 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29329 + ceil32(return_data.size) + 197
                                                                        mem[_29329 + 196] = return_data.size
                                                                        mem[_29329 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29329 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29329 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29329 + ceil32(return_data.size) + 265] = mem[idx + _29329 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29329 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29329 + 228] == bool(mem[_29329 + 228])
                                                                            if not mem[_29329 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26680 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26680:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 64] = (32 * _26680) + 160
                                                            _45670 = mem[ceil32(return_data.size) + 192]
                                                            mem[mem[64] + (32 * _26680) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[mem[64] + (32 * _26680) + 192 len 32 * _45670] = mem[ceil32(return_data.size) + 224 len 32 * _45670]
                                                            mem[mem[64] + 96] = msg.sender
                                                            emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26680) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26680) + (32 * _45670) + 64]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 2
                                                            mem[ceil32(return_data.size) + 224] = 2
                                                            mem[64] = ceil32(return_data.size) + 320
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) > -1:
                                                                revert with 0, 17
                                                            mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[ceil32(return_data.size) + 192] = this.address
                                                            mem[ceil32(return_data.size) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27616 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27616] = return_data.size
                                                                        mem[_27616 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25643 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26676 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26676:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25643 + 64] = (32 * _26676) + 160
                                                                _45668 = mem[ceil32(return_data.size) + 224]
                                                                mem[_25643 + (32 * _26676) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[_25643 + (32 * _26676) + 192 len 32 * _45668] = mem[ceil32(return_data.size) + 256 len 32 * _45668]
                                                                mem[_25643 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25643 + (32 * _26676) + (32 * _45668) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27614 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        _28365 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                        _29324 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27614)
                                                                        mem[mem[64] + 100] = _28365
                                                                        _29325 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29325 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29325 + 36 len 28]
                                                                        mem[64] = _29324 + 196
                                                                        mem[_29324 + 132] = 32
                                                                        mem[_29324 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33924 = mem[_29325]
                                                                        s = 0
                                                                        while s < _33924:
                                                                            mem[s + _29324 + 196] = mem[s + _29325 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33924) > _33924:
                                                                            mem[_33924 + _29324 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29324 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29324 + 200 len _33924 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29324 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29324 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29324 + 264] = mem[idx + _29324 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29324 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29324 + ceil32(return_data.size) + 197
                                                                            mem[_29324 + 196] = return_data.size
                                                                            mem[_29324 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29324 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29324 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29324 + ceil32(return_data.size) + 265] = mem[idx + _29324 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29324 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29324 + 228] == bool(mem[_29324 + 228])
                                                                                if not mem[_29324 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25641 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26674 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26674:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25641 + 64] = (32 * _26674) + 160
                                                                _45665 = mem[ceil32(return_data.size) + 224]
                                                                mem[_25641 + (32 * _26674) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[_25641 + (32 * _26674) + 192 len 32 * _45665] = mem[ceil32(return_data.size) + 256 len 32 * _45665]
                                                                mem[_25641 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25641 + (32 * _26674) + (32 * _45665) + -mem[64] + 192]
                                                require ext_code.size(stor107)
                                                call stor107.0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                sub_57ba1b20[arg1].field_928 = 0
                                                emit 0xcc45266b: sub_57ba1b20[arg1].field_0, sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100, 0, sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100), sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                            else:
                                                if sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / sub_57ba1b20[arg1].field_0 != sub_57ba1b20[arg1].field_256:
                                                    revert with 0, 'arithmetic error'
                                                if sub_57ba1b20[arg1].field_0 < sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100:
                                                    revert with 0, 17
                                                if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) < sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                    revert with 0, 17
                                                if sub_b24fea7b[stor108[arg1]] > !(sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                    revert with 0, 17
                                                sub_b24fea7b[stor108[arg1]] += sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[ceil32(return_data.size) + 128] = 1
                                                        mem[ceil32(return_data.size) + 192] = 1
                                                        mem[64] = ceil32(return_data.size) + 256
                                                        mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                        if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                            revert with 0, 17
                                                        mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[ceil32(return_data.size) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                   value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27607 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27607] = return_data.size
                                                                    mem[_27607 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _25628 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26658 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26658:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25628 + 64] = (32 * _26658) + 160
                                                            _45653 = mem[ceil32(return_data.size) + 192]
                                                            mem[_25628 + (32 * _26658) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[_25628 + (32 * _26658) + 192 len 32 * _45653] = mem[ceil32(return_data.size) + 224 len 32 * _45653]
                                                            mem[_25628 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25628 + (32 * _26658) + (32 * _45653) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    _27605 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    _28350 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                    _29309 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27605)
                                                                    mem[mem[64] + 100] = _28350
                                                                    _29310 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29310 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29310 + 36 len 28]
                                                                    mem[64] = _29309 + 196
                                                                    mem[_29309 + 132] = 32
                                                                    mem[_29309 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _33894 = mem[_29310]
                                                                    s = 0
                                                                    while s < _33894:
                                                                        mem[s + _29309 + 196] = mem[s + _29310 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_33894) > _33894:
                                                                        mem[_33894 + _29309 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29309 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29309 + 200 len _33894 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29309 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29309 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29309 + 264] = mem[idx + _29309 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29309 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29309 + ceil32(return_data.size) + 197
                                                                        mem[_29309 + 196] = return_data.size
                                                                        mem[_29309 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29309 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29309 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29309 + ceil32(return_data.size) + 265] = mem[idx + _29309 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29309 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29309 + 228] == bool(mem[_29309 + 228])
                                                                            if not mem[_29309 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _25626 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26656 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26656:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25626 + 64] = (32 * _26656) + 160
                                                            _45650 = mem[ceil32(return_data.size) + 192]
                                                            mem[_25626 + (32 * _26656) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[_25626 + (32 * _26656) + 192 len 32 * _45650] = mem[ceil32(return_data.size) + 224 len 32 * _45650]
                                                            mem[_25626 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25626 + (32 * _26656) + (32 * _45650) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 2
                                                            mem[ceil32(return_data.size) + 224] = 2
                                                            mem[64] = ceil32(return_data.size) + 320
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[ceil32(return_data.size) + 192] = this.address
                                                            mem[ceil32(return_data.size) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27604 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27604] = return_data.size
                                                                        mem[_27604 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26652 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26652:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _26652) + 160
                                                                _45648 = mem[ceil32(return_data.size) + 224]
                                                                mem[mem[64] + (32 * _26652) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[mem[64] + (32 * _26652) + 192 len 32 * _45648] = mem[ceil32(return_data.size) + 256 len 32 * _45648]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26652) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26652) + (32 * _45648) + 64]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27602 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        _28345 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                        _29304 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27602)
                                                                        mem[mem[64] + 100] = _28345
                                                                        _29305 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29305 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29305 + 36 len 28]
                                                                        mem[64] = _29304 + 196
                                                                        mem[_29304 + 132] = 32
                                                                        mem[_29304 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33884 = mem[_29305]
                                                                        s = 0
                                                                        while s < _33884:
                                                                            mem[s + _29304 + 196] = mem[s + _29305 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33884) > _33884:
                                                                            mem[_33884 + _29304 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29304 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29304 + 200 len _33884 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29304 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29304 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29304 + 264] = mem[idx + _29304 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29304 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29304 + ceil32(return_data.size) + 197
                                                                            mem[_29304 + 196] = return_data.size
                                                                            mem[_29304 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29304 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29304 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29304 + ceil32(return_data.size) + 265] = mem[idx + _29304 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29304 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29304 + 228] == bool(mem[_29304 + 228])
                                                                                if not mem[_29304 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25621 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26650 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26650:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25621 + 64] = (32 * _26650) + 160
                                                                _45645 = mem[ceil32(return_data.size) + 224]
                                                                mem[_25621 + (32 * _26650) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[_25621 + (32 * _26650) + 192 len 32 * _45645] = mem[ceil32(return_data.size) + 256 len 32 * _45645]
                                                                mem[_25621 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25621 + (32 * _26650) + (32 * _45645) + -mem[64] + 192]
                                                else:
                                                    if not sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 1
                                                            mem[ceil32(return_data.size) + 192] = 1
                                                            mem[64] = ceil32(return_data.size) + 256
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27595 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27595] = return_data.size
                                                                        mem[_27595 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25608 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26634 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26634:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25608 + 64] = (32 * _26634) + 160
                                                                _45633 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25608 + (32 * _26634) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25608 + (32 * _26634) + 192 len 32 * _45633] = mem[ceil32(return_data.size) + 224 len 32 * _45633]
                                                                mem[_25608 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25608 + (32 * _26634) + (32 * _45633) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27593 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 192]:
                                                                            revert with 0, 50
                                                                        _28330 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                        _29289 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27593)
                                                                        mem[mem[64] + 100] = _28330
                                                                        _29290 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29290 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29290 + 36 len 28]
                                                                        mem[64] = _29289 + 196
                                                                        mem[_29289 + 132] = 32
                                                                        mem[_29289 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33854 = mem[_29290]
                                                                        s = 0
                                                                        while s < _33854:
                                                                            mem[s + _29289 + 196] = mem[s + _29290 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33854) > _33854:
                                                                            mem[_33854 + _29289 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29289 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29289 + 200 len _33854 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29289 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29289 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29289 + 264] = mem[idx + _29289 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29289 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29289 + ceil32(return_data.size) + 197
                                                                            mem[_29289 + 196] = return_data.size
                                                                            mem[_29289 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29289 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29289 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29289 + ceil32(return_data.size) + 265] = mem[idx + _29289 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29289 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29289 + 228] == bool(mem[_29289 + 228])
                                                                                if not mem[_29289 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25606 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26632 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26632:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25606 + 64] = (32 * _26632) + 160
                                                                _45630 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25606 + (32 * _26632) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25606 + (32 * _26632) + 192 len 32 * _45630] = mem[ceil32(return_data.size) + 224 len 32 * _45630]
                                                                mem[_25606 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25606 + (32 * _26632) + (32 * _45630) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[ceil32(return_data.size) + 128] = 2
                                                                mem[ceil32(return_data.size) + 224] = 2
                                                                mem[64] = ceil32(return_data.size) + 320
                                                                mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[ceil32(return_data.size) + 192] = this.address
                                                                if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                    revert with 0, 17
                                                                mem[ceil32(return_data.size) + 288] = (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) + (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                           value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27592 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27592] = return_data.size
                                                                            mem[_27592 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25603 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26628 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26628:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25603 + 64] = (32 * _26628) + 160
                                                                    _45628 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25603 + (32 * _26628) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25603 + (32 * _26628) + 192 len 32 * _45628] = mem[ceil32(return_data.size) + 256 len 32 * _45628]
                                                                    mem[_25603 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25603 + (32 * _26628) + (32 * _45628) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            _27590 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                            if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                revert with 0, 50
                                                                            _28325 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                            _29284 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27590)
                                                                            mem[mem[64] + 100] = _28325
                                                                            _29285 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29285 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29285 + 36 len 28]
                                                                            mem[64] = _29284 + 196
                                                                            mem[_29284 + 132] = 32
                                                                            mem[_29284 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33844 = mem[_29285]
                                                                            s = 0
                                                                            while s < _33844:
                                                                                mem[s + _29284 + 196] = mem[s + _29285 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33844) > _33844:
                                                                                mem[_33844 + _29284 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29284 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29284 + 200 len _33844 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29284 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29284 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29284 + 264] = mem[idx + _29284 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29284 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29284 + ceil32(return_data.size) + 197
                                                                                mem[_29284 + 196] = return_data.size
                                                                                mem[_29284 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29284 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29284 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29284 + ceil32(return_data.size) + 265] = mem[idx + _29284 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29284 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29284 + 228] == bool(mem[_29284 + 228])
                                                                                    if not mem[_29284 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26626 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26626:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _26626) + 160
                                                                    _45625 = mem[ceil32(return_data.size) + 224]
                                                                    mem[mem[64] + (32 * _26626) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[mem[64] + (32 * _26626) + 192 len 32 * _45625] = mem[ceil32(return_data.size) + 256 len 32 * _45625]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26626) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26626) + (32 * _45625) + 64]
                                                    else:
                                                        if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                            revert with 0, 17
                                                        sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] += sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                        if not sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 1
                                                            mem[ceil32(return_data.size) + 192] = 1
                                                            mem[64] = ceil32(return_data.size) + 256
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27601 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27601] = return_data.size
                                                                        mem[_27601 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25618 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26646 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26646:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25618 + 64] = (32 * _26646) + 160
                                                                _45643 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25618 + (32 * _26646) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25618 + (32 * _26646) + 192 len 32 * _45643] = mem[ceil32(return_data.size) + 224 len 32 * _45643]
                                                                mem[_25618 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25618 + (32 * _26646) + (32 * _45643) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27599 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 192]:
                                                                            revert with 0, 50
                                                                        _28340 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                        _29299 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27599)
                                                                        mem[mem[64] + 100] = _28340
                                                                        _29300 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29300 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29300 + 36 len 28]
                                                                        mem[64] = _29299 + 196
                                                                        mem[_29299 + 132] = 32
                                                                        mem[_29299 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33874 = mem[_29300]
                                                                        s = 0
                                                                        while s < _33874:
                                                                            mem[s + _29299 + 196] = mem[s + _29300 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33874) > _33874:
                                                                            mem[_33874 + _29299 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29299 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29299 + 200 len _33874 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29299 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29299 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29299 + 264] = mem[idx + _29299 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29299 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29299 + ceil32(return_data.size) + 197
                                                                            mem[_29299 + 196] = return_data.size
                                                                            mem[_29299 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29299 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29299 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29299 + ceil32(return_data.size) + 265] = mem[idx + _29299 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29299 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29299 + 228] == bool(mem[_29299 + 228])
                                                                                if not mem[_29299 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25616 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26644 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26644:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25616 + 64] = (32 * _26644) + 160
                                                                _45640 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25616 + (32 * _26644) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25616 + (32 * _26644) + 192 len 32 * _45640] = mem[ceil32(return_data.size) + 224 len 32 * _45640]
                                                                mem[_25616 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25616 + (32 * _26644) + (32 * _45640) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[ceil32(return_data.size) + 128] = 2
                                                                mem[ceil32(return_data.size) + 224] = 2
                                                                mem[64] = ceil32(return_data.size) + 320
                                                                mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[ceil32(return_data.size) + 192] = this.address
                                                                if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                    revert with 0, 17
                                                                mem[ceil32(return_data.size) + 288] = (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) + (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                           value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27598 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27598] = return_data.size
                                                                            mem[_27598 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25613 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26640 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26640:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25613 + 64] = (32 * _26640) + 160
                                                                    _45638 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25613 + (32 * _26640) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25613 + (32 * _26640) + 192 len 32 * _45638] = mem[ceil32(return_data.size) + 256 len 32 * _45638]
                                                                    mem[_25613 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25613 + (32 * _26640) + (32 * _45638) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            _27596 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                            if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                revert with 0, 50
                                                                            _28335 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                            _29294 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27596)
                                                                            mem[mem[64] + 100] = _28335
                                                                            _29295 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29295 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29295 + 36 len 28]
                                                                            mem[64] = _29294 + 196
                                                                            mem[_29294 + 132] = 32
                                                                            mem[_29294 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33864 = mem[_29295]
                                                                            s = 0
                                                                            while s < _33864:
                                                                                mem[s + _29294 + 196] = mem[s + _29295 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33864) > _33864:
                                                                                mem[_33864 + _29294 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29294 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29294 + 200 len _33864 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29294 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29294 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29294 + 264] = mem[idx + _29294 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29294 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29294 + ceil32(return_data.size) + 197
                                                                                mem[_29294 + 196] = return_data.size
                                                                                mem[_29294 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29294 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29294 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29294 + ceil32(return_data.size) + 265] = mem[idx + _29294 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29294 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29294 + 228] == bool(mem[_29294 + 228])
                                                                                    if not mem[_29294 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26638 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26638:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _26638) + 160
                                                                    _45635 = mem[ceil32(return_data.size) + 224]
                                                                    mem[mem[64] + (32 * _26638) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[mem[64] + (32 * _26638) + 192 len 32 * _45635] = mem[ceil32(return_data.size) + 256 len 32 * _45635]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26638) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26638) + (32 * _45635) + 64]
                                                require ext_code.size(stor107)
                                                call stor107.0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                sub_57ba1b20[arg1].field_928 = 0
                                                emit 0xcc45266b: sub_57ba1b20[arg1].field_0, sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100), sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                else:
                                    if sub_764d55f7[arg1] != 1:
                                        if 0 < sub_57ba1b20[arg1].field_0:
                                            revert with 0, 'don't have enough money'
                                        if sub_f65e6912 > 100:
                                            revert with 0, 'percent invalid'
                                        if not sub_57ba1b20[arg1].field_0:
                                            if 100 < sub_f65e6912:
                                                revert with 0, 17
                                            if -sub_f65e6912 + 100 < sub_57ba1b20[arg1].field_256:
                                                if sub_57ba1b20[arg1].field_0 < 0:
                                                    revert with 0, 17
                                                if sub_b24fea7b[stor108[arg1]] > -1:
                                                    revert with 0, 17
                                                if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[ceil32(return_data.size) + 128] = 1
                                                        mem[ceil32(return_data.size) + 192] = 1
                                                        mem[64] = ceil32(return_data.size) + 256
                                                        mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                        if 0 > !sub_57ba1b20[arg1].field_0:
                                                            revert with 0, 17
                                                        mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[ceil32(return_data.size) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                   value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27493 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27493] = return_data.size
                                                                    mem[_27493 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _25438 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26430 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26430:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25438 + 64] = (32 * _26430) + 160
                                                            _45463 = mem[ceil32(return_data.size) + 192]
                                                            mem[_25438 + (32 * _26430) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[_25438 + (32 * _26430) + 192 len 32 * _45463] = mem[ceil32(return_data.size) + 224 len 32 * _45463]
                                                            mem[_25438 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25438 + (32 * _26430) + (32 * _45463) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    _27491 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    _28160 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                    _29119 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27491)
                                                                    mem[mem[64] + 100] = _28160
                                                                    _29120 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29120 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29120 + 36 len 28]
                                                                    mem[64] = _29119 + 196
                                                                    mem[_29119 + 132] = 32
                                                                    mem[_29119 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _33514 = mem[_29120]
                                                                    s = 0
                                                                    while s < _33514:
                                                                        mem[s + _29119 + 196] = mem[s + _29120 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_33514) > _33514:
                                                                        mem[_33514 + _29119 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29119 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29119 + 200 len _33514 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29119 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29119 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29119 + 264] = mem[idx + _29119 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29119 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29119 + ceil32(return_data.size) + 197
                                                                        mem[_29119 + 196] = return_data.size
                                                                        mem[_29119 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29119 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29119 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29119 + ceil32(return_data.size) + 265] = mem[idx + _29119 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29119 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29119 + 228] == bool(mem[_29119 + 228])
                                                                            if not mem[_29119 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26428 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26428:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 64] = (32 * _26428) + 160
                                                            _45460 = mem[ceil32(return_data.size) + 192]
                                                            mem[mem[64] + (32 * _26428) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[mem[64] + (32 * _26428) + 192 len 32 * _45460] = mem[ceil32(return_data.size) + 224 len 32 * _45460]
                                                            mem[mem[64] + 96] = msg.sender
                                                            emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26428) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26428) + (32 * _45460) + 64]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 2
                                                            mem[ceil32(return_data.size) + 224] = 2
                                                            mem[64] = ceil32(return_data.size) + 320
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            if 0 > !sub_57ba1b20[arg1].field_0:
                                                                revert with 0, 17
                                                            mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0
                                                            mem[ceil32(return_data.size) + 192] = this.address
                                                            mem[ceil32(return_data.size) + 288] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27490 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27490] = return_data.size
                                                                        mem[_27490 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25433 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26424 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26424:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25433 + 64] = (32 * _26424) + 160
                                                                _45458 = mem[ceil32(return_data.size) + 224]
                                                                mem[_25433 + (32 * _26424) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[_25433 + (32 * _26424) + 192 len 32 * _45458] = mem[ceil32(return_data.size) + 256 len 32 * _45458]
                                                                mem[_25433 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25433 + (32 * _26424) + (32 * _45458) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27488 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        _28155 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                        _29114 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27488)
                                                                        mem[mem[64] + 100] = _28155
                                                                        _29115 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29115 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29115 + 36 len 28]
                                                                        mem[64] = _29114 + 196
                                                                        mem[_29114 + 132] = 32
                                                                        mem[_29114 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33504 = mem[_29115]
                                                                        s = 0
                                                                        while s < _33504:
                                                                            mem[s + _29114 + 196] = mem[s + _29115 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33504) > _33504:
                                                                            mem[_33504 + _29114 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29114 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29114 + 200 len _33504 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29114 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29114 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29114 + 264] = mem[idx + _29114 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29114 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29114 + ceil32(return_data.size) + 197
                                                                            mem[_29114 + 196] = return_data.size
                                                                            mem[_29114 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29114 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29114 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29114 + ceil32(return_data.size) + 265] = mem[idx + _29114 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29114 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29114 + 228] == bool(mem[_29114 + 228])
                                                                                if not mem[_29114 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25431 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26422 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26422:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25431 + 64] = (32 * _26422) + 160
                                                                _45455 = mem[ceil32(return_data.size) + 224]
                                                                mem[_25431 + (32 * _26422) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[_25431 + (32 * _26422) + 192 len 32 * _45455] = mem[ceil32(return_data.size) + 256 len 32 * _45455]
                                                                mem[_25431 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25431 + (32 * _26422) + (32 * _45455) + -mem[64] + 192]
                                                else:
                                                    if not sub_57ba1b20[arg1].field_0:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 1
                                                            mem[ceil32(return_data.size) + 192] = 1
                                                            mem[64] = ceil32(return_data.size) + 256
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[ceil32(return_data.size) + 224] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27481 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27481] = return_data.size
                                                                        mem[_27481 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25418 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26406 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26406:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25418 + 64] = (32 * _26406) + 160
                                                                _45443 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25418 + (32 * _26406) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25418 + (32 * _26406) + 192 len 32 * _45443] = mem[ceil32(return_data.size) + 224 len 32 * _45443]
                                                                mem[_25418 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25418 + (32 * _26406) + (32 * _45443) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27479 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 192]:
                                                                            revert with 0, 50
                                                                        _28140 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                        _29099 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27479)
                                                                        mem[mem[64] + 100] = _28140
                                                                        _29100 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29100 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29100 + 36 len 28]
                                                                        mem[64] = _29099 + 196
                                                                        mem[_29099 + 132] = 32
                                                                        mem[_29099 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33474 = mem[_29100]
                                                                        s = 0
                                                                        while s < _33474:
                                                                            mem[s + _29099 + 196] = mem[s + _29100 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33474) > _33474:
                                                                            mem[_33474 + _29099 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29099 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29099 + 200 len _33474 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29099 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29099 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29099 + 264] = mem[idx + _29099 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29099 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29099 + ceil32(return_data.size) + 197
                                                                            mem[_29099 + 196] = return_data.size
                                                                            mem[_29099 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29099 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29099 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29099 + ceil32(return_data.size) + 265] = mem[idx + _29099 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29099 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29099 + 228] == bool(mem[_29099 + 228])
                                                                                if not mem[_29099 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25416 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26404 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26404:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25416 + 64] = (32 * _26404) + 160
                                                                _45440 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25416 + (32 * _26404) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25416 + (32 * _26404) + 192 len 32 * _45440] = mem[ceil32(return_data.size) + 224 len 32 * _45440]
                                                                mem[_25416 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25416 + (32 * _26404) + (32 * _45440) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[ceil32(return_data.size) + 128] = 2
                                                                mem[ceil32(return_data.size) + 224] = 2
                                                                mem[64] = ceil32(return_data.size) + 320
                                                                mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[ceil32(return_data.size) + 256] = 0
                                                                mem[ceil32(return_data.size) + 192] = this.address
                                                                if 0 > !sub_57ba1b20[arg1].field_0:
                                                                    revert with 0, 17
                                                                mem[ceil32(return_data.size) + 288] = sub_57ba1b20[arg1].field_0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                           value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27478 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27478] = return_data.size
                                                                            mem[_27478 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25413 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26400 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26400:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25413 + 64] = (32 * _26400) + 160
                                                                    _45438 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25413 + (32 * _26400) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25413 + (32 * _26400) + 192 len 32 * _45438] = mem[ceil32(return_data.size) + 256 len 32 * _45438]
                                                                    mem[_25413 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25413 + (32 * _26400) + (32 * _45438) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            _27476 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                            if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                revert with 0, 50
                                                                            _28135 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                            _29094 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27476)
                                                                            mem[mem[64] + 100] = _28135
                                                                            _29095 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29095 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29095 + 36 len 28]
                                                                            mem[64] = _29094 + 196
                                                                            mem[_29094 + 132] = 32
                                                                            mem[_29094 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33464 = mem[_29095]
                                                                            s = 0
                                                                            while s < _33464:
                                                                                mem[s + _29094 + 196] = mem[s + _29095 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33464) > _33464:
                                                                                mem[_33464 + _29094 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29094 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29094 + 200 len _33464 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29094 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29094 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29094 + 264] = mem[idx + _29094 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29094 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29094 + ceil32(return_data.size) + 197
                                                                                mem[_29094 + 196] = return_data.size
                                                                                mem[_29094 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29094 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29094 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29094 + ceil32(return_data.size) + 265] = mem[idx + _29094 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29094 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29094 + 228] == bool(mem[_29094 + 228])
                                                                                    if not mem[_29094 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26398 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26398:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _26398) + 160
                                                                    _45435 = mem[ceil32(return_data.size) + 224]
                                                                    mem[mem[64] + (32 * _26398) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[mem[64] + (32 * _26398) + 192 len 32 * _45435] = mem[ceil32(return_data.size) + 256 len 32 * _45435]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26398) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26398) + (32 * _45435) + 64]
                                                    else:
                                                        if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !sub_57ba1b20[arg1].field_0:
                                                            revert with 0, 17
                                                        sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] += sub_57ba1b20[arg1].field_0
                                                        if not sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 1
                                                            mem[ceil32(return_data.size) + 192] = 1
                                                            mem[64] = ceil32(return_data.size) + 256
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[ceil32(return_data.size) + 224] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27487 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27487] = return_data.size
                                                                        mem[_27487 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26418 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26418:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _26418) + 160
                                                                _45453 = mem[ceil32(return_data.size) + 192]
                                                                mem[mem[64] + (32 * _26418) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[mem[64] + (32 * _26418) + 192 len 32 * _45453] = mem[ceil32(return_data.size) + 224 len 32 * _45453]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26418) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26418) + (32 * _45453) + 64]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27485 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 192]:
                                                                            revert with 0, 50
                                                                        _28150 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                        _29109 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27485)
                                                                        mem[mem[64] + 100] = _28150
                                                                        _29110 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29110 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29110 + 36 len 28]
                                                                        mem[64] = _29109 + 196
                                                                        mem[_29109 + 132] = 32
                                                                        mem[_29109 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33494 = mem[_29110]
                                                                        s = 0
                                                                        while s < _33494:
                                                                            mem[s + _29109 + 196] = mem[s + _29110 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33494) > _33494:
                                                                            mem[_33494 + _29109 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29109 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29109 + 200 len _33494 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29109 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29109 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29109 + 264] = mem[idx + _29109 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29109 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29109 + ceil32(return_data.size) + 197
                                                                            mem[_29109 + 196] = return_data.size
                                                                            mem[_29109 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29109 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29109 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29109 + ceil32(return_data.size) + 265] = mem[idx + _29109 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29109 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29109 + 228] == bool(mem[_29109 + 228])
                                                                                if not mem[_29109 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25426 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26416 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26416:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25426 + 64] = (32 * _26416) + 160
                                                                _45450 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25426 + (32 * _26416) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25426 + (32 * _26416) + 192 len 32 * _45450] = mem[ceil32(return_data.size) + 224 len 32 * _45450]
                                                                mem[_25426 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25426 + (32 * _26416) + (32 * _45450) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[ceil32(return_data.size) + 128] = 2
                                                                mem[ceil32(return_data.size) + 224] = 2
                                                                mem[64] = ceil32(return_data.size) + 320
                                                                mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[ceil32(return_data.size) + 256] = 0
                                                                mem[ceil32(return_data.size) + 192] = this.address
                                                                if 0 > !sub_57ba1b20[arg1].field_0:
                                                                    revert with 0, 17
                                                                mem[ceil32(return_data.size) + 288] = sub_57ba1b20[arg1].field_0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                           value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27484 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27484] = return_data.size
                                                                            mem[_27484 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25423 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26412 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26412:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25423 + 64] = (32 * _26412) + 160
                                                                    _45448 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25423 + (32 * _26412) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25423 + (32 * _26412) + 192 len 32 * _45448] = mem[ceil32(return_data.size) + 256 len 32 * _45448]
                                                                    mem[_25423 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25423 + (32 * _26412) + (32 * _45448) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            _27482 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                            if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                revert with 0, 50
                                                                            _28145 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                            _29104 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27482)
                                                                            mem[mem[64] + 100] = _28145
                                                                            _29105 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29105 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29105 + 36 len 28]
                                                                            mem[64] = _29104 + 196
                                                                            mem[_29104 + 132] = 32
                                                                            mem[_29104 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33484 = mem[_29105]
                                                                            s = 0
                                                                            while s < _33484:
                                                                                mem[s + _29104 + 196] = mem[s + _29105 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33484) > _33484:
                                                                                mem[_33484 + _29104 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29104 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29104 + 200 len _33484 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29104 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29104 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29104 + 264] = mem[idx + _29104 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29104 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29104 + ceil32(return_data.size) + 197
                                                                                mem[_29104 + 196] = return_data.size
                                                                                mem[_29104 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29104 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29104 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29104 + ceil32(return_data.size) + 265] = mem[idx + _29104 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29104 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29104 + 228] == bool(mem[_29104 + 228])
                                                                                    if not mem[_29104 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25421 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26410 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26410:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25421 + 64] = (32 * _26410) + 160
                                                                    _45445 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25421 + (32 * _26410) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25421 + (32 * _26410) + 192 len 32 * _45445] = mem[ceil32(return_data.size) + 256 len 32 * _45445]
                                                                    mem[_25421 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25421 + (32 * _26410) + (32 * _45445) + -mem[64] + 192]
                                                require ext_code.size(stor107)
                                                call stor107.0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                sub_57ba1b20[arg1].field_928 = 0
                                                emit 0xcc45266b: sub_57ba1b20[arg1].field_0, 0, sub_57ba1b20[arg1].field_0, 0, sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                            else:
                                                if sub_57ba1b20[arg1].field_256 > 100:
                                                    revert with 0, 'percent invalid'
                                                if not sub_57ba1b20[arg1].field_0:
                                                    if sub_57ba1b20[arg1].field_0 < 0:
                                                        revert with 0, 17
                                                    if sub_b24fea7b[stor108[arg1]] > -1:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_768 != sub_57ba1b20[arg1].field_512:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 1
                                                            mem[ceil32(return_data.size) + 192] = 1
                                                            mem[64] = ceil32(return_data.size) + 256
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27469 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27469] = return_data.size
                                                                        mem[_27469 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25398 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26382 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26382:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25398 + 64] = (32 * _26382) + 160
                                                                _45423 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25398 + (32 * _26382) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25398 + (32 * _26382) + 192 len 32 * _45423] = mem[ceil32(return_data.size) + 224 len 32 * _45423]
                                                                mem[_25398 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25398 + (32 * _26382) + (32 * _45423) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27467 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 192]:
                                                                            revert with 0, 50
                                                                        _28120 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                        _29079 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27467)
                                                                        mem[mem[64] + 100] = _28120
                                                                        _29080 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29080 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29080 + 36 len 28]
                                                                        mem[64] = _29079 + 196
                                                                        mem[_29079 + 132] = 32
                                                                        mem[_29079 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33434 = mem[_29080]
                                                                        s = 0
                                                                        while s < _33434:
                                                                            mem[s + _29079 + 196] = mem[s + _29080 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33434) > _33434:
                                                                            mem[_33434 + _29079 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29079 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29079 + 200 len _33434 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29079 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29079 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29079 + 264] = mem[idx + _29079 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29079 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29079 + ceil32(return_data.size) + 197
                                                                            mem[_29079 + 196] = return_data.size
                                                                            mem[_29079 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29079 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29079 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29079 + ceil32(return_data.size) + 265] = mem[idx + _29079 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29079 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29079 + 228] == bool(mem[_29079 + 228])
                                                                                if not mem[_29079 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25396 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26380 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26380:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25396 + 64] = (32 * _26380) + 160
                                                                _45420 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25396 + (32 * _26380) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25396 + (32 * _26380) + 192 len 32 * _45420] = mem[ceil32(return_data.size) + 224 len 32 * _45420]
                                                                mem[_25396 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25396 + (32 * _26380) + (32 * _45420) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[ceil32(return_data.size) + 128] = 2
                                                                mem[ceil32(return_data.size) + 224] = 2
                                                                mem[64] = ceil32(return_data.size) + 320
                                                                mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0
                                                                mem[ceil32(return_data.size) + 192] = this.address
                                                                mem[ceil32(return_data.size) + 288] = 0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                           value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27466 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27466] = return_data.size
                                                                            mem[_27466 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25393 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26376 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26376:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25393 + 64] = (32 * _26376) + 160
                                                                    _45418 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25393 + (32 * _26376) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25393 + (32 * _26376) + 192 len 32 * _45418] = mem[ceil32(return_data.size) + 256 len 32 * _45418]
                                                                    mem[_25393 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25393 + (32 * _26376) + (32 * _45418) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            _27464 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                            if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                revert with 0, 50
                                                                            _28115 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                            _29074 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27464)
                                                                            mem[mem[64] + 100] = _28115
                                                                            _29075 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29075 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29075 + 36 len 28]
                                                                            mem[64] = _29074 + 196
                                                                            mem[_29074 + 132] = 32
                                                                            mem[_29074 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33424 = mem[_29075]
                                                                            s = 0
                                                                            while s < _33424:
                                                                                mem[s + _29074 + 196] = mem[s + _29075 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33424) > _33424:
                                                                                mem[_33424 + _29074 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29074 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29074 + 200 len _33424 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29074 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29074 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29074 + 264] = mem[idx + _29074 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29074 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29074 + ceil32(return_data.size) + 197
                                                                                mem[_29074 + 196] = return_data.size
                                                                                mem[_29074 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29074 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29074 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29074 + ceil32(return_data.size) + 265] = mem[idx + _29074 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29074 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29074 + 228] == bool(mem[_29074 + 228])
                                                                                    if not mem[_29074 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26374 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26374:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _26374) + 160
                                                                    _45415 = mem[ceil32(return_data.size) + 224]
                                                                    mem[mem[64] + (32 * _26374) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[mem[64] + (32 * _26374) + 192 len 32 * _45415] = mem[ceil32(return_data.size) + 256 len 32 * _45415]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26374) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26374) + (32 * _45415) + 64]
                                                    else:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 1
                                                            mem[ceil32(return_data.size) + 192] = 1
                                                            mem[64] = ceil32(return_data.size) + 256
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 > -1:
                                                                revert with 0, 17
                                                            mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27475 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27475] = return_data.size
                                                                        mem[_27475 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25408 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26394 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26394:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25408 + 64] = (32 * _26394) + 160
                                                                _45433 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25408 + (32 * _26394) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25408 + (32 * _26394) + 192 len 32 * _45433] = mem[ceil32(return_data.size) + 224 len 32 * _45433]
                                                                mem[_25408 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25408 + (32 * _26394) + (32 * _45433) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27473 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 192]:
                                                                            revert with 0, 50
                                                                        _28130 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                        _29089 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27473)
                                                                        mem[mem[64] + 100] = _28130
                                                                        _29090 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29090 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29090 + 36 len 28]
                                                                        mem[64] = _29089 + 196
                                                                        mem[_29089 + 132] = 32
                                                                        mem[_29089 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33454 = mem[_29090]
                                                                        s = 0
                                                                        while s < _33454:
                                                                            mem[s + _29089 + 196] = mem[s + _29090 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33454) > _33454:
                                                                            mem[_33454 + _29089 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29089 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29089 + 200 len _33454 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29089 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29089 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29089 + 264] = mem[idx + _29089 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29089 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29089 + ceil32(return_data.size) + 197
                                                                            mem[_29089 + 196] = return_data.size
                                                                            mem[_29089 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29089 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29089 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29089 + ceil32(return_data.size) + 265] = mem[idx + _29089 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29089 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29089 + 228] == bool(mem[_29089 + 228])
                                                                                if not mem[_29089 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25406 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26392 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26392:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25406 + 64] = (32 * _26392) + 160
                                                                _45430 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25406 + (32 * _26392) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25406 + (32 * _26392) + 192 len 32 * _45430] = mem[ceil32(return_data.size) + 224 len 32 * _45430]
                                                                mem[_25406 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25406 + (32 * _26392) + (32 * _45430) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[ceil32(return_data.size) + 128] = 2
                                                                mem[ceil32(return_data.size) + 224] = 2
                                                                mem[64] = ceil32(return_data.size) + 320
                                                                mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                if sub_57ba1b20[arg1].field_0 > -1:
                                                                    revert with 0, 17
                                                                mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0
                                                                mem[ceil32(return_data.size) + 192] = this.address
                                                                mem[ceil32(return_data.size) + 288] = 0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                           value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27472 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27472] = return_data.size
                                                                            mem[_27472 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25403 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26388 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26388:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25403 + 64] = (32 * _26388) + 160
                                                                    _45428 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25403 + (32 * _26388) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25403 + (32 * _26388) + 192 len 32 * _45428] = mem[ceil32(return_data.size) + 256 len 32 * _45428]
                                                                    mem[_25403 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25403 + (32 * _26388) + (32 * _45428) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            _27470 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                            if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                revert with 0, 50
                                                                            _28125 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                            _29084 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27470)
                                                                            mem[mem[64] + 100] = _28125
                                                                            _29085 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29085 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29085 + 36 len 28]
                                                                            mem[64] = _29084 + 196
                                                                            mem[_29084 + 132] = 32
                                                                            mem[_29084 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33444 = mem[_29085]
                                                                            s = 0
                                                                            while s < _33444:
                                                                                mem[s + _29084 + 196] = mem[s + _29085 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33444) > _33444:
                                                                                mem[_33444 + _29084 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29084 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29084 + 200 len _33444 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29084 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29084 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29084 + 264] = mem[idx + _29084 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29084 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29084 + ceil32(return_data.size) + 197
                                                                                mem[_29084 + 196] = return_data.size
                                                                                mem[_29084 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29084 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29084 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29084 + ceil32(return_data.size) + 265] = mem[idx + _29084 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29084 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29084 + 228] == bool(mem[_29084 + 228])
                                                                                    if not mem[_29084 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25401 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26386 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26386:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25401 + 64] = (32 * _26386) + 160
                                                                    _45425 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25401 + (32 * _26386) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25401 + (32 * _26386) + 192 len 32 * _45425] = mem[ceil32(return_data.size) + 256 len 32 * _45425]
                                                                    mem[_25401 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25401 + (32 * _26386) + (32 * _45425) + -mem[64] + 192]
                                                    require ext_code.size(stor107)
                                                    call stor107.0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    sub_57ba1b20[arg1].field_928 = 0
                                                    emit 0xcc45266b: sub_57ba1b20[arg1].field_0, 0, 0, sub_57ba1b20[arg1].field_0, sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                                else:
                                                    if sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / sub_57ba1b20[arg1].field_0 != sub_57ba1b20[arg1].field_256:
                                                        revert with 0, 'arithmetic error'
                                                    if sub_57ba1b20[arg1].field_0 < 0:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_0 < sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                        revert with 0, 17
                                                    if sub_b24fea7b[stor108[arg1]] > -1:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 1
                                                            mem[ceil32(return_data.size) + 192] = 1
                                                            mem[64] = ceil32(return_data.size) + 256
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27463 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27463] = return_data.size
                                                                        mem[_27463 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26370 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26370:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _26370) + 160
                                                                _45413 = mem[ceil32(return_data.size) + 192]
                                                                mem[mem[64] + (32 * _26370) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[mem[64] + (32 * _26370) + 192 len 32 * _45413] = mem[ceil32(return_data.size) + 224 len 32 * _45413]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26370) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26370) + (32 * _45413) + 64]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27461 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 192]:
                                                                            revert with 0, 50
                                                                        _28110 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                        _29069 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27461)
                                                                        mem[mem[64] + 100] = _28110
                                                                        _29070 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29070 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29070 + 36 len 28]
                                                                        mem[64] = _29069 + 196
                                                                        mem[_29069 + 132] = 32
                                                                        mem[_29069 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33414 = mem[_29070]
                                                                        s = 0
                                                                        while s < _33414:
                                                                            mem[s + _29069 + 196] = mem[s + _29070 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33414) > _33414:
                                                                            mem[_33414 + _29069 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29069 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29069 + 200 len _33414 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29069 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29069 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29069 + 264] = mem[idx + _29069 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29069 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29069 + ceil32(return_data.size) + 197
                                                                            mem[_29069 + 196] = return_data.size
                                                                            mem[_29069 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29069 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29069 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29069 + ceil32(return_data.size) + 265] = mem[idx + _29069 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29069 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29069 + 228] == bool(mem[_29069 + 228])
                                                                                if not mem[_29069 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26368 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26368:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _26368) + 160
                                                                _45410 = mem[ceil32(return_data.size) + 192]
                                                                mem[mem[64] + (32 * _26368) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[mem[64] + (32 * _26368) + 192 len 32 * _45410] = mem[ceil32(return_data.size) + 224 len 32 * _45410]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26368) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26368) + (32 * _45410) + 64]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[ceil32(return_data.size) + 128] = 2
                                                                mem[ceil32(return_data.size) + 224] = 2
                                                                mem[64] = ceil32(return_data.size) + 320
                                                                mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                if sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                    revert with 0, 17
                                                                mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0
                                                                mem[ceil32(return_data.size) + 192] = this.address
                                                                mem[ceil32(return_data.size) + 288] = 0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                           value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27460 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27460] = return_data.size
                                                                            mem[_27460 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25383 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26364 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26364:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25383 + 64] = (32 * _26364) + 160
                                                                    _45408 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25383 + (32 * _26364) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25383 + (32 * _26364) + 192 len 32 * _45408] = mem[ceil32(return_data.size) + 256 len 32 * _45408]
                                                                    mem[_25383 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25383 + (32 * _26364) + (32 * _45408) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            _27458 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                            if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                revert with 0, 50
                                                                            _28105 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                            _29064 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27458)
                                                                            mem[mem[64] + 100] = _28105
                                                                            _29065 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29065 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29065 + 36 len 28]
                                                                            mem[64] = _29064 + 196
                                                                            mem[_29064 + 132] = 32
                                                                            mem[_29064 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33404 = mem[_29065]
                                                                            s = 0
                                                                            while s < _33404:
                                                                                mem[s + _29064 + 196] = mem[s + _29065 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33404) > _33404:
                                                                                mem[_33404 + _29064 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29064 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29064 + 200 len _33404 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29064 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29064 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29064 + 264] = mem[idx + _29064 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29064 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29064 + ceil32(return_data.size) + 197
                                                                                mem[_29064 + 196] = return_data.size
                                                                                mem[_29064 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29064 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29064 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29064 + ceil32(return_data.size) + 265] = mem[idx + _29064 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29064 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29064 + 228] == bool(mem[_29064 + 228])
                                                                                    if not mem[_29064 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26362 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26362:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _26362) + 160
                                                                    _45405 = mem[ceil32(return_data.size) + 224]
                                                                    mem[mem[64] + (32 * _26362) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[mem[64] + (32 * _26362) + 192 len 32 * _45405] = mem[ceil32(return_data.size) + 256 len 32 * _45405]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26362) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26362) + (32 * _45405) + 64]
                                                    else:
                                                        if not sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                            if not sub_764d55f7[arg1]:
                                                                mem[ceil32(return_data.size) + 128] = 1
                                                                mem[ceil32(return_data.size) + 192] = 1
                                                                mem[64] = ceil32(return_data.size) + 256
                                                                mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[ceil32(return_data.size) + 192]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                           value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27451 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27451] = return_data.size
                                                                            mem[_27451 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25368 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26346 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26346:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25368 + 64] = (32 * _26346) + 160
                                                                    _45393 = mem[ceil32(return_data.size) + 192]
                                                                    mem[_25368 + (32 * _26346) + 160] = mem[ceil32(return_data.size) + 192]
                                                                    mem[_25368 + (32 * _26346) + 192 len 32 * _45393] = mem[ceil32(return_data.size) + 224 len 32 * _45393]
                                                                    mem[_25368 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25368 + (32 * _26346) + (32 * _45393) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            _27449 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                            if idx >= mem[ceil32(return_data.size) + 192]:
                                                                                revert with 0, 50
                                                                            _28090 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                            _29049 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27449)
                                                                            mem[mem[64] + 100] = _28090
                                                                            _29050 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29050 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29050 + 36 len 28]
                                                                            mem[64] = _29049 + 196
                                                                            mem[_29049 + 132] = 32
                                                                            mem[_29049 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33374 = mem[_29050]
                                                                            s = 0
                                                                            while s < _33374:
                                                                                mem[s + _29049 + 196] = mem[s + _29050 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33374) > _33374:
                                                                                mem[_33374 + _29049 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29049 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29049 + 200 len _33374 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29049 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29049 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29049 + 264] = mem[idx + _29049 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29049 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29049 + ceil32(return_data.size) + 197
                                                                                mem[_29049 + 196] = return_data.size
                                                                                mem[_29049 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29049 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29049 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29049 + ceil32(return_data.size) + 265] = mem[idx + _29049 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29049 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29049 + 228] == bool(mem[_29049 + 228])
                                                                                    if not mem[_29049 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25366 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26344 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26344:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25366 + 64] = (32 * _26344) + 160
                                                                    _45390 = mem[ceil32(return_data.size) + 192]
                                                                    mem[_25366 + (32 * _26344) + 160] = mem[ceil32(return_data.size) + 192]
                                                                    mem[_25366 + (32 * _26344) + 192 len 32 * _45390] = mem[ceil32(return_data.size) + 224 len 32 * _45390]
                                                                    mem[_25366 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25366 + (32 * _26344) + (32 * _45390) + -mem[64] + 192]
                                                            else:
                                                                if 1 == sub_764d55f7[arg1]:
                                                                    mem[ceil32(return_data.size) + 128] = 2
                                                                    mem[ceil32(return_data.size) + 224] = 2
                                                                    mem[64] = ceil32(return_data.size) + 320
                                                                    mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                    mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[ceil32(return_data.size) + 192] = this.address
                                                                    if 0 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                        revert with 0, 17
                                                                    mem[ceil32(return_data.size) + 288] = sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                                        revert with 0, 'pay: token addr not exists'
                                                                    if not sub_764d55f7[arg1]:
                                                                        idx = 0
                                                                        s = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                revert with 0, 50
                                                                            call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                               value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                                 gas gas_remaining wei
                                                                            if return_data.size:
                                                                                _27448 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                mem[_27448] = return_data.size
                                                                                mem[_27448 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                revert with 0, 'pays:transfer failed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            s = ext_call.success
                                                                            continue 
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26340 = mem[ceil32(return_data.size) + 128]
                                                                        mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = ceil32(return_data.size) + 160
                                                                        while idx < _26340:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[mem[64] + 64] = (32 * _26340) + 160
                                                                        _45388 = mem[ceil32(return_data.size) + 224]
                                                                        mem[mem[64] + (32 * _26340) + 160] = mem[ceil32(return_data.size) + 224]
                                                                        mem[mem[64] + (32 * _26340) + 192 len 32 * _45388] = mem[ceil32(return_data.size) + 256 len 32 * _45388]
                                                                        mem[mem[64] + 96] = msg.sender
                                                                        emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26340) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26340) + (32 * _45388) + 64]
                                                                    else:
                                                                        mem[0] = sub_764d55f7[arg1]
                                                                        mem[32] = 109
                                                                        idx = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                    revert with 0, 50
                                                                                _27446 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                                if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                    revert with 0, 50
                                                                                _28085 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                                _29044 = mem[64]
                                                                                mem[mem[64] + 36] = msg.sender
                                                                                mem[mem[64] + 68] = address(_27446)
                                                                                mem[mem[64] + 100] = _28085
                                                                                _29045 = mem[64]
                                                                                mem[mem[64]] = 100
                                                                                mem[64] = mem[64] + 132
                                                                                mem[_29045 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29045 + 36 len 28]
                                                                                mem[64] = _29044 + 196
                                                                                mem[_29044 + 132] = 32
                                                                                mem[_29044 + 164] = 'SafeERC20: low-level call failed'
                                                                                if eth.balance(this.address) < 0:
                                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                    revert with 0, 'Address: call to non-contract'
                                                                                _33364 = mem[_29045]
                                                                                s = 0
                                                                                while s < _33364:
                                                                                    mem[s + _29044 + 196] = mem[s + _29045 + 32]
                                                                                    s = s + 32
                                                                                    continue 
                                                                                if ceil32(_33364) > _33364:
                                                                                    mem[_33364 + _29044 + 196] = 0
                                                                                call sub_6aafcaa9[stor108[arg1]].mem[_29044 + 196 len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[_29044 + 200 len _33364 - 4]
                                                                                if not return_data.size:
                                                                                    if not ext_call.success:
                                                                                        if mem[96]:
                                                                                            revert with memory
                                                                                              from 128
                                                                                               len mem[96]
                                                                                        mem[_29044 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29044 + 200] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29044 + 264] = mem[idx + _29044 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29044 + 264]
                                                                                    if mem[96]:
                                                                                        require mem[96] >= 32
                                                                                        require mem[128] == bool(mem[128])
                                                                                        if not mem[128]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                                else:
                                                                                    mem[64] = _29044 + ceil32(return_data.size) + 197
                                                                                    mem[_29044 + 196] = return_data.size
                                                                                    mem[_29044 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                    if not ext_call.success:
                                                                                        if return_data.size:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        mem[_29044 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29044 + ceil32(return_data.size) + 201] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29044 + ceil32(return_data.size) + 265] = mem[idx + _29044 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29044 + ceil32(return_data.size) + 265]
                                                                                    if return_data.size:
                                                                                        require return_data.size >= 32
                                                                                        require mem[_29044 + 228] == bool(mem[_29044 + 228])
                                                                                        if not mem[_29044 + 228]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            continue 
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26338 = mem[ceil32(return_data.size) + 128]
                                                                        mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = ceil32(return_data.size) + 160
                                                                        while idx < _26338:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[mem[64] + 64] = (32 * _26338) + 160
                                                                        _45385 = mem[ceil32(return_data.size) + 224]
                                                                        mem[mem[64] + (32 * _26338) + 160] = mem[ceil32(return_data.size) + 224]
                                                                        mem[mem[64] + (32 * _26338) + 192 len 32 * _45385] = mem[ceil32(return_data.size) + 256 len 32 * _45385]
                                                                        mem[mem[64] + 96] = msg.sender
                                                                        emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26338) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26338) + (32 * _45385) + 64]
                                                        else:
                                                            if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] += sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                            if not sub_764d55f7[arg1]:
                                                                mem[ceil32(return_data.size) + 128] = 1
                                                                mem[ceil32(return_data.size) + 192] = 1
                                                                mem[64] = ceil32(return_data.size) + 256
                                                                mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[ceil32(return_data.size) + 192]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                           value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27457 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27457] = return_data.size
                                                                            mem[_27457 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25378 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26358 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26358:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25378 + 64] = (32 * _26358) + 160
                                                                    _45403 = mem[ceil32(return_data.size) + 192]
                                                                    mem[_25378 + (32 * _26358) + 160] = mem[ceil32(return_data.size) + 192]
                                                                    mem[_25378 + (32 * _26358) + 192 len 32 * _45403] = mem[ceil32(return_data.size) + 224 len 32 * _45403]
                                                                    mem[_25378 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25378 + (32 * _26358) + (32 * _45403) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            _27455 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                            if idx >= mem[ceil32(return_data.size) + 192]:
                                                                                revert with 0, 50
                                                                            _28100 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                            _29059 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27455)
                                                                            mem[mem[64] + 100] = _28100
                                                                            _29060 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29060 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29060 + 36 len 28]
                                                                            mem[64] = _29059 + 196
                                                                            mem[_29059 + 132] = 32
                                                                            mem[_29059 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33394 = mem[_29060]
                                                                            s = 0
                                                                            while s < _33394:
                                                                                mem[s + _29059 + 196] = mem[s + _29060 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33394) > _33394:
                                                                                mem[_33394 + _29059 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29059 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29059 + 200 len _33394 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29059 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29059 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29059 + 264] = mem[idx + _29059 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29059 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29059 + ceil32(return_data.size) + 197
                                                                                mem[_29059 + 196] = return_data.size
                                                                                mem[_29059 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29059 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29059 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29059 + ceil32(return_data.size) + 265] = mem[idx + _29059 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29059 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29059 + 228] == bool(mem[_29059 + 228])
                                                                                    if not mem[_29059 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25376 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26356 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26356:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25376 + 64] = (32 * _26356) + 160
                                                                    _45400 = mem[ceil32(return_data.size) + 192]
                                                                    mem[_25376 + (32 * _26356) + 160] = mem[ceil32(return_data.size) + 192]
                                                                    mem[_25376 + (32 * _26356) + 192 len 32 * _45400] = mem[ceil32(return_data.size) + 224 len 32 * _45400]
                                                                    mem[_25376 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25376 + (32 * _26356) + (32 * _45400) + -mem[64] + 192]
                                                            else:
                                                                if 1 == sub_764d55f7[arg1]:
                                                                    mem[ceil32(return_data.size) + 128] = 2
                                                                    mem[ceil32(return_data.size) + 224] = 2
                                                                    mem[64] = ceil32(return_data.size) + 320
                                                                    mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                    mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[ceil32(return_data.size) + 192] = this.address
                                                                    if 0 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                        revert with 0, 17
                                                                    mem[ceil32(return_data.size) + 288] = sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                                        revert with 0, 'pay: token addr not exists'
                                                                    if not sub_764d55f7[arg1]:
                                                                        idx = 0
                                                                        s = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                revert with 0, 50
                                                                            call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                               value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                                 gas gas_remaining wei
                                                                            if return_data.size:
                                                                                _27454 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                mem[_27454] = return_data.size
                                                                                mem[_27454 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                revert with 0, 'pays:transfer failed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            s = ext_call.success
                                                                            continue 
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26352 = mem[ceil32(return_data.size) + 128]
                                                                        mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = ceil32(return_data.size) + 160
                                                                        while idx < _26352:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[mem[64] + 64] = (32 * _26352) + 160
                                                                        _45398 = mem[ceil32(return_data.size) + 224]
                                                                        mem[mem[64] + (32 * _26352) + 160] = mem[ceil32(return_data.size) + 224]
                                                                        mem[mem[64] + (32 * _26352) + 192 len 32 * _45398] = mem[ceil32(return_data.size) + 256 len 32 * _45398]
                                                                        mem[mem[64] + 96] = msg.sender
                                                                        emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26352) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26352) + (32 * _45398) + 64]
                                                                    else:
                                                                        mem[0] = sub_764d55f7[arg1]
                                                                        mem[32] = 109
                                                                        idx = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                    revert with 0, 50
                                                                                _27452 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                                if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                    revert with 0, 50
                                                                                _28095 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                                _29054 = mem[64]
                                                                                mem[mem[64] + 36] = msg.sender
                                                                                mem[mem[64] + 68] = address(_27452)
                                                                                mem[mem[64] + 100] = _28095
                                                                                _29055 = mem[64]
                                                                                mem[mem[64]] = 100
                                                                                mem[64] = mem[64] + 132
                                                                                mem[_29055 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29055 + 36 len 28]
                                                                                mem[64] = _29054 + 196
                                                                                mem[_29054 + 132] = 32
                                                                                mem[_29054 + 164] = 'SafeERC20: low-level call failed'
                                                                                if eth.balance(this.address) < 0:
                                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                    revert with 0, 'Address: call to non-contract'
                                                                                _33384 = mem[_29055]
                                                                                s = 0
                                                                                while s < _33384:
                                                                                    mem[s + _29054 + 196] = mem[s + _29055 + 32]
                                                                                    s = s + 32
                                                                                    continue 
                                                                                if ceil32(_33384) > _33384:
                                                                                    mem[_33384 + _29054 + 196] = 0
                                                                                call sub_6aafcaa9[stor108[arg1]].mem[_29054 + 196 len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[_29054 + 200 len _33384 - 4]
                                                                                if not return_data.size:
                                                                                    if not ext_call.success:
                                                                                        if mem[96]:
                                                                                            revert with memory
                                                                                              from 128
                                                                                               len mem[96]
                                                                                        mem[_29054 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29054 + 200] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29054 + 264] = mem[idx + _29054 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29054 + 264]
                                                                                    if mem[96]:
                                                                                        require mem[96] >= 32
                                                                                        require mem[128] == bool(mem[128])
                                                                                        if not mem[128]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                                else:
                                                                                    mem[64] = _29054 + ceil32(return_data.size) + 197
                                                                                    mem[_29054 + 196] = return_data.size
                                                                                    mem[_29054 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                    if not ext_call.success:
                                                                                        if return_data.size:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        mem[_29054 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29054 + ceil32(return_data.size) + 201] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29054 + ceil32(return_data.size) + 265] = mem[idx + _29054 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29054 + ceil32(return_data.size) + 265]
                                                                                    if return_data.size:
                                                                                        require return_data.size >= 32
                                                                                        require mem[_29054 + 228] == bool(mem[_29054 + 228])
                                                                                        if not mem[_29054 + 228]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            continue 
                                                                        _25371 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26350 = mem[ceil32(return_data.size) + 128]
                                                                        mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = ceil32(return_data.size) + 160
                                                                        while idx < _26350:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_25371 + 64] = (32 * _26350) + 160
                                                                        _45395 = mem[ceil32(return_data.size) + 224]
                                                                        mem[_25371 + (32 * _26350) + 160] = mem[ceil32(return_data.size) + 224]
                                                                        mem[_25371 + (32 * _26350) + 192 len 32 * _45395] = mem[ceil32(return_data.size) + 256 len 32 * _45395]
                                                                        mem[_25371 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _25371 + (32 * _26350) + (32 * _45395) + -mem[64] + 192]
                                                    require ext_code.size(stor107)
                                                    call stor107.0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    sub_57ba1b20[arg1].field_928 = 0
                                                    emit 0xcc45266b: sub_57ba1b20[arg1].field_0, 0, sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100), sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                        else:
                                            if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / sub_57ba1b20[arg1].field_0 != sub_f65e6912:
                                                revert with 0, 'arithmetic error'
                                            if 100 < sub_f65e6912:
                                                revert with 0, 17
                                            if -sub_f65e6912 + 100 < sub_57ba1b20[arg1].field_256:
                                                if sub_57ba1b20[arg1].field_0 < sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100:
                                                    revert with 0, 17
                                                if sub_b24fea7b[stor108[arg1]] > !(sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                    revert with 0, 17
                                                sub_b24fea7b[stor108[arg1]] += sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[ceil32(return_data.size) + 128] = 1
                                                        mem[ceil32(return_data.size) + 192] = 1
                                                        mem[64] = ceil32(return_data.size) + 256
                                                        mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                        if 0 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                            revert with 0, 17
                                                        mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[ceil32(return_data.size) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                   value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27445 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27445] = return_data.size
                                                                    mem[_27445 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _25358 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26334 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26334:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25358 + 64] = (32 * _26334) + 160
                                                            _45383 = mem[ceil32(return_data.size) + 192]
                                                            mem[_25358 + (32 * _26334) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[_25358 + (32 * _26334) + 192 len 32 * _45383] = mem[ceil32(return_data.size) + 224 len 32 * _45383]
                                                            mem[_25358 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25358 + (32 * _26334) + (32 * _45383) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    _27443 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    _28080 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                    _29039 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27443)
                                                                    mem[mem[64] + 100] = _28080
                                                                    _29040 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29040 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29040 + 36 len 28]
                                                                    mem[64] = _29039 + 196
                                                                    mem[_29039 + 132] = 32
                                                                    mem[_29039 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _33354 = mem[_29040]
                                                                    s = 0
                                                                    while s < _33354:
                                                                        mem[s + _29039 + 196] = mem[s + _29040 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_33354) > _33354:
                                                                        mem[_33354 + _29039 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29039 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29039 + 200 len _33354 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29039 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29039 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29039 + 264] = mem[idx + _29039 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29039 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29039 + ceil32(return_data.size) + 197
                                                                        mem[_29039 + 196] = return_data.size
                                                                        mem[_29039 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29039 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29039 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29039 + ceil32(return_data.size) + 265] = mem[idx + _29039 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29039 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29039 + 228] == bool(mem[_29039 + 228])
                                                                            if not mem[_29039 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _25356 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26332 = mem[ceil32(return_data.size) + 128]
                                                            mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = ceil32(return_data.size) + 160
                                                            while idx < _26332:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25356 + 64] = (32 * _26332) + 160
                                                            _45380 = mem[ceil32(return_data.size) + 192]
                                                            mem[_25356 + (32 * _26332) + 160] = mem[ceil32(return_data.size) + 192]
                                                            mem[_25356 + (32 * _26332) + 192 len 32 * _45380] = mem[ceil32(return_data.size) + 224 len 32 * _45380]
                                                            mem[_25356 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25356 + (32 * _26332) + (32 * _45380) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 2
                                                            mem[ceil32(return_data.size) + 224] = 2
                                                            mem[64] = ceil32(return_data.size) + 320
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            if 0 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                                revert with 0, 17
                                                            mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[ceil32(return_data.size) + 192] = this.address
                                                            mem[ceil32(return_data.size) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27442 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27442] = return_data.size
                                                                        mem[_27442 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26328 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26328:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _26328) + 160
                                                                _45378 = mem[ceil32(return_data.size) + 224]
                                                                mem[mem[64] + (32 * _26328) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[mem[64] + (32 * _26328) + 192 len 32 * _45378] = mem[ceil32(return_data.size) + 256 len 32 * _45378]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26328) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26328) + (32 * _45378) + 64]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27440 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        _28075 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                        _29034 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27440)
                                                                        mem[mem[64] + 100] = _28075
                                                                        _29035 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29035 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29035 + 36 len 28]
                                                                        mem[64] = _29034 + 196
                                                                        mem[_29034 + 132] = 32
                                                                        mem[_29034 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33344 = mem[_29035]
                                                                        s = 0
                                                                        while s < _33344:
                                                                            mem[s + _29034 + 196] = mem[s + _29035 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33344) > _33344:
                                                                            mem[_33344 + _29034 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29034 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29034 + 200 len _33344 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29034 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29034 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29034 + 264] = mem[idx + _29034 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29034 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29034 + ceil32(return_data.size) + 197
                                                                            mem[_29034 + 196] = return_data.size
                                                                            mem[_29034 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29034 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29034 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29034 + ceil32(return_data.size) + 265] = mem[idx + _29034 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29034 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29034 + 228] == bool(mem[_29034 + 228])
                                                                                if not mem[_29034 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25351 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26326 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26326:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25351 + 64] = (32 * _26326) + 160
                                                                _45375 = mem[ceil32(return_data.size) + 224]
                                                                mem[_25351 + (32 * _26326) + 160] = mem[ceil32(return_data.size) + 224]
                                                                mem[_25351 + (32 * _26326) + 192 len 32 * _45375] = mem[ceil32(return_data.size) + 256 len 32 * _45375]
                                                                mem[_25351 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25351 + (32 * _26326) + (32 * _45375) + -mem[64] + 192]
                                                else:
                                                    if not sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                        if not sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 1
                                                            mem[ceil32(return_data.size) + 192] = 1
                                                            mem[64] = ceil32(return_data.size) + 256
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[ceil32(return_data.size) + 224] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27433 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27433] = return_data.size
                                                                        mem[_27433 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25338 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26310 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26310:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25338 + 64] = (32 * _26310) + 160
                                                                _45363 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25338 + (32 * _26310) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25338 + (32 * _26310) + 192 len 32 * _45363] = mem[ceil32(return_data.size) + 224 len 32 * _45363]
                                                                mem[_25338 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25338 + (32 * _26310) + (32 * _45363) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27431 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 192]:
                                                                            revert with 0, 50
                                                                        _28060 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                        _29019 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27431)
                                                                        mem[mem[64] + 100] = _28060
                                                                        _29020 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29020 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29020 + 36 len 28]
                                                                        mem[64] = _29019 + 196
                                                                        mem[_29019 + 132] = 32
                                                                        mem[_29019 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33314 = mem[_29020]
                                                                        s = 0
                                                                        while s < _33314:
                                                                            mem[s + _29019 + 196] = mem[s + _29020 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33314) > _33314:
                                                                            mem[_33314 + _29019 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29019 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29019 + 200 len _33314 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29019 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29019 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29019 + 264] = mem[idx + _29019 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29019 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29019 + ceil32(return_data.size) + 197
                                                                            mem[_29019 + 196] = return_data.size
                                                                            mem[_29019 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29019 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29019 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29019 + ceil32(return_data.size) + 265] = mem[idx + _29019 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29019 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29019 + 228] == bool(mem[_29019 + 228])
                                                                                if not mem[_29019 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25336 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26308 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26308:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25336 + 64] = (32 * _26308) + 160
                                                                _45360 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25336 + (32 * _26308) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25336 + (32 * _26308) + 192 len 32 * _45360] = mem[ceil32(return_data.size) + 224 len 32 * _45360]
                                                                mem[_25336 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25336 + (32 * _26308) + (32 * _45360) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[ceil32(return_data.size) + 128] = 2
                                                                mem[ceil32(return_data.size) + 224] = 2
                                                                mem[64] = ceil32(return_data.size) + 320
                                                                mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[ceil32(return_data.size) + 256] = 0
                                                                mem[ceil32(return_data.size) + 192] = this.address
                                                                if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                                    revert with 0, 17
                                                                mem[ceil32(return_data.size) + 288] = sub_57ba1b20[arg1].field_0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                           value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27430 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27430] = return_data.size
                                                                            mem[_27430 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25333 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26304 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26304:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25333 + 64] = (32 * _26304) + 160
                                                                    _45358 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25333 + (32 * _26304) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25333 + (32 * _26304) + 192 len 32 * _45358] = mem[ceil32(return_data.size) + 256 len 32 * _45358]
                                                                    mem[_25333 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25333 + (32 * _26304) + (32 * _45358) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            _27428 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                            if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                revert with 0, 50
                                                                            _28055 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                            _29014 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27428)
                                                                            mem[mem[64] + 100] = _28055
                                                                            _29015 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29015 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29015 + 36 len 28]
                                                                            mem[64] = _29014 + 196
                                                                            mem[_29014 + 132] = 32
                                                                            mem[_29014 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33304 = mem[_29015]
                                                                            s = 0
                                                                            while s < _33304:
                                                                                mem[s + _29014 + 196] = mem[s + _29015 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33304) > _33304:
                                                                                mem[_33304 + _29014 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29014 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29014 + 200 len _33304 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29014 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29014 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29014 + 264] = mem[idx + _29014 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29014 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29014 + ceil32(return_data.size) + 197
                                                                                mem[_29014 + 196] = return_data.size
                                                                                mem[_29014 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29014 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29014 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29014 + ceil32(return_data.size) + 265] = mem[idx + _29014 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29014 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29014 + 228] == bool(mem[_29014 + 228])
                                                                                    if not mem[_29014 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25331 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26302 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26302:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25331 + 64] = (32 * _26302) + 160
                                                                    _45355 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25331 + (32 * _26302) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25331 + (32 * _26302) + 192 len 32 * _45355] = mem[ceil32(return_data.size) + 256 len 32 * _45355]
                                                                    mem[_25331 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25331 + (32 * _26302) + (32 * _45355) + -mem[64] + 192]
                                                    else:
                                                        if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                            revert with 0, 17
                                                        sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] = sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] + sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                        if not sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 1
                                                            mem[ceil32(return_data.size) + 192] = 1
                                                            mem[64] = ceil32(return_data.size) + 256
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[ceil32(return_data.size) + 224] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27439 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27439] = return_data.size
                                                                        mem[_27439 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25348 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26322 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26322:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25348 + 64] = (32 * _26322) + 160
                                                                _45373 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25348 + (32 * _26322) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25348 + (32 * _26322) + 192 len 32 * _45373] = mem[ceil32(return_data.size) + 224 len 32 * _45373]
                                                                mem[_25348 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25348 + (32 * _26322) + (32 * _45373) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27437 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 192]:
                                                                            revert with 0, 50
                                                                        _28070 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                        _29029 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27437)
                                                                        mem[mem[64] + 100] = _28070
                                                                        _29030 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29030 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29030 + 36 len 28]
                                                                        mem[64] = _29029 + 196
                                                                        mem[_29029 + 132] = 32
                                                                        mem[_29029 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33334 = mem[_29030]
                                                                        s = 0
                                                                        while s < _33334:
                                                                            mem[s + _29029 + 196] = mem[s + _29030 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33334) > _33334:
                                                                            mem[_33334 + _29029 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29029 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29029 + 200 len _33334 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29029 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29029 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29029 + 264] = mem[idx + _29029 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29029 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29029 + ceil32(return_data.size) + 197
                                                                            mem[_29029 + 196] = return_data.size
                                                                            mem[_29029 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29029 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29029 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29029 + ceil32(return_data.size) + 265] = mem[idx + _29029 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29029 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29029 + 228] == bool(mem[_29029 + 228])
                                                                                if not mem[_29029 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25346 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26320 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26320:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25346 + 64] = (32 * _26320) + 160
                                                                _45370 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25346 + (32 * _26320) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25346 + (32 * _26320) + 192 len 32 * _45370] = mem[ceil32(return_data.size) + 224 len 32 * _45370]
                                                                mem[_25346 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25346 + (32 * _26320) + (32 * _45370) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[ceil32(return_data.size) + 128] = 2
                                                                mem[ceil32(return_data.size) + 224] = 2
                                                                mem[64] = ceil32(return_data.size) + 320
                                                                mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[ceil32(return_data.size) + 256] = 0
                                                                mem[ceil32(return_data.size) + 192] = this.address
                                                                if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                                    revert with 0, 17
                                                                mem[ceil32(return_data.size) + 288] = sub_57ba1b20[arg1].field_0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                           value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27436 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27436] = return_data.size
                                                                            mem[_27436 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25343 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26316 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26316:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25343 + 64] = (32 * _26316) + 160
                                                                    _45368 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25343 + (32 * _26316) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25343 + (32 * _26316) + 192 len 32 * _45368] = mem[ceil32(return_data.size) + 256 len 32 * _45368]
                                                                    mem[_25343 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25343 + (32 * _26316) + (32 * _45368) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            _27434 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                            if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                revert with 0, 50
                                                                            _28065 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                            _29024 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27434)
                                                                            mem[mem[64] + 100] = _28065
                                                                            _29025 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29025 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29025 + 36 len 28]
                                                                            mem[64] = _29024 + 196
                                                                            mem[_29024 + 132] = 32
                                                                            mem[_29024 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33324 = mem[_29025]
                                                                            s = 0
                                                                            while s < _33324:
                                                                                mem[s + _29024 + 196] = mem[s + _29025 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33324) > _33324:
                                                                                mem[_33324 + _29024 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29024 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29024 + 200 len _33324 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29024 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29024 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29024 + 264] = mem[idx + _29024 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29024 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29024 + ceil32(return_data.size) + 197
                                                                                mem[_29024 + 196] = return_data.size
                                                                                mem[_29024 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29024 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29024 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29024 + ceil32(return_data.size) + 265] = mem[idx + _29024 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29024 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29024 + 228] == bool(mem[_29024 + 228])
                                                                                    if not mem[_29024 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26314 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26314:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _26314) + 160
                                                                    _45365 = mem[ceil32(return_data.size) + 224]
                                                                    mem[mem[64] + (32 * _26314) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[mem[64] + (32 * _26314) + 192 len 32 * _45365] = mem[ceil32(return_data.size) + 256 len 32 * _45365]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26314) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26314) + (32 * _45365) + 64]
                                                require ext_code.size(stor107)
                                                call stor107.0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                sub_57ba1b20[arg1].field_928 = 0
                                                emit 0xcc45266b: sub_57ba1b20[arg1].field_0, sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100), 0, sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                            else:
                                                if sub_57ba1b20[arg1].field_256 > 100:
                                                    revert with 0, 'percent invalid'
                                                if not sub_57ba1b20[arg1].field_0:
                                                    if sub_57ba1b20[arg1].field_0 < sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) < 0:
                                                        revert with 0, 17
                                                    if sub_b24fea7b[stor108[arg1]] > !(sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                        revert with 0, 17
                                                    sub_b24fea7b[stor108[arg1]] += sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                    if sub_57ba1b20[arg1].field_768 != sub_57ba1b20[arg1].field_512:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 1
                                                            mem[ceil32(return_data.size) + 192] = 1
                                                            mem[64] = ceil32(return_data.size) + 256
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27421 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27421] = return_data.size
                                                                        mem[_27421 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25318 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26286 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26286:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25318 + 64] = (32 * _26286) + 160
                                                                _45343 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25318 + (32 * _26286) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25318 + (32 * _26286) + 192 len 32 * _45343] = mem[ceil32(return_data.size) + 224 len 32 * _45343]
                                                                mem[_25318 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25318 + (32 * _26286) + (32 * _45343) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27419 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 192]:
                                                                            revert with 0, 50
                                                                        _28040 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                        _28999 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27419)
                                                                        mem[mem[64] + 100] = _28040
                                                                        _29000 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29000 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29000 + 36 len 28]
                                                                        mem[64] = _28999 + 196
                                                                        mem[_28999 + 132] = 32
                                                                        mem[_28999 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33274 = mem[_29000]
                                                                        s = 0
                                                                        while s < _33274:
                                                                            mem[s + _28999 + 196] = mem[s + _29000 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33274) > _33274:
                                                                            mem[_33274 + _28999 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_28999 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_28999 + 200 len _33274 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_28999 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_28999 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _28999 + 264] = mem[idx + _28999 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_28999 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _28999 + ceil32(return_data.size) + 197
                                                                            mem[_28999 + 196] = return_data.size
                                                                            mem[_28999 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_28999 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_28999 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _28999 + ceil32(return_data.size) + 265] = mem[idx + _28999 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_28999 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_28999 + 228] == bool(mem[_28999 + 228])
                                                                                if not mem[_28999 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25316 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26284 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26284:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25316 + 64] = (32 * _26284) + 160
                                                                _45340 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25316 + (32 * _26284) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25316 + (32 * _26284) + 192 len 32 * _45340] = mem[ceil32(return_data.size) + 224 len 32 * _45340]
                                                                mem[_25316 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25316 + (32 * _26284) + (32 * _45340) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[ceil32(return_data.size) + 128] = 2
                                                                mem[ceil32(return_data.size) + 224] = 2
                                                                mem[64] = ceil32(return_data.size) + 320
                                                                mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[ceil32(return_data.size) + 192] = this.address
                                                                if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > -1:
                                                                    revert with 0, 17
                                                                mem[ceil32(return_data.size) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                           value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27418 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27418] = return_data.size
                                                                            mem[_27418 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25313 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26280 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26280:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25313 + 64] = (32 * _26280) + 160
                                                                    _45338 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25313 + (32 * _26280) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25313 + (32 * _26280) + 192 len 32 * _45338] = mem[ceil32(return_data.size) + 256 len 32 * _45338]
                                                                    mem[_25313 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25313 + (32 * _26280) + (32 * _45338) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            _27416 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                            if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                revert with 0, 50
                                                                            _28035 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                            _28994 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27416)
                                                                            mem[mem[64] + 100] = _28035
                                                                            _28995 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_28995 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_28995 + 36 len 28]
                                                                            mem[64] = _28994 + 196
                                                                            mem[_28994 + 132] = 32
                                                                            mem[_28994 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33264 = mem[_28995]
                                                                            s = 0
                                                                            while s < _33264:
                                                                                mem[s + _28994 + 196] = mem[s + _28995 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33264) > _33264:
                                                                                mem[_33264 + _28994 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_28994 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_28994 + 200 len _33264 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_28994 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_28994 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _28994 + 264] = mem[idx + _28994 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_28994 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _28994 + ceil32(return_data.size) + 197
                                                                                mem[_28994 + 196] = return_data.size
                                                                                mem[_28994 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_28994 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_28994 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _28994 + ceil32(return_data.size) + 265] = mem[idx + _28994 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_28994 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_28994 + 228] == bool(mem[_28994 + 228])
                                                                                    if not mem[_28994 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25311 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26278 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26278:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25311 + 64] = (32 * _26278) + 160
                                                                    _45335 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25311 + (32 * _26278) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25311 + (32 * _26278) + 192 len 32 * _45335] = mem[ceil32(return_data.size) + 256 len 32 * _45335]
                                                                    mem[_25311 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25311 + (32 * _26278) + (32 * _45335) + -mem[64] + 192]
                                                    else:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 1
                                                            mem[ceil32(return_data.size) + 192] = 1
                                                            mem[64] = ceil32(return_data.size) + 256
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) > -1:
                                                                revert with 0, 17
                                                            mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27427 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27427] = return_data.size
                                                                        mem[_27427 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25328 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26298 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26298:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25328 + 64] = (32 * _26298) + 160
                                                                _45353 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25328 + (32 * _26298) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25328 + (32 * _26298) + 192 len 32 * _45353] = mem[ceil32(return_data.size) + 224 len 32 * _45353]
                                                                mem[_25328 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25328 + (32 * _26298) + (32 * _45353) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27425 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 192]:
                                                                            revert with 0, 50
                                                                        _28050 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                        _29009 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27425)
                                                                        mem[mem[64] + 100] = _28050
                                                                        _29010 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29010 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29010 + 36 len 28]
                                                                        mem[64] = _29009 + 196
                                                                        mem[_29009 + 132] = 32
                                                                        mem[_29009 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33294 = mem[_29010]
                                                                        s = 0
                                                                        while s < _33294:
                                                                            mem[s + _29009 + 196] = mem[s + _29010 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33294) > _33294:
                                                                            mem[_33294 + _29009 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29009 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29009 + 200 len _33294 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29009 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29009 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29009 + 264] = mem[idx + _29009 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29009 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29009 + ceil32(return_data.size) + 197
                                                                            mem[_29009 + 196] = return_data.size
                                                                            mem[_29009 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29009 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29009 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29009 + ceil32(return_data.size) + 265] = mem[idx + _29009 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29009 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29009 + 228] == bool(mem[_29009 + 228])
                                                                                if not mem[_29009 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26296 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26296:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _26296) + 160
                                                                _45350 = mem[ceil32(return_data.size) + 192]
                                                                mem[mem[64] + (32 * _26296) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[mem[64] + (32 * _26296) + 192 len 32 * _45350] = mem[ceil32(return_data.size) + 224 len 32 * _45350]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26296) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26296) + (32 * _45350) + 64]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[ceil32(return_data.size) + 128] = 2
                                                                mem[ceil32(return_data.size) + 224] = 2
                                                                mem[64] = ceil32(return_data.size) + 320
                                                                mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) > -1:
                                                                    revert with 0, 17
                                                                mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[ceil32(return_data.size) + 192] = this.address
                                                                mem[ceil32(return_data.size) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                           value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27424 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27424] = return_data.size
                                                                            mem[_27424 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25323 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26292 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26292:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25323 + 64] = (32 * _26292) + 160
                                                                    _45348 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25323 + (32 * _26292) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25323 + (32 * _26292) + 192 len 32 * _45348] = mem[ceil32(return_data.size) + 256 len 32 * _45348]
                                                                    mem[_25323 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25323 + (32 * _26292) + (32 * _45348) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            _27422 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                            if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                revert with 0, 50
                                                                            _28045 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                            _29004 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27422)
                                                                            mem[mem[64] + 100] = _28045
                                                                            _29005 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29005 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29005 + 36 len 28]
                                                                            mem[64] = _29004 + 196
                                                                            mem[_29004 + 132] = 32
                                                                            mem[_29004 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33284 = mem[_29005]
                                                                            s = 0
                                                                            while s < _33284:
                                                                                mem[s + _29004 + 196] = mem[s + _29005 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33284) > _33284:
                                                                                mem[_33284 + _29004 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29004 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29004 + 200 len _33284 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29004 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29004 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29004 + 264] = mem[idx + _29004 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29004 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29004 + ceil32(return_data.size) + 197
                                                                                mem[_29004 + 196] = return_data.size
                                                                                mem[_29004 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29004 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29004 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29004 + ceil32(return_data.size) + 265] = mem[idx + _29004 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29004 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29004 + 228] == bool(mem[_29004 + 228])
                                                                                    if not mem[_29004 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25321 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26290 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26290:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25321 + 64] = (32 * _26290) + 160
                                                                    _45345 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25321 + (32 * _26290) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25321 + (32 * _26290) + 192 len 32 * _45345] = mem[ceil32(return_data.size) + 256 len 32 * _45345]
                                                                    mem[_25321 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25321 + (32 * _26290) + (32 * _45345) + -mem[64] + 192]
                                                    require ext_code.size(stor107)
                                                    call stor107.0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    sub_57ba1b20[arg1].field_928 = 0
                                                    emit 0xcc45266b: sub_57ba1b20[arg1].field_0, sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100, 0, sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100), sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                                else:
                                                    if sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / sub_57ba1b20[arg1].field_0 != sub_57ba1b20[arg1].field_256:
                                                        revert with 0, 'arithmetic error'
                                                    if sub_57ba1b20[arg1].field_0 < sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) < sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                        revert with 0, 17
                                                    if sub_b24fea7b[stor108[arg1]] > !(sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                        revert with 0, 17
                                                    sub_b24fea7b[stor108[arg1]] += sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                    if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[ceil32(return_data.size) + 128] = 1
                                                            mem[ceil32(return_data.size) + 192] = 1
                                                            mem[64] = ceil32(return_data.size) + 256
                                                            mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[ceil32(return_data.size) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                       value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27415 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27415] = return_data.size
                                                                        mem[_27415 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25308 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26274 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26274:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25308 + 64] = (32 * _26274) + 160
                                                                _45333 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25308 + (32 * _26274) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25308 + (32 * _26274) + 192 len 32 * _45333] = mem[ceil32(return_data.size) + 224 len 32 * _45333]
                                                                mem[_25308 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25308 + (32 * _26274) + (32 * _45333) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[ceil32(return_data.size) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        _27413 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                        if idx >= mem[ceil32(return_data.size) + 192]:
                                                                            revert with 0, 50
                                                                        _28030 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                        _28989 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27413)
                                                                        mem[mem[64] + 100] = _28030
                                                                        _28990 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_28990 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_28990 + 36 len 28]
                                                                        mem[64] = _28989 + 196
                                                                        mem[_28989 + 132] = 32
                                                                        mem[_28989 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33254 = mem[_28990]
                                                                        s = 0
                                                                        while s < _33254:
                                                                            mem[s + _28989 + 196] = mem[s + _28990 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33254) > _33254:
                                                                            mem[_33254 + _28989 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_28989 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_28989 + 200 len _33254 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_28989 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_28989 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _28989 + 264] = mem[idx + _28989 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_28989 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _28989 + ceil32(return_data.size) + 197
                                                                            mem[_28989 + 196] = return_data.size
                                                                            mem[_28989 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_28989 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_28989 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _28989 + ceil32(return_data.size) + 265] = mem[idx + _28989 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_28989 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_28989 + 228] == bool(mem[_28989 + 228])
                                                                                if not mem[_28989 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25306 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26272 = mem[ceil32(return_data.size) + 128]
                                                                mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = ceil32(return_data.size) + 160
                                                                while idx < _26272:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25306 + 64] = (32 * _26272) + 160
                                                                _45330 = mem[ceil32(return_data.size) + 192]
                                                                mem[_25306 + (32 * _26272) + 160] = mem[ceil32(return_data.size) + 192]
                                                                mem[_25306 + (32 * _26272) + 192 len 32 * _45330] = mem[ceil32(return_data.size) + 224 len 32 * _45330]
                                                                mem[_25306 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25306 + (32 * _26272) + (32 * _45330) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[ceil32(return_data.size) + 128] = 2
                                                                mem[ceil32(return_data.size) + 224] = 2
                                                                mem[64] = ceil32(return_data.size) + 320
                                                                mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                    revert with 0, 17
                                                                mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[ceil32(return_data.size) + 192] = this.address
                                                                mem[ceil32(return_data.size) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[ceil32(return_data.size) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                           value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27412 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27412] = return_data.size
                                                                            mem[_27412 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25303 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26268 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26268:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25303 + 64] = (32 * _26268) + 160
                                                                    _45328 = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25303 + (32 * _26268) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[_25303 + (32 * _26268) + 192 len 32 * _45328] = mem[ceil32(return_data.size) + 256 len 32 * _45328]
                                                                    mem[_25303 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25303 + (32 * _26268) + (32 * _45328) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            _27410 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                            if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                revert with 0, 50
                                                                            _28025 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                            _28984 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27410)
                                                                            mem[mem[64] + 100] = _28025
                                                                            _28985 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_28985 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_28985 + 36 len 28]
                                                                            mem[64] = _28984 + 196
                                                                            mem[_28984 + 132] = 32
                                                                            mem[_28984 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33244 = mem[_28985]
                                                                            s = 0
                                                                            while s < _33244:
                                                                                mem[s + _28984 + 196] = mem[s + _28985 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33244) > _33244:
                                                                                mem[_33244 + _28984 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_28984 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_28984 + 200 len _33244 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_28984 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_28984 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _28984 + 264] = mem[idx + _28984 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_28984 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _28984 + ceil32(return_data.size) + 197
                                                                                mem[_28984 + 196] = return_data.size
                                                                                mem[_28984 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_28984 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_28984 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _28984 + ceil32(return_data.size) + 265] = mem[idx + _28984 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_28984 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_28984 + 228] == bool(mem[_28984 + 228])
                                                                                    if not mem[_28984 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26266 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26266:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _26266) + 160
                                                                    _45325 = mem[ceil32(return_data.size) + 224]
                                                                    mem[mem[64] + (32 * _26266) + 160] = mem[ceil32(return_data.size) + 224]
                                                                    mem[mem[64] + (32 * _26266) + 192 len 32 * _45325] = mem[ceil32(return_data.size) + 256 len 32 * _45325]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26266) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26266) + (32 * _45325) + 64]
                                                    else:
                                                        if not sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                            if not sub_764d55f7[arg1]:
                                                                mem[ceil32(return_data.size) + 128] = 1
                                                                mem[ceil32(return_data.size) + 192] = 1
                                                                mem[64] = ceil32(return_data.size) + 256
                                                                mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[ceil32(return_data.size) + 192]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                           value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27403 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27403] = return_data.size
                                                                            mem[_27403 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25288 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26250 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26250:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25288 + 64] = (32 * _26250) + 160
                                                                    _45313 = mem[ceil32(return_data.size) + 192]
                                                                    mem[_25288 + (32 * _26250) + 160] = mem[ceil32(return_data.size) + 192]
                                                                    mem[_25288 + (32 * _26250) + 192 len 32 * _45313] = mem[ceil32(return_data.size) + 224 len 32 * _45313]
                                                                    mem[_25288 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25288 + (32 * _26250) + (32 * _45313) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            _27401 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                            if idx >= mem[ceil32(return_data.size) + 192]:
                                                                                revert with 0, 50
                                                                            _28010 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                            _28969 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27401)
                                                                            mem[mem[64] + 100] = _28010
                                                                            _28970 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_28970 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_28970 + 36 len 28]
                                                                            mem[64] = _28969 + 196
                                                                            mem[_28969 + 132] = 32
                                                                            mem[_28969 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33214 = mem[_28970]
                                                                            s = 0
                                                                            while s < _33214:
                                                                                mem[s + _28969 + 196] = mem[s + _28970 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33214) > _33214:
                                                                                mem[_33214 + _28969 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_28969 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_28969 + 200 len _33214 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_28969 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_28969 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _28969 + 264] = mem[idx + _28969 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_28969 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _28969 + ceil32(return_data.size) + 197
                                                                                mem[_28969 + 196] = return_data.size
                                                                                mem[_28969 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_28969 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_28969 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _28969 + ceil32(return_data.size) + 265] = mem[idx + _28969 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_28969 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_28969 + 228] == bool(mem[_28969 + 228])
                                                                                    if not mem[_28969 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25286 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26248 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26248:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25286 + 64] = (32 * _26248) + 160
                                                                    _45310 = mem[ceil32(return_data.size) + 192]
                                                                    mem[_25286 + (32 * _26248) + 160] = mem[ceil32(return_data.size) + 192]
                                                                    mem[_25286 + (32 * _26248) + 192 len 32 * _45310] = mem[ceil32(return_data.size) + 224 len 32 * _45310]
                                                                    mem[_25286 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25286 + (32 * _26248) + (32 * _45310) + -mem[64] + 192]
                                                            else:
                                                                if 1 == sub_764d55f7[arg1]:
                                                                    mem[ceil32(return_data.size) + 128] = 2
                                                                    mem[ceil32(return_data.size) + 224] = 2
                                                                    mem[64] = ceil32(return_data.size) + 320
                                                                    mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                    mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[ceil32(return_data.size) + 192] = this.address
                                                                    if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                        revert with 0, 17
                                                                    mem[ceil32(return_data.size) + 288] = (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) + (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                                        revert with 0, 'pay: token addr not exists'
                                                                    if not sub_764d55f7[arg1]:
                                                                        idx = 0
                                                                        s = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                revert with 0, 50
                                                                            call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                               value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                                 gas gas_remaining wei
                                                                            if return_data.size:
                                                                                _27400 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                mem[_27400] = return_data.size
                                                                                mem[_27400 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                revert with 0, 'pays:transfer failed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            s = ext_call.success
                                                                            continue 
                                                                        _25283 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26244 = mem[ceil32(return_data.size) + 128]
                                                                        mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = ceil32(return_data.size) + 160
                                                                        while idx < _26244:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_25283 + 64] = (32 * _26244) + 160
                                                                        _45308 = mem[ceil32(return_data.size) + 224]
                                                                        mem[_25283 + (32 * _26244) + 160] = mem[ceil32(return_data.size) + 224]
                                                                        mem[_25283 + (32 * _26244) + 192 len 32 * _45308] = mem[ceil32(return_data.size) + 256 len 32 * _45308]
                                                                        mem[_25283 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _25283 + (32 * _26244) + (32 * _45308) + -mem[64] + 192]
                                                                    else:
                                                                        mem[0] = sub_764d55f7[arg1]
                                                                        mem[32] = 109
                                                                        idx = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                    revert with 0, 50
                                                                                _27398 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                                if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                    revert with 0, 50
                                                                                _28005 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                                _28964 = mem[64]
                                                                                mem[mem[64] + 36] = msg.sender
                                                                                mem[mem[64] + 68] = address(_27398)
                                                                                mem[mem[64] + 100] = _28005
                                                                                _28965 = mem[64]
                                                                                mem[mem[64]] = 100
                                                                                mem[64] = mem[64] + 132
                                                                                mem[_28965 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_28965 + 36 len 28]
                                                                                mem[64] = _28964 + 196
                                                                                mem[_28964 + 132] = 32
                                                                                mem[_28964 + 164] = 'SafeERC20: low-level call failed'
                                                                                if eth.balance(this.address) < 0:
                                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                    revert with 0, 'Address: call to non-contract'
                                                                                _33204 = mem[_28965]
                                                                                s = 0
                                                                                while s < _33204:
                                                                                    mem[s + _28964 + 196] = mem[s + _28965 + 32]
                                                                                    s = s + 32
                                                                                    continue 
                                                                                if ceil32(_33204) > _33204:
                                                                                    mem[_33204 + _28964 + 196] = 0
                                                                                call sub_6aafcaa9[stor108[arg1]].mem[_28964 + 196 len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[_28964 + 200 len _33204 - 4]
                                                                                if not return_data.size:
                                                                                    if not ext_call.success:
                                                                                        if mem[96]:
                                                                                            revert with memory
                                                                                              from 128
                                                                                               len mem[96]
                                                                                        mem[_28964 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_28964 + 200] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _28964 + 264] = mem[idx + _28964 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_28964 + 264]
                                                                                    if mem[96]:
                                                                                        require mem[96] >= 32
                                                                                        require mem[128] == bool(mem[128])
                                                                                        if not mem[128]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                                else:
                                                                                    mem[64] = _28964 + ceil32(return_data.size) + 197
                                                                                    mem[_28964 + 196] = return_data.size
                                                                                    mem[_28964 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                    if not ext_call.success:
                                                                                        if return_data.size:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        mem[_28964 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_28964 + ceil32(return_data.size) + 201] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _28964 + ceil32(return_data.size) + 265] = mem[idx + _28964 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_28964 + ceil32(return_data.size) + 265]
                                                                                    if return_data.size:
                                                                                        require return_data.size >= 32
                                                                                        require mem[_28964 + 228] == bool(mem[_28964 + 228])
                                                                                        if not mem[_28964 + 228]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            continue 
                                                                        _25281 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26242 = mem[ceil32(return_data.size) + 128]
                                                                        mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = ceil32(return_data.size) + 160
                                                                        while idx < _26242:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_25281 + 64] = (32 * _26242) + 160
                                                                        _45305 = mem[ceil32(return_data.size) + 224]
                                                                        mem[_25281 + (32 * _26242) + 160] = mem[ceil32(return_data.size) + 224]
                                                                        mem[_25281 + (32 * _26242) + 192 len 32 * _45305] = mem[ceil32(return_data.size) + 256 len 32 * _45305]
                                                                        mem[_25281 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _25281 + (32 * _26242) + (32 * _45305) + -mem[64] + 192]
                                                        else:
                                                            if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] += sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                            if not sub_764d55f7[arg1]:
                                                                mem[ceil32(return_data.size) + 128] = 1
                                                                mem[ceil32(return_data.size) + 192] = 1
                                                                mem[64] = ceil32(return_data.size) + 256
                                                                mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[ceil32(return_data.size) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[ceil32(return_data.size) + 192]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                           value mem[(32 * idx) + ceil32(return_data.size) + 224] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27409 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27409] = return_data.size
                                                                            mem[_27409 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25298 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26262 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26262:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25298 + 64] = (32 * _26262) + 160
                                                                    _45323 = mem[ceil32(return_data.size) + 192]
                                                                    mem[_25298 + (32 * _26262) + 160] = mem[ceil32(return_data.size) + 192]
                                                                    mem[_25298 + (32 * _26262) + 192 len 32 * _45323] = mem[ceil32(return_data.size) + 224 len 32 * _45323]
                                                                    mem[_25298 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25298 + (32 * _26262) + (32 * _45323) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[ceil32(return_data.size) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            _27407 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                            if idx >= mem[ceil32(return_data.size) + 192]:
                                                                                revert with 0, 50
                                                                            _28020 = mem[(32 * idx) + ceil32(return_data.size) + 224]
                                                                            _28979 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27407)
                                                                            mem[mem[64] + 100] = _28020
                                                                            _28980 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_28980 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_28980 + 36 len 28]
                                                                            mem[64] = _28979 + 196
                                                                            mem[_28979 + 132] = 32
                                                                            mem[_28979 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33234 = mem[_28980]
                                                                            s = 0
                                                                            while s < _33234:
                                                                                mem[s + _28979 + 196] = mem[s + _28980 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33234) > _33234:
                                                                                mem[_33234 + _28979 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_28979 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_28979 + 200 len _33234 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_28979 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_28979 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _28979 + 264] = mem[idx + _28979 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_28979 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _28979 + ceil32(return_data.size) + 197
                                                                                mem[_28979 + 196] = return_data.size
                                                                                mem[_28979 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_28979 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_28979 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _28979 + ceil32(return_data.size) + 265] = mem[idx + _28979 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_28979 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_28979 + 228] == bool(mem[_28979 + 228])
                                                                                    if not mem[_28979 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25296 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26260 = mem[ceil32(return_data.size) + 128]
                                                                    mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = ceil32(return_data.size) + 160
                                                                    while idx < _26260:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25296 + 64] = (32 * _26260) + 160
                                                                    _45320 = mem[ceil32(return_data.size) + 192]
                                                                    mem[_25296 + (32 * _26260) + 160] = mem[ceil32(return_data.size) + 192]
                                                                    mem[_25296 + (32 * _26260) + 192 len 32 * _45320] = mem[ceil32(return_data.size) + 224 len 32 * _45320]
                                                                    mem[_25296 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25296 + (32 * _26260) + (32 * _45320) + -mem[64] + 192]
                                                            else:
                                                                if 1 == sub_764d55f7[arg1]:
                                                                    mem[ceil32(return_data.size) + 128] = 2
                                                                    mem[ceil32(return_data.size) + 224] = 2
                                                                    mem[64] = ceil32(return_data.size) + 320
                                                                    mem[ceil32(return_data.size) + 160] = sub_57ba1b20[arg1].field_768
                                                                    mem[ceil32(return_data.size) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[ceil32(return_data.size) + 192] = this.address
                                                                    if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                        revert with 0, 17
                                                                    mem[ceil32(return_data.size) + 288] = (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) + (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                                        revert with 0, 'pay: token addr not exists'
                                                                    if not sub_764d55f7[arg1]:
                                                                        idx = 0
                                                                        s = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                revert with 0, 50
                                                                            call mem[(32 * idx) + ceil32(return_data.size) + 172 len 20] with:
                                                                               value mem[(32 * idx) + ceil32(return_data.size) + 256] wei
                                                                                 gas gas_remaining wei
                                                                            if return_data.size:
                                                                                _27406 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                mem[_27406] = return_data.size
                                                                                mem[_27406 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                revert with 0, 'pays:transfer failed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            s = ext_call.success
                                                                            continue 
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26256 = mem[ceil32(return_data.size) + 128]
                                                                        mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = ceil32(return_data.size) + 160
                                                                        while idx < _26256:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[mem[64] + 64] = (32 * _26256) + 160
                                                                        _45318 = mem[ceil32(return_data.size) + 224]
                                                                        mem[mem[64] + (32 * _26256) + 160] = mem[ceil32(return_data.size) + 224]
                                                                        mem[mem[64] + (32 * _26256) + 192 len 32 * _45318] = mem[ceil32(return_data.size) + 256 len 32 * _45318]
                                                                        mem[mem[64] + 96] = msg.sender
                                                                        emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26256) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26256) + (32 * _45318) + 64]
                                                                    else:
                                                                        mem[0] = sub_764d55f7[arg1]
                                                                        mem[32] = 109
                                                                        idx = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                revert with 0, 50
                                                                            if mem[(32 * idx) + ceil32(return_data.size) + 172 len 20]:
                                                                                if idx >= mem[ceil32(return_data.size) + 128]:
                                                                                    revert with 0, 50
                                                                                _27404 = mem[(32 * idx) + ceil32(return_data.size) + 160]
                                                                                if idx >= mem[ceil32(return_data.size) + 224]:
                                                                                    revert with 0, 50
                                                                                _28015 = mem[(32 * idx) + ceil32(return_data.size) + 256]
                                                                                _28974 = mem[64]
                                                                                mem[mem[64] + 36] = msg.sender
                                                                                mem[mem[64] + 68] = address(_27404)
                                                                                mem[mem[64] + 100] = _28015
                                                                                _28975 = mem[64]
                                                                                mem[mem[64]] = 100
                                                                                mem[64] = mem[64] + 132
                                                                                mem[_28975 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_28975 + 36 len 28]
                                                                                mem[64] = _28974 + 196
                                                                                mem[_28974 + 132] = 32
                                                                                mem[_28974 + 164] = 'SafeERC20: low-level call failed'
                                                                                if eth.balance(this.address) < 0:
                                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                    revert with 0, 'Address: call to non-contract'
                                                                                _33224 = mem[_28975]
                                                                                s = 0
                                                                                while s < _33224:
                                                                                    mem[s + _28974 + 196] = mem[s + _28975 + 32]
                                                                                    s = s + 32
                                                                                    continue 
                                                                                if ceil32(_33224) > _33224:
                                                                                    mem[_33224 + _28974 + 196] = 0
                                                                                call sub_6aafcaa9[stor108[arg1]].mem[_28974 + 196 len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[_28974 + 200 len _33224 - 4]
                                                                                if not return_data.size:
                                                                                    if not ext_call.success:
                                                                                        if mem[96]:
                                                                                            revert with memory
                                                                                              from 128
                                                                                               len mem[96]
                                                                                        mem[_28974 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_28974 + 200] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _28974 + 264] = mem[idx + _28974 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_28974 + 264]
                                                                                    if mem[96]:
                                                                                        require mem[96] >= 32
                                                                                        require mem[128] == bool(mem[128])
                                                                                        if not mem[128]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                                else:
                                                                                    mem[64] = _28974 + ceil32(return_data.size) + 197
                                                                                    mem[_28974 + 196] = return_data.size
                                                                                    mem[_28974 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                    if not ext_call.success:
                                                                                        if return_data.size:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        mem[_28974 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_28974 + ceil32(return_data.size) + 201] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _28974 + ceil32(return_data.size) + 265] = mem[idx + _28974 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_28974 + ceil32(return_data.size) + 265]
                                                                                    if return_data.size:
                                                                                        require return_data.size >= 32
                                                                                        require mem[_28974 + 228] == bool(mem[_28974 + 228])
                                                                                        if not mem[_28974 + 228]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            continue 
                                                                        _25291 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26254 = mem[ceil32(return_data.size) + 128]
                                                                        mem[mem[64] + 128] = mem[ceil32(return_data.size) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = ceil32(return_data.size) + 160
                                                                        while idx < _26254:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_25291 + 64] = (32 * _26254) + 160
                                                                        _45315 = mem[ceil32(return_data.size) + 224]
                                                                        mem[_25291 + (32 * _26254) + 160] = mem[ceil32(return_data.size) + 224]
                                                                        mem[_25291 + (32 * _26254) + 192 len 32 * _45315] = mem[ceil32(return_data.size) + 256 len 32 * _45315]
                                                                        mem[_25291 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _25291 + (32 * _26254) + (32 * _45315) + -mem[64] + 192]
                                                    require ext_code.size(stor107)
                                                    call stor107.0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    sub_57ba1b20[arg1].field_928 = 0
                                                    emit 0xcc45266b: sub_57ba1b20[arg1].field_0, sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100), sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                    else:
                                        mem[ceil32(return_data.size) + 132] = msg.sender
                                        mem[ceil32(return_data.size) + 164] = this.address
                                        require ext_code.size(sub_6aafcaa9[stor108[arg1]])
                                        staticcall sub_6aafcaa9[stor108[arg1]].0xdd62ed3e with:
                                                gas gas_remaining wei
                                               args msg.sender, this.address
                                        mem[ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < sub_57ba1b20[arg1].field_0:
                                            revert with 0, 'don't have enough money'
                                        if sub_f65e6912 > 100:
                                            revert with 0, 'percent invalid'
                                        if not sub_57ba1b20[arg1].field_0:
                                            if 100 < sub_f65e6912:
                                                revert with 0, 17
                                            if -sub_f65e6912 + 100 < sub_57ba1b20[arg1].field_256:
                                                if sub_57ba1b20[arg1].field_0 < 0:
                                                    revert with 0, 17
                                                if sub_b24fea7b[stor108[arg1]] > -1:
                                                    revert with 0, 17
                                                if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                        mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                        mem[64] = (2 * ceil32(return_data.size)) + 256
                                                        mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                        if 0 > !sub_57ba1b20[arg1].field_0:
                                                            revert with 0, 17
                                                        mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                   value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27589 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27589] = return_data.size
                                                                    mem[_27589 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _25598 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26622 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _26622:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25598 + 64] = (32 * _26622) + 160
                                                            _45623 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_25598 + (32 * _26622) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_25598 + (32 * _26622) + 192 len 32 * _45623] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45623]
                                                            mem[_25598 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25598 + (32 * _26622) + (32 * _45623) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    _27587 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    _28320 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                    _29279 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27587)
                                                                    mem[mem[64] + 100] = _28320
                                                                    _29280 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29280 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29280 + 36 len 28]
                                                                    mem[64] = _29279 + 196
                                                                    mem[_29279 + 132] = 32
                                                                    mem[_29279 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _33834 = mem[_29280]
                                                                    s = 0
                                                                    while s < _33834:
                                                                        mem[s + _29279 + 196] = mem[s + _29280 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_33834) > _33834:
                                                                        mem[_33834 + _29279 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29279 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29279 + 200 len _33834 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29279 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29279 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29279 + 264] = mem[idx + _29279 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29279 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29279 + ceil32(return_data.size) + 197
                                                                        mem[_29279 + 196] = return_data.size
                                                                        mem[_29279 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29279 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29279 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29279 + ceil32(return_data.size) + 265] = mem[idx + _29279 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29279 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29279 + 228] == bool(mem[_29279 + 228])
                                                                            if not mem[_29279 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26620 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _26620:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 64] = (32 * _26620) + 160
                                                            _45620 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[mem[64] + (32 * _26620) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[mem[64] + (32 * _26620) + 192 len 32 * _45620] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45620]
                                                            mem[mem[64] + 96] = msg.sender
                                                            emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26620) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26620) + (32 * _45620) + 64]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                            mem[64] = (2 * ceil32(return_data.size)) + 320
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if 0 > !sub_57ba1b20[arg1].field_0:
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0
                                                            mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                            mem[(2 * ceil32(return_data.size)) + 288] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27586 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27586] = return_data.size
                                                                        mem[_27586 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25593 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26616 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26616:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25593 + 64] = (32 * _26616) + 160
                                                                _45618 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_25593 + (32 * _26616) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_25593 + (32 * _26616) + 192 len 32 * _45618] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45618]
                                                                mem[_25593 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25593 + (32 * _26616) + (32 * _45618) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27584 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        _28315 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                        _29274 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27584)
                                                                        mem[mem[64] + 100] = _28315
                                                                        _29275 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29275 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29275 + 36 len 28]
                                                                        mem[64] = _29274 + 196
                                                                        mem[_29274 + 132] = 32
                                                                        mem[_29274 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33824 = mem[_29275]
                                                                        s = 0
                                                                        while s < _33824:
                                                                            mem[s + _29274 + 196] = mem[s + _29275 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33824) > _33824:
                                                                            mem[_33824 + _29274 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29274 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29274 + 200 len _33824 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29274 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29274 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29274 + 264] = mem[idx + _29274 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29274 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29274 + ceil32(return_data.size) + 197
                                                                            mem[_29274 + 196] = return_data.size
                                                                            mem[_29274 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29274 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29274 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29274 + ceil32(return_data.size) + 265] = mem[idx + _29274 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29274 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29274 + 228] == bool(mem[_29274 + 228])
                                                                                if not mem[_29274 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25591 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26614 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26614:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25591 + 64] = (32 * _26614) + 160
                                                                _45615 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_25591 + (32 * _26614) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_25591 + (32 * _26614) + 192 len 32 * _45615] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45615]
                                                                mem[_25591 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25591 + (32 * _26614) + (32 * _45615) + -mem[64] + 192]
                                                else:
                                                    if not sub_57ba1b20[arg1].field_0:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27577 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27577] = return_data.size
                                                                        mem[_27577 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25578 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26598 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26598:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25578 + 64] = (32 * _26598) + 160
                                                                _45603 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25578 + (32 * _26598) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25578 + (32 * _26598) + 192 len 32 * _45603] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45603]
                                                                mem[_25578 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25578 + (32 * _26598) + (32 * _45603) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27575 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28300 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29259 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27575)
                                                                        mem[mem[64] + 100] = _28300
                                                                        _29260 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29260 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29260 + 36 len 28]
                                                                        mem[64] = _29259 + 196
                                                                        mem[_29259 + 132] = 32
                                                                        mem[_29259 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33794 = mem[_29260]
                                                                        s = 0
                                                                        while s < _33794:
                                                                            mem[s + _29259 + 196] = mem[s + _29260 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33794) > _33794:
                                                                            mem[_33794 + _29259 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29259 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29259 + 200 len _33794 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29259 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29259 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29259 + 264] = mem[idx + _29259 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29259 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29259 + ceil32(return_data.size) + 197
                                                                            mem[_29259 + 196] = return_data.size
                                                                            mem[_29259 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29259 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29259 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29259 + ceil32(return_data.size) + 265] = mem[idx + _29259 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29259 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29259 + 228] == bool(mem[_29259 + 228])
                                                                                if not mem[_29259 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25576 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26596 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26596:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25576 + 64] = (32 * _26596) + 160
                                                                _45600 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25576 + (32 * _26596) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25576 + (32 * _26596) + 192 len 32 * _45600] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45600]
                                                                mem[_25576 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25576 + (32 * _26596) + (32 * _45600) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 256] = 0
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                if 0 > !sub_57ba1b20[arg1].field_0:
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27574 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27574] = return_data.size
                                                                            mem[_27574 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25573 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26592 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26592:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25573 + 64] = (32 * _26592) + 160
                                                                    _45598 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25573 + (32 * _26592) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25573 + (32 * _26592) + 192 len 32 * _45598] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45598]
                                                                    mem[_25573 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25573 + (32 * _26592) + (32 * _45598) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27572 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28295 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29254 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27572)
                                                                            mem[mem[64] + 100] = _28295
                                                                            _29255 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29255 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29255 + 36 len 28]
                                                                            mem[64] = _29254 + 196
                                                                            mem[_29254 + 132] = 32
                                                                            mem[_29254 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33784 = mem[_29255]
                                                                            s = 0
                                                                            while s < _33784:
                                                                                mem[s + _29254 + 196] = mem[s + _29255 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33784) > _33784:
                                                                                mem[_33784 + _29254 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29254 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29254 + 200 len _33784 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29254 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29254 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29254 + 264] = mem[idx + _29254 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29254 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29254 + ceil32(return_data.size) + 197
                                                                                mem[_29254 + 196] = return_data.size
                                                                                mem[_29254 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29254 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29254 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29254 + ceil32(return_data.size) + 265] = mem[idx + _29254 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29254 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29254 + 228] == bool(mem[_29254 + 228])
                                                                                    if not mem[_29254 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25571 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26590 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26590:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25571 + 64] = (32 * _26590) + 160
                                                                    _45595 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25571 + (32 * _26590) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25571 + (32 * _26590) + 192 len 32 * _45595] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45595]
                                                                    mem[_25571 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25571 + (32 * _26590) + (32 * _45595) + -mem[64] + 192]
                                                    else:
                                                        if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !sub_57ba1b20[arg1].field_0:
                                                            revert with 0, 17
                                                        sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] += sub_57ba1b20[arg1].field_0
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27583 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27583] = return_data.size
                                                                        mem[_27583 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26610 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26610:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _26610) + 160
                                                                _45613 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[mem[64] + (32 * _26610) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[mem[64] + (32 * _26610) + 192 len 32 * _45613] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45613]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26610) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26610) + (32 * _45613) + 64]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27581 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28310 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29269 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27581)
                                                                        mem[mem[64] + 100] = _28310
                                                                        _29270 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29270 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29270 + 36 len 28]
                                                                        mem[64] = _29269 + 196
                                                                        mem[_29269 + 132] = 32
                                                                        mem[_29269 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33814 = mem[_29270]
                                                                        s = 0
                                                                        while s < _33814:
                                                                            mem[s + _29269 + 196] = mem[s + _29270 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33814) > _33814:
                                                                            mem[_33814 + _29269 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29269 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29269 + 200 len _33814 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29269 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29269 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29269 + 264] = mem[idx + _29269 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29269 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29269 + ceil32(return_data.size) + 197
                                                                            mem[_29269 + 196] = return_data.size
                                                                            mem[_29269 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29269 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29269 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29269 + ceil32(return_data.size) + 265] = mem[idx + _29269 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29269 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29269 + 228] == bool(mem[_29269 + 228])
                                                                                if not mem[_29269 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25586 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26608 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26608:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25586 + 64] = (32 * _26608) + 160
                                                                _45610 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25586 + (32 * _26608) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25586 + (32 * _26608) + 192 len 32 * _45610] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45610]
                                                                mem[_25586 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25586 + (32 * _26608) + (32 * _45610) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 256] = 0
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                if 0 > !sub_57ba1b20[arg1].field_0:
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27580 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27580] = return_data.size
                                                                            mem[_27580 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25583 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26604 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26604:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25583 + 64] = (32 * _26604) + 160
                                                                    _45608 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25583 + (32 * _26604) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25583 + (32 * _26604) + 192 len 32 * _45608] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45608]
                                                                    mem[_25583 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25583 + (32 * _26604) + (32 * _45608) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27578 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28305 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29264 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27578)
                                                                            mem[mem[64] + 100] = _28305
                                                                            _29265 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29265 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29265 + 36 len 28]
                                                                            mem[64] = _29264 + 196
                                                                            mem[_29264 + 132] = 32
                                                                            mem[_29264 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33804 = mem[_29265]
                                                                            s = 0
                                                                            while s < _33804:
                                                                                mem[s + _29264 + 196] = mem[s + _29265 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33804) > _33804:
                                                                                mem[_33804 + _29264 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29264 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29264 + 200 len _33804 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29264 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29264 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29264 + 264] = mem[idx + _29264 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29264 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29264 + ceil32(return_data.size) + 197
                                                                                mem[_29264 + 196] = return_data.size
                                                                                mem[_29264 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29264 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29264 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29264 + ceil32(return_data.size) + 265] = mem[idx + _29264 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29264 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29264 + 228] == bool(mem[_29264 + 228])
                                                                                    if not mem[_29264 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25581 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26602 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26602:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25581 + 64] = (32 * _26602) + 160
                                                                    _45605 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25581 + (32 * _26602) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25581 + (32 * _26602) + 192 len 32 * _45605] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45605]
                                                                    mem[_25581 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25581 + (32 * _26602) + (32 * _45605) + -mem[64] + 192]
                                                require ext_code.size(stor107)
                                                call stor107.0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                sub_57ba1b20[arg1].field_928 = 0
                                                emit 0xcc45266b: sub_57ba1b20[arg1].field_0, 0, sub_57ba1b20[arg1].field_0, 0, sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                            else:
                                                if sub_57ba1b20[arg1].field_256 > 100:
                                                    revert with 0, 'percent invalid'
                                                if not sub_57ba1b20[arg1].field_0:
                                                    if sub_57ba1b20[arg1].field_0 < 0:
                                                        revert with 0, 17
                                                    if sub_b24fea7b[stor108[arg1]] > -1:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_768 != sub_57ba1b20[arg1].field_512:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27565 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27565] = return_data.size
                                                                        mem[_27565 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25558 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26574 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26574:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25558 + 64] = (32 * _26574) + 160
                                                                _45583 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25558 + (32 * _26574) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25558 + (32 * _26574) + 192 len 32 * _45583] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45583]
                                                                mem[_25558 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25558 + (32 * _26574) + (32 * _45583) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27563 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28280 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29239 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27563)
                                                                        mem[mem[64] + 100] = _28280
                                                                        _29240 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29240 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29240 + 36 len 28]
                                                                        mem[64] = _29239 + 196
                                                                        mem[_29239 + 132] = 32
                                                                        mem[_29239 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33754 = mem[_29240]
                                                                        s = 0
                                                                        while s < _33754:
                                                                            mem[s + _29239 + 196] = mem[s + _29240 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33754) > _33754:
                                                                            mem[_33754 + _29239 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29239 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29239 + 200 len _33754 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29239 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29239 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29239 + 264] = mem[idx + _29239 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29239 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29239 + ceil32(return_data.size) + 197
                                                                            mem[_29239 + 196] = return_data.size
                                                                            mem[_29239 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29239 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29239 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29239 + ceil32(return_data.size) + 265] = mem[idx + _29239 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29239 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29239 + 228] == bool(mem[_29239 + 228])
                                                                                if not mem[_29239 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25556 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26572 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26572:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25556 + 64] = (32 * _26572) + 160
                                                                _45580 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25556 + (32 * _26572) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25556 + (32 * _26572) + 192 len 32 * _45580] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45580]
                                                                mem[_25556 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25556 + (32 * _26572) + (32 * _45580) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                mem[(2 * ceil32(return_data.size)) + 288] = 0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27562 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27562] = return_data.size
                                                                            mem[_27562 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25553 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26568 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26568:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25553 + 64] = (32 * _26568) + 160
                                                                    _45578 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25553 + (32 * _26568) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25553 + (32 * _26568) + 192 len 32 * _45578] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45578]
                                                                    mem[_25553 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25553 + (32 * _26568) + (32 * _45578) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27560 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28275 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29234 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27560)
                                                                            mem[mem[64] + 100] = _28275
                                                                            _29235 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29235 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29235 + 36 len 28]
                                                                            mem[64] = _29234 + 196
                                                                            mem[_29234 + 132] = 32
                                                                            mem[_29234 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33744 = mem[_29235]
                                                                            s = 0
                                                                            while s < _33744:
                                                                                mem[s + _29234 + 196] = mem[s + _29235 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33744) > _33744:
                                                                                mem[_33744 + _29234 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29234 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29234 + 200 len _33744 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29234 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29234 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29234 + 264] = mem[idx + _29234 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29234 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29234 + ceil32(return_data.size) + 197
                                                                                mem[_29234 + 196] = return_data.size
                                                                                mem[_29234 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29234 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29234 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29234 + ceil32(return_data.size) + 265] = mem[idx + _29234 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29234 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29234 + 228] == bool(mem[_29234 + 228])
                                                                                    if not mem[_29234 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25551 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26566 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26566:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25551 + 64] = (32 * _26566) + 160
                                                                    _45575 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25551 + (32 * _26566) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25551 + (32 * _26566) + 192 len 32 * _45575] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45575]
                                                                    mem[_25551 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25551 + (32 * _26566) + (32 * _45575) + -mem[64] + 192]
                                                    else:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 > -1:
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27571 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27571] = return_data.size
                                                                        mem[_27571 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26586 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26586:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _26586) + 160
                                                                _45593 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[mem[64] + (32 * _26586) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[mem[64] + (32 * _26586) + 192 len 32 * _45593] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45593]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26586) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26586) + (32 * _45593) + 64]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27569 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28290 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29249 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27569)
                                                                        mem[mem[64] + 100] = _28290
                                                                        _29250 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29250 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29250 + 36 len 28]
                                                                        mem[64] = _29249 + 196
                                                                        mem[_29249 + 132] = 32
                                                                        mem[_29249 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33774 = mem[_29250]
                                                                        s = 0
                                                                        while s < _33774:
                                                                            mem[s + _29249 + 196] = mem[s + _29250 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33774) > _33774:
                                                                            mem[_33774 + _29249 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29249 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29249 + 200 len _33774 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29249 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29249 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29249 + 264] = mem[idx + _29249 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29249 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29249 + ceil32(return_data.size) + 197
                                                                            mem[_29249 + 196] = return_data.size
                                                                            mem[_29249 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29249 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29249 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29249 + ceil32(return_data.size) + 265] = mem[idx + _29249 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29249 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29249 + 228] == bool(mem[_29249 + 228])
                                                                                if not mem[_29249 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25566 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26584 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26584:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25566 + 64] = (32 * _26584) + 160
                                                                _45590 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25566 + (32 * _26584) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25566 + (32 * _26584) + 192 len 32 * _45590] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45590]
                                                                mem[_25566 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25566 + (32 * _26584) + (32 * _45590) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                if sub_57ba1b20[arg1].field_0 > -1:
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                mem[(2 * ceil32(return_data.size)) + 288] = 0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27568 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27568] = return_data.size
                                                                            mem[_27568 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25563 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26580 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26580:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25563 + 64] = (32 * _26580) + 160
                                                                    _45588 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25563 + (32 * _26580) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25563 + (32 * _26580) + 192 len 32 * _45588] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45588]
                                                                    mem[_25563 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25563 + (32 * _26580) + (32 * _45588) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27566 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28285 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29244 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27566)
                                                                            mem[mem[64] + 100] = _28285
                                                                            _29245 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29245 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29245 + 36 len 28]
                                                                            mem[64] = _29244 + 196
                                                                            mem[_29244 + 132] = 32
                                                                            mem[_29244 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33764 = mem[_29245]
                                                                            s = 0
                                                                            while s < _33764:
                                                                                mem[s + _29244 + 196] = mem[s + _29245 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33764) > _33764:
                                                                                mem[_33764 + _29244 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29244 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29244 + 200 len _33764 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29244 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29244 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29244 + 264] = mem[idx + _29244 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29244 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29244 + ceil32(return_data.size) + 197
                                                                                mem[_29244 + 196] = return_data.size
                                                                                mem[_29244 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29244 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29244 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29244 + ceil32(return_data.size) + 265] = mem[idx + _29244 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29244 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29244 + 228] == bool(mem[_29244 + 228])
                                                                                    if not mem[_29244 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26578 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26578:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _26578) + 160
                                                                    _45585 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _26578) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _26578) + 192 len 32 * _45585] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45585]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26578) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26578) + (32 * _45585) + 64]
                                                    require ext_code.size(stor107)
                                                    call stor107.0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    sub_57ba1b20[arg1].field_928 = 0
                                                    emit 0xcc45266b: sub_57ba1b20[arg1].field_0, 0, 0, sub_57ba1b20[arg1].field_0, sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                                else:
                                                    if sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / sub_57ba1b20[arg1].field_0 != sub_57ba1b20[arg1].field_256:
                                                        revert with 0, 'arithmetic error'
                                                    if sub_57ba1b20[arg1].field_0 < 0:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_0 < sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                        revert with 0, 17
                                                    if sub_b24fea7b[stor108[arg1]] > -1:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27559 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27559] = return_data.size
                                                                        mem[_27559 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25548 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26562 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26562:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25548 + 64] = (32 * _26562) + 160
                                                                _45573 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25548 + (32 * _26562) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25548 + (32 * _26562) + 192 len 32 * _45573] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45573]
                                                                mem[_25548 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25548 + (32 * _26562) + (32 * _45573) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27557 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28270 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29229 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27557)
                                                                        mem[mem[64] + 100] = _28270
                                                                        _29230 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29230 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29230 + 36 len 28]
                                                                        mem[64] = _29229 + 196
                                                                        mem[_29229 + 132] = 32
                                                                        mem[_29229 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33734 = mem[_29230]
                                                                        s = 0
                                                                        while s < _33734:
                                                                            mem[s + _29229 + 196] = mem[s + _29230 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33734) > _33734:
                                                                            mem[_33734 + _29229 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29229 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29229 + 200 len _33734 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29229 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29229 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29229 + 264] = mem[idx + _29229 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29229 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29229 + ceil32(return_data.size) + 197
                                                                            mem[_29229 + 196] = return_data.size
                                                                            mem[_29229 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29229 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29229 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29229 + ceil32(return_data.size) + 265] = mem[idx + _29229 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29229 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29229 + 228] == bool(mem[_29229 + 228])
                                                                                if not mem[_29229 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25546 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26560 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26560:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25546 + 64] = (32 * _26560) + 160
                                                                _45570 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25546 + (32 * _26560) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25546 + (32 * _26560) + 192 len 32 * _45570] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45570]
                                                                mem[_25546 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25546 + (32 * _26560) + (32 * _45570) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                if sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                mem[(2 * ceil32(return_data.size)) + 288] = 0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27556 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27556] = return_data.size
                                                                            mem[_27556 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25543 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26556 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26556:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25543 + 64] = (32 * _26556) + 160
                                                                    _45568 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25543 + (32 * _26556) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25543 + (32 * _26556) + 192 len 32 * _45568] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45568]
                                                                    mem[_25543 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25543 + (32 * _26556) + (32 * _45568) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27554 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28265 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29224 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27554)
                                                                            mem[mem[64] + 100] = _28265
                                                                            _29225 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29225 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29225 + 36 len 28]
                                                                            mem[64] = _29224 + 196
                                                                            mem[_29224 + 132] = 32
                                                                            mem[_29224 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33724 = mem[_29225]
                                                                            s = 0
                                                                            while s < _33724:
                                                                                mem[s + _29224 + 196] = mem[s + _29225 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33724) > _33724:
                                                                                mem[_33724 + _29224 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29224 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29224 + 200 len _33724 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29224 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29224 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29224 + 264] = mem[idx + _29224 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29224 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29224 + ceil32(return_data.size) + 197
                                                                                mem[_29224 + 196] = return_data.size
                                                                                mem[_29224 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29224 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29224 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29224 + ceil32(return_data.size) + 265] = mem[idx + _29224 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29224 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29224 + 228] == bool(mem[_29224 + 228])
                                                                                    if not mem[_29224 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25541 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26554 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26554:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25541 + 64] = (32 * _26554) + 160
                                                                    _45565 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25541 + (32 * _26554) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25541 + (32 * _26554) + 192 len 32 * _45565] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45565]
                                                                    mem[_25541 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25541 + (32 * _26554) + (32 * _45565) + -mem[64] + 192]
                                                    else:
                                                        if not sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                            if not sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                                mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                                mem[64] = (2 * ceil32(return_data.size)) + 256
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27547 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27547] = return_data.size
                                                                            mem[_27547 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25528 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26538 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26538:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25528 + 64] = (32 * _26538) + 160
                                                                    _45553 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25528 + (32 * _26538) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25528 + (32 * _26538) + 192 len 32 * _45553] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45553]
                                                                    mem[_25528 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25528 + (32 * _26538) + (32 * _45553) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27545 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                                revert with 0, 50
                                                                            _28250 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                            _29209 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27545)
                                                                            mem[mem[64] + 100] = _28250
                                                                            _29210 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29210 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29210 + 36 len 28]
                                                                            mem[64] = _29209 + 196
                                                                            mem[_29209 + 132] = 32
                                                                            mem[_29209 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33694 = mem[_29210]
                                                                            s = 0
                                                                            while s < _33694:
                                                                                mem[s + _29209 + 196] = mem[s + _29210 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33694) > _33694:
                                                                                mem[_33694 + _29209 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29209 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29209 + 200 len _33694 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29209 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29209 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29209 + 264] = mem[idx + _29209 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29209 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29209 + ceil32(return_data.size) + 197
                                                                                mem[_29209 + 196] = return_data.size
                                                                                mem[_29209 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29209 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29209 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29209 + ceil32(return_data.size) + 265] = mem[idx + _29209 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29209 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29209 + 228] == bool(mem[_29209 + 228])
                                                                                    if not mem[_29209 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25526 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26536 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26536:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25526 + 64] = (32 * _26536) + 160
                                                                    _45550 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25526 + (32 * _26536) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25526 + (32 * _26536) + 192 len 32 * _45550] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45550]
                                                                    mem[_25526 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25526 + (32 * _26536) + (32 * _45550) + -mem[64] + 192]
                                                            else:
                                                                if 1 == sub_764d55f7[arg1]:
                                                                    mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                    mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                    mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                    mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                    mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                    if 0 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                        revert with 0, 17
                                                                    mem[(2 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                                        revert with 0, 'pay: token addr not exists'
                                                                    if not sub_764d55f7[arg1]:
                                                                        idx = 0
                                                                        s = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                               value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                                 gas gas_remaining wei
                                                                            if return_data.size:
                                                                                _27544 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                mem[_27544] = return_data.size
                                                                                mem[_27544 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                revert with 0, 'pays:transfer failed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            s = ext_call.success
                                                                            continue 
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26532 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (2 * ceil32(return_data.size)) + 160
                                                                        while idx < _26532:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[mem[64] + 64] = (32 * _26532) + 160
                                                                        _45548 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[mem[64] + (32 * _26532) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[mem[64] + (32 * _26532) + 192 len 32 * _45548] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45548]
                                                                        mem[mem[64] + 96] = msg.sender
                                                                        emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26532) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26532) + (32 * _45548) + 64]
                                                                    else:
                                                                        mem[0] = sub_764d55f7[arg1]
                                                                        mem[32] = 109
                                                                        idx = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                    revert with 0, 50
                                                                                _27542 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                    revert with 0, 50
                                                                                _28245 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                                _29204 = mem[64]
                                                                                mem[mem[64] + 36] = msg.sender
                                                                                mem[mem[64] + 68] = address(_27542)
                                                                                mem[mem[64] + 100] = _28245
                                                                                _29205 = mem[64]
                                                                                mem[mem[64]] = 100
                                                                                mem[64] = mem[64] + 132
                                                                                mem[_29205 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29205 + 36 len 28]
                                                                                mem[64] = _29204 + 196
                                                                                mem[_29204 + 132] = 32
                                                                                mem[_29204 + 164] = 'SafeERC20: low-level call failed'
                                                                                if eth.balance(this.address) < 0:
                                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                    revert with 0, 'Address: call to non-contract'
                                                                                _33684 = mem[_29205]
                                                                                s = 0
                                                                                while s < _33684:
                                                                                    mem[s + _29204 + 196] = mem[s + _29205 + 32]
                                                                                    s = s + 32
                                                                                    continue 
                                                                                if ceil32(_33684) > _33684:
                                                                                    mem[_33684 + _29204 + 196] = 0
                                                                                call sub_6aafcaa9[stor108[arg1]].mem[_29204 + 196 len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[_29204 + 200 len _33684 - 4]
                                                                                if not return_data.size:
                                                                                    if not ext_call.success:
                                                                                        if mem[96]:
                                                                                            revert with memory
                                                                                              from 128
                                                                                               len mem[96]
                                                                                        mem[_29204 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29204 + 200] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29204 + 264] = mem[idx + _29204 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29204 + 264]
                                                                                    if mem[96]:
                                                                                        require mem[96] >= 32
                                                                                        require mem[128] == bool(mem[128])
                                                                                        if not mem[128]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                                else:
                                                                                    mem[64] = _29204 + ceil32(return_data.size) + 197
                                                                                    mem[_29204 + 196] = return_data.size
                                                                                    mem[_29204 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                    if not ext_call.success:
                                                                                        if return_data.size:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        mem[_29204 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29204 + ceil32(return_data.size) + 201] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29204 + ceil32(return_data.size) + 265] = mem[idx + _29204 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29204 + ceil32(return_data.size) + 265]
                                                                                    if return_data.size:
                                                                                        require return_data.size >= 32
                                                                                        require mem[_29204 + 228] == bool(mem[_29204 + 228])
                                                                                        if not mem[_29204 + 228]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            continue 
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26530 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (2 * ceil32(return_data.size)) + 160
                                                                        while idx < _26530:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[mem[64] + 64] = (32 * _26530) + 160
                                                                        _45545 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[mem[64] + (32 * _26530) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[mem[64] + (32 * _26530) + 192 len 32 * _45545] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45545]
                                                                        mem[mem[64] + 96] = msg.sender
                                                                        emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26530) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26530) + (32 * _45545) + 64]
                                                        else:
                                                            if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] += sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                            if not sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                                mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                                mem[64] = (2 * ceil32(return_data.size)) + 256
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27553 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27553] = return_data.size
                                                                            mem[_27553 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25538 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26550 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26550:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25538 + 64] = (32 * _26550) + 160
                                                                    _45563 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25538 + (32 * _26550) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25538 + (32 * _26550) + 192 len 32 * _45563] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45563]
                                                                    mem[_25538 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25538 + (32 * _26550) + (32 * _45563) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27551 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                                revert with 0, 50
                                                                            _28260 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                            _29219 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27551)
                                                                            mem[mem[64] + 100] = _28260
                                                                            _29220 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29220 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29220 + 36 len 28]
                                                                            mem[64] = _29219 + 196
                                                                            mem[_29219 + 132] = 32
                                                                            mem[_29219 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33714 = mem[_29220]
                                                                            s = 0
                                                                            while s < _33714:
                                                                                mem[s + _29219 + 196] = mem[s + _29220 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33714) > _33714:
                                                                                mem[_33714 + _29219 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29219 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29219 + 200 len _33714 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29219 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29219 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29219 + 264] = mem[idx + _29219 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29219 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29219 + ceil32(return_data.size) + 197
                                                                                mem[_29219 + 196] = return_data.size
                                                                                mem[_29219 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29219 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29219 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29219 + ceil32(return_data.size) + 265] = mem[idx + _29219 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29219 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29219 + 228] == bool(mem[_29219 + 228])
                                                                                    if not mem[_29219 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26548 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26548:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _26548) + 160
                                                                    _45560 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[mem[64] + (32 * _26548) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[mem[64] + (32 * _26548) + 192 len 32 * _45560] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45560]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26548) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26548) + (32 * _45560) + 64]
                                                            else:
                                                                if 1 == sub_764d55f7[arg1]:
                                                                    mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                    mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                    mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                    mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                    mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                    if 0 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                        revert with 0, 17
                                                                    mem[(2 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                                        revert with 0, 'pay: token addr not exists'
                                                                    if not sub_764d55f7[arg1]:
                                                                        idx = 0
                                                                        s = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                               value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                                 gas gas_remaining wei
                                                                            if return_data.size:
                                                                                _27550 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                mem[_27550] = return_data.size
                                                                                mem[_27550 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                revert with 0, 'pays:transfer failed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            s = ext_call.success
                                                                            continue 
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26544 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (2 * ceil32(return_data.size)) + 160
                                                                        while idx < _26544:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[mem[64] + 64] = (32 * _26544) + 160
                                                                        _45558 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[mem[64] + (32 * _26544) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[mem[64] + (32 * _26544) + 192 len 32 * _45558] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45558]
                                                                        mem[mem[64] + 96] = msg.sender
                                                                        emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26544) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26544) + (32 * _45558) + 64]
                                                                    else:
                                                                        mem[0] = sub_764d55f7[arg1]
                                                                        mem[32] = 109
                                                                        idx = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                    revert with 0, 50
                                                                                _27548 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                    revert with 0, 50
                                                                                _28255 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                                _29214 = mem[64]
                                                                                mem[mem[64] + 36] = msg.sender
                                                                                mem[mem[64] + 68] = address(_27548)
                                                                                mem[mem[64] + 100] = _28255
                                                                                _29215 = mem[64]
                                                                                mem[mem[64]] = 100
                                                                                mem[64] = mem[64] + 132
                                                                                mem[_29215 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29215 + 36 len 28]
                                                                                mem[64] = _29214 + 196
                                                                                mem[_29214 + 132] = 32
                                                                                mem[_29214 + 164] = 'SafeERC20: low-level call failed'
                                                                                if eth.balance(this.address) < 0:
                                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                    revert with 0, 'Address: call to non-contract'
                                                                                _33704 = mem[_29215]
                                                                                s = 0
                                                                                while s < _33704:
                                                                                    mem[s + _29214 + 196] = mem[s + _29215 + 32]
                                                                                    s = s + 32
                                                                                    continue 
                                                                                if ceil32(_33704) > _33704:
                                                                                    mem[_33704 + _29214 + 196] = 0
                                                                                call sub_6aafcaa9[stor108[arg1]].mem[_29214 + 196 len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[_29214 + 200 len _33704 - 4]
                                                                                if not return_data.size:
                                                                                    if not ext_call.success:
                                                                                        if mem[96]:
                                                                                            revert with memory
                                                                                              from 128
                                                                                               len mem[96]
                                                                                        mem[_29214 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29214 + 200] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29214 + 264] = mem[idx + _29214 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29214 + 264]
                                                                                    if mem[96]:
                                                                                        require mem[96] >= 32
                                                                                        require mem[128] == bool(mem[128])
                                                                                        if not mem[128]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                                else:
                                                                                    mem[64] = _29214 + ceil32(return_data.size) + 197
                                                                                    mem[_29214 + 196] = return_data.size
                                                                                    mem[_29214 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                    if not ext_call.success:
                                                                                        if return_data.size:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        mem[_29214 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29214 + ceil32(return_data.size) + 201] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29214 + ceil32(return_data.size) + 265] = mem[idx + _29214 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29214 + ceil32(return_data.size) + 265]
                                                                                    if return_data.size:
                                                                                        require return_data.size >= 32
                                                                                        require mem[_29214 + 228] == bool(mem[_29214 + 228])
                                                                                        if not mem[_29214 + 228]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            continue 
                                                                        _25531 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26542 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (2 * ceil32(return_data.size)) + 160
                                                                        while idx < _26542:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_25531 + 64] = (32 * _26542) + 160
                                                                        _45555 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25531 + (32 * _26542) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25531 + (32 * _26542) + 192 len 32 * _45555] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45555]
                                                                        mem[_25531 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _25531 + (32 * _26542) + (32 * _45555) + -mem[64] + 192]
                                                    require ext_code.size(stor107)
                                                    call stor107.0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    sub_57ba1b20[arg1].field_928 = 0
                                                    emit 0xcc45266b: sub_57ba1b20[arg1].field_0, 0, sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100), sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                        else:
                                            if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / sub_57ba1b20[arg1].field_0 != sub_f65e6912:
                                                revert with 0, 'arithmetic error'
                                            if 100 < sub_f65e6912:
                                                revert with 0, 17
                                            if -sub_f65e6912 + 100 < sub_57ba1b20[arg1].field_256:
                                                if sub_57ba1b20[arg1].field_0 < sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100:
                                                    revert with 0, 17
                                                if sub_b24fea7b[stor108[arg1]] > !(sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                    revert with 0, 17
                                                sub_b24fea7b[stor108[arg1]] += sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                        mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                        mem[64] = (2 * ceil32(return_data.size)) + 256
                                                        mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                        if 0 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                            revert with 0, 17
                                                        mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                   value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27541 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27541] = return_data.size
                                                                    mem[_27541 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _25518 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26526 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _26526:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25518 + 64] = (32 * _26526) + 160
                                                            _45543 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_25518 + (32 * _26526) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_25518 + (32 * _26526) + 192 len 32 * _45543] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45543]
                                                            mem[_25518 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25518 + (32 * _26526) + (32 * _45543) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    _27539 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    _28240 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                    _29199 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27539)
                                                                    mem[mem[64] + 100] = _28240
                                                                    _29200 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29200 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29200 + 36 len 28]
                                                                    mem[64] = _29199 + 196
                                                                    mem[_29199 + 132] = 32
                                                                    mem[_29199 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _33674 = mem[_29200]
                                                                    s = 0
                                                                    while s < _33674:
                                                                        mem[s + _29199 + 196] = mem[s + _29200 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_33674) > _33674:
                                                                        mem[_33674 + _29199 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29199 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29199 + 200 len _33674 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29199 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29199 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29199 + 264] = mem[idx + _29199 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29199 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29199 + ceil32(return_data.size) + 197
                                                                        mem[_29199 + 196] = return_data.size
                                                                        mem[_29199 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29199 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29199 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29199 + ceil32(return_data.size) + 265] = mem[idx + _29199 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29199 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29199 + 228] == bool(mem[_29199 + 228])
                                                                            if not mem[_29199 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _25516 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26524 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _26524:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25516 + 64] = (32 * _26524) + 160
                                                            _45540 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_25516 + (32 * _26524) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_25516 + (32 * _26524) + 192 len 32 * _45540] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45540]
                                                            mem[_25516 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25516 + (32 * _26524) + (32 * _45540) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                            mem[64] = (2 * ceil32(return_data.size)) + 320
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if 0 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                            mem[(2 * ceil32(return_data.size)) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27538 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27538] = return_data.size
                                                                        mem[_27538 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25513 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26520 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26520:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25513 + 64] = (32 * _26520) + 160
                                                                _45538 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_25513 + (32 * _26520) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_25513 + (32 * _26520) + 192 len 32 * _45538] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45538]
                                                                mem[_25513 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25513 + (32 * _26520) + (32 * _45538) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27536 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        _28235 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                        _29194 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27536)
                                                                        mem[mem[64] + 100] = _28235
                                                                        _29195 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29195 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29195 + 36 len 28]
                                                                        mem[64] = _29194 + 196
                                                                        mem[_29194 + 132] = 32
                                                                        mem[_29194 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33664 = mem[_29195]
                                                                        s = 0
                                                                        while s < _33664:
                                                                            mem[s + _29194 + 196] = mem[s + _29195 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33664) > _33664:
                                                                            mem[_33664 + _29194 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29194 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29194 + 200 len _33664 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29194 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29194 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29194 + 264] = mem[idx + _29194 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29194 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29194 + ceil32(return_data.size) + 197
                                                                            mem[_29194 + 196] = return_data.size
                                                                            mem[_29194 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29194 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29194 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29194 + ceil32(return_data.size) + 265] = mem[idx + _29194 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29194 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29194 + 228] == bool(mem[_29194 + 228])
                                                                                if not mem[_29194 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25511 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26518 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26518:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25511 + 64] = (32 * _26518) + 160
                                                                _45535 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_25511 + (32 * _26518) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_25511 + (32 * _26518) + 192 len 32 * _45535] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45535]
                                                                mem[_25511 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25511 + (32 * _26518) + (32 * _45535) + -mem[64] + 192]
                                                else:
                                                    if not sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27529 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27529] = return_data.size
                                                                        mem[_27529 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25498 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26502 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26502:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25498 + 64] = (32 * _26502) + 160
                                                                _45523 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25498 + (32 * _26502) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25498 + (32 * _26502) + 192 len 32 * _45523] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45523]
                                                                mem[_25498 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25498 + (32 * _26502) + (32 * _45523) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27527 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28220 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29179 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27527)
                                                                        mem[mem[64] + 100] = _28220
                                                                        _29180 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29180 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29180 + 36 len 28]
                                                                        mem[64] = _29179 + 196
                                                                        mem[_29179 + 132] = 32
                                                                        mem[_29179 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33634 = mem[_29180]
                                                                        s = 0
                                                                        while s < _33634:
                                                                            mem[s + _29179 + 196] = mem[s + _29180 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33634) > _33634:
                                                                            mem[_33634 + _29179 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29179 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29179 + 200 len _33634 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29179 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29179 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29179 + 264] = mem[idx + _29179 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29179 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29179 + ceil32(return_data.size) + 197
                                                                            mem[_29179 + 196] = return_data.size
                                                                            mem[_29179 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29179 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29179 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29179 + ceil32(return_data.size) + 265] = mem[idx + _29179 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29179 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29179 + 228] == bool(mem[_29179 + 228])
                                                                                if not mem[_29179 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25496 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26500 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26500:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25496 + 64] = (32 * _26500) + 160
                                                                _45520 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25496 + (32 * _26500) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25496 + (32 * _26500) + 192 len 32 * _45520] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45520]
                                                                mem[_25496 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25496 + (32 * _26500) + (32 * _45520) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 256] = 0
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27526 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27526] = return_data.size
                                                                            mem[_27526 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25493 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26496 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26496:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25493 + 64] = (32 * _26496) + 160
                                                                    _45518 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25493 + (32 * _26496) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25493 + (32 * _26496) + 192 len 32 * _45518] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45518]
                                                                    mem[_25493 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25493 + (32 * _26496) + (32 * _45518) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27524 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28215 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29174 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27524)
                                                                            mem[mem[64] + 100] = _28215
                                                                            _29175 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29175 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29175 + 36 len 28]
                                                                            mem[64] = _29174 + 196
                                                                            mem[_29174 + 132] = 32
                                                                            mem[_29174 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33624 = mem[_29175]
                                                                            s = 0
                                                                            while s < _33624:
                                                                                mem[s + _29174 + 196] = mem[s + _29175 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33624) > _33624:
                                                                                mem[_33624 + _29174 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29174 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29174 + 200 len _33624 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29174 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29174 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29174 + 264] = mem[idx + _29174 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29174 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29174 + ceil32(return_data.size) + 197
                                                                                mem[_29174 + 196] = return_data.size
                                                                                mem[_29174 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29174 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29174 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29174 + ceil32(return_data.size) + 265] = mem[idx + _29174 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29174 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29174 + 228] == bool(mem[_29174 + 228])
                                                                                    if not mem[_29174 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25491 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26494 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26494:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25491 + 64] = (32 * _26494) + 160
                                                                    _45515 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25491 + (32 * _26494) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25491 + (32 * _26494) + 192 len 32 * _45515] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45515]
                                                                    mem[_25491 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25491 + (32 * _26494) + (32 * _45515) + -mem[64] + 192]
                                                    else:
                                                        if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                            revert with 0, 17
                                                        sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] = sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] + sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27535 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27535] = return_data.size
                                                                        mem[_27535 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25508 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26514 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26514:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25508 + 64] = (32 * _26514) + 160
                                                                _45533 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25508 + (32 * _26514) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25508 + (32 * _26514) + 192 len 32 * _45533] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45533]
                                                                mem[_25508 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25508 + (32 * _26514) + (32 * _45533) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27533 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28230 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29189 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27533)
                                                                        mem[mem[64] + 100] = _28230
                                                                        _29190 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29190 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29190 + 36 len 28]
                                                                        mem[64] = _29189 + 196
                                                                        mem[_29189 + 132] = 32
                                                                        mem[_29189 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33654 = mem[_29190]
                                                                        s = 0
                                                                        while s < _33654:
                                                                            mem[s + _29189 + 196] = mem[s + _29190 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33654) > _33654:
                                                                            mem[_33654 + _29189 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29189 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29189 + 200 len _33654 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29189 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29189 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29189 + 264] = mem[idx + _29189 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29189 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29189 + ceil32(return_data.size) + 197
                                                                            mem[_29189 + 196] = return_data.size
                                                                            mem[_29189 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29189 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29189 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29189 + ceil32(return_data.size) + 265] = mem[idx + _29189 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29189 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29189 + 228] == bool(mem[_29189 + 228])
                                                                                if not mem[_29189 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25506 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26512 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26512:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25506 + 64] = (32 * _26512) + 160
                                                                _45530 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25506 + (32 * _26512) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25506 + (32 * _26512) + 192 len 32 * _45530] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45530]
                                                                mem[_25506 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25506 + (32 * _26512) + (32 * _45530) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 256] = 0
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27532 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27532] = return_data.size
                                                                            mem[_27532 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26508 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26508:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _26508) + 160
                                                                    _45528 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _26508) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _26508) + 192 len 32 * _45528] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45528]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26508) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26508) + (32 * _45528) + 64]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27530 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28225 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29184 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27530)
                                                                            mem[mem[64] + 100] = _28225
                                                                            _29185 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29185 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29185 + 36 len 28]
                                                                            mem[64] = _29184 + 196
                                                                            mem[_29184 + 132] = 32
                                                                            mem[_29184 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33644 = mem[_29185]
                                                                            s = 0
                                                                            while s < _33644:
                                                                                mem[s + _29184 + 196] = mem[s + _29185 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33644) > _33644:
                                                                                mem[_33644 + _29184 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29184 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29184 + 200 len _33644 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29184 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29184 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29184 + 264] = mem[idx + _29184 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29184 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29184 + ceil32(return_data.size) + 197
                                                                                mem[_29184 + 196] = return_data.size
                                                                                mem[_29184 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29184 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29184 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29184 + ceil32(return_data.size) + 265] = mem[idx + _29184 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29184 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29184 + 228] == bool(mem[_29184 + 228])
                                                                                    if not mem[_29184 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25501 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26506 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26506:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25501 + 64] = (32 * _26506) + 160
                                                                    _45525 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25501 + (32 * _26506) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25501 + (32 * _26506) + 192 len 32 * _45525] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45525]
                                                                    mem[_25501 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25501 + (32 * _26506) + (32 * _45525) + -mem[64] + 192]
                                                require ext_code.size(stor107)
                                                call stor107.0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                sub_57ba1b20[arg1].field_928 = 0
                                                emit 0xcc45266b: sub_57ba1b20[arg1].field_0, sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100), 0, sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                            else:
                                                if sub_57ba1b20[arg1].field_256 > 100:
                                                    revert with 0, 'percent invalid'
                                                if not sub_57ba1b20[arg1].field_0:
                                                    if sub_57ba1b20[arg1].field_0 < sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) < 0:
                                                        revert with 0, 17
                                                    if sub_b24fea7b[stor108[arg1]] > !(sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                        revert with 0, 17
                                                    sub_b24fea7b[stor108[arg1]] += sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                    if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) > -1:
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27523 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27523] = return_data.size
                                                                        mem[_27523 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25488 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26490 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26490:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25488 + 64] = (32 * _26490) + 160
                                                                _45513 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25488 + (32 * _26490) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25488 + (32 * _26490) + 192 len 32 * _45513] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45513]
                                                                mem[_25488 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25488 + (32 * _26490) + (32 * _45513) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27521 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28210 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29169 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27521)
                                                                        mem[mem[64] + 100] = _28210
                                                                        _29170 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29170 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29170 + 36 len 28]
                                                                        mem[64] = _29169 + 196
                                                                        mem[_29169 + 132] = 32
                                                                        mem[_29169 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33614 = mem[_29170]
                                                                        s = 0
                                                                        while s < _33614:
                                                                            mem[s + _29169 + 196] = mem[s + _29170 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33614) > _33614:
                                                                            mem[_33614 + _29169 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29169 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29169 + 200 len _33614 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29169 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29169 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29169 + 264] = mem[idx + _29169 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29169 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29169 + ceil32(return_data.size) + 197
                                                                            mem[_29169 + 196] = return_data.size
                                                                            mem[_29169 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29169 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29169 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29169 + ceil32(return_data.size) + 265] = mem[idx + _29169 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29169 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29169 + 228] == bool(mem[_29169 + 228])
                                                                                if not mem[_29169 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25486 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26488 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26488:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25486 + 64] = (32 * _26488) + 160
                                                                _45510 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25486 + (32 * _26488) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25486 + (32 * _26488) + 192 len 32 * _45510] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45510]
                                                                mem[_25486 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25486 + (32 * _26488) + (32 * _45510) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) > -1:
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                mem[(2 * ceil32(return_data.size)) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27520 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27520] = return_data.size
                                                                            mem[_27520 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25483 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26484 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26484:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25483 + 64] = (32 * _26484) + 160
                                                                    _45508 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25483 + (32 * _26484) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25483 + (32 * _26484) + 192 len 32 * _45508] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45508]
                                                                    mem[_25483 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25483 + (32 * _26484) + (32 * _45508) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27518 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28205 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29164 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27518)
                                                                            mem[mem[64] + 100] = _28205
                                                                            _29165 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29165 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29165 + 36 len 28]
                                                                            mem[64] = _29164 + 196
                                                                            mem[_29164 + 132] = 32
                                                                            mem[_29164 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33604 = mem[_29165]
                                                                            s = 0
                                                                            while s < _33604:
                                                                                mem[s + _29164 + 196] = mem[s + _29165 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33604) > _33604:
                                                                                mem[_33604 + _29164 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29164 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29164 + 200 len _33604 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29164 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29164 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29164 + 264] = mem[idx + _29164 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29164 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29164 + ceil32(return_data.size) + 197
                                                                                mem[_29164 + 196] = return_data.size
                                                                                mem[_29164 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29164 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29164 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29164 + ceil32(return_data.size) + 265] = mem[idx + _29164 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29164 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29164 + 228] == bool(mem[_29164 + 228])
                                                                                    if not mem[_29164 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25481 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26482 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26482:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25481 + 64] = (32 * _26482) + 160
                                                                    _45505 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25481 + (32 * _26482) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25481 + (32 * _26482) + 192 len 32 * _45505] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45505]
                                                                    mem[_25481 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25481 + (32 * _26482) + (32 * _45505) + -mem[64] + 192]
                                                    else:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27517 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27517] = return_data.size
                                                                        mem[_27517 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26478 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26478:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _26478) + 160
                                                                _45503 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[mem[64] + (32 * _26478) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[mem[64] + (32 * _26478) + 192 len 32 * _45503] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45503]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26478) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26478) + (32 * _45503) + 64]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27515 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28200 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29159 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27515)
                                                                        mem[mem[64] + 100] = _28200
                                                                        _29160 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29160 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29160 + 36 len 28]
                                                                        mem[64] = _29159 + 196
                                                                        mem[_29159 + 132] = 32
                                                                        mem[_29159 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33594 = mem[_29160]
                                                                        s = 0
                                                                        while s < _33594:
                                                                            mem[s + _29159 + 196] = mem[s + _29160 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33594) > _33594:
                                                                            mem[_33594 + _29159 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29159 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29159 + 200 len _33594 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29159 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29159 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29159 + 264] = mem[idx + _29159 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29159 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29159 + ceil32(return_data.size) + 197
                                                                            mem[_29159 + 196] = return_data.size
                                                                            mem[_29159 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29159 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29159 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29159 + ceil32(return_data.size) + 265] = mem[idx + _29159 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29159 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29159 + 228] == bool(mem[_29159 + 228])
                                                                                if not mem[_29159 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26476 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26476:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _26476) + 160
                                                                _45500 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[mem[64] + (32 * _26476) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[mem[64] + (32 * _26476) + 192 len 32 * _45500] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45500]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26476) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26476) + (32 * _45500) + 64]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > -1:
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27514 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27514] = return_data.size
                                                                            mem[_27514 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26472 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26472:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _26472) + 160
                                                                    _45498 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _26472) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _26472) + 192 len 32 * _45498] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45498]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26472) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26472) + (32 * _45498) + 64]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27512 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28195 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29154 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27512)
                                                                            mem[mem[64] + 100] = _28195
                                                                            _29155 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29155 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29155 + 36 len 28]
                                                                            mem[64] = _29154 + 196
                                                                            mem[_29154 + 132] = 32
                                                                            mem[_29154 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33584 = mem[_29155]
                                                                            s = 0
                                                                            while s < _33584:
                                                                                mem[s + _29154 + 196] = mem[s + _29155 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33584) > _33584:
                                                                                mem[_33584 + _29154 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29154 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29154 + 200 len _33584 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29154 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29154 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29154 + 264] = mem[idx + _29154 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29154 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29154 + ceil32(return_data.size) + 197
                                                                                mem[_29154 + 196] = return_data.size
                                                                                mem[_29154 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29154 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29154 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29154 + ceil32(return_data.size) + 265] = mem[idx + _29154 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29154 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29154 + 228] == bool(mem[_29154 + 228])
                                                                                    if not mem[_29154 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25471 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26470 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26470:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25471 + 64] = (32 * _26470) + 160
                                                                    _45495 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25471 + (32 * _26470) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25471 + (32 * _26470) + 192 len 32 * _45495] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45495]
                                                                    mem[_25471 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25471 + (32 * _26470) + (32 * _45495) + -mem[64] + 192]
                                                    require ext_code.size(stor107)
                                                    call stor107.0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    sub_57ba1b20[arg1].field_928 = 0
                                                    emit 0xcc45266b: sub_57ba1b20[arg1].field_0, sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100, 0, sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100), sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                                else:
                                                    if sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / sub_57ba1b20[arg1].field_0 != sub_57ba1b20[arg1].field_256:
                                                        revert with 0, 'arithmetic error'
                                                    if sub_57ba1b20[arg1].field_0 < sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) < sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                        revert with 0, 17
                                                    if sub_b24fea7b[stor108[arg1]] > !(sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                        revert with 0, 17
                                                    sub_b24fea7b[stor108[arg1]] += sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                    if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27511 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27511] = return_data.size
                                                                        mem[_27511 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25468 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26466 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26466:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25468 + 64] = (32 * _26466) + 160
                                                                _45493 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25468 + (32 * _26466) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25468 + (32 * _26466) + 192 len 32 * _45493] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45493]
                                                                mem[_25468 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25468 + (32 * _26466) + (32 * _45493) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27509 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28190 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29149 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27509)
                                                                        mem[mem[64] + 100] = _28190
                                                                        _29150 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29150 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29150 + 36 len 28]
                                                                        mem[64] = _29149 + 196
                                                                        mem[_29149 + 132] = 32
                                                                        mem[_29149 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _33574 = mem[_29150]
                                                                        s = 0
                                                                        while s < _33574:
                                                                            mem[s + _29149 + 196] = mem[s + _29150 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_33574) > _33574:
                                                                            mem[_33574 + _29149 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29149 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29149 + 200 len _33574 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29149 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29149 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29149 + 264] = mem[idx + _29149 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29149 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29149 + ceil32(return_data.size) + 197
                                                                            mem[_29149 + 196] = return_data.size
                                                                            mem[_29149 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29149 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29149 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29149 + ceil32(return_data.size) + 265] = mem[idx + _29149 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29149 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29149 + 228] == bool(mem[_29149 + 228])
                                                                                if not mem[_29149 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25466 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26464 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26464:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25466 + 64] = (32 * _26464) + 160
                                                                _45490 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25466 + (32 * _26464) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25466 + (32 * _26464) + 192 len 32 * _45490] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45490]
                                                                mem[_25466 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25466 + (32 * _26464) + (32 * _45490) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                mem[(2 * ceil32(return_data.size)) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27508 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27508] = return_data.size
                                                                            mem[_27508 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25463 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26460 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26460:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25463 + 64] = (32 * _26460) + 160
                                                                    _45488 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25463 + (32 * _26460) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25463 + (32 * _26460) + 192 len 32 * _45488] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45488]
                                                                    mem[_25463 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25463 + (32 * _26460) + (32 * _45488) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27506 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28185 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29144 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27506)
                                                                            mem[mem[64] + 100] = _28185
                                                                            _29145 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29145 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29145 + 36 len 28]
                                                                            mem[64] = _29144 + 196
                                                                            mem[_29144 + 132] = 32
                                                                            mem[_29144 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33564 = mem[_29145]
                                                                            s = 0
                                                                            while s < _33564:
                                                                                mem[s + _29144 + 196] = mem[s + _29145 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33564) > _33564:
                                                                                mem[_33564 + _29144 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29144 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29144 + 200 len _33564 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29144 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29144 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29144 + 264] = mem[idx + _29144 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29144 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29144 + ceil32(return_data.size) + 197
                                                                                mem[_29144 + 196] = return_data.size
                                                                                mem[_29144 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29144 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29144 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29144 + ceil32(return_data.size) + 265] = mem[idx + _29144 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29144 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29144 + 228] == bool(mem[_29144 + 228])
                                                                                    if not mem[_29144 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25461 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26458 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26458:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25461 + 64] = (32 * _26458) + 160
                                                                    _45485 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25461 + (32 * _26458) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25461 + (32 * _26458) + 192 len 32 * _45485] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45485]
                                                                    mem[_25461 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25461 + (32 * _26458) + (32 * _45485) + -mem[64] + 192]
                                                    else:
                                                        if not sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                            if not sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                                mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                                mem[64] = (2 * ceil32(return_data.size)) + 256
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27499 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27499] = return_data.size
                                                                            mem[_27499 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25448 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26442 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26442:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25448 + 64] = (32 * _26442) + 160
                                                                    _45473 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25448 + (32 * _26442) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25448 + (32 * _26442) + 192 len 32 * _45473] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45473]
                                                                    mem[_25448 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25448 + (32 * _26442) + (32 * _45473) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27497 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                                revert with 0, 50
                                                                            _28170 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                            _29129 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27497)
                                                                            mem[mem[64] + 100] = _28170
                                                                            _29130 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29130 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29130 + 36 len 28]
                                                                            mem[64] = _29129 + 196
                                                                            mem[_29129 + 132] = 32
                                                                            mem[_29129 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33534 = mem[_29130]
                                                                            s = 0
                                                                            while s < _33534:
                                                                                mem[s + _29129 + 196] = mem[s + _29130 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33534) > _33534:
                                                                                mem[_33534 + _29129 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29129 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29129 + 200 len _33534 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29129 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29129 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29129 + 264] = mem[idx + _29129 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29129 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29129 + ceil32(return_data.size) + 197
                                                                                mem[_29129 + 196] = return_data.size
                                                                                mem[_29129 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29129 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29129 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29129 + ceil32(return_data.size) + 265] = mem[idx + _29129 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29129 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29129 + 228] == bool(mem[_29129 + 228])
                                                                                    if not mem[_29129 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25446 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26440 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26440:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25446 + 64] = (32 * _26440) + 160
                                                                    _45470 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25446 + (32 * _26440) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25446 + (32 * _26440) + 192 len 32 * _45470] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45470]
                                                                    mem[_25446 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25446 + (32 * _26440) + (32 * _45470) + -mem[64] + 192]
                                                            else:
                                                                if 1 == sub_764d55f7[arg1]:
                                                                    mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                    mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                    mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                    mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                    mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                    if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                        revert with 0, 17
                                                                    mem[(2 * ceil32(return_data.size)) + 288] = (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) + (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                                        revert with 0, 'pay: token addr not exists'
                                                                    if not sub_764d55f7[arg1]:
                                                                        idx = 0
                                                                        s = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                               value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                                 gas gas_remaining wei
                                                                            if return_data.size:
                                                                                _27496 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                mem[_27496] = return_data.size
                                                                                mem[_27496 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                revert with 0, 'pays:transfer failed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            s = ext_call.success
                                                                            continue 
                                                                        _25443 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26436 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (2 * ceil32(return_data.size)) + 160
                                                                        while idx < _26436:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_25443 + 64] = (32 * _26436) + 160
                                                                        _45468 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25443 + (32 * _26436) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25443 + (32 * _26436) + 192 len 32 * _45468] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45468]
                                                                        mem[_25443 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _25443 + (32 * _26436) + (32 * _45468) + -mem[64] + 192]
                                                                    else:
                                                                        mem[0] = sub_764d55f7[arg1]
                                                                        mem[32] = 109
                                                                        idx = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                    revert with 0, 50
                                                                                _27494 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                    revert with 0, 50
                                                                                _28165 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                                _29124 = mem[64]
                                                                                mem[mem[64] + 36] = msg.sender
                                                                                mem[mem[64] + 68] = address(_27494)
                                                                                mem[mem[64] + 100] = _28165
                                                                                _29125 = mem[64]
                                                                                mem[mem[64]] = 100
                                                                                mem[64] = mem[64] + 132
                                                                                mem[_29125 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29125 + 36 len 28]
                                                                                mem[64] = _29124 + 196
                                                                                mem[_29124 + 132] = 32
                                                                                mem[_29124 + 164] = 'SafeERC20: low-level call failed'
                                                                                if eth.balance(this.address) < 0:
                                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                    revert with 0, 'Address: call to non-contract'
                                                                                _33524 = mem[_29125]
                                                                                s = 0
                                                                                while s < _33524:
                                                                                    mem[s + _29124 + 196] = mem[s + _29125 + 32]
                                                                                    s = s + 32
                                                                                    continue 
                                                                                if ceil32(_33524) > _33524:
                                                                                    mem[_33524 + _29124 + 196] = 0
                                                                                call sub_6aafcaa9[stor108[arg1]].mem[_29124 + 196 len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[_29124 + 200 len _33524 - 4]
                                                                                if not return_data.size:
                                                                                    if not ext_call.success:
                                                                                        if mem[96]:
                                                                                            revert with memory
                                                                                              from 128
                                                                                               len mem[96]
                                                                                        mem[_29124 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29124 + 200] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29124 + 264] = mem[idx + _29124 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29124 + 264]
                                                                                    if mem[96]:
                                                                                        require mem[96] >= 32
                                                                                        require mem[128] == bool(mem[128])
                                                                                        if not mem[128]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                                else:
                                                                                    mem[64] = _29124 + ceil32(return_data.size) + 197
                                                                                    mem[_29124 + 196] = return_data.size
                                                                                    mem[_29124 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                    if not ext_call.success:
                                                                                        if return_data.size:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        mem[_29124 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29124 + ceil32(return_data.size) + 201] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29124 + ceil32(return_data.size) + 265] = mem[idx + _29124 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29124 + ceil32(return_data.size) + 265]
                                                                                    if return_data.size:
                                                                                        require return_data.size >= 32
                                                                                        require mem[_29124 + 228] == bool(mem[_29124 + 228])
                                                                                        if not mem[_29124 + 228]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            continue 
                                                                        _25441 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26434 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (2 * ceil32(return_data.size)) + 160
                                                                        while idx < _26434:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_25441 + 64] = (32 * _26434) + 160
                                                                        _45465 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25441 + (32 * _26434) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25441 + (32 * _26434) + 192 len 32 * _45465] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45465]
                                                                        mem[_25441 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _25441 + (32 * _26434) + (32 * _45465) + -mem[64] + 192]
                                                        else:
                                                            if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] += sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                            if not sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                                mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                                mem[64] = (2 * ceil32(return_data.size)) + 256
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27505 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27505] = return_data.size
                                                                            mem[_27505 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26454 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26454:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _26454) + 160
                                                                    _45483 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[mem[64] + (32 * _26454) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[mem[64] + (32 * _26454) + 192 len 32 * _45483] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45483]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26454) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26454) + (32 * _45483) + 64]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27503 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                                revert with 0, 50
                                                                            _28180 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                            _29139 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27503)
                                                                            mem[mem[64] + 100] = _28180
                                                                            _29140 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29140 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29140 + 36 len 28]
                                                                            mem[64] = _29139 + 196
                                                                            mem[_29139 + 132] = 32
                                                                            mem[_29139 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _33554 = mem[_29140]
                                                                            s = 0
                                                                            while s < _33554:
                                                                                mem[s + _29139 + 196] = mem[s + _29140 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_33554) > _33554:
                                                                                mem[_33554 + _29139 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29139 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29139 + 200 len _33554 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29139 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29139 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29139 + 264] = mem[idx + _29139 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29139 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29139 + ceil32(return_data.size) + 197
                                                                                mem[_29139 + 196] = return_data.size
                                                                                mem[_29139 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29139 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29139 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29139 + ceil32(return_data.size) + 265] = mem[idx + _29139 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29139 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29139 + 228] == bool(mem[_29139 + 228])
                                                                                    if not mem[_29139 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25456 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26452 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26452:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25456 + 64] = (32 * _26452) + 160
                                                                    _45480 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25456 + (32 * _26452) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25456 + (32 * _26452) + 192 len 32 * _45480] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45480]
                                                                    mem[_25456 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25456 + (32 * _26452) + (32 * _45480) + -mem[64] + 192]
                                                            else:
                                                                if 1 == sub_764d55f7[arg1]:
                                                                    mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                    mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                    mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                    mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                    mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                    if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                        revert with 0, 17
                                                                    mem[(2 * ceil32(return_data.size)) + 288] = (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) + (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                                        revert with 0, 'pay: token addr not exists'
                                                                    if not sub_764d55f7[arg1]:
                                                                        idx = 0
                                                                        s = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                               value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                                 gas gas_remaining wei
                                                                            if return_data.size:
                                                                                _27502 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                mem[_27502] = return_data.size
                                                                                mem[_27502 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                revert with 0, 'pays:transfer failed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            s = ext_call.success
                                                                            continue 
                                                                        _25453 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26448 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (2 * ceil32(return_data.size)) + 160
                                                                        while idx < _26448:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_25453 + 64] = (32 * _26448) + 160
                                                                        _45478 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25453 + (32 * _26448) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25453 + (32 * _26448) + 192 len 32 * _45478] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45478]
                                                                        mem[_25453 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _25453 + (32 * _26448) + (32 * _45478) + -mem[64] + 192]
                                                                    else:
                                                                        mem[0] = sub_764d55f7[arg1]
                                                                        mem[32] = 109
                                                                        idx = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                    revert with 0, 50
                                                                                _27500 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                    revert with 0, 50
                                                                                _28175 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                                _29134 = mem[64]
                                                                                mem[mem[64] + 36] = msg.sender
                                                                                mem[mem[64] + 68] = address(_27500)
                                                                                mem[mem[64] + 100] = _28175
                                                                                _29135 = mem[64]
                                                                                mem[mem[64]] = 100
                                                                                mem[64] = mem[64] + 132
                                                                                mem[_29135 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29135 + 36 len 28]
                                                                                mem[64] = _29134 + 196
                                                                                mem[_29134 + 132] = 32
                                                                                mem[_29134 + 164] = 'SafeERC20: low-level call failed'
                                                                                if eth.balance(this.address) < 0:
                                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                    revert with 0, 'Address: call to non-contract'
                                                                                _33544 = mem[_29135]
                                                                                s = 0
                                                                                while s < _33544:
                                                                                    mem[s + _29134 + 196] = mem[s + _29135 + 32]
                                                                                    s = s + 32
                                                                                    continue 
                                                                                if ceil32(_33544) > _33544:
                                                                                    mem[_33544 + _29134 + 196] = 0
                                                                                call sub_6aafcaa9[stor108[arg1]].mem[_29134 + 196 len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[_29134 + 200 len _33544 - 4]
                                                                                if not return_data.size:
                                                                                    if not ext_call.success:
                                                                                        if mem[96]:
                                                                                            revert with memory
                                                                                              from 128
                                                                                               len mem[96]
                                                                                        mem[_29134 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29134 + 200] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29134 + 264] = mem[idx + _29134 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29134 + 264]
                                                                                    if mem[96]:
                                                                                        require mem[96] >= 32
                                                                                        require mem[128] == bool(mem[128])
                                                                                        if not mem[128]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                                else:
                                                                                    mem[64] = _29134 + ceil32(return_data.size) + 197
                                                                                    mem[_29134 + 196] = return_data.size
                                                                                    mem[_29134 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                    if not ext_call.success:
                                                                                        if return_data.size:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        mem[_29134 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29134 + ceil32(return_data.size) + 201] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29134 + ceil32(return_data.size) + 265] = mem[idx + _29134 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29134 + ceil32(return_data.size) + 265]
                                                                                    if return_data.size:
                                                                                        require return_data.size >= 32
                                                                                        require mem[_29134 + 228] == bool(mem[_29134 + 228])
                                                                                        if not mem[_29134 + 228]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            continue 
                                                                        _25451 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26446 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (2 * ceil32(return_data.size)) + 160
                                                                        while idx < _26446:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_25451 + 64] = (32 * _26446) + 160
                                                                        _45475 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25451 + (32 * _26446) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25451 + (32 * _26446) + 192 len 32 * _45475] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45475]
                                                                        mem[_25451 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _25451 + (32 * _26446) + (32 * _45475) + -mem[64] + 192]
                                                    require ext_code.size(stor107)
                                                    call stor107.0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    sub_57ba1b20[arg1].field_928 = 0
                                                    emit 0xcc45266b: sub_57ba1b20[arg1].field_0, sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100), sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                            else:
                                mem[ceil32(return_data.size) + 132] = arg1
                                require ext_code.size(stor107)
                                staticcall stor107.getApproved(uint256 arg1) with:
                                        gas gas_remaining wei
                                       args arg1
                                mem[ceil32(return_data.size) + 128] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == ext_call.return_data[12 len 20]
                                if ext_call.return_data[12 len 20] != this.address:
                                    revert with 0, 'The platform does not have permission to operate'
                                if not sub_57ba1b20[arg1].field_768:
                                    revert with 0, 'sellers can't buy for themselves'
                                if msg.sender == sub_57ba1b20[arg1].field_768:
                                    revert with 0, 'sellers can't buy for themselves'
                                if not sub_764d55f7[arg1]:
                                    if msg.value < sub_57ba1b20[arg1].field_0:
                                        revert with 0, 'don't have enough money'
                                    if sub_f65e6912 > 100:
                                        revert with 0, 'percent invalid'
                                    if not sub_57ba1b20[arg1].field_0:
                                        if 100 < sub_f65e6912:
                                            revert with 0, 17
                                        if -sub_f65e6912 + 100 < sub_57ba1b20[arg1].field_256:
                                            if sub_57ba1b20[arg1].field_0 < 0:
                                                revert with 0, 17
                                            if sub_b24fea7b[stor108[arg1]] > -1:
                                                revert with 0, 17
                                            if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                if not sub_764d55f7[arg1]:
                                                    mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                    mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                    mem[64] = (2 * ceil32(return_data.size)) + 256
                                                    mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                    if 0 > !sub_57ba1b20[arg1].field_0:
                                                        revert with 0, 17
                                                    mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0
                                                    mem[0] = sub_764d55f7[arg1]
                                                    mem[32] = 109
                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                        revert with 0, 'pay: token addr not exists'
                                                    if not sub_764d55f7[arg1]:
                                                        idx = 0
                                                        s = 0
                                                        while idx < 1:
                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                revert with 0, 50
                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                revert with 0, 50
                                                            call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                               value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                 gas gas_remaining wei
                                                            if return_data.size:
                                                                _27973 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                mem[_27973] = return_data.size
                                                                mem[_27973 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                revert with 0, 'pays:transfer failed'
                                                            if idx == -1:
                                                                revert with 0, 17
                                                            idx = idx + 1
                                                            s = ext_call.success
                                                            continue 
                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                        mem[mem[64] + 32] = 128
                                                        _27390 = mem[(2 * ceil32(return_data.size)) + 128]
                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                        idx = 0
                                                        s = mem[64] + 160
                                                        t = (2 * ceil32(return_data.size)) + 160
                                                        while idx < _27390:
                                                            mem[s] = mem[t + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[mem[64] + 64] = (32 * _27390) + 160
                                                        _46263 = mem[(2 * ceil32(return_data.size)) + 192]
                                                        mem[mem[64] + (32 * _27390) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                        mem[mem[64] + (32 * _27390) + 192 len 32 * _46263] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46263]
                                                        mem[mem[64] + 96] = msg.sender
                                                        emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27390) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27390) + (32 * _46263) + 64]
                                                    else:
                                                        mem[0] = sub_764d55f7[arg1]
                                                        mem[32] = 109
                                                        idx = 0
                                                        while idx < 1:
                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                revert with 0, 50
                                                            if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                _27971 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                    revert with 0, 50
                                                                _28960 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                _29919 = mem[64]
                                                                mem[mem[64] + 36] = msg.sender
                                                                mem[mem[64] + 68] = address(_27971)
                                                                mem[mem[64] + 100] = _28960
                                                                _29920 = mem[64]
                                                                mem[mem[64]] = 100
                                                                mem[64] = mem[64] + 132
                                                                mem[_29920 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29920 + 36 len 28]
                                                                mem[64] = _29919 + 196
                                                                mem[_29919 + 132] = 32
                                                                mem[_29919 + 164] = 'SafeERC20: low-level call failed'
                                                                if eth.balance(this.address) < 0:
                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                    revert with 0, 'Address: call to non-contract'
                                                                _35114 = mem[_29920]
                                                                s = 0
                                                                while s < _35114:
                                                                    mem[s + _29919 + 196] = mem[s + _29920 + 32]
                                                                    s = s + 32
                                                                    continue 
                                                                if ceil32(_35114) > _35114:
                                                                    mem[_35114 + _29919 + 196] = 0
                                                                call sub_6aafcaa9[stor108[arg1]].mem[_29919 + 196 len 4] with:
                                                                     gas gas_remaining wei
                                                                    args mem[_29919 + 200 len _35114 - 4]
                                                                if not return_data.size:
                                                                    if not ext_call.success:
                                                                        if mem[96]:
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        mem[_29919 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[_29919 + 200] = 32
                                                                        idx = 0
                                                                        while idx < 32:
                                                                            mem[idx + _29919 + 264] = mem[idx + _29919 + 164]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 32, 32, mem[_29919 + 264]
                                                                    if mem[96]:
                                                                        require mem[96] >= 32
                                                                        require mem[128] == bool(mem[128])
                                                                        if not mem[128]:
                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                else:
                                                                    mem[64] = _29919 + ceil32(return_data.size) + 197
                                                                    mem[_29919 + 196] = return_data.size
                                                                    mem[_29919 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        if return_data.size:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[_29919 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[_29919 + ceil32(return_data.size) + 201] = 32
                                                                        idx = 0
                                                                        while idx < 32:
                                                                            mem[idx + _29919 + ceil32(return_data.size) + 265] = mem[idx + _29919 + 164]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 32, 32, mem[_29919 + ceil32(return_data.size) + 265]
                                                                    if return_data.size:
                                                                        require return_data.size >= 32
                                                                        require mem[_29919 + 228] == bool(mem[_29919 + 228])
                                                                        if not mem[_29919 + 228]:
                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                            if idx == -1:
                                                                revert with 0, 17
                                                            idx = idx + 1
                                                            continue 
                                                        _26236 = mem[64]
                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                        mem[mem[64] + 32] = 128
                                                        _27388 = mem[(2 * ceil32(return_data.size)) + 128]
                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                        idx = 0
                                                        s = mem[64] + 160
                                                        t = (2 * ceil32(return_data.size)) + 160
                                                        while idx < _27388:
                                                            mem[s] = mem[t + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[_26236 + 64] = (32 * _27388) + 160
                                                        _46260 = mem[(2 * ceil32(return_data.size)) + 192]
                                                        mem[_26236 + (32 * _27388) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                        mem[_26236 + (32 * _27388) + 192 len 32 * _46260] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46260]
                                                        mem[_26236 + 96] = msg.sender
                                                        emit 0x7c53e1df: mem[mem[64] len _26236 + (32 * _27388) + (32 * _46260) + -mem[64] + 192]
                                                else:
                                                    if 1 == sub_764d55f7[arg1]:
                                                        mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                        mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                        mem[64] = (2 * ceil32(return_data.size)) + 320
                                                        mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                        if 0 > !sub_57ba1b20[arg1].field_0:
                                                            revert with 0, 17
                                                        mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0
                                                        mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                        mem[(2 * ceil32(return_data.size)) + 288] = 0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 2:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                   value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27970 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27970] = return_data.size
                                                                    mem[_27970 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _26233 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27384 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27384:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26233 + 64] = (32 * _27384) + 160
                                                            _46258 = mem[(2 * ceil32(return_data.size)) + 224]
                                                            mem[_26233 + (32 * _27384) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                            mem[_26233 + (32 * _27384) + 192 len 32 * _46258] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46258]
                                                            mem[_26233 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26233 + (32 * _27384) + (32 * _46258) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 2:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    _27968 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                        revert with 0, 50
                                                                    _28955 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                    _29914 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27968)
                                                                    mem[mem[64] + 100] = _28955
                                                                    _29915 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29915 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29915 + 36 len 28]
                                                                    mem[64] = _29914 + 196
                                                                    mem[_29914 + 132] = 32
                                                                    mem[_29914 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _35104 = mem[_29915]
                                                                    s = 0
                                                                    while s < _35104:
                                                                        mem[s + _29914 + 196] = mem[s + _29915 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_35104) > _35104:
                                                                        mem[_35104 + _29914 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29914 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29914 + 200 len _35104 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29914 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29914 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29914 + 264] = mem[idx + _29914 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29914 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29914 + ceil32(return_data.size) + 197
                                                                        mem[_29914 + 196] = return_data.size
                                                                        mem[_29914 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29914 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29914 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29914 + ceil32(return_data.size) + 265] = mem[idx + _29914 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29914 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29914 + 228] == bool(mem[_29914 + 228])
                                                                            if not mem[_29914 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _26231 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27382 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27382:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26231 + 64] = (32 * _27382) + 160
                                                            _46255 = mem[(2 * ceil32(return_data.size)) + 224]
                                                            mem[_26231 + (32 * _27382) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                            mem[_26231 + (32 * _27382) + 192 len 32 * _46255] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46255]
                                                            mem[_26231 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26231 + (32 * _27382) + (32 * _46255) + -mem[64] + 192]
                                            else:
                                                if not sub_57ba1b20[arg1].field_0:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                        mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                        mem[64] = (2 * ceil32(return_data.size)) + 256
                                                        mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                        mem[(2 * ceil32(return_data.size)) + 224] = 0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                   value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27961 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27961] = return_data.size
                                                                    mem[_27961 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _26218 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27366 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27366:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26218 + 64] = (32 * _27366) + 160
                                                            _46243 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26218 + (32 * _27366) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26218 + (32 * _27366) + 192 len 32 * _46243] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46243]
                                                            mem[_26218 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26218 + (32 * _27366) + (32 * _46243) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    _27959 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    _28940 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                    _29899 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27959)
                                                                    mem[mem[64] + 100] = _28940
                                                                    _29900 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29900 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29900 + 36 len 28]
                                                                    mem[64] = _29899 + 196
                                                                    mem[_29899 + 132] = 32
                                                                    mem[_29899 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _35074 = mem[_29900]
                                                                    s = 0
                                                                    while s < _35074:
                                                                        mem[s + _29899 + 196] = mem[s + _29900 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_35074) > _35074:
                                                                        mem[_35074 + _29899 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29899 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29899 + 200 len _35074 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29899 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29899 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29899 + 264] = mem[idx + _29899 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29899 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29899 + ceil32(return_data.size) + 197
                                                                        mem[_29899 + 196] = return_data.size
                                                                        mem[_29899 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29899 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29899 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29899 + ceil32(return_data.size) + 265] = mem[idx + _29899 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29899 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29899 + 228] == bool(mem[_29899 + 228])
                                                                            if not mem[_29899 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _26216 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27364 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27364:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26216 + 64] = (32 * _27364) + 160
                                                            _46240 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26216 + (32 * _27364) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26216 + (32 * _27364) + 192 len 32 * _46240] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46240]
                                                            mem[_26216 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26216 + (32 * _27364) + (32 * _46240) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                            mem[64] = (2 * ceil32(return_data.size)) + 320
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 256] = 0
                                                            mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                            if 0 > !sub_57ba1b20[arg1].field_0:
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27958 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27958] = return_data.size
                                                                        mem[_27958 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27360 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27360:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _27360) + 160
                                                                _46238 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[mem[64] + (32 * _27360) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[mem[64] + (32 * _27360) + 192 len 32 * _46238] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46238]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27360) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27360) + (32 * _46238) + 64]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27956 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        _28935 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                        _29894 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27956)
                                                                        mem[mem[64] + 100] = _28935
                                                                        _29895 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29895 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29895 + 36 len 28]
                                                                        mem[64] = _29894 + 196
                                                                        mem[_29894 + 132] = 32
                                                                        mem[_29894 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _35064 = mem[_29895]
                                                                        s = 0
                                                                        while s < _35064:
                                                                            mem[s + _29894 + 196] = mem[s + _29895 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_35064) > _35064:
                                                                            mem[_35064 + _29894 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29894 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29894 + 200 len _35064 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29894 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29894 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29894 + 264] = mem[idx + _29894 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29894 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29894 + ceil32(return_data.size) + 197
                                                                            mem[_29894 + 196] = return_data.size
                                                                            mem[_29894 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29894 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29894 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29894 + ceil32(return_data.size) + 265] = mem[idx + _29894 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29894 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29894 + 228] == bool(mem[_29894 + 228])
                                                                                if not mem[_29894 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _26211 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27358 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27358:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26211 + 64] = (32 * _27358) + 160
                                                                _46235 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26211 + (32 * _27358) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26211 + (32 * _27358) + 192 len 32 * _46235] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46235]
                                                                mem[_26211 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26211 + (32 * _27358) + (32 * _46235) + -mem[64] + 192]
                                                else:
                                                    if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !sub_57ba1b20[arg1].field_0:
                                                        revert with 0, 17
                                                    sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] += sub_57ba1b20[arg1].field_0
                                                    if not sub_764d55f7[arg1]:
                                                        mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                        mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                        mem[64] = (2 * ceil32(return_data.size)) + 256
                                                        mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                        mem[(2 * ceil32(return_data.size)) + 224] = 0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                   value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27967 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27967] = return_data.size
                                                                    mem[_27967 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _26228 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27378 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27378:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26228 + 64] = (32 * _27378) + 160
                                                            _46253 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26228 + (32 * _27378) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26228 + (32 * _27378) + 192 len 32 * _46253] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46253]
                                                            mem[_26228 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26228 + (32 * _27378) + (32 * _46253) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    _27965 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    _28950 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                    _29909 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27965)
                                                                    mem[mem[64] + 100] = _28950
                                                                    _29910 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29910 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29910 + 36 len 28]
                                                                    mem[64] = _29909 + 196
                                                                    mem[_29909 + 132] = 32
                                                                    mem[_29909 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _35094 = mem[_29910]
                                                                    s = 0
                                                                    while s < _35094:
                                                                        mem[s + _29909 + 196] = mem[s + _29910 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_35094) > _35094:
                                                                        mem[_35094 + _29909 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29909 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29909 + 200 len _35094 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29909 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29909 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29909 + 264] = mem[idx + _29909 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29909 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29909 + ceil32(return_data.size) + 197
                                                                        mem[_29909 + 196] = return_data.size
                                                                        mem[_29909 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29909 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29909 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29909 + ceil32(return_data.size) + 265] = mem[idx + _29909 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29909 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29909 + 228] == bool(mem[_29909 + 228])
                                                                            if not mem[_29909 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _26226 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27376 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27376:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26226 + 64] = (32 * _27376) + 160
                                                            _46250 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26226 + (32 * _27376) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26226 + (32 * _27376) + 192 len 32 * _46250] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46250]
                                                            mem[_26226 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26226 + (32 * _27376) + (32 * _46250) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                            mem[64] = (2 * ceil32(return_data.size)) + 320
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 256] = 0
                                                            mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                            if 0 > !sub_57ba1b20[arg1].field_0:
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27964 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27964] = return_data.size
                                                                        mem[_27964 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _26223 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27372 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27372:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26223 + 64] = (32 * _27372) + 160
                                                                _46248 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26223 + (32 * _27372) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26223 + (32 * _27372) + 192 len 32 * _46248] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46248]
                                                                mem[_26223 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26223 + (32 * _27372) + (32 * _46248) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27962 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        _28945 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                        _29904 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27962)
                                                                        mem[mem[64] + 100] = _28945
                                                                        _29905 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29905 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29905 + 36 len 28]
                                                                        mem[64] = _29904 + 196
                                                                        mem[_29904 + 132] = 32
                                                                        mem[_29904 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _35084 = mem[_29905]
                                                                        s = 0
                                                                        while s < _35084:
                                                                            mem[s + _29904 + 196] = mem[s + _29905 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_35084) > _35084:
                                                                            mem[_35084 + _29904 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29904 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29904 + 200 len _35084 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29904 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29904 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29904 + 264] = mem[idx + _29904 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29904 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29904 + ceil32(return_data.size) + 197
                                                                            mem[_29904 + 196] = return_data.size
                                                                            mem[_29904 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29904 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29904 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29904 + ceil32(return_data.size) + 265] = mem[idx + _29904 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29904 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29904 + 228] == bool(mem[_29904 + 228])
                                                                                if not mem[_29904 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27370 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27370:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _27370) + 160
                                                                _46245 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[mem[64] + (32 * _27370) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[mem[64] + (32 * _27370) + 192 len 32 * _46245] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46245]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27370) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27370) + (32 * _46245) + 64]
                                            require ext_code.size(stor107)
                                            call stor107.0x23b872dd with:
                                                 gas gas_remaining wei
                                                args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            sub_57ba1b20[arg1].field_928 = 0
                                            emit 0xcc45266b: sub_57ba1b20[arg1].field_0, 0, sub_57ba1b20[arg1].field_0, 0, sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                        else:
                                            if sub_57ba1b20[arg1].field_256 > 100:
                                                revert with 0, 'percent invalid'
                                            if not sub_57ba1b20[arg1].field_0:
                                                if sub_57ba1b20[arg1].field_0 < 0:
                                                    revert with 0, 17
                                                if sub_b24fea7b[stor108[arg1]] > -1:
                                                    revert with 0, 17
                                                if sub_57ba1b20[arg1].field_768 != sub_57ba1b20[arg1].field_512:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                        mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                        mem[64] = (2 * ceil32(return_data.size)) + 256
                                                        mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                        mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                   value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27949 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27949] = return_data.size
                                                                    mem[_27949 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _26198 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27342 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27342:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26198 + 64] = (32 * _27342) + 160
                                                            _46223 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26198 + (32 * _27342) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26198 + (32 * _27342) + 192 len 32 * _46223] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46223]
                                                            mem[_26198 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26198 + (32 * _27342) + (32 * _46223) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    _27947 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    _28920 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                    _29879 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27947)
                                                                    mem[mem[64] + 100] = _28920
                                                                    _29880 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29880 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29880 + 36 len 28]
                                                                    mem[64] = _29879 + 196
                                                                    mem[_29879 + 132] = 32
                                                                    mem[_29879 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _35034 = mem[_29880]
                                                                    s = 0
                                                                    while s < _35034:
                                                                        mem[s + _29879 + 196] = mem[s + _29880 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_35034) > _35034:
                                                                        mem[_35034 + _29879 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29879 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29879 + 200 len _35034 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29879 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29879 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29879 + 264] = mem[idx + _29879 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29879 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29879 + ceil32(return_data.size) + 197
                                                                        mem[_29879 + 196] = return_data.size
                                                                        mem[_29879 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29879 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29879 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29879 + ceil32(return_data.size) + 265] = mem[idx + _29879 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29879 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29879 + 228] == bool(mem[_29879 + 228])
                                                                            if not mem[_29879 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _26196 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27340 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27340:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26196 + 64] = (32 * _27340) + 160
                                                            _46220 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26196 + (32 * _27340) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26196 + (32 * _27340) + 192 len 32 * _46220] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46220]
                                                            mem[_26196 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26196 + (32 * _27340) + (32 * _46220) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                            mem[64] = (2 * ceil32(return_data.size)) + 320
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0
                                                            mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                            mem[(2 * ceil32(return_data.size)) + 288] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27946 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27946] = return_data.size
                                                                        mem[_27946 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27336 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27336:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _27336) + 160
                                                                _46218 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[mem[64] + (32 * _27336) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[mem[64] + (32 * _27336) + 192 len 32 * _46218] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46218]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27336) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27336) + (32 * _46218) + 64]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27944 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        _28915 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                        _29874 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27944)
                                                                        mem[mem[64] + 100] = _28915
                                                                        _29875 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29875 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29875 + 36 len 28]
                                                                        mem[64] = _29874 + 196
                                                                        mem[_29874 + 132] = 32
                                                                        mem[_29874 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _35024 = mem[_29875]
                                                                        s = 0
                                                                        while s < _35024:
                                                                            mem[s + _29874 + 196] = mem[s + _29875 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_35024) > _35024:
                                                                            mem[_35024 + _29874 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29874 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29874 + 200 len _35024 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29874 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29874 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29874 + 264] = mem[idx + _29874 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29874 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29874 + ceil32(return_data.size) + 197
                                                                            mem[_29874 + 196] = return_data.size
                                                                            mem[_29874 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29874 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29874 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29874 + ceil32(return_data.size) + 265] = mem[idx + _29874 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29874 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29874 + 228] == bool(mem[_29874 + 228])
                                                                                if not mem[_29874 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27334 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27334:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _27334) + 160
                                                                _46215 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[mem[64] + (32 * _27334) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[mem[64] + (32 * _27334) + 192 len 32 * _46215] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46215]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27334) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27334) + (32 * _46215) + 64]
                                                else:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                        mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                        mem[64] = (2 * ceil32(return_data.size)) + 256
                                                        mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                        if sub_57ba1b20[arg1].field_0 > -1:
                                                            revert with 0, 17
                                                        mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        mem[32] = 109
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                   value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27955 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27955] = return_data.size
                                                                    mem[_27955 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27354 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27354:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 64] = (32 * _27354) + 160
                                                            _46233 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[mem[64] + (32 * _27354) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[mem[64] + (32 * _27354) + 192 len 32 * _46233] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46233]
                                                            mem[mem[64] + 96] = msg.sender
                                                            emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27354) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27354) + (32 * _46233) + 64]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    _27953 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    _28930 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                    _29889 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27953)
                                                                    mem[mem[64] + 100] = _28930
                                                                    _29890 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29890 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29890 + 36 len 28]
                                                                    mem[64] = _29889 + 196
                                                                    mem[_29889 + 132] = 32
                                                                    mem[_29889 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _35054 = mem[_29890]
                                                                    s = 0
                                                                    while s < _35054:
                                                                        mem[s + _29889 + 196] = mem[s + _29890 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_35054) > _35054:
                                                                        mem[_35054 + _29889 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29889 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29889 + 200 len _35054 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29889 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29889 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29889 + 264] = mem[idx + _29889 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29889 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29889 + ceil32(return_data.size) + 197
                                                                        mem[_29889 + 196] = return_data.size
                                                                        mem[_29889 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29889 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29889 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29889 + ceil32(return_data.size) + 265] = mem[idx + _29889 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29889 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29889 + 228] == bool(mem[_29889 + 228])
                                                                            if not mem[_29889 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _26206 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27352 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27352:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26206 + 64] = (32 * _27352) + 160
                                                            _46230 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26206 + (32 * _27352) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26206 + (32 * _27352) + 192 len 32 * _46230] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46230]
                                                            mem[_26206 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26206 + (32 * _27352) + (32 * _46230) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                            mem[64] = (2 * ceil32(return_data.size)) + 320
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 > -1:
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0
                                                            mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                            mem[(2 * ceil32(return_data.size)) + 288] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27952 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27952] = return_data.size
                                                                        mem[_27952 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _26203 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27348 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27348:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26203 + 64] = (32 * _27348) + 160
                                                                _46228 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26203 + (32 * _27348) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26203 + (32 * _27348) + 192 len 32 * _46228] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46228]
                                                                mem[_26203 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26203 + (32 * _27348) + (32 * _46228) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27950 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        _28925 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                        _29884 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27950)
                                                                        mem[mem[64] + 100] = _28925
                                                                        _29885 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29885 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29885 + 36 len 28]
                                                                        mem[64] = _29884 + 196
                                                                        mem[_29884 + 132] = 32
                                                                        mem[_29884 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _35044 = mem[_29885]
                                                                        s = 0
                                                                        while s < _35044:
                                                                            mem[s + _29884 + 196] = mem[s + _29885 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_35044) > _35044:
                                                                            mem[_35044 + _29884 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29884 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29884 + 200 len _35044 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29884 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29884 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29884 + 264] = mem[idx + _29884 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29884 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29884 + ceil32(return_data.size) + 197
                                                                            mem[_29884 + 196] = return_data.size
                                                                            mem[_29884 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29884 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29884 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29884 + ceil32(return_data.size) + 265] = mem[idx + _29884 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29884 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29884 + 228] == bool(mem[_29884 + 228])
                                                                                if not mem[_29884 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _26201 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27346 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27346:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26201 + 64] = (32 * _27346) + 160
                                                                _46225 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26201 + (32 * _27346) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26201 + (32 * _27346) + 192 len 32 * _46225] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46225]
                                                                mem[_26201 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26201 + (32 * _27346) + (32 * _46225) + -mem[64] + 192]
                                                require ext_code.size(stor107)
                                                call stor107.0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                sub_57ba1b20[arg1].field_928 = 0
                                                emit 0xcc45266b: sub_57ba1b20[arg1].field_0, 0, 0, sub_57ba1b20[arg1].field_0, sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                            else:
                                                if sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / sub_57ba1b20[arg1].field_0 != sub_57ba1b20[arg1].field_256:
                                                    revert with 0, 'arithmetic error'
                                                if sub_57ba1b20[arg1].field_0 < 0:
                                                    revert with 0, 17
                                                if sub_57ba1b20[arg1].field_0 < sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                    revert with 0, 17
                                                if sub_b24fea7b[stor108[arg1]] > -1:
                                                    revert with 0, 17
                                                if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                        mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                        mem[64] = (2 * ceil32(return_data.size)) + 256
                                                        mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                        if sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                            revert with 0, 17
                                                        mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                   value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27943 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27943] = return_data.size
                                                                    mem[_27943 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _26188 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27330 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27330:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26188 + 64] = (32 * _27330) + 160
                                                            _46213 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26188 + (32 * _27330) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26188 + (32 * _27330) + 192 len 32 * _46213] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46213]
                                                            mem[_26188 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26188 + (32 * _27330) + (32 * _46213) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    _27941 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    _28910 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                    _29869 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27941)
                                                                    mem[mem[64] + 100] = _28910
                                                                    _29870 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29870 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29870 + 36 len 28]
                                                                    mem[64] = _29869 + 196
                                                                    mem[_29869 + 132] = 32
                                                                    mem[_29869 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _35014 = mem[_29870]
                                                                    s = 0
                                                                    while s < _35014:
                                                                        mem[s + _29869 + 196] = mem[s + _29870 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_35014) > _35014:
                                                                        mem[_35014 + _29869 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29869 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29869 + 200 len _35014 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29869 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29869 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29869 + 264] = mem[idx + _29869 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29869 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29869 + ceil32(return_data.size) + 197
                                                                        mem[_29869 + 196] = return_data.size
                                                                        mem[_29869 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29869 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29869 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29869 + ceil32(return_data.size) + 265] = mem[idx + _29869 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29869 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29869 + 228] == bool(mem[_29869 + 228])
                                                                            if not mem[_29869 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _26186 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27328 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27328:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26186 + 64] = (32 * _27328) + 160
                                                            _46210 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26186 + (32 * _27328) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26186 + (32 * _27328) + 192 len 32 * _46210] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46210]
                                                            mem[_26186 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26186 + (32 * _27328) + (32 * _46210) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                            mem[64] = (2 * ceil32(return_data.size)) + 320
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0
                                                            mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                            mem[(2 * ceil32(return_data.size)) + 288] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27940 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27940] = return_data.size
                                                                        mem[_27940 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _26183 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27324 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27324:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26183 + 64] = (32 * _27324) + 160
                                                                _46208 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26183 + (32 * _27324) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26183 + (32 * _27324) + 192 len 32 * _46208] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46208]
                                                                mem[_26183 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26183 + (32 * _27324) + (32 * _46208) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27938 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        _28905 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                        _29864 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27938)
                                                                        mem[mem[64] + 100] = _28905
                                                                        _29865 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29865 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29865 + 36 len 28]
                                                                        mem[64] = _29864 + 196
                                                                        mem[_29864 + 132] = 32
                                                                        mem[_29864 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _35004 = mem[_29865]
                                                                        s = 0
                                                                        while s < _35004:
                                                                            mem[s + _29864 + 196] = mem[s + _29865 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_35004) > _35004:
                                                                            mem[_35004 + _29864 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29864 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29864 + 200 len _35004 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29864 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29864 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29864 + 264] = mem[idx + _29864 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29864 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29864 + ceil32(return_data.size) + 197
                                                                            mem[_29864 + 196] = return_data.size
                                                                            mem[_29864 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29864 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29864 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29864 + ceil32(return_data.size) + 265] = mem[idx + _29864 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29864 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29864 + 228] == bool(mem[_29864 + 228])
                                                                                if not mem[_29864 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _26181 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27322 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27322:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26181 + 64] = (32 * _27322) + 160
                                                                _46205 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26181 + (32 * _27322) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26181 + (32 * _27322) + 192 len 32 * _46205] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46205]
                                                                mem[_26181 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26181 + (32 * _27322) + (32 * _46205) + -mem[64] + 192]
                                                else:
                                                    if not sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27931 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27931] = return_data.size
                                                                        mem[_27931 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _26168 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27306 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27306:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26168 + 64] = (32 * _27306) + 160
                                                                _46193 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_26168 + (32 * _27306) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_26168 + (32 * _27306) + 192 len 32 * _46193] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46193]
                                                                mem[_26168 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26168 + (32 * _27306) + (32 * _46193) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27929 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28890 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29849 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27929)
                                                                        mem[mem[64] + 100] = _28890
                                                                        _29850 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29850 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29850 + 36 len 28]
                                                                        mem[64] = _29849 + 196
                                                                        mem[_29849 + 132] = 32
                                                                        mem[_29849 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34974 = mem[_29850]
                                                                        s = 0
                                                                        while s < _34974:
                                                                            mem[s + _29849 + 196] = mem[s + _29850 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34974) > _34974:
                                                                            mem[_34974 + _29849 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29849 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29849 + 200 len _34974 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29849 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29849 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29849 + 264] = mem[idx + _29849 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29849 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29849 + ceil32(return_data.size) + 197
                                                                            mem[_29849 + 196] = return_data.size
                                                                            mem[_29849 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29849 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29849 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29849 + ceil32(return_data.size) + 265] = mem[idx + _29849 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29849 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29849 + 228] == bool(mem[_29849 + 228])
                                                                                if not mem[_29849 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _26166 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27304 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27304:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26166 + 64] = (32 * _27304) + 160
                                                                _46190 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_26166 + (32 * _27304) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_26166 + (32 * _27304) + 192 len 32 * _46190] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46190]
                                                                mem[_26166 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26166 + (32 * _27304) + (32 * _46190) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                if 0 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27928 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27928] = return_data.size
                                                                            mem[_27928 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _26163 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27300 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _27300:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_26163 + 64] = (32 * _27300) + 160
                                                                    _46188 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_26163 + (32 * _27300) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_26163 + (32 * _27300) + 192 len 32 * _46188] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46188]
                                                                    mem[_26163 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _26163 + (32 * _27300) + (32 * _46188) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27926 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28885 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29844 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27926)
                                                                            mem[mem[64] + 100] = _28885
                                                                            _29845 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29845 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29845 + 36 len 28]
                                                                            mem[64] = _29844 + 196
                                                                            mem[_29844 + 132] = 32
                                                                            mem[_29844 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34964 = mem[_29845]
                                                                            s = 0
                                                                            while s < _34964:
                                                                                mem[s + _29844 + 196] = mem[s + _29845 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34964) > _34964:
                                                                                mem[_34964 + _29844 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29844 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29844 + 200 len _34964 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29844 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29844 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29844 + 264] = mem[idx + _29844 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29844 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29844 + ceil32(return_data.size) + 197
                                                                                mem[_29844 + 196] = return_data.size
                                                                                mem[_29844 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29844 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29844 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29844 + ceil32(return_data.size) + 265] = mem[idx + _29844 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29844 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29844 + 228] == bool(mem[_29844 + 228])
                                                                                    if not mem[_29844 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _26161 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27298 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _27298:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_26161 + 64] = (32 * _27298) + 160
                                                                    _46185 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_26161 + (32 * _27298) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_26161 + (32 * _27298) + 192 len 32 * _46185] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46185]
                                                                    mem[_26161 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _26161 + (32 * _27298) + (32 * _46185) + -mem[64] + 192]
                                                    else:
                                                        if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                            revert with 0, 17
                                                        sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] += sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27937 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27937] = return_data.size
                                                                        mem[_27937 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _26178 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27318 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27318:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26178 + 64] = (32 * _27318) + 160
                                                                _46203 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_26178 + (32 * _27318) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_26178 + (32 * _27318) + 192 len 32 * _46203] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46203]
                                                                mem[_26178 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26178 + (32 * _27318) + (32 * _46203) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27935 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28900 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29859 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27935)
                                                                        mem[mem[64] + 100] = _28900
                                                                        _29860 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29860 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29860 + 36 len 28]
                                                                        mem[64] = _29859 + 196
                                                                        mem[_29859 + 132] = 32
                                                                        mem[_29859 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34994 = mem[_29860]
                                                                        s = 0
                                                                        while s < _34994:
                                                                            mem[s + _29859 + 196] = mem[s + _29860 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34994) > _34994:
                                                                            mem[_34994 + _29859 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29859 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29859 + 200 len _34994 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29859 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29859 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29859 + 264] = mem[idx + _29859 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29859 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29859 + ceil32(return_data.size) + 197
                                                                            mem[_29859 + 196] = return_data.size
                                                                            mem[_29859 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29859 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29859 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29859 + ceil32(return_data.size) + 265] = mem[idx + _29859 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29859 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29859 + 228] == bool(mem[_29859 + 228])
                                                                                if not mem[_29859 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _26176 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27316 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27316:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26176 + 64] = (32 * _27316) + 160
                                                                _46200 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_26176 + (32 * _27316) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_26176 + (32 * _27316) + 192 len 32 * _46200] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46200]
                                                                mem[_26176 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26176 + (32 * _27316) + (32 * _46200) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                if 0 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27934 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27934] = return_data.size
                                                                            mem[_27934 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27312 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _27312:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _27312) + 160
                                                                    _46198 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _27312) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _27312) + 192 len 32 * _46198] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46198]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27312) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27312) + (32 * _46198) + 64]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27932 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28895 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29854 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27932)
                                                                            mem[mem[64] + 100] = _28895
                                                                            _29855 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29855 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29855 + 36 len 28]
                                                                            mem[64] = _29854 + 196
                                                                            mem[_29854 + 132] = 32
                                                                            mem[_29854 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34984 = mem[_29855]
                                                                            s = 0
                                                                            while s < _34984:
                                                                                mem[s + _29854 + 196] = mem[s + _29855 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34984) > _34984:
                                                                                mem[_34984 + _29854 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29854 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29854 + 200 len _34984 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29854 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29854 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29854 + 264] = mem[idx + _29854 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29854 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29854 + ceil32(return_data.size) + 197
                                                                                mem[_29854 + 196] = return_data.size
                                                                                mem[_29854 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29854 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29854 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29854 + ceil32(return_data.size) + 265] = mem[idx + _29854 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29854 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29854 + 228] == bool(mem[_29854 + 228])
                                                                                    if not mem[_29854 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27310 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _27310:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _27310) + 160
                                                                    _46195 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _27310) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _27310) + 192 len 32 * _46195] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46195]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27310) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27310) + (32 * _46195) + 64]
                                                require ext_code.size(stor107)
                                                call stor107.0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                sub_57ba1b20[arg1].field_928 = 0
                                                emit 0xcc45266b: sub_57ba1b20[arg1].field_0, 0, sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100), sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                    else:
                                        if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / sub_57ba1b20[arg1].field_0 != sub_f65e6912:
                                            revert with 0, 'arithmetic error'
                                        if 100 < sub_f65e6912:
                                            revert with 0, 17
                                        if -sub_f65e6912 + 100 < sub_57ba1b20[arg1].field_256:
                                            if sub_57ba1b20[arg1].field_0 < sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100:
                                                revert with 0, 17
                                            if sub_b24fea7b[stor108[arg1]] > !(sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                revert with 0, 17
                                            sub_b24fea7b[stor108[arg1]] += sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                            if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                if not sub_764d55f7[arg1]:
                                                    mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                    mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                    mem[64] = (2 * ceil32(return_data.size)) + 256
                                                    mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                    if 0 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                        revert with 0, 17
                                                    mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                    mem[0] = sub_764d55f7[arg1]
                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                        revert with 0, 'pay: token addr not exists'
                                                    if not sub_764d55f7[arg1]:
                                                        idx = 0
                                                        s = 0
                                                        while idx < 1:
                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                revert with 0, 50
                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                revert with 0, 50
                                                            call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                               value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                 gas gas_remaining wei
                                                            if return_data.size:
                                                                _27925 = mem[64]
                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                mem[_27925] = return_data.size
                                                                mem[_27925 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            if not ext_call.success:
                                                                revert with 0, 'pays:transfer failed'
                                                            if idx == -1:
                                                                revert with 0, 17
                                                            idx = idx + 1
                                                            s = ext_call.success
                                                            continue 
                                                        _26158 = mem[64]
                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                        mem[mem[64] + 32] = 128
                                                        _27294 = mem[(2 * ceil32(return_data.size)) + 128]
                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                        idx = 0
                                                        s = mem[64] + 160
                                                        t = (2 * ceil32(return_data.size)) + 160
                                                        while idx < _27294:
                                                            mem[s] = mem[t + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[_26158 + 64] = (32 * _27294) + 160
                                                        _46183 = mem[(2 * ceil32(return_data.size)) + 192]
                                                        mem[_26158 + (32 * _27294) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                        mem[_26158 + (32 * _27294) + 192 len 32 * _46183] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46183]
                                                        mem[_26158 + 96] = msg.sender
                                                        emit 0x7c53e1df: mem[mem[64] len _26158 + (32 * _27294) + (32 * _46183) + -mem[64] + 192]
                                                    else:
                                                        mem[0] = sub_764d55f7[arg1]
                                                        mem[32] = 109
                                                        idx = 0
                                                        while idx < 1:
                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                revert with 0, 50
                                                            if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                _27923 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                    revert with 0, 50
                                                                _28880 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                _29839 = mem[64]
                                                                mem[mem[64] + 36] = msg.sender
                                                                mem[mem[64] + 68] = address(_27923)
                                                                mem[mem[64] + 100] = _28880
                                                                _29840 = mem[64]
                                                                mem[mem[64]] = 100
                                                                mem[64] = mem[64] + 132
                                                                mem[_29840 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29840 + 36 len 28]
                                                                mem[64] = _29839 + 196
                                                                mem[_29839 + 132] = 32
                                                                mem[_29839 + 164] = 'SafeERC20: low-level call failed'
                                                                if eth.balance(this.address) < 0:
                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                    revert with 0, 'Address: call to non-contract'
                                                                _34954 = mem[_29840]
                                                                s = 0
                                                                while s < _34954:
                                                                    mem[s + _29839 + 196] = mem[s + _29840 + 32]
                                                                    s = s + 32
                                                                    continue 
                                                                if ceil32(_34954) > _34954:
                                                                    mem[_34954 + _29839 + 196] = 0
                                                                call sub_6aafcaa9[stor108[arg1]].mem[_29839 + 196 len 4] with:
                                                                     gas gas_remaining wei
                                                                    args mem[_29839 + 200 len _34954 - 4]
                                                                if not return_data.size:
                                                                    if not ext_call.success:
                                                                        if mem[96]:
                                                                            revert with memory
                                                                              from 128
                                                                               len mem[96]
                                                                        mem[_29839 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[_29839 + 200] = 32
                                                                        idx = 0
                                                                        while idx < 32:
                                                                            mem[idx + _29839 + 264] = mem[idx + _29839 + 164]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 32, 32, mem[_29839 + 264]
                                                                    if mem[96]:
                                                                        require mem[96] >= 32
                                                                        require mem[128] == bool(mem[128])
                                                                        if not mem[128]:
                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                else:
                                                                    mem[64] = _29839 + ceil32(return_data.size) + 197
                                                                    mem[_29839 + 196] = return_data.size
                                                                    mem[_29839 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        if return_data.size:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        mem[_29839 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                        mem[_29839 + ceil32(return_data.size) + 201] = 32
                                                                        idx = 0
                                                                        while idx < 32:
                                                                            mem[idx + _29839 + ceil32(return_data.size) + 265] = mem[idx + _29839 + 164]
                                                                            idx = idx + 32
                                                                            continue 
                                                                        revert with 0, 32, 32, mem[_29839 + ceil32(return_data.size) + 265]
                                                                    if return_data.size:
                                                                        require return_data.size >= 32
                                                                        require mem[_29839 + 228] == bool(mem[_29839 + 228])
                                                                        if not mem[_29839 + 228]:
                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                            if idx == -1:
                                                                revert with 0, 17
                                                            idx = idx + 1
                                                            continue 
                                                        _26156 = mem[64]
                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                        mem[mem[64] + 32] = 128
                                                        _27292 = mem[(2 * ceil32(return_data.size)) + 128]
                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                        idx = 0
                                                        s = mem[64] + 160
                                                        t = (2 * ceil32(return_data.size)) + 160
                                                        while idx < _27292:
                                                            mem[s] = mem[t + 12 len 20]
                                                            idx = idx + 1
                                                            s = s + 32
                                                            t = t + 32
                                                            continue 
                                                        mem[_26156 + 64] = (32 * _27292) + 160
                                                        _46180 = mem[(2 * ceil32(return_data.size)) + 192]
                                                        mem[_26156 + (32 * _27292) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                        mem[_26156 + (32 * _27292) + 192 len 32 * _46180] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46180]
                                                        mem[_26156 + 96] = msg.sender
                                                        emit 0x7c53e1df: mem[mem[64] len _26156 + (32 * _27292) + (32 * _46180) + -mem[64] + 192]
                                                else:
                                                    if 1 == sub_764d55f7[arg1]:
                                                        mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                        mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                        mem[64] = (2 * ceil32(return_data.size)) + 320
                                                        mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                        if 0 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                            revert with 0, 17
                                                        mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                        mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                        mem[(2 * ceil32(return_data.size)) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 2:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                   value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27922 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27922] = return_data.size
                                                                    mem[_27922 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _26153 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27288 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27288:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26153 + 64] = (32 * _27288) + 160
                                                            _46178 = mem[(2 * ceil32(return_data.size)) + 224]
                                                            mem[_26153 + (32 * _27288) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                            mem[_26153 + (32 * _27288) + 192 len 32 * _46178] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46178]
                                                            mem[_26153 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26153 + (32 * _27288) + (32 * _46178) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 2:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    _27920 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                        revert with 0, 50
                                                                    _28875 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                    _29834 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27920)
                                                                    mem[mem[64] + 100] = _28875
                                                                    _29835 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29835 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29835 + 36 len 28]
                                                                    mem[64] = _29834 + 196
                                                                    mem[_29834 + 132] = 32
                                                                    mem[_29834 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _34944 = mem[_29835]
                                                                    s = 0
                                                                    while s < _34944:
                                                                        mem[s + _29834 + 196] = mem[s + _29835 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_34944) > _34944:
                                                                        mem[_34944 + _29834 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29834 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29834 + 200 len _34944 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29834 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29834 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29834 + 264] = mem[idx + _29834 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29834 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29834 + ceil32(return_data.size) + 197
                                                                        mem[_29834 + 196] = return_data.size
                                                                        mem[_29834 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29834 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29834 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29834 + ceil32(return_data.size) + 265] = mem[idx + _29834 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29834 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29834 + 228] == bool(mem[_29834 + 228])
                                                                            if not mem[_29834 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _26151 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27286 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27286:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26151 + 64] = (32 * _27286) + 160
                                                            _46175 = mem[(2 * ceil32(return_data.size)) + 224]
                                                            mem[_26151 + (32 * _27286) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                            mem[_26151 + (32 * _27286) + 192 len 32 * _46175] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46175]
                                                            mem[_26151 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26151 + (32 * _27286) + (32 * _46175) + -mem[64] + 192]
                                            else:
                                                if not sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                    if not sub_764d55f7[arg1]:
                                                        mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                        mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                        mem[64] = (2 * ceil32(return_data.size)) + 256
                                                        mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                        mem[(2 * ceil32(return_data.size)) + 224] = 0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        mem[32] = 109
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                   value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27913 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27913] = return_data.size
                                                                    mem[_27913 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27270 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27270:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 64] = (32 * _27270) + 160
                                                            _46163 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[mem[64] + (32 * _27270) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[mem[64] + (32 * _27270) + 192 len 32 * _46163] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46163]
                                                            mem[mem[64] + 96] = msg.sender
                                                            emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27270) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27270) + (32 * _46163) + 64]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    _27911 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    _28860 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                    _29819 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27911)
                                                                    mem[mem[64] + 100] = _28860
                                                                    _29820 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29820 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29820 + 36 len 28]
                                                                    mem[64] = _29819 + 196
                                                                    mem[_29819 + 132] = 32
                                                                    mem[_29819 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _34914 = mem[_29820]
                                                                    s = 0
                                                                    while s < _34914:
                                                                        mem[s + _29819 + 196] = mem[s + _29820 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_34914) > _34914:
                                                                        mem[_34914 + _29819 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29819 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29819 + 200 len _34914 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29819 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29819 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29819 + 264] = mem[idx + _29819 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29819 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29819 + ceil32(return_data.size) + 197
                                                                        mem[_29819 + 196] = return_data.size
                                                                        mem[_29819 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29819 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29819 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29819 + ceil32(return_data.size) + 265] = mem[idx + _29819 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29819 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29819 + 228] == bool(mem[_29819 + 228])
                                                                            if not mem[_29819 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _26136 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27268 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27268:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26136 + 64] = (32 * _27268) + 160
                                                            _46160 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26136 + (32 * _27268) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26136 + (32 * _27268) + 192 len 32 * _46160] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46160]
                                                            mem[_26136 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26136 + (32 * _27268) + (32 * _46160) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                            mem[64] = (2 * ceil32(return_data.size)) + 320
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 256] = 0
                                                            mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                            if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27910 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27910] = return_data.size
                                                                        mem[_27910 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27264 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27264:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _27264) + 160
                                                                _46158 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[mem[64] + (32 * _27264) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[mem[64] + (32 * _27264) + 192 len 32 * _46158] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46158]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27264) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27264) + (32 * _46158) + 64]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27908 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        _28855 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                        _29814 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27908)
                                                                        mem[mem[64] + 100] = _28855
                                                                        _29815 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29815 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29815 + 36 len 28]
                                                                        mem[64] = _29814 + 196
                                                                        mem[_29814 + 132] = 32
                                                                        mem[_29814 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34904 = mem[_29815]
                                                                        s = 0
                                                                        while s < _34904:
                                                                            mem[s + _29814 + 196] = mem[s + _29815 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34904) > _34904:
                                                                            mem[_34904 + _29814 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29814 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29814 + 200 len _34904 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29814 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29814 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29814 + 264] = mem[idx + _29814 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29814 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29814 + ceil32(return_data.size) + 197
                                                                            mem[_29814 + 196] = return_data.size
                                                                            mem[_29814 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29814 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29814 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29814 + ceil32(return_data.size) + 265] = mem[idx + _29814 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29814 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29814 + 228] == bool(mem[_29814 + 228])
                                                                                if not mem[_29814 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _26131 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27262 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27262:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26131 + 64] = (32 * _27262) + 160
                                                                _46155 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26131 + (32 * _27262) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26131 + (32 * _27262) + 192 len 32 * _46155] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46155]
                                                                mem[_26131 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26131 + (32 * _27262) + (32 * _46155) + -mem[64] + 192]
                                                else:
                                                    if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                        revert with 0, 17
                                                    sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] = sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] + sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                    if not sub_764d55f7[arg1]:
                                                        mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                        mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                        mem[64] = (2 * ceil32(return_data.size)) + 256
                                                        mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                        mem[(2 * ceil32(return_data.size)) + 224] = 0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                   value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27919 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27919] = return_data.size
                                                                    mem[_27919 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _26148 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27282 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27282:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26148 + 64] = (32 * _27282) + 160
                                                            _46173 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26148 + (32 * _27282) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26148 + (32 * _27282) + 192 len 32 * _46173] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46173]
                                                            mem[_26148 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26148 + (32 * _27282) + (32 * _46173) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    _27917 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    _28870 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                    _29829 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27917)
                                                                    mem[mem[64] + 100] = _28870
                                                                    _29830 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29830 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29830 + 36 len 28]
                                                                    mem[64] = _29829 + 196
                                                                    mem[_29829 + 132] = 32
                                                                    mem[_29829 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _34934 = mem[_29830]
                                                                    s = 0
                                                                    while s < _34934:
                                                                        mem[s + _29829 + 196] = mem[s + _29830 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_34934) > _34934:
                                                                        mem[_34934 + _29829 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29829 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29829 + 200 len _34934 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29829 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29829 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29829 + 264] = mem[idx + _29829 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29829 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29829 + ceil32(return_data.size) + 197
                                                                        mem[_29829 + 196] = return_data.size
                                                                        mem[_29829 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29829 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29829 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29829 + ceil32(return_data.size) + 265] = mem[idx + _29829 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29829 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29829 + 228] == bool(mem[_29829 + 228])
                                                                            if not mem[_29829 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _26146 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27280 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27280:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26146 + 64] = (32 * _27280) + 160
                                                            _46170 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26146 + (32 * _27280) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26146 + (32 * _27280) + 192 len 32 * _46170] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46170]
                                                            mem[_26146 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26146 + (32 * _27280) + (32 * _46170) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                            mem[64] = (2 * ceil32(return_data.size)) + 320
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 256] = 0
                                                            mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                            if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27916 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27916] = return_data.size
                                                                        mem[_27916 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _26143 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27276 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27276:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26143 + 64] = (32 * _27276) + 160
                                                                _46168 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26143 + (32 * _27276) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26143 + (32 * _27276) + 192 len 32 * _46168] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46168]
                                                                mem[_26143 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26143 + (32 * _27276) + (32 * _46168) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27914 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        _28865 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                        _29824 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27914)
                                                                        mem[mem[64] + 100] = _28865
                                                                        _29825 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29825 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29825 + 36 len 28]
                                                                        mem[64] = _29824 + 196
                                                                        mem[_29824 + 132] = 32
                                                                        mem[_29824 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34924 = mem[_29825]
                                                                        s = 0
                                                                        while s < _34924:
                                                                            mem[s + _29824 + 196] = mem[s + _29825 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34924) > _34924:
                                                                            mem[_34924 + _29824 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29824 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29824 + 200 len _34924 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29824 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29824 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29824 + 264] = mem[idx + _29824 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29824 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29824 + ceil32(return_data.size) + 197
                                                                            mem[_29824 + 196] = return_data.size
                                                                            mem[_29824 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29824 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29824 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29824 + ceil32(return_data.size) + 265] = mem[idx + _29824 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29824 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29824 + 228] == bool(mem[_29824 + 228])
                                                                                if not mem[_29824 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _26141 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27274 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27274:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26141 + 64] = (32 * _27274) + 160
                                                                _46165 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26141 + (32 * _27274) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26141 + (32 * _27274) + 192 len 32 * _46165] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46165]
                                                                mem[_26141 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26141 + (32 * _27274) + (32 * _46165) + -mem[64] + 192]
                                            require ext_code.size(stor107)
                                            call stor107.0x23b872dd with:
                                                 gas gas_remaining wei
                                                args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            sub_57ba1b20[arg1].field_928 = 0
                                            emit 0xcc45266b: sub_57ba1b20[arg1].field_0, sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100), 0, sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                        else:
                                            if sub_57ba1b20[arg1].field_256 > 100:
                                                revert with 0, 'percent invalid'
                                            if not sub_57ba1b20[arg1].field_0:
                                                if sub_57ba1b20[arg1].field_0 < sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100:
                                                    revert with 0, 17
                                                if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) < 0:
                                                    revert with 0, 17
                                                if sub_b24fea7b[stor108[arg1]] > !(sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                    revert with 0, 17
                                                sub_b24fea7b[stor108[arg1]] += sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                        mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                        mem[64] = (2 * ceil32(return_data.size)) + 256
                                                        mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                        if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) > -1:
                                                            revert with 0, 17
                                                        mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                   value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27907 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27907] = return_data.size
                                                                    mem[_27907 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _26128 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27258 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27258:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26128 + 64] = (32 * _27258) + 160
                                                            _46153 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26128 + (32 * _27258) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26128 + (32 * _27258) + 192 len 32 * _46153] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46153]
                                                            mem[_26128 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26128 + (32 * _27258) + (32 * _46153) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    _27905 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    _28850 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                    _29809 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27905)
                                                                    mem[mem[64] + 100] = _28850
                                                                    _29810 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29810 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29810 + 36 len 28]
                                                                    mem[64] = _29809 + 196
                                                                    mem[_29809 + 132] = 32
                                                                    mem[_29809 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _34894 = mem[_29810]
                                                                    s = 0
                                                                    while s < _34894:
                                                                        mem[s + _29809 + 196] = mem[s + _29810 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_34894) > _34894:
                                                                        mem[_34894 + _29809 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29809 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29809 + 200 len _34894 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29809 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29809 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29809 + 264] = mem[idx + _29809 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29809 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29809 + ceil32(return_data.size) + 197
                                                                        mem[_29809 + 196] = return_data.size
                                                                        mem[_29809 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29809 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29809 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29809 + ceil32(return_data.size) + 265] = mem[idx + _29809 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29809 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29809 + 228] == bool(mem[_29809 + 228])
                                                                            if not mem[_29809 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27256 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27256:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 64] = (32 * _27256) + 160
                                                            _46150 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[mem[64] + (32 * _27256) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[mem[64] + (32 * _27256) + 192 len 32 * _46150] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46150]
                                                            mem[mem[64] + 96] = msg.sender
                                                            emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27256) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27256) + (32 * _46150) + 64]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                            mem[64] = (2 * ceil32(return_data.size)) + 320
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) > -1:
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                            mem[(2 * ceil32(return_data.size)) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27904 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27904] = return_data.size
                                                                        mem[_27904 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _26123 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27252 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27252:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26123 + 64] = (32 * _27252) + 160
                                                                _46148 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26123 + (32 * _27252) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26123 + (32 * _27252) + 192 len 32 * _46148] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46148]
                                                                mem[_26123 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26123 + (32 * _27252) + (32 * _46148) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27902 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        _28845 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                        _29804 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27902)
                                                                        mem[mem[64] + 100] = _28845
                                                                        _29805 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29805 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29805 + 36 len 28]
                                                                        mem[64] = _29804 + 196
                                                                        mem[_29804 + 132] = 32
                                                                        mem[_29804 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34884 = mem[_29805]
                                                                        s = 0
                                                                        while s < _34884:
                                                                            mem[s + _29804 + 196] = mem[s + _29805 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34884) > _34884:
                                                                            mem[_34884 + _29804 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29804 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29804 + 200 len _34884 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29804 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29804 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29804 + 264] = mem[idx + _29804 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29804 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29804 + ceil32(return_data.size) + 197
                                                                            mem[_29804 + 196] = return_data.size
                                                                            mem[_29804 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29804 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29804 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29804 + ceil32(return_data.size) + 265] = mem[idx + _29804 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29804 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29804 + 228] == bool(mem[_29804 + 228])
                                                                                if not mem[_29804 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _26121 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27250 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27250:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26121 + 64] = (32 * _27250) + 160
                                                                _46145 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26121 + (32 * _27250) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26121 + (32 * _27250) + 192 len 32 * _46145] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46145]
                                                                mem[_26121 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26121 + (32 * _27250) + (32 * _46145) + -mem[64] + 192]
                                                else:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                        mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                        mem[64] = (2 * ceil32(return_data.size)) + 256
                                                        mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                        mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                   value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27901 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27901] = return_data.size
                                                                    mem[_27901 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _26118 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27246 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27246:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26118 + 64] = (32 * _27246) + 160
                                                            _46143 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26118 + (32 * _27246) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26118 + (32 * _27246) + 192 len 32 * _46143] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46143]
                                                            mem[_26118 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26118 + (32 * _27246) + (32 * _46143) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    _27899 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    _28840 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                    _29799 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27899)
                                                                    mem[mem[64] + 100] = _28840
                                                                    _29800 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29800 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29800 + 36 len 28]
                                                                    mem[64] = _29799 + 196
                                                                    mem[_29799 + 132] = 32
                                                                    mem[_29799 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _34874 = mem[_29800]
                                                                    s = 0
                                                                    while s < _34874:
                                                                        mem[s + _29799 + 196] = mem[s + _29800 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_34874) > _34874:
                                                                        mem[_34874 + _29799 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29799 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29799 + 200 len _34874 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29799 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29799 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29799 + 264] = mem[idx + _29799 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29799 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29799 + ceil32(return_data.size) + 197
                                                                        mem[_29799 + 196] = return_data.size
                                                                        mem[_29799 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29799 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29799 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29799 + ceil32(return_data.size) + 265] = mem[idx + _29799 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29799 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29799 + 228] == bool(mem[_29799 + 228])
                                                                            if not mem[_29799 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _26116 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27244 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27244:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26116 + 64] = (32 * _27244) + 160
                                                            _46140 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26116 + (32 * _27244) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26116 + (32 * _27244) + 192 len 32 * _46140] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46140]
                                                            mem[_26116 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26116 + (32 * _27244) + (32 * _46140) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                            mem[64] = (2 * ceil32(return_data.size)) + 320
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                            if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > -1:
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27898 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27898] = return_data.size
                                                                        mem[_27898 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27240 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27240:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _27240) + 160
                                                                _46138 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[mem[64] + (32 * _27240) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[mem[64] + (32 * _27240) + 192 len 32 * _46138] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46138]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27240) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27240) + (32 * _46138) + 64]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27896 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        _28835 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                        _29794 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27896)
                                                                        mem[mem[64] + 100] = _28835
                                                                        _29795 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29795 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29795 + 36 len 28]
                                                                        mem[64] = _29794 + 196
                                                                        mem[_29794 + 132] = 32
                                                                        mem[_29794 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34864 = mem[_29795]
                                                                        s = 0
                                                                        while s < _34864:
                                                                            mem[s + _29794 + 196] = mem[s + _29795 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34864) > _34864:
                                                                            mem[_34864 + _29794 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29794 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29794 + 200 len _34864 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29794 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29794 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29794 + 264] = mem[idx + _29794 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29794 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29794 + ceil32(return_data.size) + 197
                                                                            mem[_29794 + 196] = return_data.size
                                                                            mem[_29794 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29794 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29794 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29794 + ceil32(return_data.size) + 265] = mem[idx + _29794 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29794 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29794 + 228] == bool(mem[_29794 + 228])
                                                                                if not mem[_29794 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _26111 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27238 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27238:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26111 + 64] = (32 * _27238) + 160
                                                                _46135 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26111 + (32 * _27238) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26111 + (32 * _27238) + 192 len 32 * _46135] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46135]
                                                                mem[_26111 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26111 + (32 * _27238) + (32 * _46135) + -mem[64] + 192]
                                                require ext_code.size(stor107)
                                                call stor107.0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                sub_57ba1b20[arg1].field_928 = 0
                                                emit 0xcc45266b: sub_57ba1b20[arg1].field_0, sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100, 0, sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100), sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                            else:
                                                if sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / sub_57ba1b20[arg1].field_0 != sub_57ba1b20[arg1].field_256:
                                                    revert with 0, 'arithmetic error'
                                                if sub_57ba1b20[arg1].field_0 < sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100:
                                                    revert with 0, 17
                                                if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) < sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                    revert with 0, 17
                                                if sub_b24fea7b[stor108[arg1]] > !(sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                    revert with 0, 17
                                                sub_b24fea7b[stor108[arg1]] += sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                        mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                        mem[64] = (2 * ceil32(return_data.size)) + 256
                                                        mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                        if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                            revert with 0, 17
                                                        mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                   value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27895 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27895] = return_data.size
                                                                    mem[_27895 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _26108 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27234 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27234:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26108 + 64] = (32 * _27234) + 160
                                                            _46133 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26108 + (32 * _27234) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26108 + (32 * _27234) + 192 len 32 * _46133] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46133]
                                                            mem[_26108 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26108 + (32 * _27234) + (32 * _46133) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    _27893 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    _28830 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                    _29789 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27893)
                                                                    mem[mem[64] + 100] = _28830
                                                                    _29790 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29790 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29790 + 36 len 28]
                                                                    mem[64] = _29789 + 196
                                                                    mem[_29789 + 132] = 32
                                                                    mem[_29789 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _34854 = mem[_29790]
                                                                    s = 0
                                                                    while s < _34854:
                                                                        mem[s + _29789 + 196] = mem[s + _29790 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_34854) > _34854:
                                                                        mem[_34854 + _29789 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29789 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29789 + 200 len _34854 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29789 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29789 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29789 + 264] = mem[idx + _29789 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29789 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29789 + ceil32(return_data.size) + 197
                                                                        mem[_29789 + 196] = return_data.size
                                                                        mem[_29789 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29789 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29789 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29789 + ceil32(return_data.size) + 265] = mem[idx + _29789 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29789 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29789 + 228] == bool(mem[_29789 + 228])
                                                                            if not mem[_29789 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _26106 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27232 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27232:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26106 + 64] = (32 * _27232) + 160
                                                            _46130 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26106 + (32 * _27232) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_26106 + (32 * _27232) + 192 len 32 * _46130] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46130]
                                                            mem[_26106 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26106 + (32 * _27232) + (32 * _46130) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                            mem[64] = (2 * ceil32(return_data.size)) + 320
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                            mem[(2 * ceil32(return_data.size)) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27892 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27892] = return_data.size
                                                                        mem[_27892 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _26103 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27228 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27228:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26103 + 64] = (32 * _27228) + 160
                                                                _46128 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26103 + (32 * _27228) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_26103 + (32 * _27228) + 192 len 32 * _46128] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46128]
                                                                mem[_26103 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26103 + (32 * _27228) + (32 * _46128) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27890 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        _28825 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                        _29784 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27890)
                                                                        mem[mem[64] + 100] = _28825
                                                                        _29785 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29785 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29785 + 36 len 28]
                                                                        mem[64] = _29784 + 196
                                                                        mem[_29784 + 132] = 32
                                                                        mem[_29784 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34844 = mem[_29785]
                                                                        s = 0
                                                                        while s < _34844:
                                                                            mem[s + _29784 + 196] = mem[s + _29785 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34844) > _34844:
                                                                            mem[_34844 + _29784 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29784 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29784 + 200 len _34844 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29784 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29784 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29784 + 264] = mem[idx + _29784 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29784 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29784 + ceil32(return_data.size) + 197
                                                                            mem[_29784 + 196] = return_data.size
                                                                            mem[_29784 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29784 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29784 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29784 + ceil32(return_data.size) + 265] = mem[idx + _29784 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29784 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29784 + 228] == bool(mem[_29784 + 228])
                                                                                if not mem[_29784 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27226 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27226:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _27226) + 160
                                                                _46125 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[mem[64] + (32 * _27226) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[mem[64] + (32 * _27226) + 192 len 32 * _46125] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46125]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27226) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27226) + (32 * _46125) + 64]
                                                else:
                                                    if not sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27883 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27883] = return_data.size
                                                                        mem[_27883 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _26088 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27210 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27210:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26088 + 64] = (32 * _27210) + 160
                                                                _46113 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_26088 + (32 * _27210) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_26088 + (32 * _27210) + 192 len 32 * _46113] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46113]
                                                                mem[_26088 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26088 + (32 * _27210) + (32 * _46113) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27881 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28810 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29769 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27881)
                                                                        mem[mem[64] + 100] = _28810
                                                                        _29770 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29770 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29770 + 36 len 28]
                                                                        mem[64] = _29769 + 196
                                                                        mem[_29769 + 132] = 32
                                                                        mem[_29769 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34814 = mem[_29770]
                                                                        s = 0
                                                                        while s < _34814:
                                                                            mem[s + _29769 + 196] = mem[s + _29770 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34814) > _34814:
                                                                            mem[_34814 + _29769 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29769 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29769 + 200 len _34814 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29769 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29769 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29769 + 264] = mem[idx + _29769 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29769 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29769 + ceil32(return_data.size) + 197
                                                                            mem[_29769 + 196] = return_data.size
                                                                            mem[_29769 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29769 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29769 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29769 + ceil32(return_data.size) + 265] = mem[idx + _29769 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29769 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29769 + 228] == bool(mem[_29769 + 228])
                                                                                if not mem[_29769 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _26086 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27208 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27208:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26086 + 64] = (32 * _27208) + 160
                                                                _46110 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_26086 + (32 * _27208) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_26086 + (32 * _27208) + 192 len 32 * _46110] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46110]
                                                                mem[_26086 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26086 + (32 * _27208) + (32 * _46110) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 288] = (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) + (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27880 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27880] = return_data.size
                                                                            mem[_27880 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _26083 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27204 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _27204:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_26083 + 64] = (32 * _27204) + 160
                                                                    _46108 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_26083 + (32 * _27204) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_26083 + (32 * _27204) + 192 len 32 * _46108] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46108]
                                                                    mem[_26083 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _26083 + (32 * _27204) + (32 * _46108) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27878 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28805 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29764 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27878)
                                                                            mem[mem[64] + 100] = _28805
                                                                            _29765 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29765 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29765 + 36 len 28]
                                                                            mem[64] = _29764 + 196
                                                                            mem[_29764 + 132] = 32
                                                                            mem[_29764 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34804 = mem[_29765]
                                                                            s = 0
                                                                            while s < _34804:
                                                                                mem[s + _29764 + 196] = mem[s + _29765 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34804) > _34804:
                                                                                mem[_34804 + _29764 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29764 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29764 + 200 len _34804 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29764 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29764 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29764 + 264] = mem[idx + _29764 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29764 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29764 + ceil32(return_data.size) + 197
                                                                                mem[_29764 + 196] = return_data.size
                                                                                mem[_29764 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29764 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29764 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29764 + ceil32(return_data.size) + 265] = mem[idx + _29764 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29764 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29764 + 228] == bool(mem[_29764 + 228])
                                                                                    if not mem[_29764 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _26081 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27202 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _27202:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_26081 + 64] = (32 * _27202) + 160
                                                                    _46105 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_26081 + (32 * _27202) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_26081 + (32 * _27202) + 192 len 32 * _46105] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46105]
                                                                    mem[_26081 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _26081 + (32 * _27202) + (32 * _46105) + -mem[64] + 192]
                                                    else:
                                                        if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                            revert with 0, 17
                                                        sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] += sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27889 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27889] = return_data.size
                                                                        mem[_27889 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _26098 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27222 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27222:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26098 + 64] = (32 * _27222) + 160
                                                                _46123 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_26098 + (32 * _27222) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_26098 + (32 * _27222) + 192 len 32 * _46123] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46123]
                                                                mem[_26098 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26098 + (32 * _27222) + (32 * _46123) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27887 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28820 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29779 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27887)
                                                                        mem[mem[64] + 100] = _28820
                                                                        _29780 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29780 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29780 + 36 len 28]
                                                                        mem[64] = _29779 + 196
                                                                        mem[_29779 + 132] = 32
                                                                        mem[_29779 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34834 = mem[_29780]
                                                                        s = 0
                                                                        while s < _34834:
                                                                            mem[s + _29779 + 196] = mem[s + _29780 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34834) > _34834:
                                                                            mem[_34834 + _29779 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29779 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29779 + 200 len _34834 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29779 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29779 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29779 + 264] = mem[idx + _29779 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29779 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29779 + ceil32(return_data.size) + 197
                                                                            mem[_29779 + 196] = return_data.size
                                                                            mem[_29779 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29779 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29779 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29779 + ceil32(return_data.size) + 265] = mem[idx + _29779 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29779 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29779 + 228] == bool(mem[_29779 + 228])
                                                                                if not mem[_29779 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _26096 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27220 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27220:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26096 + 64] = (32 * _27220) + 160
                                                                _46120 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_26096 + (32 * _27220) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_26096 + (32 * _27220) + 192 len 32 * _46120] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _46120]
                                                                mem[_26096 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26096 + (32 * _27220) + (32 * _46120) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 288] = (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) + (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27886 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27886] = return_data.size
                                                                            mem[_27886 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _26093 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27216 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _27216:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_26093 + 64] = (32 * _27216) + 160
                                                                    _46118 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_26093 + (32 * _27216) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_26093 + (32 * _27216) + 192 len 32 * _46118] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46118]
                                                                    mem[_26093 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _26093 + (32 * _27216) + (32 * _46118) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27884 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28815 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29774 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27884)
                                                                            mem[mem[64] + 100] = _28815
                                                                            _29775 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29775 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29775 + 36 len 28]
                                                                            mem[64] = _29774 + 196
                                                                            mem[_29774 + 132] = 32
                                                                            mem[_29774 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34824 = mem[_29775]
                                                                            s = 0
                                                                            while s < _34824:
                                                                                mem[s + _29774 + 196] = mem[s + _29775 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34824) > _34824:
                                                                                mem[_34824 + _29774 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29774 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29774 + 200 len _34824 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29774 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29774 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29774 + 264] = mem[idx + _29774 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29774 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29774 + ceil32(return_data.size) + 197
                                                                                mem[_29774 + 196] = return_data.size
                                                                                mem[_29774 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29774 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29774 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29774 + ceil32(return_data.size) + 265] = mem[idx + _29774 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29774 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29774 + 228] == bool(mem[_29774 + 228])
                                                                                    if not mem[_29774 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _26091 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27214 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _27214:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_26091 + 64] = (32 * _27214) + 160
                                                                    _46115 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_26091 + (32 * _27214) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_26091 + (32 * _27214) + 192 len 32 * _46115] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _46115]
                                                                    mem[_26091 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _26091 + (32 * _27214) + (32 * _46115) + -mem[64] + 192]
                                                require ext_code.size(stor107)
                                                call stor107.0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                sub_57ba1b20[arg1].field_928 = 0
                                                emit 0xcc45266b: sub_57ba1b20[arg1].field_0, sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100), sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                else:
                                    if sub_764d55f7[arg1] != 1:
                                        if 0 < sub_57ba1b20[arg1].field_0:
                                            revert with 0, 'don't have enough money'
                                        if sub_f65e6912 > 100:
                                            revert with 0, 'percent invalid'
                                        if not sub_57ba1b20[arg1].field_0:
                                            if 100 < sub_f65e6912:
                                                revert with 0, 17
                                            if -sub_f65e6912 + 100 < sub_57ba1b20[arg1].field_256:
                                                if sub_57ba1b20[arg1].field_0 < 0:
                                                    revert with 0, 17
                                                if sub_b24fea7b[stor108[arg1]] > -1:
                                                    revert with 0, 17
                                                if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                        mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                        mem[64] = (2 * ceil32(return_data.size)) + 256
                                                        mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                        if 0 > !sub_57ba1b20[arg1].field_0:
                                                            revert with 0, 17
                                                        mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                   value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27781 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27781] = return_data.size
                                                                    mem[_27781 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _25918 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27006 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27006:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25918 + 64] = (32 * _27006) + 160
                                                            _45943 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_25918 + (32 * _27006) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_25918 + (32 * _27006) + 192 len 32 * _45943] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45943]
                                                            mem[_25918 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25918 + (32 * _27006) + (32 * _45943) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    _27779 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    _28640 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                    _29599 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27779)
                                                                    mem[mem[64] + 100] = _28640
                                                                    _29600 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29600 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29600 + 36 len 28]
                                                                    mem[64] = _29599 + 196
                                                                    mem[_29599 + 132] = 32
                                                                    mem[_29599 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _34474 = mem[_29600]
                                                                    s = 0
                                                                    while s < _34474:
                                                                        mem[s + _29599 + 196] = mem[s + _29600 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_34474) > _34474:
                                                                        mem[_34474 + _29599 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29599 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29599 + 200 len _34474 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29599 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29599 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29599 + 264] = mem[idx + _29599 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29599 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29599 + ceil32(return_data.size) + 197
                                                                        mem[_29599 + 196] = return_data.size
                                                                        mem[_29599 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29599 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29599 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29599 + ceil32(return_data.size) + 265] = mem[idx + _29599 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29599 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29599 + 228] == bool(mem[_29599 + 228])
                                                                            if not mem[_29599 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27004 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _27004:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[mem[64] + 64] = (32 * _27004) + 160
                                                            _45940 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[mem[64] + (32 * _27004) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[mem[64] + (32 * _27004) + 192 len 32 * _45940] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45940]
                                                            mem[mem[64] + 96] = msg.sender
                                                            emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27004) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27004) + (32 * _45940) + 64]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                            mem[64] = (2 * ceil32(return_data.size)) + 320
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if 0 > !sub_57ba1b20[arg1].field_0:
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0
                                                            mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                            mem[(2 * ceil32(return_data.size)) + 288] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27778 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27778] = return_data.size
                                                                        mem[_27778 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25913 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27000 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _27000:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25913 + 64] = (32 * _27000) + 160
                                                                _45938 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_25913 + (32 * _27000) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_25913 + (32 * _27000) + 192 len 32 * _45938] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45938]
                                                                mem[_25913 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25913 + (32 * _27000) + (32 * _45938) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27776 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        _28635 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                        _29594 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27776)
                                                                        mem[mem[64] + 100] = _28635
                                                                        _29595 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29595 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29595 + 36 len 28]
                                                                        mem[64] = _29594 + 196
                                                                        mem[_29594 + 132] = 32
                                                                        mem[_29594 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34464 = mem[_29595]
                                                                        s = 0
                                                                        while s < _34464:
                                                                            mem[s + _29594 + 196] = mem[s + _29595 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34464) > _34464:
                                                                            mem[_34464 + _29594 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29594 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29594 + 200 len _34464 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29594 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29594 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29594 + 264] = mem[idx + _29594 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29594 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29594 + ceil32(return_data.size) + 197
                                                                            mem[_29594 + 196] = return_data.size
                                                                            mem[_29594 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29594 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29594 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29594 + ceil32(return_data.size) + 265] = mem[idx + _29594 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29594 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29594 + 228] == bool(mem[_29594 + 228])
                                                                                if not mem[_29594 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25911 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26998 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26998:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25911 + 64] = (32 * _26998) + 160
                                                                _45935 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_25911 + (32 * _26998) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_25911 + (32 * _26998) + 192 len 32 * _45935] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45935]
                                                                mem[_25911 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25911 + (32 * _26998) + (32 * _45935) + -mem[64] + 192]
                                                else:
                                                    if not sub_57ba1b20[arg1].field_0:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27769 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27769] = return_data.size
                                                                        mem[_27769 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25898 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26982 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26982:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25898 + 64] = (32 * _26982) + 160
                                                                _45923 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25898 + (32 * _26982) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25898 + (32 * _26982) + 192 len 32 * _45923] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45923]
                                                                mem[_25898 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25898 + (32 * _26982) + (32 * _45923) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27767 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28620 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29579 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27767)
                                                                        mem[mem[64] + 100] = _28620
                                                                        _29580 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29580 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29580 + 36 len 28]
                                                                        mem[64] = _29579 + 196
                                                                        mem[_29579 + 132] = 32
                                                                        mem[_29579 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34434 = mem[_29580]
                                                                        s = 0
                                                                        while s < _34434:
                                                                            mem[s + _29579 + 196] = mem[s + _29580 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34434) > _34434:
                                                                            mem[_34434 + _29579 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29579 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29579 + 200 len _34434 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29579 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29579 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29579 + 264] = mem[idx + _29579 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29579 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29579 + ceil32(return_data.size) + 197
                                                                            mem[_29579 + 196] = return_data.size
                                                                            mem[_29579 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29579 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29579 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29579 + ceil32(return_data.size) + 265] = mem[idx + _29579 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29579 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29579 + 228] == bool(mem[_29579 + 228])
                                                                                if not mem[_29579 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25896 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26980 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26980:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25896 + 64] = (32 * _26980) + 160
                                                                _45920 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25896 + (32 * _26980) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25896 + (32 * _26980) + 192 len 32 * _45920] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45920]
                                                                mem[_25896 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25896 + (32 * _26980) + (32 * _45920) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 256] = 0
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                if 0 > !sub_57ba1b20[arg1].field_0:
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27766 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27766] = return_data.size
                                                                            mem[_27766 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25893 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26976 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26976:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25893 + 64] = (32 * _26976) + 160
                                                                    _45918 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25893 + (32 * _26976) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25893 + (32 * _26976) + 192 len 32 * _45918] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45918]
                                                                    mem[_25893 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25893 + (32 * _26976) + (32 * _45918) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27764 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28615 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29574 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27764)
                                                                            mem[mem[64] + 100] = _28615
                                                                            _29575 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29575 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29575 + 36 len 28]
                                                                            mem[64] = _29574 + 196
                                                                            mem[_29574 + 132] = 32
                                                                            mem[_29574 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34424 = mem[_29575]
                                                                            s = 0
                                                                            while s < _34424:
                                                                                mem[s + _29574 + 196] = mem[s + _29575 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34424) > _34424:
                                                                                mem[_34424 + _29574 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29574 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29574 + 200 len _34424 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29574 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29574 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29574 + 264] = mem[idx + _29574 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29574 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29574 + ceil32(return_data.size) + 197
                                                                                mem[_29574 + 196] = return_data.size
                                                                                mem[_29574 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29574 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29574 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29574 + ceil32(return_data.size) + 265] = mem[idx + _29574 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29574 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29574 + 228] == bool(mem[_29574 + 228])
                                                                                    if not mem[_29574 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25891 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26974 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26974:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25891 + 64] = (32 * _26974) + 160
                                                                    _45915 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25891 + (32 * _26974) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25891 + (32 * _26974) + 192 len 32 * _45915] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45915]
                                                                    mem[_25891 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25891 + (32 * _26974) + (32 * _45915) + -mem[64] + 192]
                                                    else:
                                                        if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !sub_57ba1b20[arg1].field_0:
                                                            revert with 0, 17
                                                        sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] += sub_57ba1b20[arg1].field_0
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27775 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27775] = return_data.size
                                                                        mem[_27775 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26994 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26994:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _26994) + 160
                                                                _45933 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[mem[64] + (32 * _26994) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[mem[64] + (32 * _26994) + 192 len 32 * _45933] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45933]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26994) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26994) + (32 * _45933) + 64]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27773 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28630 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29589 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27773)
                                                                        mem[mem[64] + 100] = _28630
                                                                        _29590 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29590 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29590 + 36 len 28]
                                                                        mem[64] = _29589 + 196
                                                                        mem[_29589 + 132] = 32
                                                                        mem[_29589 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34454 = mem[_29590]
                                                                        s = 0
                                                                        while s < _34454:
                                                                            mem[s + _29589 + 196] = mem[s + _29590 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34454) > _34454:
                                                                            mem[_34454 + _29589 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29589 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29589 + 200 len _34454 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29589 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29589 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29589 + 264] = mem[idx + _29589 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29589 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29589 + ceil32(return_data.size) + 197
                                                                            mem[_29589 + 196] = return_data.size
                                                                            mem[_29589 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29589 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29589 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29589 + ceil32(return_data.size) + 265] = mem[idx + _29589 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29589 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29589 + 228] == bool(mem[_29589 + 228])
                                                                                if not mem[_29589 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25906 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26992 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26992:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25906 + 64] = (32 * _26992) + 160
                                                                _45930 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25906 + (32 * _26992) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25906 + (32 * _26992) + 192 len 32 * _45930] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45930]
                                                                mem[_25906 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25906 + (32 * _26992) + (32 * _45930) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 256] = 0
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                if 0 > !sub_57ba1b20[arg1].field_0:
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27772 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27772] = return_data.size
                                                                            mem[_27772 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25903 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26988 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26988:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25903 + 64] = (32 * _26988) + 160
                                                                    _45928 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25903 + (32 * _26988) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25903 + (32 * _26988) + 192 len 32 * _45928] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45928]
                                                                    mem[_25903 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25903 + (32 * _26988) + (32 * _45928) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27770 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28625 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29584 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27770)
                                                                            mem[mem[64] + 100] = _28625
                                                                            _29585 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29585 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29585 + 36 len 28]
                                                                            mem[64] = _29584 + 196
                                                                            mem[_29584 + 132] = 32
                                                                            mem[_29584 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34444 = mem[_29585]
                                                                            s = 0
                                                                            while s < _34444:
                                                                                mem[s + _29584 + 196] = mem[s + _29585 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34444) > _34444:
                                                                                mem[_34444 + _29584 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29584 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29584 + 200 len _34444 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29584 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29584 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29584 + 264] = mem[idx + _29584 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29584 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29584 + ceil32(return_data.size) + 197
                                                                                mem[_29584 + 196] = return_data.size
                                                                                mem[_29584 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29584 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29584 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29584 + ceil32(return_data.size) + 265] = mem[idx + _29584 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29584 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29584 + 228] == bool(mem[_29584 + 228])
                                                                                    if not mem[_29584 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25901 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26986 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26986:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25901 + 64] = (32 * _26986) + 160
                                                                    _45925 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25901 + (32 * _26986) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25901 + (32 * _26986) + 192 len 32 * _45925] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45925]
                                                                    mem[_25901 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25901 + (32 * _26986) + (32 * _45925) + -mem[64] + 192]
                                                require ext_code.size(stor107)
                                                call stor107.0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                sub_57ba1b20[arg1].field_928 = 0
                                                emit 0xcc45266b: sub_57ba1b20[arg1].field_0, 0, sub_57ba1b20[arg1].field_0, 0, sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                            else:
                                                if sub_57ba1b20[arg1].field_256 > 100:
                                                    revert with 0, 'percent invalid'
                                                if not sub_57ba1b20[arg1].field_0:
                                                    if sub_57ba1b20[arg1].field_0 < 0:
                                                        revert with 0, 17
                                                    if sub_b24fea7b[stor108[arg1]] > -1:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_768 != sub_57ba1b20[arg1].field_512:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27757 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27757] = return_data.size
                                                                        mem[_27757 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25878 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26958 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26958:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25878 + 64] = (32 * _26958) + 160
                                                                _45903 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25878 + (32 * _26958) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25878 + (32 * _26958) + 192 len 32 * _45903] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45903]
                                                                mem[_25878 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25878 + (32 * _26958) + (32 * _45903) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27755 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28600 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29559 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27755)
                                                                        mem[mem[64] + 100] = _28600
                                                                        _29560 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29560 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29560 + 36 len 28]
                                                                        mem[64] = _29559 + 196
                                                                        mem[_29559 + 132] = 32
                                                                        mem[_29559 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34394 = mem[_29560]
                                                                        s = 0
                                                                        while s < _34394:
                                                                            mem[s + _29559 + 196] = mem[s + _29560 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34394) > _34394:
                                                                            mem[_34394 + _29559 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29559 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29559 + 200 len _34394 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29559 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29559 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29559 + 264] = mem[idx + _29559 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29559 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29559 + ceil32(return_data.size) + 197
                                                                            mem[_29559 + 196] = return_data.size
                                                                            mem[_29559 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29559 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29559 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29559 + ceil32(return_data.size) + 265] = mem[idx + _29559 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29559 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29559 + 228] == bool(mem[_29559 + 228])
                                                                                if not mem[_29559 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25876 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26956 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26956:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25876 + 64] = (32 * _26956) + 160
                                                                _45900 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25876 + (32 * _26956) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25876 + (32 * _26956) + 192 len 32 * _45900] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45900]
                                                                mem[_25876 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25876 + (32 * _26956) + (32 * _45900) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                mem[(2 * ceil32(return_data.size)) + 288] = 0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27754 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27754] = return_data.size
                                                                            mem[_27754 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25873 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26952 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26952:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25873 + 64] = (32 * _26952) + 160
                                                                    _45898 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25873 + (32 * _26952) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25873 + (32 * _26952) + 192 len 32 * _45898] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45898]
                                                                    mem[_25873 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25873 + (32 * _26952) + (32 * _45898) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27752 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28595 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29554 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27752)
                                                                            mem[mem[64] + 100] = _28595
                                                                            _29555 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29555 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29555 + 36 len 28]
                                                                            mem[64] = _29554 + 196
                                                                            mem[_29554 + 132] = 32
                                                                            mem[_29554 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34384 = mem[_29555]
                                                                            s = 0
                                                                            while s < _34384:
                                                                                mem[s + _29554 + 196] = mem[s + _29555 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34384) > _34384:
                                                                                mem[_34384 + _29554 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29554 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29554 + 200 len _34384 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29554 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29554 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29554 + 264] = mem[idx + _29554 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29554 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29554 + ceil32(return_data.size) + 197
                                                                                mem[_29554 + 196] = return_data.size
                                                                                mem[_29554 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29554 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29554 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29554 + ceil32(return_data.size) + 265] = mem[idx + _29554 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29554 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29554 + 228] == bool(mem[_29554 + 228])
                                                                                    if not mem[_29554 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25871 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26950 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26950:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25871 + 64] = (32 * _26950) + 160
                                                                    _45895 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25871 + (32 * _26950) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25871 + (32 * _26950) + 192 len 32 * _45895] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45895]
                                                                    mem[_25871 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25871 + (32 * _26950) + (32 * _45895) + -mem[64] + 192]
                                                    else:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 > -1:
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27763 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27763] = return_data.size
                                                                        mem[_27763 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25888 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26970 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26970:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25888 + 64] = (32 * _26970) + 160
                                                                _45913 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25888 + (32 * _26970) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25888 + (32 * _26970) + 192 len 32 * _45913] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45913]
                                                                mem[_25888 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25888 + (32 * _26970) + (32 * _45913) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27761 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28610 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29569 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27761)
                                                                        mem[mem[64] + 100] = _28610
                                                                        _29570 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29570 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29570 + 36 len 28]
                                                                        mem[64] = _29569 + 196
                                                                        mem[_29569 + 132] = 32
                                                                        mem[_29569 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34414 = mem[_29570]
                                                                        s = 0
                                                                        while s < _34414:
                                                                            mem[s + _29569 + 196] = mem[s + _29570 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34414) > _34414:
                                                                            mem[_34414 + _29569 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29569 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29569 + 200 len _34414 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29569 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29569 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29569 + 264] = mem[idx + _29569 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29569 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29569 + ceil32(return_data.size) + 197
                                                                            mem[_29569 + 196] = return_data.size
                                                                            mem[_29569 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29569 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29569 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29569 + ceil32(return_data.size) + 265] = mem[idx + _29569 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29569 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29569 + 228] == bool(mem[_29569 + 228])
                                                                                if not mem[_29569 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25886 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26968 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26968:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25886 + 64] = (32 * _26968) + 160
                                                                _45910 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25886 + (32 * _26968) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25886 + (32 * _26968) + 192 len 32 * _45910] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45910]
                                                                mem[_25886 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25886 + (32 * _26968) + (32 * _45910) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                if sub_57ba1b20[arg1].field_0 > -1:
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                mem[(2 * ceil32(return_data.size)) + 288] = 0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27760 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27760] = return_data.size
                                                                            mem[_27760 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25883 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26964 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26964:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25883 + 64] = (32 * _26964) + 160
                                                                    _45908 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25883 + (32 * _26964) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25883 + (32 * _26964) + 192 len 32 * _45908] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45908]
                                                                    mem[_25883 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25883 + (32 * _26964) + (32 * _45908) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27758 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28605 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29564 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27758)
                                                                            mem[mem[64] + 100] = _28605
                                                                            _29565 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29565 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29565 + 36 len 28]
                                                                            mem[64] = _29564 + 196
                                                                            mem[_29564 + 132] = 32
                                                                            mem[_29564 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34404 = mem[_29565]
                                                                            s = 0
                                                                            while s < _34404:
                                                                                mem[s + _29564 + 196] = mem[s + _29565 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34404) > _34404:
                                                                                mem[_34404 + _29564 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29564 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29564 + 200 len _34404 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29564 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29564 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29564 + 264] = mem[idx + _29564 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29564 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29564 + ceil32(return_data.size) + 197
                                                                                mem[_29564 + 196] = return_data.size
                                                                                mem[_29564 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29564 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29564 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29564 + ceil32(return_data.size) + 265] = mem[idx + _29564 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29564 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29564 + 228] == bool(mem[_29564 + 228])
                                                                                    if not mem[_29564 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25881 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26962 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26962:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25881 + 64] = (32 * _26962) + 160
                                                                    _45905 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25881 + (32 * _26962) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25881 + (32 * _26962) + 192 len 32 * _45905] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45905]
                                                                    mem[_25881 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25881 + (32 * _26962) + (32 * _45905) + -mem[64] + 192]
                                                    require ext_code.size(stor107)
                                                    call stor107.0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    sub_57ba1b20[arg1].field_928 = 0
                                                    emit 0xcc45266b: sub_57ba1b20[arg1].field_0, 0, 0, sub_57ba1b20[arg1].field_0, sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                                else:
                                                    if sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / sub_57ba1b20[arg1].field_0 != sub_57ba1b20[arg1].field_256:
                                                        revert with 0, 'arithmetic error'
                                                    if sub_57ba1b20[arg1].field_0 < 0:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_0 < sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                        revert with 0, 17
                                                    if sub_b24fea7b[stor108[arg1]] > -1:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27751 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27751] = return_data.size
                                                                        mem[_27751 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25868 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26946 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26946:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25868 + 64] = (32 * _26946) + 160
                                                                _45893 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25868 + (32 * _26946) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25868 + (32 * _26946) + 192 len 32 * _45893] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45893]
                                                                mem[_25868 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25868 + (32 * _26946) + (32 * _45893) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27749 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28590 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29549 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27749)
                                                                        mem[mem[64] + 100] = _28590
                                                                        _29550 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29550 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29550 + 36 len 28]
                                                                        mem[64] = _29549 + 196
                                                                        mem[_29549 + 132] = 32
                                                                        mem[_29549 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34374 = mem[_29550]
                                                                        s = 0
                                                                        while s < _34374:
                                                                            mem[s + _29549 + 196] = mem[s + _29550 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34374) > _34374:
                                                                            mem[_34374 + _29549 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29549 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29549 + 200 len _34374 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29549 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29549 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29549 + 264] = mem[idx + _29549 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29549 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29549 + ceil32(return_data.size) + 197
                                                                            mem[_29549 + 196] = return_data.size
                                                                            mem[_29549 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29549 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29549 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29549 + ceil32(return_data.size) + 265] = mem[idx + _29549 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29549 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29549 + 228] == bool(mem[_29549 + 228])
                                                                                if not mem[_29549 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25866 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26944 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26944:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25866 + 64] = (32 * _26944) + 160
                                                                _45890 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25866 + (32 * _26944) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25866 + (32 * _26944) + 192 len 32 * _45890] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45890]
                                                                mem[_25866 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25866 + (32 * _26944) + (32 * _45890) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                if sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                mem[(2 * ceil32(return_data.size)) + 288] = 0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27748 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27748] = return_data.size
                                                                            mem[_27748 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25863 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26940 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26940:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25863 + 64] = (32 * _26940) + 160
                                                                    _45888 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25863 + (32 * _26940) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25863 + (32 * _26940) + 192 len 32 * _45888] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45888]
                                                                    mem[_25863 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25863 + (32 * _26940) + (32 * _45888) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27746 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28585 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29544 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27746)
                                                                            mem[mem[64] + 100] = _28585
                                                                            _29545 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29545 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29545 + 36 len 28]
                                                                            mem[64] = _29544 + 196
                                                                            mem[_29544 + 132] = 32
                                                                            mem[_29544 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34364 = mem[_29545]
                                                                            s = 0
                                                                            while s < _34364:
                                                                                mem[s + _29544 + 196] = mem[s + _29545 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34364) > _34364:
                                                                                mem[_34364 + _29544 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29544 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29544 + 200 len _34364 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29544 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29544 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29544 + 264] = mem[idx + _29544 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29544 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29544 + ceil32(return_data.size) + 197
                                                                                mem[_29544 + 196] = return_data.size
                                                                                mem[_29544 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29544 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29544 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29544 + ceil32(return_data.size) + 265] = mem[idx + _29544 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29544 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29544 + 228] == bool(mem[_29544 + 228])
                                                                                    if not mem[_29544 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25861 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26938 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26938:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25861 + 64] = (32 * _26938) + 160
                                                                    _45885 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25861 + (32 * _26938) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25861 + (32 * _26938) + 192 len 32 * _45885] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45885]
                                                                    mem[_25861 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25861 + (32 * _26938) + (32 * _45885) + -mem[64] + 192]
                                                    else:
                                                        if not sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                            if not sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                                mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                                mem[64] = (2 * ceil32(return_data.size)) + 256
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27739 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27739] = return_data.size
                                                                            mem[_27739 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25848 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26922 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26922:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25848 + 64] = (32 * _26922) + 160
                                                                    _45873 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25848 + (32 * _26922) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25848 + (32 * _26922) + 192 len 32 * _45873] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45873]
                                                                    mem[_25848 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25848 + (32 * _26922) + (32 * _45873) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27737 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                                revert with 0, 50
                                                                            _28570 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                            _29529 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27737)
                                                                            mem[mem[64] + 100] = _28570
                                                                            _29530 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29530 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29530 + 36 len 28]
                                                                            mem[64] = _29529 + 196
                                                                            mem[_29529 + 132] = 32
                                                                            mem[_29529 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34334 = mem[_29530]
                                                                            s = 0
                                                                            while s < _34334:
                                                                                mem[s + _29529 + 196] = mem[s + _29530 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34334) > _34334:
                                                                                mem[_34334 + _29529 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29529 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29529 + 200 len _34334 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29529 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29529 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29529 + 264] = mem[idx + _29529 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29529 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29529 + ceil32(return_data.size) + 197
                                                                                mem[_29529 + 196] = return_data.size
                                                                                mem[_29529 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29529 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29529 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29529 + ceil32(return_data.size) + 265] = mem[idx + _29529 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29529 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29529 + 228] == bool(mem[_29529 + 228])
                                                                                    if not mem[_29529 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25846 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26920 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26920:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25846 + 64] = (32 * _26920) + 160
                                                                    _45870 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25846 + (32 * _26920) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25846 + (32 * _26920) + 192 len 32 * _45870] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45870]
                                                                    mem[_25846 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25846 + (32 * _26920) + (32 * _45870) + -mem[64] + 192]
                                                            else:
                                                                if 1 == sub_764d55f7[arg1]:
                                                                    mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                    mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                    mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                    mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                    mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                    if 0 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                        revert with 0, 17
                                                                    mem[(2 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                                        revert with 0, 'pay: token addr not exists'
                                                                    if not sub_764d55f7[arg1]:
                                                                        idx = 0
                                                                        s = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                               value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                                 gas gas_remaining wei
                                                                            if return_data.size:
                                                                                _27736 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                mem[_27736] = return_data.size
                                                                                mem[_27736 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                revert with 0, 'pays:transfer failed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            s = ext_call.success
                                                                            continue 
                                                                        _25843 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26916 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (2 * ceil32(return_data.size)) + 160
                                                                        while idx < _26916:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_25843 + 64] = (32 * _26916) + 160
                                                                        _45868 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25843 + (32 * _26916) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25843 + (32 * _26916) + 192 len 32 * _45868] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45868]
                                                                        mem[_25843 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _25843 + (32 * _26916) + (32 * _45868) + -mem[64] + 192]
                                                                    else:
                                                                        mem[0] = sub_764d55f7[arg1]
                                                                        mem[32] = 109
                                                                        idx = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                    revert with 0, 50
                                                                                _27734 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                    revert with 0, 50
                                                                                _28565 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                                _29524 = mem[64]
                                                                                mem[mem[64] + 36] = msg.sender
                                                                                mem[mem[64] + 68] = address(_27734)
                                                                                mem[mem[64] + 100] = _28565
                                                                                _29525 = mem[64]
                                                                                mem[mem[64]] = 100
                                                                                mem[64] = mem[64] + 132
                                                                                mem[_29525 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29525 + 36 len 28]
                                                                                mem[64] = _29524 + 196
                                                                                mem[_29524 + 132] = 32
                                                                                mem[_29524 + 164] = 'SafeERC20: low-level call failed'
                                                                                if eth.balance(this.address) < 0:
                                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                    revert with 0, 'Address: call to non-contract'
                                                                                _34324 = mem[_29525]
                                                                                s = 0
                                                                                while s < _34324:
                                                                                    mem[s + _29524 + 196] = mem[s + _29525 + 32]
                                                                                    s = s + 32
                                                                                    continue 
                                                                                if ceil32(_34324) > _34324:
                                                                                    mem[_34324 + _29524 + 196] = 0
                                                                                call sub_6aafcaa9[stor108[arg1]].mem[_29524 + 196 len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[_29524 + 200 len _34324 - 4]
                                                                                if not return_data.size:
                                                                                    if not ext_call.success:
                                                                                        if mem[96]:
                                                                                            revert with memory
                                                                                              from 128
                                                                                               len mem[96]
                                                                                        mem[_29524 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29524 + 200] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29524 + 264] = mem[idx + _29524 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29524 + 264]
                                                                                    if mem[96]:
                                                                                        require mem[96] >= 32
                                                                                        require mem[128] == bool(mem[128])
                                                                                        if not mem[128]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                                else:
                                                                                    mem[64] = _29524 + ceil32(return_data.size) + 197
                                                                                    mem[_29524 + 196] = return_data.size
                                                                                    mem[_29524 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                    if not ext_call.success:
                                                                                        if return_data.size:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        mem[_29524 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29524 + ceil32(return_data.size) + 201] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29524 + ceil32(return_data.size) + 265] = mem[idx + _29524 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29524 + ceil32(return_data.size) + 265]
                                                                                    if return_data.size:
                                                                                        require return_data.size >= 32
                                                                                        require mem[_29524 + 228] == bool(mem[_29524 + 228])
                                                                                        if not mem[_29524 + 228]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            continue 
                                                                        _25841 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26914 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (2 * ceil32(return_data.size)) + 160
                                                                        while idx < _26914:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_25841 + 64] = (32 * _26914) + 160
                                                                        _45865 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25841 + (32 * _26914) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25841 + (32 * _26914) + 192 len 32 * _45865] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45865]
                                                                        mem[_25841 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _25841 + (32 * _26914) + (32 * _45865) + -mem[64] + 192]
                                                        else:
                                                            if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] += sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                            if not sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                                mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                                mem[64] = (2 * ceil32(return_data.size)) + 256
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27745 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27745] = return_data.size
                                                                            mem[_27745 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25858 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26934 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26934:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25858 + 64] = (32 * _26934) + 160
                                                                    _45883 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25858 + (32 * _26934) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25858 + (32 * _26934) + 192 len 32 * _45883] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45883]
                                                                    mem[_25858 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25858 + (32 * _26934) + (32 * _45883) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27743 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                                revert with 0, 50
                                                                            _28580 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                            _29539 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27743)
                                                                            mem[mem[64] + 100] = _28580
                                                                            _29540 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29540 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29540 + 36 len 28]
                                                                            mem[64] = _29539 + 196
                                                                            mem[_29539 + 132] = 32
                                                                            mem[_29539 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34354 = mem[_29540]
                                                                            s = 0
                                                                            while s < _34354:
                                                                                mem[s + _29539 + 196] = mem[s + _29540 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34354) > _34354:
                                                                                mem[_34354 + _29539 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29539 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29539 + 200 len _34354 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29539 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29539 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29539 + 264] = mem[idx + _29539 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29539 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29539 + ceil32(return_data.size) + 197
                                                                                mem[_29539 + 196] = return_data.size
                                                                                mem[_29539 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29539 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29539 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29539 + ceil32(return_data.size) + 265] = mem[idx + _29539 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29539 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29539 + 228] == bool(mem[_29539 + 228])
                                                                                    if not mem[_29539 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25856 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26932 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26932:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25856 + 64] = (32 * _26932) + 160
                                                                    _45880 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25856 + (32 * _26932) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25856 + (32 * _26932) + 192 len 32 * _45880] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45880]
                                                                    mem[_25856 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25856 + (32 * _26932) + (32 * _45880) + -mem[64] + 192]
                                                            else:
                                                                if 1 == sub_764d55f7[arg1]:
                                                                    mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                    mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                    mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                    mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                    mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                    if 0 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                        revert with 0, 17
                                                                    mem[(2 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                                        revert with 0, 'pay: token addr not exists'
                                                                    if not sub_764d55f7[arg1]:
                                                                        idx = 0
                                                                        s = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                               value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                                 gas gas_remaining wei
                                                                            if return_data.size:
                                                                                _27742 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                mem[_27742] = return_data.size
                                                                                mem[_27742 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                revert with 0, 'pays:transfer failed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            s = ext_call.success
                                                                            continue 
                                                                        _25853 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26928 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (2 * ceil32(return_data.size)) + 160
                                                                        while idx < _26928:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_25853 + 64] = (32 * _26928) + 160
                                                                        _45878 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25853 + (32 * _26928) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25853 + (32 * _26928) + 192 len 32 * _45878] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45878]
                                                                        mem[_25853 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _25853 + (32 * _26928) + (32 * _45878) + -mem[64] + 192]
                                                                    else:
                                                                        mem[0] = sub_764d55f7[arg1]
                                                                        mem[32] = 109
                                                                        idx = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                    revert with 0, 50
                                                                                _27740 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                    revert with 0, 50
                                                                                _28575 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                                _29534 = mem[64]
                                                                                mem[mem[64] + 36] = msg.sender
                                                                                mem[mem[64] + 68] = address(_27740)
                                                                                mem[mem[64] + 100] = _28575
                                                                                _29535 = mem[64]
                                                                                mem[mem[64]] = 100
                                                                                mem[64] = mem[64] + 132
                                                                                mem[_29535 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29535 + 36 len 28]
                                                                                mem[64] = _29534 + 196
                                                                                mem[_29534 + 132] = 32
                                                                                mem[_29534 + 164] = 'SafeERC20: low-level call failed'
                                                                                if eth.balance(this.address) < 0:
                                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                    revert with 0, 'Address: call to non-contract'
                                                                                _34344 = mem[_29535]
                                                                                s = 0
                                                                                while s < _34344:
                                                                                    mem[s + _29534 + 196] = mem[s + _29535 + 32]
                                                                                    s = s + 32
                                                                                    continue 
                                                                                if ceil32(_34344) > _34344:
                                                                                    mem[_34344 + _29534 + 196] = 0
                                                                                call sub_6aafcaa9[stor108[arg1]].mem[_29534 + 196 len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[_29534 + 200 len _34344 - 4]
                                                                                if not return_data.size:
                                                                                    if not ext_call.success:
                                                                                        if mem[96]:
                                                                                            revert with memory
                                                                                              from 128
                                                                                               len mem[96]
                                                                                        mem[_29534 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29534 + 200] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29534 + 264] = mem[idx + _29534 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29534 + 264]
                                                                                    if mem[96]:
                                                                                        require mem[96] >= 32
                                                                                        require mem[128] == bool(mem[128])
                                                                                        if not mem[128]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                                else:
                                                                                    mem[64] = _29534 + ceil32(return_data.size) + 197
                                                                                    mem[_29534 + 196] = return_data.size
                                                                                    mem[_29534 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                    if not ext_call.success:
                                                                                        if return_data.size:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        mem[_29534 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29534 + ceil32(return_data.size) + 201] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29534 + ceil32(return_data.size) + 265] = mem[idx + _29534 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29534 + ceil32(return_data.size) + 265]
                                                                                    if return_data.size:
                                                                                        require return_data.size >= 32
                                                                                        require mem[_29534 + 228] == bool(mem[_29534 + 228])
                                                                                        if not mem[_29534 + 228]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            continue 
                                                                        _25851 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26926 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (2 * ceil32(return_data.size)) + 160
                                                                        while idx < _26926:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_25851 + 64] = (32 * _26926) + 160
                                                                        _45875 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25851 + (32 * _26926) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25851 + (32 * _26926) + 192 len 32 * _45875] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45875]
                                                                        mem[_25851 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _25851 + (32 * _26926) + (32 * _45875) + -mem[64] + 192]
                                                    require ext_code.size(stor107)
                                                    call stor107.0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    sub_57ba1b20[arg1].field_928 = 0
                                                    emit 0xcc45266b: sub_57ba1b20[arg1].field_0, 0, sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100), sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                        else:
                                            if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / sub_57ba1b20[arg1].field_0 != sub_f65e6912:
                                                revert with 0, 'arithmetic error'
                                            if 100 < sub_f65e6912:
                                                revert with 0, 17
                                            if -sub_f65e6912 + 100 < sub_57ba1b20[arg1].field_256:
                                                if sub_57ba1b20[arg1].field_0 < sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100:
                                                    revert with 0, 17
                                                if sub_b24fea7b[stor108[arg1]] > !(sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                    revert with 0, 17
                                                sub_b24fea7b[stor108[arg1]] += sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                        mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                        mem[64] = (2 * ceil32(return_data.size)) + 256
                                                        mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                        if 0 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                            revert with 0, 17
                                                        mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                   value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27733 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27733] = return_data.size
                                                                    mem[_27733 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _25838 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26910 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _26910:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25838 + 64] = (32 * _26910) + 160
                                                            _45863 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_25838 + (32 * _26910) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_25838 + (32 * _26910) + 192 len 32 * _45863] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45863]
                                                            mem[_25838 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25838 + (32 * _26910) + (32 * _45863) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    _27731 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    _28560 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                    _29519 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27731)
                                                                    mem[mem[64] + 100] = _28560
                                                                    _29520 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29520 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29520 + 36 len 28]
                                                                    mem[64] = _29519 + 196
                                                                    mem[_29519 + 132] = 32
                                                                    mem[_29519 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _34314 = mem[_29520]
                                                                    s = 0
                                                                    while s < _34314:
                                                                        mem[s + _29519 + 196] = mem[s + _29520 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_34314) > _34314:
                                                                        mem[_34314 + _29519 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29519 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29519 + 200 len _34314 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29519 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29519 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29519 + 264] = mem[idx + _29519 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29519 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29519 + ceil32(return_data.size) + 197
                                                                        mem[_29519 + 196] = return_data.size
                                                                        mem[_29519 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29519 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29519 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29519 + ceil32(return_data.size) + 265] = mem[idx + _29519 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29519 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29519 + 228] == bool(mem[_29519 + 228])
                                                                            if not mem[_29519 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _25836 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _26908 = mem[(2 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (2 * ceil32(return_data.size)) + 160
                                                            while idx < _26908:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25836 + 64] = (32 * _26908) + 160
                                                            _45860 = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_25836 + (32 * _26908) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                            mem[_25836 + (32 * _26908) + 192 len 32 * _45860] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45860]
                                                            mem[_25836 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25836 + (32 * _26908) + (32 * _45860) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                            mem[64] = (2 * ceil32(return_data.size)) + 320
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if 0 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                            mem[(2 * ceil32(return_data.size)) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27730 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27730] = return_data.size
                                                                        mem[_27730 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25833 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26904 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26904:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25833 + 64] = (32 * _26904) + 160
                                                                _45858 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_25833 + (32 * _26904) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_25833 + (32 * _26904) + 192 len 32 * _45858] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45858]
                                                                mem[_25833 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25833 + (32 * _26904) + (32 * _45858) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27728 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        _28555 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                        _29514 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27728)
                                                                        mem[mem[64] + 100] = _28555
                                                                        _29515 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29515 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29515 + 36 len 28]
                                                                        mem[64] = _29514 + 196
                                                                        mem[_29514 + 132] = 32
                                                                        mem[_29514 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34304 = mem[_29515]
                                                                        s = 0
                                                                        while s < _34304:
                                                                            mem[s + _29514 + 196] = mem[s + _29515 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34304) > _34304:
                                                                            mem[_34304 + _29514 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29514 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29514 + 200 len _34304 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29514 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29514 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29514 + 264] = mem[idx + _29514 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29514 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29514 + ceil32(return_data.size) + 197
                                                                            mem[_29514 + 196] = return_data.size
                                                                            mem[_29514 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29514 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29514 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29514 + ceil32(return_data.size) + 265] = mem[idx + _29514 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29514 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29514 + 228] == bool(mem[_29514 + 228])
                                                                                if not mem[_29514 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25831 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26902 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26902:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25831 + 64] = (32 * _26902) + 160
                                                                _45855 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_25831 + (32 * _26902) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                mem[_25831 + (32 * _26902) + 192 len 32 * _45855] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45855]
                                                                mem[_25831 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25831 + (32 * _26902) + (32 * _45855) + -mem[64] + 192]
                                                else:
                                                    if not sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27721 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27721] = return_data.size
                                                                        mem[_27721 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25818 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26886 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26886:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25818 + 64] = (32 * _26886) + 160
                                                                _45843 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25818 + (32 * _26886) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25818 + (32 * _26886) + 192 len 32 * _45843] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45843]
                                                                mem[_25818 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25818 + (32 * _26886) + (32 * _45843) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27719 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28540 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29499 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27719)
                                                                        mem[mem[64] + 100] = _28540
                                                                        _29500 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29500 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29500 + 36 len 28]
                                                                        mem[64] = _29499 + 196
                                                                        mem[_29499 + 132] = 32
                                                                        mem[_29499 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34274 = mem[_29500]
                                                                        s = 0
                                                                        while s < _34274:
                                                                            mem[s + _29499 + 196] = mem[s + _29500 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34274) > _34274:
                                                                            mem[_34274 + _29499 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29499 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29499 + 200 len _34274 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29499 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29499 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29499 + 264] = mem[idx + _29499 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29499 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29499 + ceil32(return_data.size) + 197
                                                                            mem[_29499 + 196] = return_data.size
                                                                            mem[_29499 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29499 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29499 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29499 + ceil32(return_data.size) + 265] = mem[idx + _29499 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29499 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29499 + 228] == bool(mem[_29499 + 228])
                                                                                if not mem[_29499 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25816 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26884 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26884:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25816 + 64] = (32 * _26884) + 160
                                                                _45840 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25816 + (32 * _26884) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25816 + (32 * _26884) + 192 len 32 * _45840] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45840]
                                                                mem[_25816 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25816 + (32 * _26884) + (32 * _45840) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 256] = 0
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27718 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27718] = return_data.size
                                                                            mem[_27718 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25813 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26880 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26880:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25813 + 64] = (32 * _26880) + 160
                                                                    _45838 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25813 + (32 * _26880) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25813 + (32 * _26880) + 192 len 32 * _45838] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45838]
                                                                    mem[_25813 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25813 + (32 * _26880) + (32 * _45838) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27716 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28535 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29494 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27716)
                                                                            mem[mem[64] + 100] = _28535
                                                                            _29495 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29495 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29495 + 36 len 28]
                                                                            mem[64] = _29494 + 196
                                                                            mem[_29494 + 132] = 32
                                                                            mem[_29494 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34264 = mem[_29495]
                                                                            s = 0
                                                                            while s < _34264:
                                                                                mem[s + _29494 + 196] = mem[s + _29495 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34264) > _34264:
                                                                                mem[_34264 + _29494 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29494 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29494 + 200 len _34264 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29494 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29494 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29494 + 264] = mem[idx + _29494 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29494 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29494 + ceil32(return_data.size) + 197
                                                                                mem[_29494 + 196] = return_data.size
                                                                                mem[_29494 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29494 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29494 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29494 + ceil32(return_data.size) + 265] = mem[idx + _29494 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29494 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29494 + 228] == bool(mem[_29494 + 228])
                                                                                    if not mem[_29494 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25811 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26878 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26878:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25811 + 64] = (32 * _26878) + 160
                                                                    _45835 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25811 + (32 * _26878) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25811 + (32 * _26878) + 192 len 32 * _45835] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45835]
                                                                    mem[_25811 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25811 + (32 * _26878) + (32 * _45835) + -mem[64] + 192]
                                                    else:
                                                        if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                            revert with 0, 17
                                                        sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] = sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] + sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 224] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27727 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27727] = return_data.size
                                                                        mem[_27727 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25828 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26898 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26898:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25828 + 64] = (32 * _26898) + 160
                                                                _45853 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25828 + (32 * _26898) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25828 + (32 * _26898) + 192 len 32 * _45853] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45853]
                                                                mem[_25828 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25828 + (32 * _26898) + (32 * _45853) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27725 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28550 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29509 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27725)
                                                                        mem[mem[64] + 100] = _28550
                                                                        _29510 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29510 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29510 + 36 len 28]
                                                                        mem[64] = _29509 + 196
                                                                        mem[_29509 + 132] = 32
                                                                        mem[_29509 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34294 = mem[_29510]
                                                                        s = 0
                                                                        while s < _34294:
                                                                            mem[s + _29509 + 196] = mem[s + _29510 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34294) > _34294:
                                                                            mem[_34294 + _29509 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29509 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29509 + 200 len _34294 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29509 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29509 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29509 + 264] = mem[idx + _29509 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29509 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29509 + ceil32(return_data.size) + 197
                                                                            mem[_29509 + 196] = return_data.size
                                                                            mem[_29509 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29509 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29509 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29509 + ceil32(return_data.size) + 265] = mem[idx + _29509 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29509 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29509 + 228] == bool(mem[_29509 + 228])
                                                                                if not mem[_29509 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25826 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26896 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26896:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25826 + 64] = (32 * _26896) + 160
                                                                _45850 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25826 + (32 * _26896) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25826 + (32 * _26896) + 192 len 32 * _45850] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45850]
                                                                mem[_25826 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25826 + (32 * _26896) + (32 * _45850) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 256] = 0
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27724 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27724] = return_data.size
                                                                            mem[_27724 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26892 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26892:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _26892) + 160
                                                                    _45848 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _26892) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _26892) + 192 len 32 * _45848] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45848]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26892) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26892) + (32 * _45848) + 64]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27722 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28545 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29504 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27722)
                                                                            mem[mem[64] + 100] = _28545
                                                                            _29505 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29505 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29505 + 36 len 28]
                                                                            mem[64] = _29504 + 196
                                                                            mem[_29504 + 132] = 32
                                                                            mem[_29504 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34284 = mem[_29505]
                                                                            s = 0
                                                                            while s < _34284:
                                                                                mem[s + _29504 + 196] = mem[s + _29505 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34284) > _34284:
                                                                                mem[_34284 + _29504 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29504 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29504 + 200 len _34284 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29504 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29504 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29504 + 264] = mem[idx + _29504 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29504 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29504 + ceil32(return_data.size) + 197
                                                                                mem[_29504 + 196] = return_data.size
                                                                                mem[_29504 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29504 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29504 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29504 + ceil32(return_data.size) + 265] = mem[idx + _29504 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29504 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29504 + 228] == bool(mem[_29504 + 228])
                                                                                    if not mem[_29504 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25821 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26890 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26890:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25821 + 64] = (32 * _26890) + 160
                                                                    _45845 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25821 + (32 * _26890) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25821 + (32 * _26890) + 192 len 32 * _45845] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45845]
                                                                    mem[_25821 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25821 + (32 * _26890) + (32 * _45845) + -mem[64] + 192]
                                                require ext_code.size(stor107)
                                                call stor107.0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                sub_57ba1b20[arg1].field_928 = 0
                                                emit 0xcc45266b: sub_57ba1b20[arg1].field_0, sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100), 0, sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                            else:
                                                if sub_57ba1b20[arg1].field_256 > 100:
                                                    revert with 0, 'percent invalid'
                                                if not sub_57ba1b20[arg1].field_0:
                                                    if sub_57ba1b20[arg1].field_0 < sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) < 0:
                                                        revert with 0, 17
                                                    if sub_b24fea7b[stor108[arg1]] > !(sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                        revert with 0, 17
                                                    sub_b24fea7b[stor108[arg1]] += sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                    if sub_57ba1b20[arg1].field_768 != sub_57ba1b20[arg1].field_512:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27709 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27709] = return_data.size
                                                                        mem[_27709 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25798 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26862 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26862:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25798 + 64] = (32 * _26862) + 160
                                                                _45823 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25798 + (32 * _26862) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25798 + (32 * _26862) + 192 len 32 * _45823] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45823]
                                                                mem[_25798 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25798 + (32 * _26862) + (32 * _45823) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27707 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28520 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29479 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27707)
                                                                        mem[mem[64] + 100] = _28520
                                                                        _29480 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29480 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29480 + 36 len 28]
                                                                        mem[64] = _29479 + 196
                                                                        mem[_29479 + 132] = 32
                                                                        mem[_29479 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34234 = mem[_29480]
                                                                        s = 0
                                                                        while s < _34234:
                                                                            mem[s + _29479 + 196] = mem[s + _29480 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34234) > _34234:
                                                                            mem[_34234 + _29479 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29479 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29479 + 200 len _34234 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29479 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29479 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29479 + 264] = mem[idx + _29479 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29479 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29479 + ceil32(return_data.size) + 197
                                                                            mem[_29479 + 196] = return_data.size
                                                                            mem[_29479 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29479 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29479 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29479 + ceil32(return_data.size) + 265] = mem[idx + _29479 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29479 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29479 + 228] == bool(mem[_29479 + 228])
                                                                                if not mem[_29479 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25796 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26860 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26860:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25796 + 64] = (32 * _26860) + 160
                                                                _45820 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25796 + (32 * _26860) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25796 + (32 * _26860) + 192 len 32 * _45820] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45820]
                                                                mem[_25796 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25796 + (32 * _26860) + (32 * _45820) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > -1:
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27706 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27706] = return_data.size
                                                                            mem[_27706 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25793 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26856 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26856:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25793 + 64] = (32 * _26856) + 160
                                                                    _45818 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25793 + (32 * _26856) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25793 + (32 * _26856) + 192 len 32 * _45818] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45818]
                                                                    mem[_25793 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25793 + (32 * _26856) + (32 * _45818) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27704 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28515 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29474 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27704)
                                                                            mem[mem[64] + 100] = _28515
                                                                            _29475 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29475 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29475 + 36 len 28]
                                                                            mem[64] = _29474 + 196
                                                                            mem[_29474 + 132] = 32
                                                                            mem[_29474 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34224 = mem[_29475]
                                                                            s = 0
                                                                            while s < _34224:
                                                                                mem[s + _29474 + 196] = mem[s + _29475 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34224) > _34224:
                                                                                mem[_34224 + _29474 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29474 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29474 + 200 len _34224 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29474 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29474 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29474 + 264] = mem[idx + _29474 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29474 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29474 + ceil32(return_data.size) + 197
                                                                                mem[_29474 + 196] = return_data.size
                                                                                mem[_29474 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29474 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29474 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29474 + ceil32(return_data.size) + 265] = mem[idx + _29474 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29474 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29474 + 228] == bool(mem[_29474 + 228])
                                                                                    if not mem[_29474 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25791 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26854 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26854:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25791 + 64] = (32 * _26854) + 160
                                                                    _45815 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25791 + (32 * _26854) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25791 + (32 * _26854) + 192 len 32 * _45815] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45815]
                                                                    mem[_25791 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25791 + (32 * _26854) + (32 * _45815) + -mem[64] + 192]
                                                    else:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) > -1:
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27715 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27715] = return_data.size
                                                                        mem[_27715 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25808 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26874 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26874:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25808 + 64] = (32 * _26874) + 160
                                                                _45833 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25808 + (32 * _26874) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25808 + (32 * _26874) + 192 len 32 * _45833] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45833]
                                                                mem[_25808 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25808 + (32 * _26874) + (32 * _45833) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27713 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28530 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29489 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27713)
                                                                        mem[mem[64] + 100] = _28530
                                                                        _29490 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29490 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29490 + 36 len 28]
                                                                        mem[64] = _29489 + 196
                                                                        mem[_29489 + 132] = 32
                                                                        mem[_29489 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34254 = mem[_29490]
                                                                        s = 0
                                                                        while s < _34254:
                                                                            mem[s + _29489 + 196] = mem[s + _29490 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34254) > _34254:
                                                                            mem[_34254 + _29489 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29489 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29489 + 200 len _34254 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29489 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29489 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29489 + 264] = mem[idx + _29489 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29489 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29489 + ceil32(return_data.size) + 197
                                                                            mem[_29489 + 196] = return_data.size
                                                                            mem[_29489 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29489 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29489 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29489 + ceil32(return_data.size) + 265] = mem[idx + _29489 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29489 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29489 + 228] == bool(mem[_29489 + 228])
                                                                                if not mem[_29489 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25806 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26872 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26872:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25806 + 64] = (32 * _26872) + 160
                                                                _45830 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25806 + (32 * _26872) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25806 + (32 * _26872) + 192 len 32 * _45830] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45830]
                                                                mem[_25806 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25806 + (32 * _26872) + (32 * _45830) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) > -1:
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                mem[(2 * ceil32(return_data.size)) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27712 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27712] = return_data.size
                                                                            mem[_27712 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25803 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26868 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26868:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25803 + 64] = (32 * _26868) + 160
                                                                    _45828 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25803 + (32 * _26868) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25803 + (32 * _26868) + 192 len 32 * _45828] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45828]
                                                                    mem[_25803 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25803 + (32 * _26868) + (32 * _45828) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27710 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28525 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29484 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27710)
                                                                            mem[mem[64] + 100] = _28525
                                                                            _29485 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29485 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29485 + 36 len 28]
                                                                            mem[64] = _29484 + 196
                                                                            mem[_29484 + 132] = 32
                                                                            mem[_29484 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34244 = mem[_29485]
                                                                            s = 0
                                                                            while s < _34244:
                                                                                mem[s + _29484 + 196] = mem[s + _29485 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34244) > _34244:
                                                                                mem[_34244 + _29484 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29484 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29484 + 200 len _34244 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29484 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29484 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29484 + 264] = mem[idx + _29484 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29484 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29484 + ceil32(return_data.size) + 197
                                                                                mem[_29484 + 196] = return_data.size
                                                                                mem[_29484 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29484 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29484 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29484 + ceil32(return_data.size) + 265] = mem[idx + _29484 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29484 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29484 + 228] == bool(mem[_29484 + 228])
                                                                                    if not mem[_29484 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25801 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26866 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26866:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25801 + 64] = (32 * _26866) + 160
                                                                    _45825 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25801 + (32 * _26866) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25801 + (32 * _26866) + 192 len 32 * _45825] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45825]
                                                                    mem[_25801 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25801 + (32 * _26866) + (32 * _45825) + -mem[64] + 192]
                                                    require ext_code.size(stor107)
                                                    call stor107.0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    sub_57ba1b20[arg1].field_928 = 0
                                                    emit 0xcc45266b: sub_57ba1b20[arg1].field_0, sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100, 0, sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100), sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                                else:
                                                    if sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / sub_57ba1b20[arg1].field_0 != sub_57ba1b20[arg1].field_256:
                                                        revert with 0, 'arithmetic error'
                                                    if sub_57ba1b20[arg1].field_0 < sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) < sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                        revert with 0, 17
                                                    if sub_b24fea7b[stor108[arg1]] > !(sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                        revert with 0, 17
                                                    sub_b24fea7b[stor108[arg1]] += sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                    if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (2 * ceil32(return_data.size)) + 256
                                                            mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27703 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27703] = return_data.size
                                                                        mem[_27703 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25788 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26850 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26850:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25788 + 64] = (32 * _26850) + 160
                                                                _45813 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25788 + (32 * _26850) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[_25788 + (32 * _26850) + 192 len 32 * _45813] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45813]
                                                                mem[_25788 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25788 + (32 * _26850) + (32 * _45813) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27701 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28510 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                        _29469 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27701)
                                                                        mem[mem[64] + 100] = _28510
                                                                        _29470 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29470 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29470 + 36 len 28]
                                                                        mem[64] = _29469 + 196
                                                                        mem[_29469 + 132] = 32
                                                                        mem[_29469 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34214 = mem[_29470]
                                                                        s = 0
                                                                        while s < _34214:
                                                                            mem[s + _29469 + 196] = mem[s + _29470 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34214) > _34214:
                                                                            mem[_34214 + _29469 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29469 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29469 + 200 len _34214 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29469 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29469 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29469 + 264] = mem[idx + _29469 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29469 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29469 + ceil32(return_data.size) + 197
                                                                            mem[_29469 + 196] = return_data.size
                                                                            mem[_29469 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29469 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29469 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29469 + ceil32(return_data.size) + 265] = mem[idx + _29469 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29469 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29469 + 228] == bool(mem[_29469 + 228])
                                                                                if not mem[_29469 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _26848 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (2 * ceil32(return_data.size)) + 160
                                                                while idx < _26848:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _26848) + 160
                                                                _45810 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[mem[64] + (32 * _26848) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                mem[mem[64] + (32 * _26848) + 192 len 32 * _45810] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45810]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26848) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26848) + (32 * _45810) + 64]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                    revert with 0, 17
                                                                mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                mem[(2 * ceil32(return_data.size)) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27700 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27700] = return_data.size
                                                                            mem[_27700 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25783 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26844 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26844:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25783 + 64] = (32 * _26844) + 160
                                                                    _45808 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25783 + (32 * _26844) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[_25783 + (32 * _26844) + 192 len 32 * _45808] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45808]
                                                                    mem[_25783 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25783 + (32 * _26844) + (32 * _45808) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27698 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28505 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                            _29464 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27698)
                                                                            mem[mem[64] + 100] = _28505
                                                                            _29465 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29465 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29465 + 36 len 28]
                                                                            mem[64] = _29464 + 196
                                                                            mem[_29464 + 132] = 32
                                                                            mem[_29464 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34204 = mem[_29465]
                                                                            s = 0
                                                                            while s < _34204:
                                                                                mem[s + _29464 + 196] = mem[s + _29465 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34204) > _34204:
                                                                                mem[_34204 + _29464 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29464 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29464 + 200 len _34204 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29464 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29464 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29464 + 264] = mem[idx + _29464 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29464 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29464 + ceil32(return_data.size) + 197
                                                                                mem[_29464 + 196] = return_data.size
                                                                                mem[_29464 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29464 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29464 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29464 + ceil32(return_data.size) + 265] = mem[idx + _29464 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29464 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29464 + 228] == bool(mem[_29464 + 228])
                                                                                    if not mem[_29464 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26842 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26842:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _26842) + 160
                                                                    _45805 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _26842) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _26842) + 192 len 32 * _45805] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45805]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26842) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26842) + (32 * _45805) + 64]
                                                    else:
                                                        if not sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                            if not sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                                mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                                mem[64] = (2 * ceil32(return_data.size)) + 256
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27691 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27691] = return_data.size
                                                                            mem[_27691 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26826 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26826:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _26826) + 160
                                                                    _45793 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[mem[64] + (32 * _26826) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[mem[64] + (32 * _26826) + 192 len 32 * _45793] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45793]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _26826) + 160, msg.sender, mem[mem[64] + 128 len (32 * _26826) + (32 * _45793) + 64]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27689 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                                revert with 0, 50
                                                                            _28490 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                            _29449 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27689)
                                                                            mem[mem[64] + 100] = _28490
                                                                            _29450 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29450 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29450 + 36 len 28]
                                                                            mem[64] = _29449 + 196
                                                                            mem[_29449 + 132] = 32
                                                                            mem[_29449 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34174 = mem[_29450]
                                                                            s = 0
                                                                            while s < _34174:
                                                                                mem[s + _29449 + 196] = mem[s + _29450 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34174) > _34174:
                                                                                mem[_34174 + _29449 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29449 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29449 + 200 len _34174 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29449 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29449 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29449 + 264] = mem[idx + _29449 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29449 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29449 + ceil32(return_data.size) + 197
                                                                                mem[_29449 + 196] = return_data.size
                                                                                mem[_29449 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29449 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29449 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29449 + ceil32(return_data.size) + 265] = mem[idx + _29449 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29449 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29449 + 228] == bool(mem[_29449 + 228])
                                                                                    if not mem[_29449 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25766 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26824 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26824:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25766 + 64] = (32 * _26824) + 160
                                                                    _45790 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25766 + (32 * _26824) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25766 + (32 * _26824) + 192 len 32 * _45790] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45790]
                                                                    mem[_25766 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25766 + (32 * _26824) + (32 * _45790) + -mem[64] + 192]
                                                            else:
                                                                if 1 == sub_764d55f7[arg1]:
                                                                    mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                    mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                    mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                    mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                    mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                    if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                        revert with 0, 17
                                                                    mem[(2 * ceil32(return_data.size)) + 288] = (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) + (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                                        revert with 0, 'pay: token addr not exists'
                                                                    if not sub_764d55f7[arg1]:
                                                                        idx = 0
                                                                        s = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                               value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                                 gas gas_remaining wei
                                                                            if return_data.size:
                                                                                _27688 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                mem[_27688] = return_data.size
                                                                                mem[_27688 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                revert with 0, 'pays:transfer failed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            s = ext_call.success
                                                                            continue 
                                                                        _25763 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26820 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (2 * ceil32(return_data.size)) + 160
                                                                        while idx < _26820:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_25763 + 64] = (32 * _26820) + 160
                                                                        _45788 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25763 + (32 * _26820) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25763 + (32 * _26820) + 192 len 32 * _45788] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45788]
                                                                        mem[_25763 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _25763 + (32 * _26820) + (32 * _45788) + -mem[64] + 192]
                                                                    else:
                                                                        mem[0] = sub_764d55f7[arg1]
                                                                        mem[32] = 109
                                                                        idx = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                    revert with 0, 50
                                                                                _27686 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                    revert with 0, 50
                                                                                _28485 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                                _29444 = mem[64]
                                                                                mem[mem[64] + 36] = msg.sender
                                                                                mem[mem[64] + 68] = address(_27686)
                                                                                mem[mem[64] + 100] = _28485
                                                                                _29445 = mem[64]
                                                                                mem[mem[64]] = 100
                                                                                mem[64] = mem[64] + 132
                                                                                mem[_29445 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29445 + 36 len 28]
                                                                                mem[64] = _29444 + 196
                                                                                mem[_29444 + 132] = 32
                                                                                mem[_29444 + 164] = 'SafeERC20: low-level call failed'
                                                                                if eth.balance(this.address) < 0:
                                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                    revert with 0, 'Address: call to non-contract'
                                                                                _34164 = mem[_29445]
                                                                                s = 0
                                                                                while s < _34164:
                                                                                    mem[s + _29444 + 196] = mem[s + _29445 + 32]
                                                                                    s = s + 32
                                                                                    continue 
                                                                                if ceil32(_34164) > _34164:
                                                                                    mem[_34164 + _29444 + 196] = 0
                                                                                call sub_6aafcaa9[stor108[arg1]].mem[_29444 + 196 len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[_29444 + 200 len _34164 - 4]
                                                                                if not return_data.size:
                                                                                    if not ext_call.success:
                                                                                        if mem[96]:
                                                                                            revert with memory
                                                                                              from 128
                                                                                               len mem[96]
                                                                                        mem[_29444 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29444 + 200] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29444 + 264] = mem[idx + _29444 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29444 + 264]
                                                                                    if mem[96]:
                                                                                        require mem[96] >= 32
                                                                                        require mem[128] == bool(mem[128])
                                                                                        if not mem[128]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                                else:
                                                                                    mem[64] = _29444 + ceil32(return_data.size) + 197
                                                                                    mem[_29444 + 196] = return_data.size
                                                                                    mem[_29444 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                    if not ext_call.success:
                                                                                        if return_data.size:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        mem[_29444 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29444 + ceil32(return_data.size) + 201] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29444 + ceil32(return_data.size) + 265] = mem[idx + _29444 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29444 + ceil32(return_data.size) + 265]
                                                                                    if return_data.size:
                                                                                        require return_data.size >= 32
                                                                                        require mem[_29444 + 228] == bool(mem[_29444 + 228])
                                                                                        if not mem[_29444 + 228]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            continue 
                                                                        _25761 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26818 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (2 * ceil32(return_data.size)) + 160
                                                                        while idx < _26818:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_25761 + 64] = (32 * _26818) + 160
                                                                        _45785 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25761 + (32 * _26818) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25761 + (32 * _26818) + 192 len 32 * _45785] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45785]
                                                                        mem[_25761 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _25761 + (32 * _26818) + (32 * _45785) + -mem[64] + 192]
                                                        else:
                                                            if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] += sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                            if not sub_764d55f7[arg1]:
                                                                mem[(2 * ceil32(return_data.size)) + 128] = 1
                                                                mem[(2 * ceil32(return_data.size)) + 192] = 1
                                                                mem[64] = (2 * ceil32(return_data.size)) + 256
                                                                mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(2 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27697 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27697] = return_data.size
                                                                            mem[_27697 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25778 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26838 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26838:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25778 + 64] = (32 * _26838) + 160
                                                                    _45803 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25778 + (32 * _26838) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25778 + (32 * _26838) + 192 len 32 * _45803] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45803]
                                                                    mem[_25778 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25778 + (32 * _26838) + (32 * _45803) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27695 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 192]:
                                                                                revert with 0, 50
                                                                            _28500 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 224]
                                                                            _29459 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27695)
                                                                            mem[mem[64] + 100] = _28500
                                                                            _29460 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29460 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29460 + 36 len 28]
                                                                            mem[64] = _29459 + 196
                                                                            mem[_29459 + 132] = 32
                                                                            mem[_29459 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34194 = mem[_29460]
                                                                            s = 0
                                                                            while s < _34194:
                                                                                mem[s + _29459 + 196] = mem[s + _29460 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34194) > _34194:
                                                                                mem[_34194 + _29459 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29459 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29459 + 200 len _34194 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29459 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29459 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29459 + 264] = mem[idx + _29459 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29459 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29459 + ceil32(return_data.size) + 197
                                                                                mem[_29459 + 196] = return_data.size
                                                                                mem[_29459 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29459 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29459 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29459 + ceil32(return_data.size) + 265] = mem[idx + _29459 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29459 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29459 + 228] == bool(mem[_29459 + 228])
                                                                                    if not mem[_29459 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25776 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _26836 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (2 * ceil32(return_data.size)) + 160
                                                                    while idx < _26836:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25776 + 64] = (32 * _26836) + 160
                                                                    _45800 = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25776 + (32 * _26836) + 160] = mem[(2 * ceil32(return_data.size)) + 192]
                                                                    mem[_25776 + (32 * _26836) + 192 len 32 * _45800] = mem[(2 * ceil32(return_data.size)) + 224 len 32 * _45800]
                                                                    mem[_25776 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25776 + (32 * _26836) + (32 * _45800) + -mem[64] + 192]
                                                            else:
                                                                if 1 == sub_764d55f7[arg1]:
                                                                    mem[(2 * ceil32(return_data.size)) + 128] = 2
                                                                    mem[(2 * ceil32(return_data.size)) + 224] = 2
                                                                    mem[64] = (2 * ceil32(return_data.size)) + 320
                                                                    mem[(2 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                    mem[(2 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[(2 * ceil32(return_data.size)) + 192] = this.address
                                                                    if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                        revert with 0, 17
                                                                    mem[(2 * ceil32(return_data.size)) + 288] = (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) + (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                                        revert with 0, 'pay: token addr not exists'
                                                                    if not sub_764d55f7[arg1]:
                                                                        idx = 0
                                                                        s = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            call mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20] with:
                                                                               value mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256] wei
                                                                                 gas gas_remaining wei
                                                                            if return_data.size:
                                                                                _27694 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                mem[_27694] = return_data.size
                                                                                mem[_27694 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                revert with 0, 'pays:transfer failed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            s = ext_call.success
                                                                            continue 
                                                                        _25773 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26832 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (2 * ceil32(return_data.size)) + 160
                                                                        while idx < _26832:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_25773 + 64] = (32 * _26832) + 160
                                                                        _45798 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25773 + (32 * _26832) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25773 + (32 * _26832) + 192 len 32 * _45798] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45798]
                                                                        mem[_25773 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _25773 + (32 * _26832) + (32 * _45798) + -mem[64] + 192]
                                                                    else:
                                                                        mem[0] = sub_764d55f7[arg1]
                                                                        mem[32] = 109
                                                                        idx = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if mem[(32 * idx) + (2 * ceil32(return_data.size)) + 172 len 20]:
                                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 128]:
                                                                                    revert with 0, 50
                                                                                _27692 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 160]
                                                                                if idx >= mem[(2 * ceil32(return_data.size)) + 224]:
                                                                                    revert with 0, 50
                                                                                _28495 = mem[(32 * idx) + (2 * ceil32(return_data.size)) + 256]
                                                                                _29454 = mem[64]
                                                                                mem[mem[64] + 36] = msg.sender
                                                                                mem[mem[64] + 68] = address(_27692)
                                                                                mem[mem[64] + 100] = _28495
                                                                                _29455 = mem[64]
                                                                                mem[mem[64]] = 100
                                                                                mem[64] = mem[64] + 132
                                                                                mem[_29455 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29455 + 36 len 28]
                                                                                mem[64] = _29454 + 196
                                                                                mem[_29454 + 132] = 32
                                                                                mem[_29454 + 164] = 'SafeERC20: low-level call failed'
                                                                                if eth.balance(this.address) < 0:
                                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                    revert with 0, 'Address: call to non-contract'
                                                                                _34184 = mem[_29455]
                                                                                s = 0
                                                                                while s < _34184:
                                                                                    mem[s + _29454 + 196] = mem[s + _29455 + 32]
                                                                                    s = s + 32
                                                                                    continue 
                                                                                if ceil32(_34184) > _34184:
                                                                                    mem[_34184 + _29454 + 196] = 0
                                                                                call sub_6aafcaa9[stor108[arg1]].mem[_29454 + 196 len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[_29454 + 200 len _34184 - 4]
                                                                                if not return_data.size:
                                                                                    if not ext_call.success:
                                                                                        if mem[96]:
                                                                                            revert with memory
                                                                                              from 128
                                                                                               len mem[96]
                                                                                        mem[_29454 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29454 + 200] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29454 + 264] = mem[idx + _29454 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29454 + 264]
                                                                                    if mem[96]:
                                                                                        require mem[96] >= 32
                                                                                        require mem[128] == bool(mem[128])
                                                                                        if not mem[128]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                                else:
                                                                                    mem[64] = _29454 + ceil32(return_data.size) + 197
                                                                                    mem[_29454 + 196] = return_data.size
                                                                                    mem[_29454 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                    if not ext_call.success:
                                                                                        if return_data.size:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        mem[_29454 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29454 + ceil32(return_data.size) + 201] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29454 + ceil32(return_data.size) + 265] = mem[idx + _29454 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29454 + ceil32(return_data.size) + 265]
                                                                                    if return_data.size:
                                                                                        require return_data.size >= 32
                                                                                        require mem[_29454 + 228] == bool(mem[_29454 + 228])
                                                                                        if not mem[_29454 + 228]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            continue 
                                                                        _25771 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _26830 = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(2 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (2 * ceil32(return_data.size)) + 160
                                                                        while idx < _26830:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_25771 + 64] = (32 * _26830) + 160
                                                                        _45795 = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25771 + (32 * _26830) + 160] = mem[(2 * ceil32(return_data.size)) + 224]
                                                                        mem[_25771 + (32 * _26830) + 192 len 32 * _45795] = mem[(2 * ceil32(return_data.size)) + 256 len 32 * _45795]
                                                                        mem[_25771 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _25771 + (32 * _26830) + (32 * _45795) + -mem[64] + 192]
                                                    require ext_code.size(stor107)
                                                    call stor107.0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    sub_57ba1b20[arg1].field_928 = 0
                                                    emit 0xcc45266b: sub_57ba1b20[arg1].field_0, sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100), sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                    else:
                                        mem[(2 * ceil32(return_data.size)) + 132] = msg.sender
                                        mem[(2 * ceil32(return_data.size)) + 164] = this.address
                                        require ext_code.size(sub_6aafcaa9[stor108[arg1]])
                                        staticcall sub_6aafcaa9[stor108[arg1]].0xdd62ed3e with:
                                                gas gas_remaining wei
                                               args msg.sender, this.address
                                        mem[(2 * ceil32(return_data.size)) + 128] = ext_call.return_data[0]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        if ext_call.return_data[0] < sub_57ba1b20[arg1].field_0:
                                            revert with 0, 'don't have enough money'
                                        if sub_f65e6912 > 100:
                                            revert with 0, 'percent invalid'
                                        if not sub_57ba1b20[arg1].field_0:
                                            if 100 < sub_f65e6912:
                                                revert with 0, 17
                                            if -sub_f65e6912 + 100 < sub_57ba1b20[arg1].field_256:
                                                if sub_57ba1b20[arg1].field_0 < 0:
                                                    revert with 0, 17
                                                if sub_b24fea7b[stor108[arg1]] > -1:
                                                    revert with 0, 17
                                                if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[(4 * ceil32(return_data.size)) + 128] = 1
                                                        mem[(4 * ceil32(return_data.size)) + 192] = 1
                                                        mem[64] = (4 * ceil32(return_data.size)) + 256
                                                        mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                        if 0 > !sub_57ba1b20[arg1].field_0:
                                                            revert with 0, 17
                                                        mem[(4 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                   value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27877 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27877] = return_data.size
                                                                    mem[_27877 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _26078 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27198 = mem[(4 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (4 * ceil32(return_data.size)) + 160
                                                            while idx < _27198:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26078 + 64] = (32 * _27198) + 160
                                                            _46103 = mem[(4 * ceil32(return_data.size)) + 192]
                                                            mem[_26078 + (32 * _27198) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                            mem[_26078 + (32 * _27198) + 192 len 32 * _46103] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46103]
                                                            mem[_26078 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26078 + (32 * _27198) + (32 * _46103) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    _27875 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    _28800 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224]
                                                                    _29759 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27875)
                                                                    mem[mem[64] + 100] = _28800
                                                                    _29760 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29760 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29760 + 36 len 28]
                                                                    mem[64] = _29759 + 196
                                                                    mem[_29759 + 132] = 32
                                                                    mem[_29759 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _34794 = mem[_29760]
                                                                    s = 0
                                                                    while s < _34794:
                                                                        mem[s + _29759 + 196] = mem[s + _29760 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_34794) > _34794:
                                                                        mem[_34794 + _29759 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29759 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29759 + 200 len _34794 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29759 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29759 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29759 + 264] = mem[idx + _29759 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29759 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29759 + ceil32(return_data.size) + 197
                                                                        mem[_29759 + 196] = return_data.size
                                                                        mem[_29759 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29759 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29759 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29759 + ceil32(return_data.size) + 265] = mem[idx + _29759 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29759 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29759 + 228] == bool(mem[_29759 + 228])
                                                                            if not mem[_29759 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _26076 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27196 = mem[(4 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (4 * ceil32(return_data.size)) + 160
                                                            while idx < _27196:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_26076 + 64] = (32 * _27196) + 160
                                                            _46100 = mem[(4 * ceil32(return_data.size)) + 192]
                                                            mem[_26076 + (32 * _27196) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                            mem[_26076 + (32 * _27196) + 192 len 32 * _46100] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46100]
                                                            mem[_26076 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _26076 + (32 * _27196) + (32 * _46100) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[(4 * ceil32(return_data.size)) + 128] = 2
                                                            mem[(4 * ceil32(return_data.size)) + 224] = 2
                                                            mem[64] = (4 * ceil32(return_data.size)) + 320
                                                            mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if 0 > !sub_57ba1b20[arg1].field_0:
                                                                revert with 0, 17
                                                            mem[(4 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0
                                                            mem[(4 * ceil32(return_data.size)) + 192] = this.address
                                                            mem[(4 * ceil32(return_data.size)) + 288] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27874 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27874] = return_data.size
                                                                        mem[_27874 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _26073 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27192 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27192:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26073 + 64] = (32 * _27192) + 160
                                                                _46098 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                mem[_26073 + (32 * _27192) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                mem[_26073 + (32 * _27192) + 192 len 32 * _46098] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46098]
                                                                mem[_26073 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26073 + (32 * _27192) + (32 * _46098) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27872 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        _28795 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256]
                                                                        _29754 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27872)
                                                                        mem[mem[64] + 100] = _28795
                                                                        _29755 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29755 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29755 + 36 len 28]
                                                                        mem[64] = _29754 + 196
                                                                        mem[_29754 + 132] = 32
                                                                        mem[_29754 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34784 = mem[_29755]
                                                                        s = 0
                                                                        while s < _34784:
                                                                            mem[s + _29754 + 196] = mem[s + _29755 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34784) > _34784:
                                                                            mem[_34784 + _29754 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29754 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29754 + 200 len _34784 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29754 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29754 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29754 + 264] = mem[idx + _29754 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29754 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29754 + ceil32(return_data.size) + 197
                                                                            mem[_29754 + 196] = return_data.size
                                                                            mem[_29754 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29754 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29754 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29754 + ceil32(return_data.size) + 265] = mem[idx + _29754 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29754 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29754 + 228] == bool(mem[_29754 + 228])
                                                                                if not mem[_29754 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _26071 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27190 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27190:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26071 + 64] = (32 * _27190) + 160
                                                                _46095 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                mem[_26071 + (32 * _27190) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                mem[_26071 + (32 * _27190) + 192 len 32 * _46095] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46095]
                                                                mem[_26071 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26071 + (32 * _27190) + (32 * _46095) + -mem[64] + 192]
                                                else:
                                                    if not sub_57ba1b20[arg1].field_0:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(4 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(4 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (4 * ceil32(return_data.size)) + 256
                                                            mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(4 * ceil32(return_data.size)) + 224] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27865 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27865] = return_data.size
                                                                        mem[_27865 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _26058 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27174 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27174:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26058 + 64] = (32 * _27174) + 160
                                                                _46083 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_26058 + (32 * _27174) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_26058 + (32 * _27174) + 192 len 32 * _46083] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46083]
                                                                mem[_26058 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26058 + (32 * _27174) + (32 * _46083) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27863 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28780 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224]
                                                                        _29739 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27863)
                                                                        mem[mem[64] + 100] = _28780
                                                                        _29740 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29740 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29740 + 36 len 28]
                                                                        mem[64] = _29739 + 196
                                                                        mem[_29739 + 132] = 32
                                                                        mem[_29739 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34754 = mem[_29740]
                                                                        s = 0
                                                                        while s < _34754:
                                                                            mem[s + _29739 + 196] = mem[s + _29740 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34754) > _34754:
                                                                            mem[_34754 + _29739 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29739 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29739 + 200 len _34754 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29739 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29739 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29739 + 264] = mem[idx + _29739 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29739 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29739 + ceil32(return_data.size) + 197
                                                                            mem[_29739 + 196] = return_data.size
                                                                            mem[_29739 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29739 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29739 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29739 + ceil32(return_data.size) + 265] = mem[idx + _29739 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29739 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29739 + 228] == bool(mem[_29739 + 228])
                                                                                if not mem[_29739 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _26056 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27172 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27172:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26056 + 64] = (32 * _27172) + 160
                                                                _46080 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_26056 + (32 * _27172) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_26056 + (32 * _27172) + 192 len 32 * _46080] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46080]
                                                                mem[_26056 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26056 + (32 * _27172) + (32 * _46080) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(4 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(4 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (4 * ceil32(return_data.size)) + 320
                                                                mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(4 * ceil32(return_data.size)) + 256] = 0
                                                                mem[(4 * ceil32(return_data.size)) + 192] = this.address
                                                                if 0 > !sub_57ba1b20[arg1].field_0:
                                                                    revert with 0, 17
                                                                mem[(4 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27862 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27862] = return_data.size
                                                                            mem[_27862 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27168 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27168:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _27168) + 160
                                                                    _46078 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _27168) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _27168) + 192 len 32 * _46078] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46078]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27168) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27168) + (32 * _46078) + 64]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27860 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28775 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256]
                                                                            _29734 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27860)
                                                                            mem[mem[64] + 100] = _28775
                                                                            _29735 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29735 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29735 + 36 len 28]
                                                                            mem[64] = _29734 + 196
                                                                            mem[_29734 + 132] = 32
                                                                            mem[_29734 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34744 = mem[_29735]
                                                                            s = 0
                                                                            while s < _34744:
                                                                                mem[s + _29734 + 196] = mem[s + _29735 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34744) > _34744:
                                                                                mem[_34744 + _29734 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29734 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29734 + 200 len _34744 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29734 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29734 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29734 + 264] = mem[idx + _29734 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29734 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29734 + ceil32(return_data.size) + 197
                                                                                mem[_29734 + 196] = return_data.size
                                                                                mem[_29734 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29734 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29734 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29734 + ceil32(return_data.size) + 265] = mem[idx + _29734 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29734 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29734 + 228] == bool(mem[_29734 + 228])
                                                                                    if not mem[_29734 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _26051 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27166 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27166:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_26051 + 64] = (32 * _27166) + 160
                                                                    _46075 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_26051 + (32 * _27166) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_26051 + (32 * _27166) + 192 len 32 * _46075] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46075]
                                                                    mem[_26051 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _26051 + (32 * _27166) + (32 * _46075) + -mem[64] + 192]
                                                    else:
                                                        if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !sub_57ba1b20[arg1].field_0:
                                                            revert with 0, 17
                                                        sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] += sub_57ba1b20[arg1].field_0
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(4 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(4 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (4 * ceil32(return_data.size)) + 256
                                                            mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(4 * ceil32(return_data.size)) + 224] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27871 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27871] = return_data.size
                                                                        mem[_27871 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _26068 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27186 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27186:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26068 + 64] = (32 * _27186) + 160
                                                                _46093 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_26068 + (32 * _27186) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_26068 + (32 * _27186) + 192 len 32 * _46093] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46093]
                                                                mem[_26068 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26068 + (32 * _27186) + (32 * _46093) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27869 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28790 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224]
                                                                        _29749 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27869)
                                                                        mem[mem[64] + 100] = _28790
                                                                        _29750 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29750 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29750 + 36 len 28]
                                                                        mem[64] = _29749 + 196
                                                                        mem[_29749 + 132] = 32
                                                                        mem[_29749 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34774 = mem[_29750]
                                                                        s = 0
                                                                        while s < _34774:
                                                                            mem[s + _29749 + 196] = mem[s + _29750 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34774) > _34774:
                                                                            mem[_34774 + _29749 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29749 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29749 + 200 len _34774 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29749 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29749 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29749 + 264] = mem[idx + _29749 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29749 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29749 + ceil32(return_data.size) + 197
                                                                            mem[_29749 + 196] = return_data.size
                                                                            mem[_29749 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29749 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29749 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29749 + ceil32(return_data.size) + 265] = mem[idx + _29749 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29749 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29749 + 228] == bool(mem[_29749 + 228])
                                                                                if not mem[_29749 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27184 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27184:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _27184) + 160
                                                                _46090 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[mem[64] + (32 * _27184) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[mem[64] + (32 * _27184) + 192 len 32 * _46090] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46090]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27184) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27184) + (32 * _46090) + 64]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(4 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(4 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (4 * ceil32(return_data.size)) + 320
                                                                mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(4 * ceil32(return_data.size)) + 256] = 0
                                                                mem[(4 * ceil32(return_data.size)) + 192] = this.address
                                                                if 0 > !sub_57ba1b20[arg1].field_0:
                                                                    revert with 0, 17
                                                                mem[(4 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27868 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27868] = return_data.size
                                                                            mem[_27868 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27180 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27180:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _27180) + 160
                                                                    _46088 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _27180) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _27180) + 192 len 32 * _46088] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46088]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27180) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27180) + (32 * _46088) + 64]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27866 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28785 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256]
                                                                            _29744 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27866)
                                                                            mem[mem[64] + 100] = _28785
                                                                            _29745 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29745 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29745 + 36 len 28]
                                                                            mem[64] = _29744 + 196
                                                                            mem[_29744 + 132] = 32
                                                                            mem[_29744 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34764 = mem[_29745]
                                                                            s = 0
                                                                            while s < _34764:
                                                                                mem[s + _29744 + 196] = mem[s + _29745 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34764) > _34764:
                                                                                mem[_34764 + _29744 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29744 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29744 + 200 len _34764 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29744 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29744 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29744 + 264] = mem[idx + _29744 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29744 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29744 + ceil32(return_data.size) + 197
                                                                                mem[_29744 + 196] = return_data.size
                                                                                mem[_29744 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29744 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29744 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29744 + ceil32(return_data.size) + 265] = mem[idx + _29744 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29744 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29744 + 228] == bool(mem[_29744 + 228])
                                                                                    if not mem[_29744 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _26061 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27178 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27178:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_26061 + 64] = (32 * _27178) + 160
                                                                    _46085 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_26061 + (32 * _27178) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_26061 + (32 * _27178) + 192 len 32 * _46085] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46085]
                                                                    mem[_26061 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _26061 + (32 * _27178) + (32 * _46085) + -mem[64] + 192]
                                                require ext_code.size(stor107)
                                                call stor107.0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                sub_57ba1b20[arg1].field_928 = 0
                                                emit 0xcc45266b: sub_57ba1b20[arg1].field_0, 0, sub_57ba1b20[arg1].field_0, 0, sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                            else:
                                                if sub_57ba1b20[arg1].field_256 > 100:
                                                    revert with 0, 'percent invalid'
                                                if not sub_57ba1b20[arg1].field_0:
                                                    if sub_57ba1b20[arg1].field_0 < 0:
                                                        revert with 0, 17
                                                    if sub_b24fea7b[stor108[arg1]] > -1:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_768 != sub_57ba1b20[arg1].field_512:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(4 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(4 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (4 * ceil32(return_data.size)) + 256
                                                            mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(4 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27853 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27853] = return_data.size
                                                                        mem[_27853 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _26038 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27150 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27150:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26038 + 64] = (32 * _27150) + 160
                                                                _46063 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_26038 + (32 * _27150) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_26038 + (32 * _27150) + 192 len 32 * _46063] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46063]
                                                                mem[_26038 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26038 + (32 * _27150) + (32 * _46063) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27851 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28760 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224]
                                                                        _29719 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27851)
                                                                        mem[mem[64] + 100] = _28760
                                                                        _29720 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29720 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29720 + 36 len 28]
                                                                        mem[64] = _29719 + 196
                                                                        mem[_29719 + 132] = 32
                                                                        mem[_29719 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34714 = mem[_29720]
                                                                        s = 0
                                                                        while s < _34714:
                                                                            mem[s + _29719 + 196] = mem[s + _29720 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34714) > _34714:
                                                                            mem[_34714 + _29719 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29719 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29719 + 200 len _34714 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29719 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29719 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29719 + 264] = mem[idx + _29719 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29719 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29719 + ceil32(return_data.size) + 197
                                                                            mem[_29719 + 196] = return_data.size
                                                                            mem[_29719 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29719 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29719 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29719 + ceil32(return_data.size) + 265] = mem[idx + _29719 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29719 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29719 + 228] == bool(mem[_29719 + 228])
                                                                                if not mem[_29719 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _26036 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27148 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27148:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26036 + 64] = (32 * _27148) + 160
                                                                _46060 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_26036 + (32 * _27148) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_26036 + (32 * _27148) + 192 len 32 * _46060] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46060]
                                                                mem[_26036 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26036 + (32 * _27148) + (32 * _46060) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(4 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(4 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (4 * ceil32(return_data.size)) + 320
                                                                mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(4 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0
                                                                mem[(4 * ceil32(return_data.size)) + 192] = this.address
                                                                mem[(4 * ceil32(return_data.size)) + 288] = 0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27850 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27850] = return_data.size
                                                                            mem[_27850 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _26033 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27144 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27144:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_26033 + 64] = (32 * _27144) + 160
                                                                    _46058 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_26033 + (32 * _27144) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_26033 + (32 * _27144) + 192 len 32 * _46058] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46058]
                                                                    mem[_26033 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _26033 + (32 * _27144) + (32 * _46058) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27848 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28755 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256]
                                                                            _29714 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27848)
                                                                            mem[mem[64] + 100] = _28755
                                                                            _29715 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29715 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29715 + 36 len 28]
                                                                            mem[64] = _29714 + 196
                                                                            mem[_29714 + 132] = 32
                                                                            mem[_29714 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34704 = mem[_29715]
                                                                            s = 0
                                                                            while s < _34704:
                                                                                mem[s + _29714 + 196] = mem[s + _29715 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34704) > _34704:
                                                                                mem[_34704 + _29714 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29714 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29714 + 200 len _34704 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29714 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29714 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29714 + 264] = mem[idx + _29714 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29714 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29714 + ceil32(return_data.size) + 197
                                                                                mem[_29714 + 196] = return_data.size
                                                                                mem[_29714 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29714 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29714 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29714 + ceil32(return_data.size) + 265] = mem[idx + _29714 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29714 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29714 + 228] == bool(mem[_29714 + 228])
                                                                                    if not mem[_29714 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _26031 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27142 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27142:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_26031 + 64] = (32 * _27142) + 160
                                                                    _46055 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_26031 + (32 * _27142) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_26031 + (32 * _27142) + 192 len 32 * _46055] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46055]
                                                                    mem[_26031 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _26031 + (32 * _27142) + (32 * _46055) + -mem[64] + 192]
                                                    else:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(4 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(4 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (4 * ceil32(return_data.size)) + 256
                                                            mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 > -1:
                                                                revert with 0, 17
                                                            mem[(4 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27859 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27859] = return_data.size
                                                                        mem[_27859 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _26048 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27162 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27162:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26048 + 64] = (32 * _27162) + 160
                                                                _46073 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_26048 + (32 * _27162) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_26048 + (32 * _27162) + 192 len 32 * _46073] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46073]
                                                                mem[_26048 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26048 + (32 * _27162) + (32 * _46073) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27857 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28770 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224]
                                                                        _29729 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27857)
                                                                        mem[mem[64] + 100] = _28770
                                                                        _29730 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29730 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29730 + 36 len 28]
                                                                        mem[64] = _29729 + 196
                                                                        mem[_29729 + 132] = 32
                                                                        mem[_29729 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34734 = mem[_29730]
                                                                        s = 0
                                                                        while s < _34734:
                                                                            mem[s + _29729 + 196] = mem[s + _29730 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34734) > _34734:
                                                                            mem[_34734 + _29729 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29729 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29729 + 200 len _34734 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29729 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29729 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29729 + 264] = mem[idx + _29729 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29729 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29729 + ceil32(return_data.size) + 197
                                                                            mem[_29729 + 196] = return_data.size
                                                                            mem[_29729 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29729 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29729 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29729 + ceil32(return_data.size) + 265] = mem[idx + _29729 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29729 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29729 + 228] == bool(mem[_29729 + 228])
                                                                                if not mem[_29729 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _26046 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27160 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27160:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26046 + 64] = (32 * _27160) + 160
                                                                _46070 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_26046 + (32 * _27160) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_26046 + (32 * _27160) + 192 len 32 * _46070] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46070]
                                                                mem[_26046 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26046 + (32 * _27160) + (32 * _46070) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(4 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(4 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (4 * ceil32(return_data.size)) + 320
                                                                mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                if sub_57ba1b20[arg1].field_0 > -1:
                                                                    revert with 0, 17
                                                                mem[(4 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0
                                                                mem[(4 * ceil32(return_data.size)) + 192] = this.address
                                                                mem[(4 * ceil32(return_data.size)) + 288] = 0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27856 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27856] = return_data.size
                                                                            mem[_27856 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _26043 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27156 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27156:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_26043 + 64] = (32 * _27156) + 160
                                                                    _46068 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_26043 + (32 * _27156) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_26043 + (32 * _27156) + 192 len 32 * _46068] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46068]
                                                                    mem[_26043 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _26043 + (32 * _27156) + (32 * _46068) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27854 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28765 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256]
                                                                            _29724 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27854)
                                                                            mem[mem[64] + 100] = _28765
                                                                            _29725 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29725 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29725 + 36 len 28]
                                                                            mem[64] = _29724 + 196
                                                                            mem[_29724 + 132] = 32
                                                                            mem[_29724 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34724 = mem[_29725]
                                                                            s = 0
                                                                            while s < _34724:
                                                                                mem[s + _29724 + 196] = mem[s + _29725 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34724) > _34724:
                                                                                mem[_34724 + _29724 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29724 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29724 + 200 len _34724 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29724 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29724 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29724 + 264] = mem[idx + _29724 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29724 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29724 + ceil32(return_data.size) + 197
                                                                                mem[_29724 + 196] = return_data.size
                                                                                mem[_29724 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29724 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29724 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29724 + ceil32(return_data.size) + 265] = mem[idx + _29724 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29724 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29724 + 228] == bool(mem[_29724 + 228])
                                                                                    if not mem[_29724 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _26041 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27154 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27154:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_26041 + 64] = (32 * _27154) + 160
                                                                    _46065 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_26041 + (32 * _27154) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_26041 + (32 * _27154) + 192 len 32 * _46065] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46065]
                                                                    mem[_26041 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _26041 + (32 * _27154) + (32 * _46065) + -mem[64] + 192]
                                                    require ext_code.size(stor107)
                                                    call stor107.0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    sub_57ba1b20[arg1].field_928 = 0
                                                    emit 0xcc45266b: sub_57ba1b20[arg1].field_0, 0, 0, sub_57ba1b20[arg1].field_0, sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                                else:
                                                    if sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / sub_57ba1b20[arg1].field_0 != sub_57ba1b20[arg1].field_256:
                                                        revert with 0, 'arithmetic error'
                                                    if sub_57ba1b20[arg1].field_0 < 0:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_0 < sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                        revert with 0, 17
                                                    if sub_b24fea7b[stor108[arg1]] > -1:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(4 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(4 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (4 * ceil32(return_data.size)) + 256
                                                            mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            mem[(4 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27847 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27847] = return_data.size
                                                                        mem[_27847 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27138 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27138:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _27138) + 160
                                                                _46053 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[mem[64] + (32 * _27138) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[mem[64] + (32 * _27138) + 192 len 32 * _46053] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46053]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27138) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27138) + (32 * _46053) + 64]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27845 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28750 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224]
                                                                        _29709 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27845)
                                                                        mem[mem[64] + 100] = _28750
                                                                        _29710 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29710 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29710 + 36 len 28]
                                                                        mem[64] = _29709 + 196
                                                                        mem[_29709 + 132] = 32
                                                                        mem[_29709 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34694 = mem[_29710]
                                                                        s = 0
                                                                        while s < _34694:
                                                                            mem[s + _29709 + 196] = mem[s + _29710 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34694) > _34694:
                                                                            mem[_34694 + _29709 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29709 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29709 + 200 len _34694 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29709 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29709 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29709 + 264] = mem[idx + _29709 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29709 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29709 + ceil32(return_data.size) + 197
                                                                            mem[_29709 + 196] = return_data.size
                                                                            mem[_29709 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29709 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29709 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29709 + ceil32(return_data.size) + 265] = mem[idx + _29709 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29709 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29709 + 228] == bool(mem[_29709 + 228])
                                                                                if not mem[_29709 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _26026 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27136 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27136:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_26026 + 64] = (32 * _27136) + 160
                                                                _46050 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_26026 + (32 * _27136) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_26026 + (32 * _27136) + 192 len 32 * _46050] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46050]
                                                                mem[_26026 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _26026 + (32 * _27136) + (32 * _46050) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(4 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(4 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (4 * ceil32(return_data.size)) + 320
                                                                mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                if sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                    revert with 0, 17
                                                                mem[(4 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0
                                                                mem[(4 * ceil32(return_data.size)) + 192] = this.address
                                                                mem[(4 * ceil32(return_data.size)) + 288] = 0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27844 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27844] = return_data.size
                                                                            mem[_27844 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _26023 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27132 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27132:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_26023 + 64] = (32 * _27132) + 160
                                                                    _46048 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_26023 + (32 * _27132) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_26023 + (32 * _27132) + 192 len 32 * _46048] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46048]
                                                                    mem[_26023 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _26023 + (32 * _27132) + (32 * _46048) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27842 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28745 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256]
                                                                            _29704 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27842)
                                                                            mem[mem[64] + 100] = _28745
                                                                            _29705 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29705 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29705 + 36 len 28]
                                                                            mem[64] = _29704 + 196
                                                                            mem[_29704 + 132] = 32
                                                                            mem[_29704 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34684 = mem[_29705]
                                                                            s = 0
                                                                            while s < _34684:
                                                                                mem[s + _29704 + 196] = mem[s + _29705 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34684) > _34684:
                                                                                mem[_34684 + _29704 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29704 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29704 + 200 len _34684 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29704 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29704 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29704 + 264] = mem[idx + _29704 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29704 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29704 + ceil32(return_data.size) + 197
                                                                                mem[_29704 + 196] = return_data.size
                                                                                mem[_29704 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29704 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29704 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29704 + ceil32(return_data.size) + 265] = mem[idx + _29704 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29704 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29704 + 228] == bool(mem[_29704 + 228])
                                                                                    if not mem[_29704 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _26021 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27130 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27130:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_26021 + 64] = (32 * _27130) + 160
                                                                    _46045 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_26021 + (32 * _27130) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_26021 + (32 * _27130) + 192 len 32 * _46045] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46045]
                                                                    mem[_26021 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _26021 + (32 * _27130) + (32 * _46045) + -mem[64] + 192]
                                                    else:
                                                        if not sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                            if not sub_764d55f7[arg1]:
                                                                mem[(4 * ceil32(return_data.size)) + 128] = 1
                                                                mem[(4 * ceil32(return_data.size)) + 192] = 1
                                                                mem[64] = (4 * ceil32(return_data.size)) + 256
                                                                mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(4 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27835 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27835] = return_data.size
                                                                            mem[_27835 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _26008 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27114 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27114:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_26008 + 64] = (32 * _27114) + 160
                                                                    _46033 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                    mem[_26008 + (32 * _27114) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                    mem[_26008 + (32 * _27114) + 192 len 32 * _46033] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46033]
                                                                    mem[_26008 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _26008 + (32 * _27114) + (32 * _46033) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27833 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                                revert with 0, 50
                                                                            _28730 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224]
                                                                            _29689 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27833)
                                                                            mem[mem[64] + 100] = _28730
                                                                            _29690 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29690 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29690 + 36 len 28]
                                                                            mem[64] = _29689 + 196
                                                                            mem[_29689 + 132] = 32
                                                                            mem[_29689 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34654 = mem[_29690]
                                                                            s = 0
                                                                            while s < _34654:
                                                                                mem[s + _29689 + 196] = mem[s + _29690 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34654) > _34654:
                                                                                mem[_34654 + _29689 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29689 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29689 + 200 len _34654 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29689 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29689 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29689 + 264] = mem[idx + _29689 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29689 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29689 + ceil32(return_data.size) + 197
                                                                                mem[_29689 + 196] = return_data.size
                                                                                mem[_29689 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29689 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29689 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29689 + ceil32(return_data.size) + 265] = mem[idx + _29689 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29689 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29689 + 228] == bool(mem[_29689 + 228])
                                                                                    if not mem[_29689 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _26006 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27112 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27112:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_26006 + 64] = (32 * _27112) + 160
                                                                    _46030 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                    mem[_26006 + (32 * _27112) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                    mem[_26006 + (32 * _27112) + 192 len 32 * _46030] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46030]
                                                                    mem[_26006 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _26006 + (32 * _27112) + (32 * _46030) + -mem[64] + 192]
                                                            else:
                                                                if 1 == sub_764d55f7[arg1]:
                                                                    mem[(4 * ceil32(return_data.size)) + 128] = 2
                                                                    mem[(4 * ceil32(return_data.size)) + 224] = 2
                                                                    mem[64] = (4 * ceil32(return_data.size)) + 320
                                                                    mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                    mem[(4 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[(4 * ceil32(return_data.size)) + 192] = this.address
                                                                    if 0 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                        revert with 0, 17
                                                                    mem[(4 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                                        revert with 0, 'pay: token addr not exists'
                                                                    if not sub_764d55f7[arg1]:
                                                                        idx = 0
                                                                        s = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                               value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256] wei
                                                                                 gas gas_remaining wei
                                                                            if return_data.size:
                                                                                _27832 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                mem[_27832] = return_data.size
                                                                                mem[_27832 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                revert with 0, 'pays:transfer failed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            s = ext_call.success
                                                                            continue 
                                                                        _26003 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _27108 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (4 * ceil32(return_data.size)) + 160
                                                                        while idx < _27108:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_26003 + 64] = (32 * _27108) + 160
                                                                        _46028 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                        mem[_26003 + (32 * _27108) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                        mem[_26003 + (32 * _27108) + 192 len 32 * _46028] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46028]
                                                                        mem[_26003 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _26003 + (32 * _27108) + (32 * _46028) + -mem[64] + 192]
                                                                    else:
                                                                        mem[0] = sub_764d55f7[arg1]
                                                                        mem[32] = 109
                                                                        idx = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                                if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                    revert with 0, 50
                                                                                _27830 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                                if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                                    revert with 0, 50
                                                                                _28725 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256]
                                                                                _29684 = mem[64]
                                                                                mem[mem[64] + 36] = msg.sender
                                                                                mem[mem[64] + 68] = address(_27830)
                                                                                mem[mem[64] + 100] = _28725
                                                                                _29685 = mem[64]
                                                                                mem[mem[64]] = 100
                                                                                mem[64] = mem[64] + 132
                                                                                mem[_29685 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29685 + 36 len 28]
                                                                                mem[64] = _29684 + 196
                                                                                mem[_29684 + 132] = 32
                                                                                mem[_29684 + 164] = 'SafeERC20: low-level call failed'
                                                                                if eth.balance(this.address) < 0:
                                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                    revert with 0, 'Address: call to non-contract'
                                                                                _34644 = mem[_29685]
                                                                                s = 0
                                                                                while s < _34644:
                                                                                    mem[s + _29684 + 196] = mem[s + _29685 + 32]
                                                                                    s = s + 32
                                                                                    continue 
                                                                                if ceil32(_34644) > _34644:
                                                                                    mem[_34644 + _29684 + 196] = 0
                                                                                call sub_6aafcaa9[stor108[arg1]].mem[_29684 + 196 len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[_29684 + 200 len _34644 - 4]
                                                                                if not return_data.size:
                                                                                    if not ext_call.success:
                                                                                        if mem[96]:
                                                                                            revert with memory
                                                                                              from 128
                                                                                               len mem[96]
                                                                                        mem[_29684 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29684 + 200] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29684 + 264] = mem[idx + _29684 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29684 + 264]
                                                                                    if mem[96]:
                                                                                        require mem[96] >= 32
                                                                                        require mem[128] == bool(mem[128])
                                                                                        if not mem[128]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                                else:
                                                                                    mem[64] = _29684 + ceil32(return_data.size) + 197
                                                                                    mem[_29684 + 196] = return_data.size
                                                                                    mem[_29684 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                    if not ext_call.success:
                                                                                        if return_data.size:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        mem[_29684 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29684 + ceil32(return_data.size) + 201] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29684 + ceil32(return_data.size) + 265] = mem[idx + _29684 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29684 + ceil32(return_data.size) + 265]
                                                                                    if return_data.size:
                                                                                        require return_data.size >= 32
                                                                                        require mem[_29684 + 228] == bool(mem[_29684 + 228])
                                                                                        if not mem[_29684 + 228]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            continue 
                                                                        _26001 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _27106 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (4 * ceil32(return_data.size)) + 160
                                                                        while idx < _27106:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_26001 + 64] = (32 * _27106) + 160
                                                                        _46025 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                        mem[_26001 + (32 * _27106) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                        mem[_26001 + (32 * _27106) + 192 len 32 * _46025] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46025]
                                                                        mem[_26001 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _26001 + (32 * _27106) + (32 * _46025) + -mem[64] + 192]
                                                        else:
                                                            if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] += sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                            if not sub_764d55f7[arg1]:
                                                                mem[(4 * ceil32(return_data.size)) + 128] = 1
                                                                mem[(4 * ceil32(return_data.size)) + 192] = 1
                                                                mem[64] = (4 * ceil32(return_data.size)) + 256
                                                                mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(4 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27841 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27841] = return_data.size
                                                                            mem[_27841 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _26018 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27126 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27126:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_26018 + 64] = (32 * _27126) + 160
                                                                    _46043 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                    mem[_26018 + (32 * _27126) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                    mem[_26018 + (32 * _27126) + 192 len 32 * _46043] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46043]
                                                                    mem[_26018 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _26018 + (32 * _27126) + (32 * _46043) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27839 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                                revert with 0, 50
                                                                            _28740 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224]
                                                                            _29699 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27839)
                                                                            mem[mem[64] + 100] = _28740
                                                                            _29700 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29700 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29700 + 36 len 28]
                                                                            mem[64] = _29699 + 196
                                                                            mem[_29699 + 132] = 32
                                                                            mem[_29699 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34674 = mem[_29700]
                                                                            s = 0
                                                                            while s < _34674:
                                                                                mem[s + _29699 + 196] = mem[s + _29700 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34674) > _34674:
                                                                                mem[_34674 + _29699 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29699 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29699 + 200 len _34674 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29699 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29699 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29699 + 264] = mem[idx + _29699 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29699 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29699 + ceil32(return_data.size) + 197
                                                                                mem[_29699 + 196] = return_data.size
                                                                                mem[_29699 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29699 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29699 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29699 + ceil32(return_data.size) + 265] = mem[idx + _29699 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29699 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29699 + 228] == bool(mem[_29699 + 228])
                                                                                    if not mem[_29699 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27124 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27124:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _27124) + 160
                                                                    _46040 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                    mem[mem[64] + (32 * _27124) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                    mem[mem[64] + (32 * _27124) + 192 len 32 * _46040] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46040]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27124) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27124) + (32 * _46040) + 64]
                                                            else:
                                                                if 1 == sub_764d55f7[arg1]:
                                                                    mem[(4 * ceil32(return_data.size)) + 128] = 2
                                                                    mem[(4 * ceil32(return_data.size)) + 224] = 2
                                                                    mem[64] = (4 * ceil32(return_data.size)) + 320
                                                                    mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                    mem[(4 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[(4 * ceil32(return_data.size)) + 192] = this.address
                                                                    if 0 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                        revert with 0, 17
                                                                    mem[(4 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                                        revert with 0, 'pay: token addr not exists'
                                                                    if not sub_764d55f7[arg1]:
                                                                        idx = 0
                                                                        s = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                               value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256] wei
                                                                                 gas gas_remaining wei
                                                                            if return_data.size:
                                                                                _27838 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                mem[_27838] = return_data.size
                                                                                mem[_27838 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                revert with 0, 'pays:transfer failed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            s = ext_call.success
                                                                            continue 
                                                                        _26013 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _27120 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (4 * ceil32(return_data.size)) + 160
                                                                        while idx < _27120:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_26013 + 64] = (32 * _27120) + 160
                                                                        _46038 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                        mem[_26013 + (32 * _27120) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                        mem[_26013 + (32 * _27120) + 192 len 32 * _46038] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46038]
                                                                        mem[_26013 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _26013 + (32 * _27120) + (32 * _46038) + -mem[64] + 192]
                                                                    else:
                                                                        mem[0] = sub_764d55f7[arg1]
                                                                        mem[32] = 109
                                                                        idx = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                                if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                    revert with 0, 50
                                                                                _27836 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                                if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                                    revert with 0, 50
                                                                                _28735 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256]
                                                                                _29694 = mem[64]
                                                                                mem[mem[64] + 36] = msg.sender
                                                                                mem[mem[64] + 68] = address(_27836)
                                                                                mem[mem[64] + 100] = _28735
                                                                                _29695 = mem[64]
                                                                                mem[mem[64]] = 100
                                                                                mem[64] = mem[64] + 132
                                                                                mem[_29695 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29695 + 36 len 28]
                                                                                mem[64] = _29694 + 196
                                                                                mem[_29694 + 132] = 32
                                                                                mem[_29694 + 164] = 'SafeERC20: low-level call failed'
                                                                                if eth.balance(this.address) < 0:
                                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                    revert with 0, 'Address: call to non-contract'
                                                                                _34664 = mem[_29695]
                                                                                s = 0
                                                                                while s < _34664:
                                                                                    mem[s + _29694 + 196] = mem[s + _29695 + 32]
                                                                                    s = s + 32
                                                                                    continue 
                                                                                if ceil32(_34664) > _34664:
                                                                                    mem[_34664 + _29694 + 196] = 0
                                                                                call sub_6aafcaa9[stor108[arg1]].mem[_29694 + 196 len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[_29694 + 200 len _34664 - 4]
                                                                                if not return_data.size:
                                                                                    if not ext_call.success:
                                                                                        if mem[96]:
                                                                                            revert with memory
                                                                                              from 128
                                                                                               len mem[96]
                                                                                        mem[_29694 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29694 + 200] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29694 + 264] = mem[idx + _29694 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29694 + 264]
                                                                                    if mem[96]:
                                                                                        require mem[96] >= 32
                                                                                        require mem[128] == bool(mem[128])
                                                                                        if not mem[128]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                                else:
                                                                                    mem[64] = _29694 + ceil32(return_data.size) + 197
                                                                                    mem[_29694 + 196] = return_data.size
                                                                                    mem[_29694 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                    if not ext_call.success:
                                                                                        if return_data.size:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        mem[_29694 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29694 + ceil32(return_data.size) + 201] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29694 + ceil32(return_data.size) + 265] = mem[idx + _29694 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29694 + ceil32(return_data.size) + 265]
                                                                                    if return_data.size:
                                                                                        require return_data.size >= 32
                                                                                        require mem[_29694 + 228] == bool(mem[_29694 + 228])
                                                                                        if not mem[_29694 + 228]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            continue 
                                                                        _26011 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _27118 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (4 * ceil32(return_data.size)) + 160
                                                                        while idx < _27118:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_26011 + 64] = (32 * _27118) + 160
                                                                        _46035 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                        mem[_26011 + (32 * _27118) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                        mem[_26011 + (32 * _27118) + 192 len 32 * _46035] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46035]
                                                                        mem[_26011 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _26011 + (32 * _27118) + (32 * _46035) + -mem[64] + 192]
                                                    require ext_code.size(stor107)
                                                    call stor107.0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    sub_57ba1b20[arg1].field_928 = 0
                                                    emit 0xcc45266b: sub_57ba1b20[arg1].field_0, 0, sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_0 - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100), sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                        else:
                                            if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / sub_57ba1b20[arg1].field_0 != sub_f65e6912:
                                                revert with 0, 'arithmetic error'
                                            if 100 < sub_f65e6912:
                                                revert with 0, 17
                                            if -sub_f65e6912 + 100 < sub_57ba1b20[arg1].field_256:
                                                if sub_57ba1b20[arg1].field_0 < sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100:
                                                    revert with 0, 17
                                                if sub_b24fea7b[stor108[arg1]] > !(sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                    revert with 0, 17
                                                sub_b24fea7b[stor108[arg1]] += sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                    if not sub_764d55f7[arg1]:
                                                        mem[(4 * ceil32(return_data.size)) + 128] = 1
                                                        mem[(4 * ceil32(return_data.size)) + 192] = 1
                                                        mem[64] = (4 * ceil32(return_data.size)) + 256
                                                        mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                        if 0 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                            revert with 0, 17
                                                        mem[(4 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                        mem[0] = sub_764d55f7[arg1]
                                                        if not sub_6aafcaa9[stor108[arg1]]:
                                                            revert with 0, 'pay: token addr not exists'
                                                        if not sub_764d55f7[arg1]:
                                                            idx = 0
                                                            s = 0
                                                            while idx < 1:
                                                                if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                    revert with 0, 50
                                                                call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                   value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224] wei
                                                                     gas gas_remaining wei
                                                                if return_data.size:
                                                                    _27829 = mem[64]
                                                                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                    mem[_27829] = return_data.size
                                                                    mem[_27829 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                if not ext_call.success:
                                                                    revert with 0, 'pays:transfer failed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                s = ext_call.success
                                                                continue 
                                                            _25998 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27102 = mem[(4 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (4 * ceil32(return_data.size)) + 160
                                                            while idx < _27102:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25998 + 64] = (32 * _27102) + 160
                                                            _46023 = mem[(4 * ceil32(return_data.size)) + 192]
                                                            mem[_25998 + (32 * _27102) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                            mem[_25998 + (32 * _27102) + 192 len 32 * _46023] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46023]
                                                            mem[_25998 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25998 + (32 * _27102) + (32 * _46023) + -mem[64] + 192]
                                                        else:
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            idx = 0
                                                            while idx < 1:
                                                                if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                    revert with 0, 50
                                                                if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    _27827 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    _28720 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224]
                                                                    _29679 = mem[64]
                                                                    mem[mem[64] + 36] = msg.sender
                                                                    mem[mem[64] + 68] = address(_27827)
                                                                    mem[mem[64] + 100] = _28720
                                                                    _29680 = mem[64]
                                                                    mem[mem[64]] = 100
                                                                    mem[64] = mem[64] + 132
                                                                    mem[_29680 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29680 + 36 len 28]
                                                                    mem[64] = _29679 + 196
                                                                    mem[_29679 + 132] = 32
                                                                    mem[_29679 + 164] = 'SafeERC20: low-level call failed'
                                                                    if eth.balance(this.address) < 0:
                                                                        revert with 0, 'Address: insufficient balance for call'
                                                                    if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                        revert with 0, 'Address: call to non-contract'
                                                                    _34634 = mem[_29680]
                                                                    s = 0
                                                                    while s < _34634:
                                                                        mem[s + _29679 + 196] = mem[s + _29680 + 32]
                                                                        s = s + 32
                                                                        continue 
                                                                    if ceil32(_34634) > _34634:
                                                                        mem[_34634 + _29679 + 196] = 0
                                                                    call sub_6aafcaa9[stor108[arg1]].mem[_29679 + 196 len 4] with:
                                                                         gas gas_remaining wei
                                                                        args mem[_29679 + 200 len _34634 - 4]
                                                                    if not return_data.size:
                                                                        if not ext_call.success:
                                                                            if mem[96]:
                                                                                revert with memory
                                                                                  from 128
                                                                                   len mem[96]
                                                                            mem[_29679 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29679 + 200] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29679 + 264] = mem[idx + _29679 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29679 + 264]
                                                                        if mem[96]:
                                                                            require mem[96] >= 32
                                                                            require mem[128] == bool(mem[128])
                                                                            if not mem[128]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    else:
                                                                        mem[64] = _29679 + ceil32(return_data.size) + 197
                                                                        mem[_29679 + 196] = return_data.size
                                                                        mem[_29679 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            if return_data.size:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            mem[_29679 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                            mem[_29679 + ceil32(return_data.size) + 201] = 32
                                                                            idx = 0
                                                                            while idx < 32:
                                                                                mem[idx + _29679 + ceil32(return_data.size) + 265] = mem[idx + _29679 + 164]
                                                                                idx = idx + 32
                                                                                continue 
                                                                            revert with 0, 32, 32, mem[_29679 + ceil32(return_data.size) + 265]
                                                                        if return_data.size:
                                                                            require return_data.size >= 32
                                                                            require mem[_29679 + 228] == bool(mem[_29679 + 228])
                                                                            if not mem[_29679 + 228]:
                                                                                revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                if idx == -1:
                                                                    revert with 0, 17
                                                                idx = idx + 1
                                                                continue 
                                                            _25996 = mem[64]
                                                            mem[mem[64]] = sub_764d55f7[arg1]
                                                            mem[mem[64] + 32] = 128
                                                            _27100 = mem[(4 * ceil32(return_data.size)) + 128]
                                                            mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                            idx = 0
                                                            s = mem[64] + 160
                                                            t = (4 * ceil32(return_data.size)) + 160
                                                            while idx < _27100:
                                                                mem[s] = mem[t + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                t = t + 32
                                                                continue 
                                                            mem[_25996 + 64] = (32 * _27100) + 160
                                                            _46020 = mem[(4 * ceil32(return_data.size)) + 192]
                                                            mem[_25996 + (32 * _27100) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                            mem[_25996 + (32 * _27100) + 192 len 32 * _46020] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46020]
                                                            mem[_25996 + 96] = msg.sender
                                                            emit 0x7c53e1df: mem[mem[64] len _25996 + (32 * _27100) + (32 * _46020) + -mem[64] + 192]
                                                    else:
                                                        if 1 == sub_764d55f7[arg1]:
                                                            mem[(4 * ceil32(return_data.size)) + 128] = 2
                                                            mem[(4 * ceil32(return_data.size)) + 224] = 2
                                                            mem[64] = (4 * ceil32(return_data.size)) + 320
                                                            mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if 0 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                                revert with 0, 17
                                                            mem[(4 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[(4 * ceil32(return_data.size)) + 192] = this.address
                                                            mem[(4 * ceil32(return_data.size)) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27826 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27826] = return_data.size
                                                                        mem[_27826 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25993 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27096 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27096:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25993 + 64] = (32 * _27096) + 160
                                                                _46018 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                mem[_25993 + (32 * _27096) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                mem[_25993 + (32 * _27096) + 192 len 32 * _46018] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46018]
                                                                mem[_25993 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25993 + (32 * _27096) + (32 * _46018) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 2:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27824 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        _28715 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256]
                                                                        _29674 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27824)
                                                                        mem[mem[64] + 100] = _28715
                                                                        _29675 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29675 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29675 + 36 len 28]
                                                                        mem[64] = _29674 + 196
                                                                        mem[_29674 + 132] = 32
                                                                        mem[_29674 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34624 = mem[_29675]
                                                                        s = 0
                                                                        while s < _34624:
                                                                            mem[s + _29674 + 196] = mem[s + _29675 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34624) > _34624:
                                                                            mem[_34624 + _29674 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29674 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29674 + 200 len _34624 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29674 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29674 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29674 + 264] = mem[idx + _29674 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29674 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29674 + ceil32(return_data.size) + 197
                                                                            mem[_29674 + 196] = return_data.size
                                                                            mem[_29674 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29674 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29674 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29674 + ceil32(return_data.size) + 265] = mem[idx + _29674 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29674 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29674 + 228] == bool(mem[_29674 + 228])
                                                                                if not mem[_29674 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25991 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27094 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27094:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25991 + 64] = (32 * _27094) + 160
                                                                _46015 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                mem[_25991 + (32 * _27094) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                mem[_25991 + (32 * _27094) + 192 len 32 * _46015] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46015]
                                                                mem[_25991 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25991 + (32 * _27094) + (32 * _46015) + -mem[64] + 192]
                                                else:
                                                    if not sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(4 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(4 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (4 * ceil32(return_data.size)) + 256
                                                            mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(4 * ceil32(return_data.size)) + 224] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27817 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27817] = return_data.size
                                                                        mem[_27817 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25978 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27078 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27078:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25978 + 64] = (32 * _27078) + 160
                                                                _46003 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_25978 + (32 * _27078) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_25978 + (32 * _27078) + 192 len 32 * _46003] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46003]
                                                                mem[_25978 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25978 + (32 * _27078) + (32 * _46003) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27815 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28700 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224]
                                                                        _29659 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27815)
                                                                        mem[mem[64] + 100] = _28700
                                                                        _29660 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29660 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29660 + 36 len 28]
                                                                        mem[64] = _29659 + 196
                                                                        mem[_29659 + 132] = 32
                                                                        mem[_29659 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34594 = mem[_29660]
                                                                        s = 0
                                                                        while s < _34594:
                                                                            mem[s + _29659 + 196] = mem[s + _29660 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34594) > _34594:
                                                                            mem[_34594 + _29659 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29659 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29659 + 200 len _34594 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29659 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29659 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29659 + 264] = mem[idx + _29659 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29659 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29659 + ceil32(return_data.size) + 197
                                                                            mem[_29659 + 196] = return_data.size
                                                                            mem[_29659 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29659 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29659 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29659 + ceil32(return_data.size) + 265] = mem[idx + _29659 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29659 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29659 + 228] == bool(mem[_29659 + 228])
                                                                                if not mem[_29659 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25976 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27076 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27076:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25976 + 64] = (32 * _27076) + 160
                                                                _46000 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_25976 + (32 * _27076) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_25976 + (32 * _27076) + 192 len 32 * _46000] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46000]
                                                                mem[_25976 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25976 + (32 * _27076) + (32 * _46000) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(4 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(4 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (4 * ceil32(return_data.size)) + 320
                                                                mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(4 * ceil32(return_data.size)) + 256] = 0
                                                                mem[(4 * ceil32(return_data.size)) + 192] = this.address
                                                                if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                                    revert with 0, 17
                                                                mem[(4 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27814 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27814] = return_data.size
                                                                            mem[_27814 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25973 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27072 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27072:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25973 + 64] = (32 * _27072) + 160
                                                                    _45998 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_25973 + (32 * _27072) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_25973 + (32 * _27072) + 192 len 32 * _45998] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _45998]
                                                                    mem[_25973 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25973 + (32 * _27072) + (32 * _45998) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27812 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28695 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256]
                                                                            _29654 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27812)
                                                                            mem[mem[64] + 100] = _28695
                                                                            _29655 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29655 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29655 + 36 len 28]
                                                                            mem[64] = _29654 + 196
                                                                            mem[_29654 + 132] = 32
                                                                            mem[_29654 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34584 = mem[_29655]
                                                                            s = 0
                                                                            while s < _34584:
                                                                                mem[s + _29654 + 196] = mem[s + _29655 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34584) > _34584:
                                                                                mem[_34584 + _29654 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29654 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29654 + 200 len _34584 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29654 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29654 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29654 + 264] = mem[idx + _29654 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29654 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29654 + ceil32(return_data.size) + 197
                                                                                mem[_29654 + 196] = return_data.size
                                                                                mem[_29654 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29654 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29654 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29654 + ceil32(return_data.size) + 265] = mem[idx + _29654 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29654 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29654 + 228] == bool(mem[_29654 + 228])
                                                                                    if not mem[_29654 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25971 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27070 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27070:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25971 + 64] = (32 * _27070) + 160
                                                                    _45995 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_25971 + (32 * _27070) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_25971 + (32 * _27070) + 192 len 32 * _45995] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _45995]
                                                                    mem[_25971 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25971 + (32 * _27070) + (32 * _45995) + -mem[64] + 192]
                                                    else:
                                                        if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                            revert with 0, 17
                                                        sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] = sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] + sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(4 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(4 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (4 * ceil32(return_data.size)) + 256
                                                            mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(4 * ceil32(return_data.size)) + 224] = 0
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27823 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27823] = return_data.size
                                                                        mem[_27823 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25988 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27090 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27090:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25988 + 64] = (32 * _27090) + 160
                                                                _46013 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_25988 + (32 * _27090) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_25988 + (32 * _27090) + 192 len 32 * _46013] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46013]
                                                                mem[_25988 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25988 + (32 * _27090) + (32 * _46013) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27821 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28710 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224]
                                                                        _29669 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27821)
                                                                        mem[mem[64] + 100] = _28710
                                                                        _29670 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29670 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29670 + 36 len 28]
                                                                        mem[64] = _29669 + 196
                                                                        mem[_29669 + 132] = 32
                                                                        mem[_29669 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34614 = mem[_29670]
                                                                        s = 0
                                                                        while s < _34614:
                                                                            mem[s + _29669 + 196] = mem[s + _29670 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34614) > _34614:
                                                                            mem[_34614 + _29669 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29669 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29669 + 200 len _34614 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29669 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29669 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29669 + 264] = mem[idx + _29669 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29669 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29669 + ceil32(return_data.size) + 197
                                                                            mem[_29669 + 196] = return_data.size
                                                                            mem[_29669 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29669 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29669 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29669 + ceil32(return_data.size) + 265] = mem[idx + _29669 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29669 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29669 + 228] == bool(mem[_29669 + 228])
                                                                                if not mem[_29669 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25986 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27088 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27088:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25986 + 64] = (32 * _27088) + 160
                                                                _46010 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_25986 + (32 * _27088) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_25986 + (32 * _27088) + 192 len 32 * _46010] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _46010]
                                                                mem[_25986 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25986 + (32 * _27088) + (32 * _46010) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(4 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(4 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (4 * ceil32(return_data.size)) + 320
                                                                mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(4 * ceil32(return_data.size)) + 256] = 0
                                                                mem[(4 * ceil32(return_data.size)) + 192] = this.address
                                                                if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)):
                                                                    revert with 0, 17
                                                                mem[(4 * ceil32(return_data.size)) + 288] = sub_57ba1b20[arg1].field_0
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27820 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27820] = return_data.size
                                                                            mem[_27820 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25983 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27084 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27084:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25983 + 64] = (32 * _27084) + 160
                                                                    _46008 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_25983 + (32 * _27084) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_25983 + (32 * _27084) + 192 len 32 * _46008] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46008]
                                                                    mem[_25983 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25983 + (32 * _27084) + (32 * _46008) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27818 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28705 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256]
                                                                            _29664 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27818)
                                                                            mem[mem[64] + 100] = _28705
                                                                            _29665 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29665 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29665 + 36 len 28]
                                                                            mem[64] = _29664 + 196
                                                                            mem[_29664 + 132] = 32
                                                                            mem[_29664 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34604 = mem[_29665]
                                                                            s = 0
                                                                            while s < _34604:
                                                                                mem[s + _29664 + 196] = mem[s + _29665 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34604) > _34604:
                                                                                mem[_34604 + _29664 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29664 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29664 + 200 len _34604 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29664 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29664 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29664 + 264] = mem[idx + _29664 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29664 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29664 + ceil32(return_data.size) + 197
                                                                                mem[_29664 + 196] = return_data.size
                                                                                mem[_29664 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29664 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29664 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29664 + ceil32(return_data.size) + 265] = mem[idx + _29664 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29664 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29664 + 228] == bool(mem[_29664 + 228])
                                                                                    if not mem[_29664 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27082 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27082:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _27082) + 160
                                                                    _46005 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _27082) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[mem[64] + (32 * _27082) + 192 len 32 * _46005] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _46005]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27082) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27082) + (32 * _46005) + 64]
                                                require ext_code.size(stor107)
                                                call stor107.0x23b872dd with:
                                                     gas gas_remaining wei
                                                    args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                sub_57ba1b20[arg1].field_928 = 0
                                                emit 0xcc45266b: sub_57ba1b20[arg1].field_0, sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100), 0, sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                            else:
                                                if sub_57ba1b20[arg1].field_256 > 100:
                                                    revert with 0, 'percent invalid'
                                                if not sub_57ba1b20[arg1].field_0:
                                                    if sub_57ba1b20[arg1].field_0 < sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) < 0:
                                                        revert with 0, 17
                                                    if sub_b24fea7b[stor108[arg1]] > !(sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                        revert with 0, 17
                                                    sub_b24fea7b[stor108[arg1]] += sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                    if sub_57ba1b20[arg1].field_768 != sub_57ba1b20[arg1].field_512:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(4 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(4 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (4 * ceil32(return_data.size)) + 256
                                                            mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            mem[(4 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            mem[32] = 109
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27805 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27805] = return_data.size
                                                                        mem[_27805 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27054 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27054:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[mem[64] + 64] = (32 * _27054) + 160
                                                                _45983 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[mem[64] + (32 * _27054) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[mem[64] + (32 * _27054) + 192 len 32 * _45983] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _45983]
                                                                mem[mem[64] + 96] = msg.sender
                                                                emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27054) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27054) + (32 * _45983) + 64]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27803 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28680 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224]
                                                                        _29639 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27803)
                                                                        mem[mem[64] + 100] = _28680
                                                                        _29640 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29640 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29640 + 36 len 28]
                                                                        mem[64] = _29639 + 196
                                                                        mem[_29639 + 132] = 32
                                                                        mem[_29639 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34554 = mem[_29640]
                                                                        s = 0
                                                                        while s < _34554:
                                                                            mem[s + _29639 + 196] = mem[s + _29640 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34554) > _34554:
                                                                            mem[_34554 + _29639 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29639 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29639 + 200 len _34554 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29639 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29639 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29639 + 264] = mem[idx + _29639 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29639 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29639 + ceil32(return_data.size) + 197
                                                                            mem[_29639 + 196] = return_data.size
                                                                            mem[_29639 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29639 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29639 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29639 + ceil32(return_data.size) + 265] = mem[idx + _29639 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29639 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29639 + 228] == bool(mem[_29639 + 228])
                                                                                if not mem[_29639 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25956 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27052 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27052:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25956 + 64] = (32 * _27052) + 160
                                                                _45980 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_25956 + (32 * _27052) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_25956 + (32 * _27052) + 192 len 32 * _45980] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _45980]
                                                                mem[_25956 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25956 + (32 * _27052) + (32 * _45980) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(4 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(4 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (4 * ceil32(return_data.size)) + 320
                                                                mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(4 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[(4 * ceil32(return_data.size)) + 192] = this.address
                                                                if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > -1:
                                                                    revert with 0, 17
                                                                mem[(4 * ceil32(return_data.size)) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27802 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27802] = return_data.size
                                                                            mem[_27802 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25953 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27048 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27048:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25953 + 64] = (32 * _27048) + 160
                                                                    _45978 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_25953 + (32 * _27048) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_25953 + (32 * _27048) + 192 len 32 * _45978] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _45978]
                                                                    mem[_25953 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25953 + (32 * _27048) + (32 * _45978) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27800 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28675 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256]
                                                                            _29634 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27800)
                                                                            mem[mem[64] + 100] = _28675
                                                                            _29635 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29635 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29635 + 36 len 28]
                                                                            mem[64] = _29634 + 196
                                                                            mem[_29634 + 132] = 32
                                                                            mem[_29634 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34544 = mem[_29635]
                                                                            s = 0
                                                                            while s < _34544:
                                                                                mem[s + _29634 + 196] = mem[s + _29635 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34544) > _34544:
                                                                                mem[_34544 + _29634 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29634 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29634 + 200 len _34544 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29634 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29634 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29634 + 264] = mem[idx + _29634 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29634 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29634 + ceil32(return_data.size) + 197
                                                                                mem[_29634 + 196] = return_data.size
                                                                                mem[_29634 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29634 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29634 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29634 + ceil32(return_data.size) + 265] = mem[idx + _29634 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29634 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29634 + 228] == bool(mem[_29634 + 228])
                                                                                    if not mem[_29634 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25951 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27046 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27046:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25951 + 64] = (32 * _27046) + 160
                                                                    _45975 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_25951 + (32 * _27046) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_25951 + (32 * _27046) + 192 len 32 * _45975] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _45975]
                                                                    mem[_25951 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25951 + (32 * _27046) + (32 * _45975) + -mem[64] + 192]
                                                    else:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(4 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(4 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (4 * ceil32(return_data.size)) + 256
                                                            mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) > -1:
                                                                revert with 0, 17
                                                            mem[(4 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27811 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27811] = return_data.size
                                                                        mem[_27811 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25968 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27066 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27066:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25968 + 64] = (32 * _27066) + 160
                                                                _45993 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_25968 + (32 * _27066) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_25968 + (32 * _27066) + 192 len 32 * _45993] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _45993]
                                                                mem[_25968 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25968 + (32 * _27066) + (32 * _45993) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27809 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28690 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224]
                                                                        _29649 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27809)
                                                                        mem[mem[64] + 100] = _28690
                                                                        _29650 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29650 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29650 + 36 len 28]
                                                                        mem[64] = _29649 + 196
                                                                        mem[_29649 + 132] = 32
                                                                        mem[_29649 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34574 = mem[_29650]
                                                                        s = 0
                                                                        while s < _34574:
                                                                            mem[s + _29649 + 196] = mem[s + _29650 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34574) > _34574:
                                                                            mem[_34574 + _29649 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29649 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29649 + 200 len _34574 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29649 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29649 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29649 + 264] = mem[idx + _29649 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29649 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29649 + ceil32(return_data.size) + 197
                                                                            mem[_29649 + 196] = return_data.size
                                                                            mem[_29649 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29649 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29649 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29649 + ceil32(return_data.size) + 265] = mem[idx + _29649 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29649 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29649 + 228] == bool(mem[_29649 + 228])
                                                                                if not mem[_29649 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25966 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27064 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27064:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25966 + 64] = (32 * _27064) + 160
                                                                _45990 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_25966 + (32 * _27064) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_25966 + (32 * _27064) + 192 len 32 * _45990] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _45990]
                                                                mem[_25966 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25966 + (32 * _27064) + (32 * _45990) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(4 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(4 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (4 * ceil32(return_data.size)) + 320
                                                                mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) > -1:
                                                                    revert with 0, 17
                                                                mem[(4 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[(4 * ceil32(return_data.size)) + 192] = this.address
                                                                mem[(4 * ceil32(return_data.size)) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27808 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27808] = return_data.size
                                                                            mem[_27808 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25963 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27060 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27060:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25963 + 64] = (32 * _27060) + 160
                                                                    _45988 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_25963 + (32 * _27060) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_25963 + (32 * _27060) + 192 len 32 * _45988] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _45988]
                                                                    mem[_25963 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25963 + (32 * _27060) + (32 * _45988) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27806 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28685 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256]
                                                                            _29644 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27806)
                                                                            mem[mem[64] + 100] = _28685
                                                                            _29645 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29645 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29645 + 36 len 28]
                                                                            mem[64] = _29644 + 196
                                                                            mem[_29644 + 132] = 32
                                                                            mem[_29644 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34564 = mem[_29645]
                                                                            s = 0
                                                                            while s < _34564:
                                                                                mem[s + _29644 + 196] = mem[s + _29645 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34564) > _34564:
                                                                                mem[_34564 + _29644 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29644 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29644 + 200 len _34564 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29644 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29644 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29644 + 264] = mem[idx + _29644 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29644 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29644 + ceil32(return_data.size) + 197
                                                                                mem[_29644 + 196] = return_data.size
                                                                                mem[_29644 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29644 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29644 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29644 + ceil32(return_data.size) + 265] = mem[idx + _29644 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29644 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29644 + 228] == bool(mem[_29644 + 228])
                                                                                    if not mem[_29644 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25961 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27058 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27058:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25961 + 64] = (32 * _27058) + 160
                                                                    _45985 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_25961 + (32 * _27058) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_25961 + (32 * _27058) + 192 len 32 * _45985] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _45985]
                                                                    mem[_25961 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25961 + (32 * _27058) + (32 * _45985) + -mem[64] + 192]
                                                    require ext_code.size(stor107)
                                                    call stor107.0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    sub_57ba1b20[arg1].field_928 = 0
                                                    emit 0xcc45266b: sub_57ba1b20[arg1].field_0, sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100, 0, sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100), sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
                                                else:
                                                    if sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / sub_57ba1b20[arg1].field_0 != sub_57ba1b20[arg1].field_256:
                                                        revert with 0, 'arithmetic error'
                                                    if sub_57ba1b20[arg1].field_0 < sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100:
                                                        revert with 0, 17
                                                    if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) < sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                        revert with 0, 17
                                                    if sub_b24fea7b[stor108[arg1]] > !(sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100):
                                                        revert with 0, 17
                                                    sub_b24fea7b[stor108[arg1]] += sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                    if sub_57ba1b20[arg1].field_768 == sub_57ba1b20[arg1].field_512:
                                                        if not sub_764d55f7[arg1]:
                                                            mem[(4 * ceil32(return_data.size)) + 128] = 1
                                                            mem[(4 * ceil32(return_data.size)) + 192] = 1
                                                            mem[64] = (4 * ceil32(return_data.size)) + 256
                                                            mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                            if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            mem[(4 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                            mem[0] = sub_764d55f7[arg1]
                                                            if not sub_6aafcaa9[stor108[arg1]]:
                                                                revert with 0, 'pay: token addr not exists'
                                                            if not sub_764d55f7[arg1]:
                                                                idx = 0
                                                                s = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                        revert with 0, 50
                                                                    call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                       value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224] wei
                                                                         gas gas_remaining wei
                                                                    if return_data.size:
                                                                        _27799 = mem[64]
                                                                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                        mem[_27799] = return_data.size
                                                                        mem[_27799 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                    if not ext_call.success:
                                                                        revert with 0, 'pays:transfer failed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    s = ext_call.success
                                                                    continue 
                                                                _25948 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27042 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27042:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25948 + 64] = (32 * _27042) + 160
                                                                _45973 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_25948 + (32 * _27042) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_25948 + (32 * _27042) + 192 len 32 * _45973] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _45973]
                                                                mem[_25948 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25948 + (32 * _27042) + (32 * _45973) + -mem[64] + 192]
                                                            else:
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                idx = 0
                                                                while idx < 1:
                                                                    if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                        revert with 0, 50
                                                                    if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        _27797 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        _28670 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224]
                                                                        _29629 = mem[64]
                                                                        mem[mem[64] + 36] = msg.sender
                                                                        mem[mem[64] + 68] = address(_27797)
                                                                        mem[mem[64] + 100] = _28670
                                                                        _29630 = mem[64]
                                                                        mem[mem[64]] = 100
                                                                        mem[64] = mem[64] + 132
                                                                        mem[_29630 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29630 + 36 len 28]
                                                                        mem[64] = _29629 + 196
                                                                        mem[_29629 + 132] = 32
                                                                        mem[_29629 + 164] = 'SafeERC20: low-level call failed'
                                                                        if eth.balance(this.address) < 0:
                                                                            revert with 0, 'Address: insufficient balance for call'
                                                                        if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                            revert with 0, 'Address: call to non-contract'
                                                                        _34534 = mem[_29630]
                                                                        s = 0
                                                                        while s < _34534:
                                                                            mem[s + _29629 + 196] = mem[s + _29630 + 32]
                                                                            s = s + 32
                                                                            continue 
                                                                        if ceil32(_34534) > _34534:
                                                                            mem[_34534 + _29629 + 196] = 0
                                                                        call sub_6aafcaa9[stor108[arg1]].mem[_29629 + 196 len 4] with:
                                                                             gas gas_remaining wei
                                                                            args mem[_29629 + 200 len _34534 - 4]
                                                                        if not return_data.size:
                                                                            if not ext_call.success:
                                                                                if mem[96]:
                                                                                    revert with memory
                                                                                      from 128
                                                                                       len mem[96]
                                                                                mem[_29629 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29629 + 200] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29629 + 264] = mem[idx + _29629 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29629 + 264]
                                                                            if mem[96]:
                                                                                require mem[96] >= 32
                                                                                require mem[128] == bool(mem[128])
                                                                                if not mem[128]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        else:
                                                                            mem[64] = _29629 + ceil32(return_data.size) + 197
                                                                            mem[_29629 + 196] = return_data.size
                                                                            mem[_29629 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                if return_data.size:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                mem[_29629 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                mem[_29629 + ceil32(return_data.size) + 201] = 32
                                                                                idx = 0
                                                                                while idx < 32:
                                                                                    mem[idx + _29629 + ceil32(return_data.size) + 265] = mem[idx + _29629 + 164]
                                                                                    idx = idx + 32
                                                                                    continue 
                                                                                revert with 0, 32, 32, mem[_29629 + ceil32(return_data.size) + 265]
                                                                            if return_data.size:
                                                                                require return_data.size >= 32
                                                                                require mem[_29629 + 228] == bool(mem[_29629 + 228])
                                                                                if not mem[_29629 + 228]:
                                                                                    revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                    if idx == -1:
                                                                        revert with 0, 17
                                                                    idx = idx + 1
                                                                    continue 
                                                                _25946 = mem[64]
                                                                mem[mem[64]] = sub_764d55f7[arg1]
                                                                mem[mem[64] + 32] = 128
                                                                _27040 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                idx = 0
                                                                s = mem[64] + 160
                                                                t = (4 * ceil32(return_data.size)) + 160
                                                                while idx < _27040:
                                                                    mem[s] = mem[t + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    t = t + 32
                                                                    continue 
                                                                mem[_25946 + 64] = (32 * _27040) + 160
                                                                _45970 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_25946 + (32 * _27040) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                mem[_25946 + (32 * _27040) + 192 len 32 * _45970] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _45970]
                                                                mem[_25946 + 96] = msg.sender
                                                                emit 0x7c53e1df: mem[mem[64] len _25946 + (32 * _27040) + (32 * _45970) + -mem[64] + 192]
                                                        else:
                                                            if 1 == sub_764d55f7[arg1]:
                                                                mem[(4 * ceil32(return_data.size)) + 128] = 2
                                                                mem[(4 * ceil32(return_data.size)) + 224] = 2
                                                                mem[64] = (4 * ceil32(return_data.size)) + 320
                                                                mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                if sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100) > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                    revert with 0, 17
                                                                mem[(4 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[(4 * ceil32(return_data.size)) + 192] = this.address
                                                                mem[(4 * ceil32(return_data.size)) + 288] = sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27796 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27796] = return_data.size
                                                                            mem[_27796 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25943 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27036 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27036:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25943 + 64] = (32 * _27036) + 160
                                                                    _45968 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_25943 + (32 * _27036) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_25943 + (32 * _27036) + 192 len 32 * _45968] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _45968]
                                                                    mem[_25943 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25943 + (32 * _27036) + (32 * _45968) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 2:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27794 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            _28665 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256]
                                                                            _29624 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27794)
                                                                            mem[mem[64] + 100] = _28665
                                                                            _29625 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29625 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29625 + 36 len 28]
                                                                            mem[64] = _29624 + 196
                                                                            mem[_29624 + 132] = 32
                                                                            mem[_29624 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34524 = mem[_29625]
                                                                            s = 0
                                                                            while s < _34524:
                                                                                mem[s + _29624 + 196] = mem[s + _29625 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34524) > _34524:
                                                                                mem[_34524 + _29624 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29624 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29624 + 200 len _34524 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29624 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29624 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29624 + 264] = mem[idx + _29624 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29624 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29624 + ceil32(return_data.size) + 197
                                                                                mem[_29624 + 196] = return_data.size
                                                                                mem[_29624 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29624 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29624 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29624 + ceil32(return_data.size) + 265] = mem[idx + _29624 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29624 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29624 + 228] == bool(mem[_29624 + 228])
                                                                                    if not mem[_29624 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25941 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27034 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27034:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25941 + 64] = (32 * _27034) + 160
                                                                    _45965 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_25941 + (32 * _27034) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                    mem[_25941 + (32 * _27034) + 192 len 32 * _45965] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _45965]
                                                                    mem[_25941 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25941 + (32 * _27034) + (32 * _45965) + -mem[64] + 192]
                                                    else:
                                                        if not sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100:
                                                            if not sub_764d55f7[arg1]:
                                                                mem[(4 * ceil32(return_data.size)) + 128] = 1
                                                                mem[(4 * ceil32(return_data.size)) + 192] = 1
                                                                mem[64] = (4 * ceil32(return_data.size)) + 256
                                                                mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(4 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                mem[32] = 109
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27787 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27787] = return_data.size
                                                                            mem[_27787 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27018 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27018:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[mem[64] + 64] = (32 * _27018) + 160
                                                                    _45953 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                    mem[mem[64] + (32 * _27018) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                    mem[mem[64] + (32 * _27018) + 192 len 32 * _45953] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _45953]
                                                                    mem[mem[64] + 96] = msg.sender
                                                                    emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27018) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27018) + (32 * _45953) + 64]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27785 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                                revert with 0, 50
                                                                            _28650 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224]
                                                                            _29609 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27785)
                                                                            mem[mem[64] + 100] = _28650
                                                                            _29610 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29610 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29610 + 36 len 28]
                                                                            mem[64] = _29609 + 196
                                                                            mem[_29609 + 132] = 32
                                                                            mem[_29609 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34494 = mem[_29610]
                                                                            s = 0
                                                                            while s < _34494:
                                                                                mem[s + _29609 + 196] = mem[s + _29610 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34494) > _34494:
                                                                                mem[_34494 + _29609 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29609 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29609 + 200 len _34494 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29609 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29609 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29609 + 264] = mem[idx + _29609 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29609 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29609 + ceil32(return_data.size) + 197
                                                                                mem[_29609 + 196] = return_data.size
                                                                                mem[_29609 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29609 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29609 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29609 + ceil32(return_data.size) + 265] = mem[idx + _29609 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29609 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29609 + 228] == bool(mem[_29609 + 228])
                                                                                    if not mem[_29609 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25926 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27016 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27016:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25926 + 64] = (32 * _27016) + 160
                                                                    _45950 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                    mem[_25926 + (32 * _27016) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                    mem[_25926 + (32 * _27016) + 192 len 32 * _45950] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _45950]
                                                                    mem[_25926 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25926 + (32 * _27016) + (32 * _45950) + -mem[64] + 192]
                                                            else:
                                                                if 1 == sub_764d55f7[arg1]:
                                                                    mem[(4 * ceil32(return_data.size)) + 128] = 2
                                                                    mem[(4 * ceil32(return_data.size)) + 224] = 2
                                                                    mem[64] = (4 * ceil32(return_data.size)) + 320
                                                                    mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                    mem[(4 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[(4 * ceil32(return_data.size)) + 192] = this.address
                                                                    if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                        revert with 0, 17
                                                                    mem[(4 * ceil32(return_data.size)) + 288] = (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) + (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                                        revert with 0, 'pay: token addr not exists'
                                                                    if not sub_764d55f7[arg1]:
                                                                        idx = 0
                                                                        s = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                               value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256] wei
                                                                                 gas gas_remaining wei
                                                                            if return_data.size:
                                                                                _27784 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                mem[_27784] = return_data.size
                                                                                mem[_27784 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                revert with 0, 'pays:transfer failed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            s = ext_call.success
                                                                            continue 
                                                                        _25923 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _27012 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (4 * ceil32(return_data.size)) + 160
                                                                        while idx < _27012:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_25923 + 64] = (32 * _27012) + 160
                                                                        _45948 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                        mem[_25923 + (32 * _27012) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                        mem[_25923 + (32 * _27012) + 192 len 32 * _45948] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _45948]
                                                                        mem[_25923 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _25923 + (32 * _27012) + (32 * _45948) + -mem[64] + 192]
                                                                    else:
                                                                        mem[0] = sub_764d55f7[arg1]
                                                                        mem[32] = 109
                                                                        idx = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                                if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                    revert with 0, 50
                                                                                _27782 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                                if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                                    revert with 0, 50
                                                                                _28645 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256]
                                                                                _29604 = mem[64]
                                                                                mem[mem[64] + 36] = msg.sender
                                                                                mem[mem[64] + 68] = address(_27782)
                                                                                mem[mem[64] + 100] = _28645
                                                                                _29605 = mem[64]
                                                                                mem[mem[64]] = 100
                                                                                mem[64] = mem[64] + 132
                                                                                mem[_29605 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29605 + 36 len 28]
                                                                                mem[64] = _29604 + 196
                                                                                mem[_29604 + 132] = 32
                                                                                mem[_29604 + 164] = 'SafeERC20: low-level call failed'
                                                                                if eth.balance(this.address) < 0:
                                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                    revert with 0, 'Address: call to non-contract'
                                                                                _34484 = mem[_29605]
                                                                                s = 0
                                                                                while s < _34484:
                                                                                    mem[s + _29604 + 196] = mem[s + _29605 + 32]
                                                                                    s = s + 32
                                                                                    continue 
                                                                                if ceil32(_34484) > _34484:
                                                                                    mem[_34484 + _29604 + 196] = 0
                                                                                call sub_6aafcaa9[stor108[arg1]].mem[_29604 + 196 len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[_29604 + 200 len _34484 - 4]
                                                                                if not return_data.size:
                                                                                    if not ext_call.success:
                                                                                        if mem[96]:
                                                                                            revert with memory
                                                                                              from 128
                                                                                               len mem[96]
                                                                                        mem[_29604 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29604 + 200] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29604 + 264] = mem[idx + _29604 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29604 + 264]
                                                                                    if mem[96]:
                                                                                        require mem[96] >= 32
                                                                                        require mem[128] == bool(mem[128])
                                                                                        if not mem[128]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                                else:
                                                                                    mem[64] = _29604 + ceil32(return_data.size) + 197
                                                                                    mem[_29604 + 196] = return_data.size
                                                                                    mem[_29604 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                    if not ext_call.success:
                                                                                        if return_data.size:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        mem[_29604 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29604 + ceil32(return_data.size) + 201] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29604 + ceil32(return_data.size) + 265] = mem[idx + _29604 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29604 + ceil32(return_data.size) + 265]
                                                                                    if return_data.size:
                                                                                        require return_data.size >= 32
                                                                                        require mem[_29604 + 228] == bool(mem[_29604 + 228])
                                                                                        if not mem[_29604 + 228]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            continue 
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _27010 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (4 * ceil32(return_data.size)) + 160
                                                                        while idx < _27010:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[mem[64] + 64] = (32 * _27010) + 160
                                                                        _45945 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                        mem[mem[64] + (32 * _27010) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                        mem[mem[64] + (32 * _27010) + 192 len 32 * _45945] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _45945]
                                                                        mem[mem[64] + 96] = msg.sender
                                                                        emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27010) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27010) + (32 * _45945) + 64]
                                                        else:
                                                            if sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                revert with 0, 17
                                                            sub_fc2d2735[stor105[arg1].field_512][stor108[arg1]] += sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100
                                                            if not sub_764d55f7[arg1]:
                                                                mem[(4 * ceil32(return_data.size)) + 128] = 1
                                                                mem[(4 * ceil32(return_data.size)) + 192] = 1
                                                                mem[64] = (4 * ceil32(return_data.size)) + 256
                                                                mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                mem[(4 * ceil32(return_data.size)) + 224] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                mem[0] = sub_764d55f7[arg1]
                                                                if not sub_6aafcaa9[stor108[arg1]]:
                                                                    revert with 0, 'pay: token addr not exists'
                                                                if not sub_764d55f7[arg1]:
                                                                    idx = 0
                                                                    s = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                            revert with 0, 50
                                                                        call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                           value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224] wei
                                                                             gas gas_remaining wei
                                                                        if return_data.size:
                                                                            _27793 = mem[64]
                                                                            mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                            mem[_27793] = return_data.size
                                                                            mem[_27793 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                        if not ext_call.success:
                                                                            revert with 0, 'pays:transfer failed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        s = ext_call.success
                                                                        continue 
                                                                    _25938 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27030 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27030:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25938 + 64] = (32 * _27030) + 160
                                                                    _45963 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                    mem[_25938 + (32 * _27030) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                    mem[_25938 + (32 * _27030) + 192 len 32 * _45963] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _45963]
                                                                    mem[_25938 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25938 + (32 * _27030) + (32 * _45963) + -mem[64] + 192]
                                                                else:
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    mem[32] = 109
                                                                    idx = 0
                                                                    while idx < 1:
                                                                        if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                            revert with 0, 50
                                                                        if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            _27791 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 192]:
                                                                                revert with 0, 50
                                                                            _28660 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 224]
                                                                            _29619 = mem[64]
                                                                            mem[mem[64] + 36] = msg.sender
                                                                            mem[mem[64] + 68] = address(_27791)
                                                                            mem[mem[64] + 100] = _28660
                                                                            _29620 = mem[64]
                                                                            mem[mem[64]] = 100
                                                                            mem[64] = mem[64] + 132
                                                                            mem[_29620 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29620 + 36 len 28]
                                                                            mem[64] = _29619 + 196
                                                                            mem[_29619 + 132] = 32
                                                                            mem[_29619 + 164] = 'SafeERC20: low-level call failed'
                                                                            if eth.balance(this.address) < 0:
                                                                                revert with 0, 'Address: insufficient balance for call'
                                                                            if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                revert with 0, 'Address: call to non-contract'
                                                                            _34514 = mem[_29620]
                                                                            s = 0
                                                                            while s < _34514:
                                                                                mem[s + _29619 + 196] = mem[s + _29620 + 32]
                                                                                s = s + 32
                                                                                continue 
                                                                            if ceil32(_34514) > _34514:
                                                                                mem[_34514 + _29619 + 196] = 0
                                                                            call sub_6aafcaa9[stor108[arg1]].mem[_29619 + 196 len 4] with:
                                                                                 gas gas_remaining wei
                                                                                args mem[_29619 + 200 len _34514 - 4]
                                                                            if not return_data.size:
                                                                                if not ext_call.success:
                                                                                    if mem[96]:
                                                                                        revert with memory
                                                                                          from 128
                                                                                           len mem[96]
                                                                                    mem[_29619 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29619 + 200] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29619 + 264] = mem[idx + _29619 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29619 + 264]
                                                                                if mem[96]:
                                                                                    require mem[96] >= 32
                                                                                    require mem[128] == bool(mem[128])
                                                                                    if not mem[128]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            else:
                                                                                mem[64] = _29619 + ceil32(return_data.size) + 197
                                                                                mem[_29619 + 196] = return_data.size
                                                                                mem[_29619 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                if not ext_call.success:
                                                                                    if return_data.size:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    mem[_29619 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                    mem[_29619 + ceil32(return_data.size) + 201] = 32
                                                                                    idx = 0
                                                                                    while idx < 32:
                                                                                        mem[idx + _29619 + ceil32(return_data.size) + 265] = mem[idx + _29619 + 164]
                                                                                        idx = idx + 32
                                                                                        continue 
                                                                                    revert with 0, 32, 32, mem[_29619 + ceil32(return_data.size) + 265]
                                                                                if return_data.size:
                                                                                    require return_data.size >= 32
                                                                                    require mem[_29619 + 228] == bool(mem[_29619 + 228])
                                                                                    if not mem[_29619 + 228]:
                                                                                        revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                        if idx == -1:
                                                                            revert with 0, 17
                                                                        idx = idx + 1
                                                                        continue 
                                                                    _25936 = mem[64]
                                                                    mem[mem[64]] = sub_764d55f7[arg1]
                                                                    mem[mem[64] + 32] = 128
                                                                    _27028 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                    idx = 0
                                                                    s = mem[64] + 160
                                                                    t = (4 * ceil32(return_data.size)) + 160
                                                                    while idx < _27028:
                                                                        mem[s] = mem[t + 12 len 20]
                                                                        idx = idx + 1
                                                                        s = s + 32
                                                                        t = t + 32
                                                                        continue 
                                                                    mem[_25936 + 64] = (32 * _27028) + 160
                                                                    _45960 = mem[(4 * ceil32(return_data.size)) + 192]
                                                                    mem[_25936 + (32 * _27028) + 160] = mem[(4 * ceil32(return_data.size)) + 192]
                                                                    mem[_25936 + (32 * _27028) + 192 len 32 * _45960] = mem[(4 * ceil32(return_data.size)) + 224 len 32 * _45960]
                                                                    mem[_25936 + 96] = msg.sender
                                                                    emit 0x7c53e1df: mem[mem[64] len _25936 + (32 * _27028) + (32 * _45960) + -mem[64] + 192]
                                                            else:
                                                                if 1 == sub_764d55f7[arg1]:
                                                                    mem[(4 * ceil32(return_data.size)) + 128] = 2
                                                                    mem[(4 * ceil32(return_data.size)) + 224] = 2
                                                                    mem[64] = (4 * ceil32(return_data.size)) + 320
                                                                    mem[(4 * ceil32(return_data.size)) + 160] = sub_57ba1b20[arg1].field_768
                                                                    mem[(4 * ceil32(return_data.size)) + 256] = sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[(4 * ceil32(return_data.size)) + 192] = this.address
                                                                    if sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100 > !(sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100):
                                                                        revert with 0, 17
                                                                    mem[(4 * ceil32(return_data.size)) + 288] = (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) + (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100)
                                                                    mem[0] = sub_764d55f7[arg1]
                                                                    if not sub_6aafcaa9[stor108[arg1]]:
                                                                        revert with 0, 'pay: token addr not exists'
                                                                    if not sub_764d55f7[arg1]:
                                                                        idx = 0
                                                                        s = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                                revert with 0, 50
                                                                            call mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20] with:
                                                                               value mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256] wei
                                                                                 gas gas_remaining wei
                                                                            if return_data.size:
                                                                                _27790 = mem[64]
                                                                                mem[64] = mem[64] + ceil32(return_data.size) + 1
                                                                                mem[_27790] = return_data.size
                                                                                mem[_27790 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                            if not ext_call.success:
                                                                                revert with 0, 'pays:transfer failed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            s = ext_call.success
                                                                            continue 
                                                                        _25933 = mem[64]
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _27024 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (4 * ceil32(return_data.size)) + 160
                                                                        while idx < _27024:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[_25933 + 64] = (32 * _27024) + 160
                                                                        _45958 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                        mem[_25933 + (32 * _27024) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                        mem[_25933 + (32 * _27024) + 192 len 32 * _45958] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _45958]
                                                                        mem[_25933 + 96] = msg.sender
                                                                        emit 0x7c53e1df: mem[mem[64] len _25933 + (32 * _27024) + (32 * _45958) + -mem[64] + 192]
                                                                    else:
                                                                        mem[0] = sub_764d55f7[arg1]
                                                                        mem[32] = 109
                                                                        idx = 0
                                                                        while idx < 2:
                                                                            if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                revert with 0, 50
                                                                            if mem[(32 * idx) + (4 * ceil32(return_data.size)) + 172 len 20]:
                                                                                if idx >= mem[(4 * ceil32(return_data.size)) + 128]:
                                                                                    revert with 0, 50
                                                                                _27788 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 160]
                                                                                if idx >= mem[(4 * ceil32(return_data.size)) + 224]:
                                                                                    revert with 0, 50
                                                                                _28655 = mem[(32 * idx) + (4 * ceil32(return_data.size)) + 256]
                                                                                _29614 = mem[64]
                                                                                mem[mem[64] + 36] = msg.sender
                                                                                mem[mem[64] + 68] = address(_27788)
                                                                                mem[mem[64] + 100] = _28655
                                                                                _29615 = mem[64]
                                                                                mem[mem[64]] = 100
                                                                                mem[64] = mem[64] + 132
                                                                                mem[_29615 + 32] = 0x23b872dd00000000000000000000000000000000000000000000000000000000 or mem[_29615 + 36 len 28]
                                                                                mem[64] = _29614 + 196
                                                                                mem[_29614 + 132] = 32
                                                                                mem[_29614 + 164] = 'SafeERC20: low-level call failed'
                                                                                if eth.balance(this.address) < 0:
                                                                                    revert with 0, 'Address: insufficient balance for call'
                                                                                if not ext_code.size(sub_6aafcaa9[stor108[arg1]]):
                                                                                    revert with 0, 'Address: call to non-contract'
                                                                                _34504 = mem[_29615]
                                                                                s = 0
                                                                                while s < _34504:
                                                                                    mem[s + _29614 + 196] = mem[s + _29615 + 32]
                                                                                    s = s + 32
                                                                                    continue 
                                                                                if ceil32(_34504) > _34504:
                                                                                    mem[_34504 + _29614 + 196] = 0
                                                                                call sub_6aafcaa9[stor108[arg1]].mem[_29614 + 196 len 4] with:
                                                                                     gas gas_remaining wei
                                                                                    args mem[_29614 + 200 len _34504 - 4]
                                                                                if not return_data.size:
                                                                                    if not ext_call.success:
                                                                                        if mem[96]:
                                                                                            revert with memory
                                                                                              from 128
                                                                                               len mem[96]
                                                                                        mem[_29614 + 196] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29614 + 200] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29614 + 264] = mem[idx + _29614 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29614 + 264]
                                                                                    if mem[96]:
                                                                                        require mem[96] >= 32
                                                                                        require mem[128] == bool(mem[128])
                                                                                        if not mem[128]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                                else:
                                                                                    mem[64] = _29614 + ceil32(return_data.size) + 197
                                                                                    mem[_29614 + 196] = return_data.size
                                                                                    mem[_29614 + 228 len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                                    if not ext_call.success:
                                                                                        if return_data.size:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        mem[_29614 + ceil32(return_data.size) + 197] = 0x8c379a000000000000000000000000000000000000000000000000000000000
                                                                                        mem[_29614 + ceil32(return_data.size) + 201] = 32
                                                                                        idx = 0
                                                                                        while idx < 32:
                                                                                            mem[idx + _29614 + ceil32(return_data.size) + 265] = mem[idx + _29614 + 164]
                                                                                            idx = idx + 32
                                                                                            continue 
                                                                                        revert with 0, 32, 32, mem[_29614 + ceil32(return_data.size) + 265]
                                                                                    if return_data.size:
                                                                                        require return_data.size >= 32
                                                                                        require mem[_29614 + 228] == bool(mem[_29614 + 228])
                                                                                        if not mem[_29614 + 228]:
                                                                                            revert with 0, 'SafeERC20: ERC20 operation did not succeed'
                                                                            if idx == -1:
                                                                                revert with 0, 17
                                                                            idx = idx + 1
                                                                            continue 
                                                                        mem[mem[64]] = sub_764d55f7[arg1]
                                                                        mem[mem[64] + 32] = 128
                                                                        _27022 = mem[(4 * ceil32(return_data.size)) + 128]
                                                                        mem[mem[64] + 128] = mem[(4 * ceil32(return_data.size)) + 128]
                                                                        idx = 0
                                                                        s = mem[64] + 160
                                                                        t = (4 * ceil32(return_data.size)) + 160
                                                                        while idx < _27022:
                                                                            mem[s] = mem[t + 12 len 20]
                                                                            idx = idx + 1
                                                                            s = s + 32
                                                                            t = t + 32
                                                                            continue 
                                                                        mem[mem[64] + 64] = (32 * _27022) + 160
                                                                        _45955 = mem[(4 * ceil32(return_data.size)) + 224]
                                                                        mem[mem[64] + (32 * _27022) + 160] = mem[(4 * ceil32(return_data.size)) + 224]
                                                                        mem[mem[64] + (32 * _27022) + 192 len 32 * _45955] = mem[(4 * ceil32(return_data.size)) + 256 len 32 * _45955]
                                                                        mem[mem[64] + 96] = msg.sender
                                                                        emit 0x7c53e1df: sub_764d55f7[arg1], 128, (32 * _27022) + 160, msg.sender, mem[mem[64] + 128 len (32 * _27022) + (32 * _45955) + 64]
                                                    require ext_code.size(stor107)
                                                    call stor107.0x23b872dd with:
                                                         gas gas_remaining wei
                                                        args sub_57ba1b20[arg1].field_768, msg.sender, arg1
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    sub_57ba1b20[arg1].field_928 = 0
                                                    emit 0xcc45266b: sub_57ba1b20[arg1].field_0, sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100, sub_57ba1b20[arg1].field_0 - (sub_f65e6912 * sub_57ba1b20[arg1].field_0 / 100) - (sub_57ba1b20[arg1].field_256 * sub_57ba1b20[arg1].field_0 / 100), sub_764d55f7[arg1], arg1, sub_57ba1b20[arg1].field_768, msg.sender
}



}
