contract main {




// =====================  Runtime code  =====================


#
#  - sub_0f343c8d(?)
#  - sub_72ac8f9f(?)
#
address stor0;
address stor1;
address stor2;
address stor3;
uint256 stor4;

function _fallback() payable {
    revert
}

function getPairAddress(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    staticcall stor1.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args address(arg1), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    return ext_call.return_data[12 len 20]
}

function sub_c055d955(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    staticcall address(arg1).0xdd62ed3e with:
            gas gas_remaining wei
           args msg.sender, stor0
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    if ext_call.return_data[0] < 1:
        call address(arg1).approve(address arg1, uint256 arg2) with:
             gas gas_remaining wei
            args msg.sender, stor4
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        require return_data.size >= 32
        require ext_call.return_data[0] == bool(ext_call.return_data[0])
    return ext_call.return_data[0]
}

function sub_922b94f5(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    mem[96] = 0x6fdde0300000000000000000000000000000000000000000000000000000000
    staticcall address(arg1).name() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    mem[96 len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = ceil32(return_data.size) + 96
    require return_data.size >= 32
    _4 = mem[96]
    require mem[96] <= test266151307()
    require mem[96] + 127 < return_data.size + 96
    _5 = mem[mem[96] + 96]
    if mem[mem[96] + 96] > test266151307():
        revert with 'NH{q', 65
    if ceil32(return_data.size) + ceil32(ceil32(mem[mem[96] + 96])) + 97 > test266151307() or ceil32(ceil32(mem[mem[96] + 96])) + 1 < 0:
        revert with 'NH{q', 65
    mem[64] = ceil32(return_data.size) + ceil32(ceil32(mem[mem[96] + 96])) + 97
    mem[ceil32(return_data.size) + 96] = _5
    require _4 + _5 + 32 <= return_data.size
    mem[ceil32(return_data.size) + 128 len ceil32(_5)] = mem[_4 + 128 len ceil32(_5)]
    if ceil32(_5) <= _5:
        mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
        staticcall address(arg1).0x95d89b41 with:
                gas gas_remaining wei
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _101 = mem[64]
        mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _105 = mem[_101]
        require mem[_101] <= test266151307()
        require _101 + mem[_101] + 31 < _101 + return_data.size
        _107 = mem[_101 + mem[_101]]
        if mem[_101 + mem[_101]] > test266151307():
            revert with 'NH{q', 65
        if _101 + ceil32(return_data.size) + ceil32(ceil32(mem[_101 + mem[_101]])) + 1 > test266151307() or ceil32(ceil32(mem[_101 + mem[_101]])) + 1 < 0:
            revert with 'NH{q', 65
        mem[64] = _101 + ceil32(return_data.size) + ceil32(ceil32(mem[_101 + mem[_101]])) + 1
        mem[_101 + ceil32(return_data.size)] = _107
        require _105 + _107 + 32 <= return_data.size
        mem[_101 + ceil32(return_data.size) + 32 len ceil32(_107)] = mem[_101 + _105 + 32 len ceil32(_107)]
        if ceil32(_107) <= _107:
            staticcall address(arg1).0x313ce567 with:
                    gas gas_remaining wei
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _195 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _203 = mem[_195]
            require mem[_195] == mem[_195 + 31 len 1]
            mem[mem[64] + 4] = msg.sender
            staticcall address(arg1).0x70a08231 with:
                    gas gas_remaining wei
                   args msg.sender
            mem[mem[64]] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            _213 = mem[64]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _219 = mem[_213]
            require mem[_213] == mem[_213]
            _223 = mem[64]
            mem[mem[64]] = 128
            mem[mem[64] + 128] = _5
            mem[mem[64] + 160 len ceil32(_5)] = mem[ceil32(return_data.size) + 128 len ceil32(_5)]
            if ceil32(_5) <= _5:
                mem[mem[64] + 32] = ceil32(_5) + 160
                mem[mem[64] + ceil32(_5) + 160] = _107
                mem[mem[64] + ceil32(_5) + 192 len ceil32(_107)] = mem[_101 + ceil32(return_data.size) + 32 len ceil32(_107)]
                if ceil32(_107) > _107:
                    mem[mem[64] + ceil32(_5) + _107 + 192] = 0
                mem[mem[64] + 64] = uint8(_203)
            else:
                mem[mem[64] + _5 + 160] = 0
                mem[mem[64] + 32] = ceil32(_5) + 160
                mem[_223 + ceil32(_5) + 160] = _107
                mem[_223 + ceil32(_5) + 192 len ceil32(_107)] = mem[_101 + ceil32(return_data.size) + 32 len ceil32(_107)]
                if ceil32(_107) > _107:
                    mem[_223 + ceil32(_5) + _107 + 192] = 0
                mem[_223 + 64] = uint8(_203)
            mem[_223 + 96] = _219
            return memory
              from mem[64]
               len _223 + ceil32(_5) + ceil32(_107) + -mem[64] + 192
        mem[_101 + ceil32(return_data.size) + _107 + 32] = 0
        staticcall address(arg1).0x313ce567 with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _201 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _205 = mem[_201]
        require mem[_201] == mem[_201 + 31 len 1]
        mem[mem[64] + 4] = msg.sender
        staticcall address(arg1).0x70a08231 with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _217 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _221 = mem[_217]
        require mem[_217] == mem[_217]
        _225 = mem[64]
        mem[mem[64]] = 128
        mem[mem[64] + 128] = _5
        mem[mem[64] + 160 len ceil32(_5)] = mem[ceil32(return_data.size) + 128 len ceil32(_5)]
        if ceil32(_5) <= _5:
            mem[mem[64] + 32] = ceil32(_5) + 160
            mem[mem[64] + ceil32(_5) + 160] = _107
            mem[mem[64] + ceil32(_5) + 192 len ceil32(_107)] = mem[_101 + ceil32(return_data.size) + 32 len ceil32(_107)]
            if ceil32(_107) > _107:
                mem[mem[64] + ceil32(_5) + _107 + 192] = 0
            mem[mem[64] + 64] = uint8(_205)
        else:
            mem[mem[64] + _5 + 160] = 0
            mem[mem[64] + 32] = ceil32(_5) + 160
            mem[_225 + ceil32(_5) + 160] = _107
            mem[_225 + ceil32(_5) + 192 len ceil32(_107)] = mem[_101 + ceil32(return_data.size) + 32 len ceil32(_107)]
            if ceil32(_107) > _107:
                mem[_225 + ceil32(_5) + _107 + 192] = 0
            mem[_225 + 64] = uint8(_205)
        mem[_225 + 96] = _221
        return memory
          from mem[64]
           len _225 + ceil32(_5) + ceil32(_107) + -mem[64] + 192
    mem[ceil32(return_data.size) + _5 + 128] = 0
    mem[mem[64]] = 0x95d89b4100000000000000000000000000000000000000000000000000000000
    staticcall address(arg1).0x95d89b41 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _104 = mem[64]
    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _106 = mem[_104]
    require mem[_104] <= test266151307()
    require _104 + mem[_104] + 31 < _104 + return_data.size
    _108 = mem[_104 + mem[_104]]
    if mem[_104 + mem[_104]] > test266151307():
        revert with 'NH{q', 65
    if _104 + ceil32(return_data.size) + ceil32(ceil32(mem[_104 + mem[_104]])) + 1 > test266151307() or ceil32(ceil32(mem[_104 + mem[_104]])) + 1 < 0:
        revert with 'NH{q', 65
    mem[64] = _104 + ceil32(return_data.size) + ceil32(ceil32(mem[_104 + mem[_104]])) + 1
    mem[_104 + ceil32(return_data.size)] = _108
    require _106 + _108 + 32 <= return_data.size
    mem[_104 + ceil32(return_data.size) + 32 len ceil32(_108)] = mem[_104 + _106 + 32 len ceil32(_108)]
    if ceil32(_108) <= _108:
        staticcall address(arg1).0x313ce567 with:
                gas gas_remaining wei
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _198 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _204 = mem[_198]
        require mem[_198] == mem[_198 + 31 len 1]
        mem[mem[64] + 4] = msg.sender
        staticcall address(arg1).0x70a08231 with:
                gas gas_remaining wei
               args msg.sender
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _215 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _220 = mem[_215]
        require mem[_215] == mem[_215]
        _224 = mem[64]
        mem[mem[64]] = 128
        mem[mem[64] + 128] = _5
        mem[mem[64] + 160 len ceil32(_5)] = mem[ceil32(return_data.size) + 128 len ceil32(_5)]
        if ceil32(_5) <= _5:
            mem[mem[64] + 32] = ceil32(_5) + 160
            mem[mem[64] + ceil32(_5) + 160] = _108
            mem[mem[64] + ceil32(_5) + 192 len ceil32(_108)] = mem[_104 + ceil32(return_data.size) + 32 len ceil32(_108)]
            if ceil32(_108) > _108:
                mem[mem[64] + ceil32(_5) + _108 + 192] = 0
            mem[mem[64] + 64] = uint8(_204)
        else:
            mem[mem[64] + _5 + 160] = 0
            mem[mem[64] + 32] = ceil32(_5) + 160
            mem[_224 + ceil32(_5) + 160] = _108
            mem[_224 + ceil32(_5) + 192 len ceil32(_108)] = mem[_104 + ceil32(return_data.size) + 32 len ceil32(_108)]
            if ceil32(_108) > _108:
                mem[_224 + ceil32(_5) + _108 + 192] = 0
            mem[_224 + 64] = uint8(_204)
        mem[_224 + 96] = _220
        return memory
          from mem[64]
           len _224 + ceil32(_5) + ceil32(_108) + -mem[64] + 192
    mem[_104 + ceil32(return_data.size) + _108 + 32] = 0
    staticcall address(arg1).0x313ce567 with:
            gas gas_remaining wei
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _202 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _206 = mem[_202]
    require mem[_202] == mem[_202 + 31 len 1]
    mem[mem[64] + 4] = msg.sender
    staticcall address(arg1).0x70a08231 with:
            gas gas_remaining wei
           args msg.sender
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    _218 = mem[64]
    mem[64] = mem[64] + ceil32(return_data.size)
    require return_data.size >= 32
    _222 = mem[_218]
    require mem[_218] == mem[_218]
    _226 = mem[64]
    mem[mem[64]] = 128
    mem[mem[64] + 128] = _5
    mem[mem[64] + 160 len ceil32(_5)] = mem[ceil32(return_data.size) + 128 len ceil32(_5)]
    if ceil32(_5) <= _5:
        mem[mem[64] + 32] = ceil32(_5) + 160
        mem[mem[64] + ceil32(_5) + 160] = _108
        mem[mem[64] + ceil32(_5) + 192 len ceil32(_108)] = mem[_104 + ceil32(return_data.size) + 32 len ceil32(_108)]
        if ceil32(_108) > _108:
            mem[mem[64] + ceil32(_5) + _108 + 192] = 0
        mem[mem[64] + 64] = uint8(_206)
    else:
        mem[mem[64] + _5 + 160] = 0
        mem[mem[64] + 32] = ceil32(_5) + 160
        mem[_226 + ceil32(_5) + 160] = _108
        mem[_226 + ceil32(_5) + 192 len ceil32(_108)] = mem[_104 + ceil32(return_data.size) + 32 len ceil32(_108)]
        if ceil32(_108) > _108:
            mem[_226 + ceil32(_5) + _108 + 192] = 0
        mem[_226 + 64] = uint8(_206)
    mem[_226 + 96] = _222
    return memory
      from mem[64]
       len _226 + ceil32(_5) + ceil32(_108) + -mem[64] + 192
}

function getBasePrice() payable {
    staticcall stor1.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args stor2, stor3
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    staticcall address(ext_call.return_data[0]).token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    staticcall address(ext_call.return_data[0]).0xd21220a7 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    staticcall address(ext_call.return_data[0]).0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    staticcall address(ext_call.return_data[0]).0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    staticcall address(ext_call.return_data[0]).getReserves() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    if address(ext_call.return_data[0]) == stor2:
        if not uint8(ext_call.return_data[0]):
            if not uint8(ext_call.return_data[0]):
                if not ext_call.return_data[18 len 14]:
                    revert with 'NH{q', 18
                return (ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not ext_call.return_data[18 len 14]:
                    revert with 'NH{q', 18
                return (ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
            s = 10
            t = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if s > -1 / s:
                    revert with 'NH{q', 17
                if not bool(idx):
                    s = s * s
                    t = t
                    idx = uint255(idx) * 0.5
                    continue 
                s = s * s
                t = t * s
                idx = uint255(idx) * 0.5
                continue 
            if t > -1 / s:
                revert with 'NH{q', 17
            if not t * s:
                revert with 'NH{q', 18
            if not ext_call.return_data[18 len 14]:
                revert with 'NH{q', 18
            return (ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
            if 10^uint8(ext_call.return_data[0]) > -1:
                revert with 'NH{q', 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            if not uint8(ext_call.return_data[0]):
                if not ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                return (ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                return (ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
            s = 10
            t = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if s > -1 / s:
                    revert with 'NH{q', 17
                if not bool(idx):
                    s = s * s
                    t = t
                    idx = uint255(idx) * 0.5
                    continue 
                s = s * s
                t = t * s
                idx = uint255(idx) * 0.5
                continue 
            if t > -1 / s:
                revert with 'NH{q', 17
            if not t * s:
                revert with 'NH{q', 18
            if not ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            return (ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
        s = 10
        t = 1
        idx = uint8(ext_call.return_data[0])
        while idx > 1:
            if s > -1 / s:
                revert with 'NH{q', 17
            if not bool(idx):
                s = s * s
                t = t
                idx = uint255(idx) * 0.5
                continue 
            s = s * s
            t = t * s
            idx = uint255(idx) * 0.5
            continue 
        if t > -1 / s:
            revert with 'NH{q', 17
        if not t * s:
            revert with 'NH{q', 18
        if not uint8(ext_call.return_data[0]):
            if not ext_call.return_data[18 len 14] / t * s:
                revert with 'NH{q', 18
            return (ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
            if 10^uint8(ext_call.return_data[0]) > -1:
                revert with 'NH{q', 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            if not ext_call.return_data[18 len 14] / t * s:
                revert with 'NH{q', 18
            return (ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
        u = 10
        v = 1
        idx = uint8(ext_call.return_data[0])
        while idx > 1:
            if u > -1 / u:
                revert with 'NH{q', 17
            if not bool(idx):
                u = u * u
                v = v
                idx = uint255(idx) * 0.5
                continue 
            u = u * u
            v = v * u
            idx = uint255(idx) * 0.5
            continue 
        if v > -1 / u:
            revert with 'NH{q', 17
        if not v * u:
            revert with 'NH{q', 18
        if not ext_call.return_data[18 len 14] / t * s:
            revert with 'NH{q', 18
        return (ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
    if address(ext_call.return_data[0]) != stor2:
        return 0
    if not uint8(ext_call.return_data[0]):
        if not uint8(ext_call.return_data[0]):
            if not ext_call.return_data[50 len 14]:
                revert with 'NH{q', 18
            return (ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
            if 10^uint8(ext_call.return_data[0]) > -1:
                revert with 'NH{q', 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            if not ext_call.return_data[50 len 14]:
                revert with 'NH{q', 18
            return (ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
        s = 10
        t = 1
        idx = uint8(ext_call.return_data[0])
        while idx > 1:
            if s > -1 / s:
                revert with 'NH{q', 17
            if not bool(idx):
                s = s * s
                t = t
                idx = uint255(idx) * 0.5
                continue 
            s = s * s
            t = t * s
            idx = uint255(idx) * 0.5
            continue 
        if t > -1 / s:
            revert with 'NH{q', 17
        if not t * s:
            revert with 'NH{q', 18
        if not ext_call.return_data[50 len 14]:
            revert with 'NH{q', 18
        return (ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
        if 10^uint8(ext_call.return_data[0]) > -1:
            revert with 'NH{q', 17
        if not 10^uint8(ext_call.return_data[0]):
            revert with 'NH{q', 18
        if not uint8(ext_call.return_data[0]):
            if not ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            return (ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
            if 10^uint8(ext_call.return_data[0]) > -1:
                revert with 'NH{q', 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            if not ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            return (ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
        s = 10
        t = 1
        idx = uint8(ext_call.return_data[0])
        while idx > 1:
            if s > -1 / s:
                revert with 'NH{q', 17
            if not bool(idx):
                s = s * s
                t = t
                idx = uint255(idx) * 0.5
                continue 
            s = s * s
            t = t * s
            idx = uint255(idx) * 0.5
            continue 
        if t > -1 / s:
            revert with 'NH{q', 17
        if not t * s:
            revert with 'NH{q', 18
        if not ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]):
            revert with 'NH{q', 18
        return (ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
    s = 10
    t = 1
    idx = uint8(ext_call.return_data[0])
    while idx > 1:
        if s > -1 / s:
            revert with 'NH{q', 17
        if not bool(idx):
            s = s * s
            t = t
            idx = uint255(idx) * 0.5
            continue 
        s = s * s
        t = t * s
        idx = uint255(idx) * 0.5
        continue 
    if t > -1 / s:
        revert with 'NH{q', 17
    if not t * s:
        revert with 'NH{q', 18
    if not uint8(ext_call.return_data[0]):
        if not ext_call.return_data[50 len 14] / t * s:
            revert with 'NH{q', 18
        return (ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
        if 10^uint8(ext_call.return_data[0]) > -1:
            revert with 'NH{q', 17
        if not 10^uint8(ext_call.return_data[0]):
            revert with 'NH{q', 18
        if not ext_call.return_data[50 len 14] / t * s:
            revert with 'NH{q', 18
        return (ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
    u = 10
    v = 1
    idx = uint8(ext_call.return_data[0])
    while idx > 1:
        if u > -1 / u:
            revert with 'NH{q', 17
        if not bool(idx):
            u = u * u
            v = v
            idx = uint255(idx) * 0.5
            continue 
        u = u * u
        v = v * u
        idx = uint255(idx) * 0.5
        continue 
    if v > -1 / u:
        revert with 'NH{q', 17
    if not v * u:
        revert with 'NH{q', 18
    if not ext_call.return_data[50 len 14] / t * s:
        revert with 'NH{q', 18
    return (ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
}

function getTokenPrice(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    staticcall stor1.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args address(arg1), arg2
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    staticcall address(ext_call.return_data[0]).token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    staticcall address(ext_call.return_data[0]).0xd21220a7 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    staticcall address(ext_call.return_data[0]).0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    staticcall address(ext_call.return_data[0]).0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    staticcall address(ext_call.return_data[0]).getReserves() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    staticcall stor1.getPair(address arg1, address arg2) with:
            gas gas_remaining wei
           args stor2, stor3
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    staticcall address(ext_call.return_data[0]).token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    staticcall address(ext_call.return_data[0]).0xd21220a7 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[12 len 20]
    staticcall address(ext_call.return_data[0]).0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    staticcall address(ext_call.return_data[0]).0x313ce567 with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[31 len 1]
    staticcall address(ext_call.return_data[0]).getReserves() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 96
    require ext_call.return_data[0] == ext_call.return_data[18 len 14]
    require ext_call.return_data[32] == ext_call.return_data[50 len 14]
    require ext_call.return_data[64] == ext_call.return_data[92 len 4]
    if address(ext_call.return_data[0]) == stor2:
        if not uint8(ext_call.return_data[0]):
            if not uint8(ext_call.return_data[0]):
                if not ext_call.return_data[18 len 14]:
                    revert with 'NH{q', 18
                if arg2 == stor2:
                    if address(ext_call.return_data[0]) == stor2:
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                    if address(ext_call.return_data[0]) != stor2:
                        return 0
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                else:
                    if arg1 != stor2:
                        if address(ext_call.return_data[0]) == arg1:
                            if not uint8(ext_call.return_data[0]):
                                if not uint8(ext_call.return_data[0]):
                                    if not Mask(112, 0, ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]))
                                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                    if 10^uint8(ext_call.return_data[0]) > -1:
                                        revert with 'NH{q', 17
                                    if not 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    if not Mask(112, 0, ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]))
                                s = 10
                                t = 1
                                idx = uint8(ext_call.return_data[0])
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 'NH{q', 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = t * s
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 'NH{q', 17
                                if not t * s:
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not uint8(ext_call.return_data[0]):
                                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                    if 10^uint8(ext_call.return_data[0]) > -1:
                                        revert with 'NH{q', 17
                                    if not 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                                s = 10
                                t = 1
                                idx = uint8(ext_call.return_data[0])
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 'NH{q', 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = t * s
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 'NH{q', 17
                                if not t * s:
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                            u = 10
                            v = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if u > -1 / u:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    u = u * u
                                    v = v
                                    idx = uint255(idx) * 0.5
                                    continue 
                                u = u * u
                                v = v * u
                                idx = uint255(idx) * 0.5
                                continue 
                            if v > -1 / u:
                                revert with 'NH{q', 17
                            if not v * u:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        if address(ext_call.return_data[0]) != arg1:
                            return 0
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    if address(ext_call.return_data[0]) == stor2:
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                    if address(ext_call.return_data[0]) != stor2:
                        return 0
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14])
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not ext_call.return_data[18 len 14]:
                    revert with 'NH{q', 18
                if arg2 == stor2:
                    if address(ext_call.return_data[0]) == stor2:
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                    if address(ext_call.return_data[0]) != stor2:
                        return 0
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                else:
                    if arg1 != stor2:
                        if address(ext_call.return_data[0]) == arg1:
                            if not uint8(ext_call.return_data[0]):
                                if not uint8(ext_call.return_data[0]):
                                    if not Mask(112, 0, ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]))
                                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                    if 10^uint8(ext_call.return_data[0]) > -1:
                                        revert with 'NH{q', 17
                                    if not 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    if not Mask(112, 0, ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]))
                                s = 10
                                t = 1
                                idx = uint8(ext_call.return_data[0])
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 'NH{q', 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = t * s
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 'NH{q', 17
                                if not t * s:
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not uint8(ext_call.return_data[0]):
                                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                    if 10^uint8(ext_call.return_data[0]) > -1:
                                        revert with 'NH{q', 17
                                    if not 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                                s = 10
                                t = 1
                                idx = uint8(ext_call.return_data[0])
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 'NH{q', 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = t * s
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 'NH{q', 17
                                if not t * s:
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                            u = 10
                            v = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if u > -1 / u:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    u = u * u
                                    v = v
                                    idx = uint255(idx) * 0.5
                                    continue 
                                u = u * u
                                v = v * u
                                idx = uint255(idx) * 0.5
                                continue 
                            if v > -1 / u:
                                revert with 'NH{q', 17
                            if not v * u:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        if address(ext_call.return_data[0]) != arg1:
                            return 0
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    if address(ext_call.return_data[0]) == stor2:
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                    if address(ext_call.return_data[0]) != stor2:
                        return 0
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14])
            s = 10
            t = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if s > -1 / s:
                    revert with 'NH{q', 17
                if not bool(idx):
                    s = s * s
                    t = t
                    idx = uint255(idx) * 0.5
                    continue 
                s = s * s
                t = t * s
                idx = uint255(idx) * 0.5
                continue 
            if t > -1 / s:
                revert with 'NH{q', 17
            if not t * s:
                revert with 'NH{q', 18
            if not ext_call.return_data[18 len 14]:
                revert with 'NH{q', 18
            if arg2 == stor2:
                if address(ext_call.return_data[0]) == stor2:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                    w = 10
                    x = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if w > -1 / w:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            w = w * w
                            x = x
                            idx = uint255(idx) * 0.5
                            continue 
                        w = w * w
                        x = x * w
                        idx = uint255(idx) * 0.5
                        continue 
                    if x > -1 / w:
                        revert with 'NH{q', 17
                    if not x * w:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                if address(ext_call.return_data[0]) != stor2:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
            else:
                if arg1 != stor2:
                    if address(ext_call.return_data[0]) == arg1:
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    if address(ext_call.return_data[0]) != arg1:
                        return 0
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s)
                if address(ext_call.return_data[0]) == stor2:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                    w = 10
                    x = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if w > -1 / w:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            w = w * w
                            x = x
                            idx = uint255(idx) * 0.5
                            continue 
                        w = w * w
                        x = x * w
                        idx = uint255(idx) * 0.5
                        continue 
                    if x > -1 / w:
                        revert with 'NH{q', 17
                    if not x * w:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                if address(ext_call.return_data[0]) != stor2:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
            if x > -1 / w:
                revert with 'NH{q', 17
            if not x * w:
                revert with 'NH{q', 18
            if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                revert with 'NH{q', 18
            if Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u:
                revert with 'NH{q', 17
            return (Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14])
        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
            if 10^uint8(ext_call.return_data[0]) > -1:
                revert with 'NH{q', 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            if not uint8(ext_call.return_data[0]):
                if not ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if arg2 == stor2:
                    if address(ext_call.return_data[0]) == stor2:
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if address(ext_call.return_data[0]) != stor2:
                        return 0
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                else:
                    if arg1 != stor2:
                        if address(ext_call.return_data[0]) == arg1:
                            if not uint8(ext_call.return_data[0]):
                                if not uint8(ext_call.return_data[0]):
                                    if not Mask(112, 0, ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]))
                                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                    if 10^uint8(ext_call.return_data[0]) > -1:
                                        revert with 'NH{q', 17
                                    if not 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    if not Mask(112, 0, ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]))
                                s = 10
                                t = 1
                                idx = uint8(ext_call.return_data[0])
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 'NH{q', 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = t * s
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 'NH{q', 17
                                if not t * s:
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not uint8(ext_call.return_data[0]):
                                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                    if 10^uint8(ext_call.return_data[0]) > -1:
                                        revert with 'NH{q', 17
                                    if not 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                                s = 10
                                t = 1
                                idx = uint8(ext_call.return_data[0])
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 'NH{q', 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = t * s
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 'NH{q', 17
                                if not t * s:
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                            u = 10
                            v = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if u > -1 / u:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    u = u * u
                                    v = v
                                    idx = uint255(idx) * 0.5
                                    continue 
                                u = u * u
                                v = v * u
                                idx = uint255(idx) * 0.5
                                continue 
                            if v > -1 / u:
                                revert with 'NH{q', 17
                            if not v * u:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        if address(ext_call.return_data[0]) != arg1:
                            return 0
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    if address(ext_call.return_data[0]) == stor2:
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if address(ext_call.return_data[0]) != stor2:
                        return 0
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if arg2 == stor2:
                    if address(ext_call.return_data[0]) == stor2:
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if address(ext_call.return_data[0]) != stor2:
                        return 0
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                else:
                    if arg1 != stor2:
                        if address(ext_call.return_data[0]) == arg1:
                            if not uint8(ext_call.return_data[0]):
                                if not uint8(ext_call.return_data[0]):
                                    if not Mask(112, 0, ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]))
                                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                    if 10^uint8(ext_call.return_data[0]) > -1:
                                        revert with 'NH{q', 17
                                    if not 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    if not Mask(112, 0, ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]))
                                s = 10
                                t = 1
                                idx = uint8(ext_call.return_data[0])
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 'NH{q', 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = t * s
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 'NH{q', 17
                                if not t * s:
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not uint8(ext_call.return_data[0]):
                                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                    if 10^uint8(ext_call.return_data[0]) > -1:
                                        revert with 'NH{q', 17
                                    if not 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                                s = 10
                                t = 1
                                idx = uint8(ext_call.return_data[0])
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 'NH{q', 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = t * s
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 'NH{q', 17
                                if not t * s:
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                            u = 10
                            v = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if u > -1 / u:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    u = u * u
                                    v = v
                                    idx = uint255(idx) * 0.5
                                    continue 
                                u = u * u
                                v = v * u
                                idx = uint255(idx) * 0.5
                                continue 
                            if v > -1 / u:
                                revert with 'NH{q', 17
                            if not v * u:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        if address(ext_call.return_data[0]) != arg1:
                            return 0
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    if address(ext_call.return_data[0]) == stor2:
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if address(ext_call.return_data[0]) != stor2:
                        return 0
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
            s = 10
            t = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if s > -1 / s:
                    revert with 'NH{q', 17
                if not bool(idx):
                    s = s * s
                    t = t
                    idx = uint255(idx) * 0.5
                    continue 
                s = s * s
                t = t * s
                idx = uint255(idx) * 0.5
                continue 
            if t > -1 / s:
                revert with 'NH{q', 17
            if not t * s:
                revert with 'NH{q', 18
            if not ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            if arg2 == stor2:
                if address(ext_call.return_data[0]) == stor2:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    w = 10
                    x = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if w > -1 / w:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            w = w * w
                            x = x
                            idx = uint255(idx) * 0.5
                            continue 
                        w = w * w
                        x = x * w
                        idx = uint255(idx) * 0.5
                        continue 
                    if x > -1 / w:
                        revert with 'NH{q', 17
                    if not x * w:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                if address(ext_call.return_data[0]) != stor2:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
            else:
                if arg1 != stor2:
                    if address(ext_call.return_data[0]) == arg1:
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    if address(ext_call.return_data[0]) != arg1:
                        return 0
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s)
                if address(ext_call.return_data[0]) == stor2:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    w = 10
                    x = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if w > -1 / w:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            w = w * w
                            x = x
                            idx = uint255(idx) * 0.5
                            continue 
                        w = w * w
                        x = x * w
                        idx = uint255(idx) * 0.5
                        continue 
                    if x > -1 / w:
                        revert with 'NH{q', 17
                    if not x * w:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                if address(ext_call.return_data[0]) != stor2:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
            if x > -1 / w:
                revert with 'NH{q', 17
            if not x * w:
                revert with 'NH{q', 18
            if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                revert with 'NH{q', 18
            if Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u:
                revert with 'NH{q', 17
            return (Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / t * s / ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]))
        s = 10
        t = 1
        idx = uint8(ext_call.return_data[0])
        while idx > 1:
            if s > -1 / s:
                revert with 'NH{q', 17
            if not bool(idx):
                s = s * s
                t = t
                idx = uint255(idx) * 0.5
                continue 
            s = s * s
            t = t * s
            idx = uint255(idx) * 0.5
            continue 
        if t > -1 / s:
            revert with 'NH{q', 17
        if not t * s:
            revert with 'NH{q', 18
        if not uint8(ext_call.return_data[0]):
            if not ext_call.return_data[18 len 14] / t * s:
                revert with 'NH{q', 18
            if arg2 == stor2:
                if address(ext_call.return_data[0]) == stor2:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                    w = 10
                    x = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if w > -1 / w:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            w = w * w
                            x = x
                            idx = uint255(idx) * 0.5
                            continue 
                        w = w * w
                        x = x * w
                        idx = uint255(idx) * 0.5
                        continue 
                    if x > -1 / w:
                        revert with 'NH{q', 17
                    if not x * w:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                if address(ext_call.return_data[0]) != stor2:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
            else:
                if arg1 != stor2:
                    if address(ext_call.return_data[0]) == arg1:
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    if address(ext_call.return_data[0]) != arg1:
                        return 0
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s)
                if address(ext_call.return_data[0]) == stor2:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                    w = 10
                    x = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if w > -1 / w:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            w = w * w
                            x = x
                            idx = uint255(idx) * 0.5
                            continue 
                        w = w * w
                        x = x * w
                        idx = uint255(idx) * 0.5
                        continue 
                    if x > -1 / w:
                        revert with 'NH{q', 17
                    if not x * w:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                if address(ext_call.return_data[0]) != stor2:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
            if x > -1 / w:
                revert with 'NH{q', 17
            if not x * w:
                revert with 'NH{q', 18
            if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                revert with 'NH{q', 18
            if Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u:
                revert with 'NH{q', 17
            return (Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / ext_call.return_data[18 len 14] / t * s)
        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
            if 10^uint8(ext_call.return_data[0]) > -1:
                revert with 'NH{q', 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            if not ext_call.return_data[18 len 14] / t * s:
                revert with 'NH{q', 18
            if arg2 == stor2:
                if address(ext_call.return_data[0]) == stor2:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                    w = 10
                    x = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if w > -1 / w:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            w = w * w
                            x = x
                            idx = uint255(idx) * 0.5
                            continue 
                        w = w * w
                        x = x * w
                        idx = uint255(idx) * 0.5
                        continue 
                    if x > -1 / w:
                        revert with 'NH{q', 17
                    if not x * w:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                if address(ext_call.return_data[0]) != stor2:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
            else:
                if arg1 != stor2:
                    if address(ext_call.return_data[0]) == arg1:
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    if address(ext_call.return_data[0]) != arg1:
                        return 0
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s)
                if address(ext_call.return_data[0]) == stor2:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                    w = 10
                    x = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if w > -1 / w:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            w = w * w
                            x = x
                            idx = uint255(idx) * 0.5
                            continue 
                        w = w * w
                        x = x * w
                        idx = uint255(idx) * 0.5
                        continue 
                    if x > -1 / w:
                        revert with 'NH{q', 17
                    if not x * w:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                if address(ext_call.return_data[0]) != stor2:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
            if x > -1 / w:
                revert with 'NH{q', 17
            if not x * w:
                revert with 'NH{q', 18
            if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                revert with 'NH{q', 18
            if Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u:
                revert with 'NH{q', 17
            return (Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[18 len 14] / t * s)
        u = 10
        v = 1
        idx = uint8(ext_call.return_data[0])
        while idx > 1:
            if u > -1 / u:
                revert with 'NH{q', 17
            if not bool(idx):
                u = u * u
                v = v
                idx = uint255(idx) * 0.5
                continue 
            u = u * u
            v = v * u
            idx = uint255(idx) * 0.5
            continue 
        if v > -1 / u:
            revert with 'NH{q', 17
        if not v * u:
            revert with 'NH{q', 18
        if not ext_call.return_data[18 len 14] / t * s:
            revert with 'NH{q', 18
        if arg2 == stor2:
            if address(ext_call.return_data[0]) == stor2:
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                    w = 10
                    x = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if w > -1 / w:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            w = w * w
                            x = x
                            idx = uint255(idx) * 0.5
                            continue 
                        w = w * w
                        x = x * w
                        idx = uint255(idx) * 0.5
                        continue 
                    if x > -1 / w:
                        revert with 'NH{q', 17
                    if not x * w:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                    w = 10
                    x = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if w > -1 / w:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            w = w * w
                            x = x
                            idx = uint255(idx) * 0.5
                            continue 
                        w = w * w
                        x = x * w
                        idx = uint255(idx) * 0.5
                        continue 
                    if x > -1 / w:
                        revert with 'NH{q', 17
                    if not x * w:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 'NH{q', 17
                if not x * w:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]) / x * w:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / x * w:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                y = 10
                z = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if y > -1 / y:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        y = y * y
                        z = z
                        idx = uint255(idx) * 0.5
                        continue 
                    y = y * y
                    z = z * y
                    idx = uint255(idx) * 0.5
                    continue 
                if z > -1 / y:
                    revert with 'NH{q', 17
                if not z * y:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / x * w:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[0]) / z * y / Mask(112, 0, ext_call.return_data[32]) / x * w and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / z * y / Mask(112, 0, ext_call.return_data[32]) / x * w:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[0]) / z * y / Mask(112, 0, ext_call.return_data[32]) / x * w * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
            if address(ext_call.return_data[0]) != stor2:
                return 0
            if not uint8(ext_call.return_data[0]):
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 'NH{q', 17
                if not x * w:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 'NH{q', 17
                if not x * w:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
            w = 10
            x = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if w > -1 / w:
                    revert with 'NH{q', 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = x * w
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 'NH{q', 17
            if not x * w:
                revert with 'NH{q', 18
            if not uint8(ext_call.return_data[0]):
                if not Mask(112, 0, ext_call.return_data[0]) / x * w:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / x * w and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / x * w:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / x * w * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / x * w:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / x * w and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / x * w:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / x * w * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
            y = 10
            z = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if y > -1 / y:
                    revert with 'NH{q', 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = z * y
                idx = uint255(idx) * 0.5
                continue 
        else:
            if arg1 != stor2:
                if address(ext_call.return_data[0]) == arg1:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s)
                if address(ext_call.return_data[0]) != arg1:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if s > -1 / s:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = t * s
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 'NH{q', 17
                if not t * s:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                    revert with 'NH{q', 18
                return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s)
            if address(ext_call.return_data[0]) == stor2:
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                    w = 10
                    x = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if w > -1 / w:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            w = w * w
                            x = x
                            idx = uint255(idx) * 0.5
                            continue 
                        w = w * w
                        x = x * w
                        idx = uint255(idx) * 0.5
                        continue 
                    if x > -1 / w:
                        revert with 'NH{q', 17
                    if not x * w:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                    w = 10
                    x = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if w > -1 / w:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            w = w * w
                            x = x
                            idx = uint255(idx) * 0.5
                            continue 
                        w = w * w
                        x = x * w
                        idx = uint255(idx) * 0.5
                        continue 
                    if x > -1 / w:
                        revert with 'NH{q', 17
                    if not x * w:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 'NH{q', 17
                if not x * w:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]) / x * w:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / x * w:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                y = 10
                z = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if y > -1 / y:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        y = y * y
                        z = z
                        idx = uint255(idx) * 0.5
                        continue 
                    y = y * y
                    z = z * y
                    idx = uint255(idx) * 0.5
                    continue 
                if z > -1 / y:
                    revert with 'NH{q', 17
                if not z * y:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / x * w:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[0]) / z * y / Mask(112, 0, ext_call.return_data[32]) / x * w and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / z * y / Mask(112, 0, ext_call.return_data[32]) / x * w:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[0]) / z * y / Mask(112, 0, ext_call.return_data[32]) / x * w * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
            if address(ext_call.return_data[0]) != stor2:
                return 0
            if not uint8(ext_call.return_data[0]):
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 'NH{q', 17
                if not x * w:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 'NH{q', 17
                if not x * w:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
            w = 10
            x = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if w > -1 / w:
                    revert with 'NH{q', 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = x * w
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 'NH{q', 17
            if not x * w:
                revert with 'NH{q', 18
            if not uint8(ext_call.return_data[0]):
                if not Mask(112, 0, ext_call.return_data[0]) / x * w:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / x * w and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / x * w:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / x * w * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / x * w:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / x * w and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / x * w:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / x * w * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
            y = 10
            z = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if y > -1 / y:
                    revert with 'NH{q', 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = z * y
                idx = uint255(idx) * 0.5
                continue 
        if z > -1 / y:
            revert with 'NH{q', 17
        if not z * y:
            revert with 'NH{q', 18
        if not Mask(112, 0, ext_call.return_data[0]) / x * w:
            revert with 'NH{q', 18
        if Mask(112, 0, ext_call.return_data[32]) / z * y / Mask(112, 0, ext_call.return_data[0]) / x * w and ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / z * y / Mask(112, 0, ext_call.return_data[0]) / x * w:
            revert with 'NH{q', 17
        return (Mask(112, 0, ext_call.return_data[32]) / z * y / Mask(112, 0, ext_call.return_data[0]) / x * w * ext_call.return_data[50 len 14] / v * u / ext_call.return_data[18 len 14] / t * s)
    if address(ext_call.return_data[0]) != stor2:
        if arg2 == stor2:
            if address(ext_call.return_data[0]) == stor2:
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and 0 > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                    else:
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and 0 > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                        else:
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) and 0 > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                else:
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and 0 > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                        else:
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and 0 > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                            else:
                                s = 10
                                t = 1
                                idx = uint8(ext_call.return_data[0])
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 'NH{q', 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = t * s
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 'NH{q', 17
                                if not t * s:
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and 0 > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                    else:
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and 0 > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 17
                        else:
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and 0 > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                    revert with 'NH{q', 17
                            else:
                                u = 10
                                v = 1
                                idx = uint8(ext_call.return_data[0])
                                while idx > 1:
                                    if u > -1 / u:
                                        revert with 'NH{q', 17
                                    if not bool(idx):
                                        u = u * u
                                        v = v
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    u = u * u
                                    v = v * u
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if v > -1 / u:
                                    revert with 'NH{q', 17
                                if not v * u:
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s and 0 > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                    revert with 'NH{q', 17
            else:
                if address(ext_call.return_data[0]) == stor2:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and 0 > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                        else:
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and 0 > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                            else:
                                s = 10
                                t = 1
                                idx = uint8(ext_call.return_data[0])
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 'NH{q', 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = t * s
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 'NH{q', 17
                                if not t * s:
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) and 0 > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                    else:
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 0 > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                            else:
                                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                    if 10^uint8(ext_call.return_data[0]) > -1:
                                        revert with 'NH{q', 17
                                    if not 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 0 > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 17
                                else:
                                    s = 10
                                    t = 1
                                    idx = uint8(ext_call.return_data[0])
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 'NH{q', 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = t * s
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 'NH{q', 17
                                    if not t * s:
                                        revert with 'NH{q', 18
                                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 0 > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 17
                        else:
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s and 0 > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                                    revert with 'NH{q', 17
                            else:
                                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                    if 10^uint8(ext_call.return_data[0]) > -1:
                                        revert with 'NH{q', 17
                                    if not 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                        revert with 'NH{q', 18
                                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s and 0 > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                                        revert with 'NH{q', 17
                                else:
                                    u = 10
                                    v = 1
                                    idx = uint8(ext_call.return_data[0])
                                    while idx > 1:
                                        if u > -1 / u:
                                            revert with 'NH{q', 17
                                        if not bool(idx):
                                            u = u * u
                                            v = v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        u = u * u
                                        v = v * u
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if v > -1 / u:
                                        revert with 'NH{q', 17
                                    if not v * u:
                                        revert with 'NH{q', 18
                                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                        revert with 'NH{q', 18
                                    if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s and 0 > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s:
                                        revert with 'NH{q', 17
        else:
            if arg1 != stor2:
                if address(ext_call.return_data[0]) == arg1:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s)
                if address(ext_call.return_data[0]) != arg1:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if s > -1 / s:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = t * s
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 'NH{q', 17
                if not t * s:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                    revert with 'NH{q', 18
                return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s)
            if address(ext_call.return_data[0]) == stor2:
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and 0 > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                    else:
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and 0 > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                        else:
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) and 0 > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                else:
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and 0 > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                        else:
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and 0 > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                            else:
                                s = 10
                                t = 1
                                idx = uint8(ext_call.return_data[0])
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 'NH{q', 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = t * s
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 'NH{q', 17
                                if not t * s:
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and 0 > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                    else:
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and 0 > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                revert with 'NH{q', 17
                        else:
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and 0 > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                    revert with 'NH{q', 17
                            else:
                                u = 10
                                v = 1
                                idx = uint8(ext_call.return_data[0])
                                while idx > 1:
                                    if u > -1 / u:
                                        revert with 'NH{q', 17
                                    if not bool(idx):
                                        u = u * u
                                        v = v
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    u = u * u
                                    v = v * u
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if v > -1 / u:
                                    revert with 'NH{q', 17
                                if not v * u:
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s and 0 > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s:
                                    revert with 'NH{q', 17
            else:
                if address(ext_call.return_data[0]) == stor2:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and 0 > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 17
                        else:
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and 0 > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                            else:
                                s = 10
                                t = 1
                                idx = uint8(ext_call.return_data[0])
                                while idx > 1:
                                    if s > -1 / s:
                                        revert with 'NH{q', 17
                                    if not bool(idx):
                                        s = s * s
                                        t = t
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    s = s * s
                                    t = t * s
                                    idx = uint255(idx) * 0.5
                                    continue 
                                if t > -1 / s:
                                    revert with 'NH{q', 17
                                if not t * s:
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) and 0 > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                    else:
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 0 > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 17
                            else:
                                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                    if 10^uint8(ext_call.return_data[0]) > -1:
                                        revert with 'NH{q', 17
                                    if not 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 0 > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 17
                                else:
                                    s = 10
                                    t = 1
                                    idx = uint8(ext_call.return_data[0])
                                    while idx > 1:
                                        if s > -1 / s:
                                            revert with 'NH{q', 17
                                        if not bool(idx):
                                            s = s * s
                                            t = t
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        s = s * s
                                        t = t * s
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if t > -1 / s:
                                        revert with 'NH{q', 17
                                    if not t * s:
                                        revert with 'NH{q', 18
                                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and 0 > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 17
                        else:
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                    revert with 'NH{q', 18
                                if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s and 0 > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                                    revert with 'NH{q', 17
                            else:
                                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                    if 10^uint8(ext_call.return_data[0]) > -1:
                                        revert with 'NH{q', 17
                                    if not 10^uint8(ext_call.return_data[0]):
                                        revert with 'NH{q', 18
                                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                        revert with 'NH{q', 18
                                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s and 0 > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                                        revert with 'NH{q', 17
                                else:
                                    u = 10
                                    v = 1
                                    idx = uint8(ext_call.return_data[0])
                                    while idx > 1:
                                        if u > -1 / u:
                                            revert with 'NH{q', 17
                                        if not bool(idx):
                                            u = u * u
                                            v = v
                                            idx = uint255(idx) * 0.5
                                            continue 
                                        u = u * u
                                        v = v * u
                                        idx = uint255(idx) * 0.5
                                        continue 
                                    if v > -1 / u:
                                        revert with 'NH{q', 17
                                    if not v * u:
                                        revert with 'NH{q', 18
                                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                        revert with 'NH{q', 18
                                    if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s and 0 > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s:
                                        revert with 'NH{q', 17
        return 0
    if not uint8(ext_call.return_data[0]):
        if not uint8(ext_call.return_data[0]):
            if not ext_call.return_data[50 len 14]:
                revert with 'NH{q', 18
            if arg2 == stor2:
                if address(ext_call.return_data[0]) == stor2:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                if address(ext_call.return_data[0]) != stor2:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                s = 10
                t = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if s > -1 / s:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = t * s
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 'NH{q', 17
                if not t * s:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
            else:
                if arg1 != stor2:
                    if address(ext_call.return_data[0]) == arg1:
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    if address(ext_call.return_data[0]) != arg1:
                        return 0
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s)
                if address(ext_call.return_data[0]) == stor2:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                if address(ext_call.return_data[0]) != stor2:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                s = 10
                t = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if s > -1 / s:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = t * s
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 'NH{q', 17
                if not t * s:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
            if v > -1 / u:
                revert with 'NH{q', 17
            if not v * u:
                revert with 'NH{q', 18
            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                revert with 'NH{q', 18
            if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s:
                revert with 'NH{q', 17
            return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14])
        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
            if 10^uint8(ext_call.return_data[0]) > -1:
                revert with 'NH{q', 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            if not ext_call.return_data[50 len 14]:
                revert with 'NH{q', 18
            if arg2 == stor2:
                if address(ext_call.return_data[0]) == stor2:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                if address(ext_call.return_data[0]) != stor2:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                s = 10
                t = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if s > -1 / s:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = t * s
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 'NH{q', 17
                if not t * s:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
            else:
                if arg1 != stor2:
                    if address(ext_call.return_data[0]) == arg1:
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    if address(ext_call.return_data[0]) != arg1:
                        return 0
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s)
                if address(ext_call.return_data[0]) == stor2:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                if address(ext_call.return_data[0]) != stor2:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                s = 10
                t = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if s > -1 / s:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = t * s
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 'NH{q', 17
                if not t * s:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
            if v > -1 / u:
                revert with 'NH{q', 17
            if not v * u:
                revert with 'NH{q', 18
            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                revert with 'NH{q', 18
            if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s:
                revert with 'NH{q', 17
            return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14])
        s = 10
        t = 1
        idx = uint8(ext_call.return_data[0])
        while idx > 1:
            if s > -1 / s:
                revert with 'NH{q', 17
            if not bool(idx):
                s = s * s
                t = t
                idx = uint255(idx) * 0.5
                continue 
            s = s * s
            t = t * s
            idx = uint255(idx) * 0.5
            continue 
        if t > -1 / s:
            revert with 'NH{q', 17
        if not t * s:
            revert with 'NH{q', 18
        if not ext_call.return_data[50 len 14]:
            revert with 'NH{q', 18
        if arg2 == stor2:
            if address(ext_call.return_data[0]) == stor2:
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 'NH{q', 17
                if not x * w:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
            if address(ext_call.return_data[0]) != stor2:
                return 0
            if not uint8(ext_call.return_data[0]):
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
            u = 10
            v = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if u > -1 / u:
                    revert with 'NH{q', 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = v * u
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 'NH{q', 17
            if not v * u:
                revert with 'NH{q', 18
            if not uint8(ext_call.return_data[0]):
                if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
            w = 10
            x = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if w > -1 / w:
                    revert with 'NH{q', 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = x * w
                idx = uint255(idx) * 0.5
                continue 
        else:
            if arg1 != stor2:
                if address(ext_call.return_data[0]) == arg1:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s)
                if address(ext_call.return_data[0]) != arg1:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if s > -1 / s:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = t * s
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 'NH{q', 17
                if not t * s:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                    revert with 'NH{q', 18
                return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s)
            if address(ext_call.return_data[0]) == stor2:
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 'NH{q', 17
                if not x * w:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
            if address(ext_call.return_data[0]) != stor2:
                return 0
            if not uint8(ext_call.return_data[0]):
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
            u = 10
            v = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if u > -1 / u:
                    revert with 'NH{q', 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = v * u
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 'NH{q', 17
            if not v * u:
                revert with 'NH{q', 18
            if not uint8(ext_call.return_data[0]):
                if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
            w = 10
            x = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if w > -1 / w:
                    revert with 'NH{q', 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = x * w
                idx = uint255(idx) * 0.5
                continue 
        if x > -1 / w:
            revert with 'NH{q', 17
        if not x * w:
            revert with 'NH{q', 18
        if not Mask(112, 0, ext_call.return_data[0]) / v * u:
            revert with 'NH{q', 18
        if Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] > -1 / Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u:
            revert with 'NH{q', 17
        return (Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14])
    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
        if 10^uint8(ext_call.return_data[0]) > -1:
            revert with 'NH{q', 17
        if not 10^uint8(ext_call.return_data[0]):
            revert with 'NH{q', 18
        if not uint8(ext_call.return_data[0]):
            if not ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            if arg2 == stor2:
                if address(ext_call.return_data[0]) == stor2:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if address(ext_call.return_data[0]) != stor2:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if s > -1 / s:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = t * s
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 'NH{q', 17
                if not t * s:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
            else:
                if arg1 != stor2:
                    if address(ext_call.return_data[0]) == arg1:
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    if address(ext_call.return_data[0]) != arg1:
                        return 0
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s)
                if address(ext_call.return_data[0]) == stor2:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if address(ext_call.return_data[0]) != stor2:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if s > -1 / s:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = t * s
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 'NH{q', 17
                if not t * s:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
            if v > -1 / u:
                revert with 'NH{q', 17
            if not v * u:
                revert with 'NH{q', 18
            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                revert with 'NH{q', 18
            if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s:
                revert with 'NH{q', 17
            return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
            if 10^uint8(ext_call.return_data[0]) > -1:
                revert with 'NH{q', 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            if not ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            if arg2 == stor2:
                if address(ext_call.return_data[0]) == stor2:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if address(ext_call.return_data[0]) != stor2:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if s > -1 / s:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = t * s
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 'NH{q', 17
                if not t * s:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
            else:
                if arg1 != stor2:
                    if address(ext_call.return_data[0]) == arg1:
                        if not uint8(ext_call.return_data[0]):
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not uint8(ext_call.return_data[0]):
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                                if 10^uint8(ext_call.return_data[0]) > -1:
                                    revert with 'NH{q', 17
                                if not 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                    revert with 'NH{q', 18
                                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                            s = 10
                            t = 1
                            idx = uint8(ext_call.return_data[0])
                            while idx > 1:
                                if s > -1 / s:
                                    revert with 'NH{q', 17
                                if not bool(idx):
                                    s = s * s
                                    t = t
                                    idx = uint255(idx) * 0.5
                                    continue 
                                s = s * s
                                t = t * s
                                idx = uint255(idx) * 0.5
                                continue 
                            if t > -1 / s:
                                revert with 'NH{q', 17
                            if not t * s:
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                        u = 10
                        v = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if u > -1 / u:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                u = u * u
                                v = v
                                idx = uint255(idx) * 0.5
                                continue 
                            u = u * u
                            v = v * u
                            idx = uint255(idx) * 0.5
                            continue 
                        if v > -1 / u:
                            revert with 'NH{q', 17
                        if not v * u:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    if address(ext_call.return_data[0]) != arg1:
                        return 0
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s)
                if address(ext_call.return_data[0]) == stor2:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 17
                            return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s:
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if address(ext_call.return_data[0]) != stor2:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if s > -1 / s:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = t * s
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 'NH{q', 17
                if not t * s:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
            if v > -1 / u:
                revert with 'NH{q', 17
            if not v * u:
                revert with 'NH{q', 18
            if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                revert with 'NH{q', 18
            if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s:
                revert with 'NH{q', 17
            return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
        s = 10
        t = 1
        idx = uint8(ext_call.return_data[0])
        while idx > 1:
            if s > -1 / s:
                revert with 'NH{q', 17
            if not bool(idx):
                s = s * s
                t = t
                idx = uint255(idx) * 0.5
                continue 
            s = s * s
            t = t * s
            idx = uint255(idx) * 0.5
            continue 
        if t > -1 / s:
            revert with 'NH{q', 17
        if not t * s:
            revert with 'NH{q', 18
        if not ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]):
            revert with 'NH{q', 18
        if arg2 == stor2:
            if address(ext_call.return_data[0]) == stor2:
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 'NH{q', 17
                if not x * w:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
            if address(ext_call.return_data[0]) != stor2:
                return 0
            if not uint8(ext_call.return_data[0]):
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
            u = 10
            v = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if u > -1 / u:
                    revert with 'NH{q', 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = v * u
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 'NH{q', 17
            if not v * u:
                revert with 'NH{q', 18
            if not uint8(ext_call.return_data[0]):
                if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
            w = 10
            x = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if w > -1 / w:
                    revert with 'NH{q', 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = x * w
                idx = uint255(idx) * 0.5
                continue 
        else:
            if arg1 != stor2:
                if address(ext_call.return_data[0]) == arg1:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s)
                if address(ext_call.return_data[0]) != arg1:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if s > -1 / s:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = t * s
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 'NH{q', 17
                if not t * s:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                    revert with 'NH{q', 18
                return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s)
            if address(ext_call.return_data[0]) == stor2:
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 'NH{q', 17
                if not x * w:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
            if address(ext_call.return_data[0]) != stor2:
                return 0
            if not uint8(ext_call.return_data[0]):
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
            u = 10
            v = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if u > -1 / u:
                    revert with 'NH{q', 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = v * u
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 'NH{q', 17
            if not v * u:
                revert with 'NH{q', 18
            if not uint8(ext_call.return_data[0]):
                if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
            w = 10
            x = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if w > -1 / w:
                    revert with 'NH{q', 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = x * w
                idx = uint255(idx) * 0.5
                continue 
        if x > -1 / w:
            revert with 'NH{q', 17
        if not x * w:
            revert with 'NH{q', 18
        if not Mask(112, 0, ext_call.return_data[0]) / v * u:
            revert with 'NH{q', 18
        if Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]) > -1 / Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u:
            revert with 'NH{q', 17
        return (Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / t * s / ext_call.return_data[50 len 14] / 10^uint8(ext_call.return_data[0]))
    s = 10
    t = 1
    idx = uint8(ext_call.return_data[0])
    while idx > 1:
        if s > -1 / s:
            revert with 'NH{q', 17
        if not bool(idx):
            s = s * s
            t = t
            idx = uint255(idx) * 0.5
            continue 
        s = s * s
        t = t * s
        idx = uint255(idx) * 0.5
        continue 
    if t > -1 / s:
        revert with 'NH{q', 17
    if not t * s:
        revert with 'NH{q', 18
    if not uint8(ext_call.return_data[0]):
        if not ext_call.return_data[50 len 14] / t * s:
            revert with 'NH{q', 18
        if arg2 == stor2:
            if address(ext_call.return_data[0]) == stor2:
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 'NH{q', 17
                if not x * w:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
            if address(ext_call.return_data[0]) != stor2:
                return 0
            if not uint8(ext_call.return_data[0]):
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
            u = 10
            v = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if u > -1 / u:
                    revert with 'NH{q', 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = v * u
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 'NH{q', 17
            if not v * u:
                revert with 'NH{q', 18
            if not uint8(ext_call.return_data[0]):
                if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
            w = 10
            x = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if w > -1 / w:
                    revert with 'NH{q', 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = x * w
                idx = uint255(idx) * 0.5
                continue 
        else:
            if arg1 != stor2:
                if address(ext_call.return_data[0]) == arg1:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s)
                if address(ext_call.return_data[0]) != arg1:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if s > -1 / s:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = t * s
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 'NH{q', 17
                if not t * s:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                    revert with 'NH{q', 18
                return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s)
            if address(ext_call.return_data[0]) == stor2:
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 'NH{q', 17
                if not x * w:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
            if address(ext_call.return_data[0]) != stor2:
                return 0
            if not uint8(ext_call.return_data[0]):
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
            u = 10
            v = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if u > -1 / u:
                    revert with 'NH{q', 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = v * u
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 'NH{q', 17
            if not v * u:
                revert with 'NH{q', 18
            if not uint8(ext_call.return_data[0]):
                if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
            w = 10
            x = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if w > -1 / w:
                    revert with 'NH{q', 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = x * w
                idx = uint255(idx) * 0.5
                continue 
        if x > -1 / w:
            revert with 'NH{q', 17
        if not x * w:
            revert with 'NH{q', 18
        if not Mask(112, 0, ext_call.return_data[0]) / v * u:
            revert with 'NH{q', 18
        if Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u:
            revert with 'NH{q', 17
        return (Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / ext_call.return_data[50 len 14] / t * s)
    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
        if 10^uint8(ext_call.return_data[0]) > -1:
            revert with 'NH{q', 17
        if not 10^uint8(ext_call.return_data[0]):
            revert with 'NH{q', 18
        if not ext_call.return_data[50 len 14] / t * s:
            revert with 'NH{q', 18
        if arg2 == stor2:
            if address(ext_call.return_data[0]) == stor2:
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 'NH{q', 17
                if not x * w:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
            if address(ext_call.return_data[0]) != stor2:
                return 0
            if not uint8(ext_call.return_data[0]):
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
            u = 10
            v = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if u > -1 / u:
                    revert with 'NH{q', 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = v * u
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 'NH{q', 17
            if not v * u:
                revert with 'NH{q', 18
            if not uint8(ext_call.return_data[0]):
                if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
            w = 10
            x = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if w > -1 / w:
                    revert with 'NH{q', 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = x * w
                idx = uint255(idx) * 0.5
                continue 
        else:
            if arg1 != stor2:
                if address(ext_call.return_data[0]) == arg1:
                    if not uint8(ext_call.return_data[0]):
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not uint8(ext_call.return_data[0]):
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                            if 10^uint8(ext_call.return_data[0]) > -1:
                                revert with 'NH{q', 17
                            if not 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                                revert with 'NH{q', 18
                            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                        s = 10
                        t = 1
                        idx = uint8(ext_call.return_data[0])
                        while idx > 1:
                            if s > -1 / s:
                                revert with 'NH{q', 17
                            if not bool(idx):
                                s = s * s
                                t = t
                                idx = uint255(idx) * 0.5
                                continue 
                            s = s * s
                            t = t * s
                            idx = uint255(idx) * 0.5
                            continue 
                        if t > -1 / s:
                            revert with 'NH{q', 17
                        if not t * s:
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s)
                if address(ext_call.return_data[0]) != arg1:
                    return 0
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if s > -1 / s:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = t * s
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 'NH{q', 17
                if not t * s:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                    revert with 'NH{q', 18
                return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s)
            if address(ext_call.return_data[0]) == stor2:
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 17
                        return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                    u = 10
                    v = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if u > -1 / u:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            u = u * u
                            v = v
                            idx = uint255(idx) * 0.5
                            continue 
                        u = u * u
                        v = v * u
                        idx = uint255(idx) * 0.5
                        continue 
                    if v > -1 / u:
                        revert with 'NH{q', 17
                    if not v * u:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u:
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 'NH{q', 17
                if not x * w:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / v * u * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
            if address(ext_call.return_data[0]) != stor2:
                return 0
            if not uint8(ext_call.return_data[0]):
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
            u = 10
            v = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if u > -1 / u:
                    revert with 'NH{q', 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = v * u
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 'NH{q', 17
            if not v * u:
                revert with 'NH{q', 18
            if not uint8(ext_call.return_data[0]):
                if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
            w = 10
            x = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if w > -1 / w:
                    revert with 'NH{q', 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = x * w
                idx = uint255(idx) * 0.5
                continue 
        if x > -1 / w:
            revert with 'NH{q', 17
        if not x * w:
            revert with 'NH{q', 18
        if not Mask(112, 0, ext_call.return_data[0]) / v * u:
            revert with 'NH{q', 18
        if Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u and ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u:
            revert with 'NH{q', 17
        return (Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / v * u * ext_call.return_data[18 len 14] / 10^uint8(ext_call.return_data[0]) / ext_call.return_data[50 len 14] / t * s)
    u = 10
    v = 1
    idx = uint8(ext_call.return_data[0])
    while idx > 1:
        if u > -1 / u:
            revert with 'NH{q', 17
        if not bool(idx):
            u = u * u
            v = v
            idx = uint255(idx) * 0.5
            continue 
        u = u * u
        v = v * u
        idx = uint255(idx) * 0.5
        continue 
    if v > -1 / u:
        revert with 'NH{q', 17
    if not v * u:
        revert with 'NH{q', 18
    if not ext_call.return_data[50 len 14] / t * s:
        revert with 'NH{q', 18
    if arg2 == stor2:
        if address(ext_call.return_data[0]) == stor2:
            if not uint8(ext_call.return_data[0]):
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 'NH{q', 17
                if not x * w:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 'NH{q', 17
                if not x * w:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
            w = 10
            x = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if w > -1 / w:
                    revert with 'NH{q', 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = x * w
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 'NH{q', 17
            if not x * w:
                revert with 'NH{q', 18
            if not uint8(ext_call.return_data[0]):
                if not Mask(112, 0, ext_call.return_data[32]) / x * w:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / x * w:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
            y = 10
            z = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if y > -1 / y:
                    revert with 'NH{q', 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = z * y
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 'NH{q', 17
            if not z * y:
                revert with 'NH{q', 18
            if not Mask(112, 0, ext_call.return_data[32]) / x * w:
                revert with 'NH{q', 18
            if Mask(112, 0, ext_call.return_data[0]) / z * y / Mask(112, 0, ext_call.return_data[32]) / x * w and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / z * y / Mask(112, 0, ext_call.return_data[32]) / x * w:
                revert with 'NH{q', 17
            return (Mask(112, 0, ext_call.return_data[0]) / z * y / Mask(112, 0, ext_call.return_data[32]) / x * w * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
        if address(ext_call.return_data[0]) != stor2:
            return 0
        if not uint8(ext_call.return_data[0]):
            if not uint8(ext_call.return_data[0]):
                if not Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
            w = 10
            x = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if w > -1 / w:
                    revert with 'NH{q', 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = x * w
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 'NH{q', 17
            if not x * w:
                revert with 'NH{q', 18
            if not Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 18
            if Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            return (Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
            if 10^uint8(ext_call.return_data[0]) > -1:
                revert with 'NH{q', 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            if not uint8(ext_call.return_data[0]):
                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
            w = 10
            x = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if w > -1 / w:
                    revert with 'NH{q', 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = x * w
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 'NH{q', 17
            if not x * w:
                revert with 'NH{q', 18
            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            if Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 17
            return (Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
        w = 10
        x = 1
        idx = uint8(ext_call.return_data[0])
        while idx > 1:
            if w > -1 / w:
                revert with 'NH{q', 17
            if not bool(idx):
                w = w * w
                x = x
                idx = uint255(idx) * 0.5
                continue 
            w = w * w
            x = x * w
            idx = uint255(idx) * 0.5
            continue 
        if x > -1 / w:
            revert with 'NH{q', 17
        if not x * w:
            revert with 'NH{q', 18
        if not uint8(ext_call.return_data[0]):
            if not Mask(112, 0, ext_call.return_data[0]) / x * w:
                revert with 'NH{q', 18
            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / x * w and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / x * w:
                revert with 'NH{q', 17
            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / x * w * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
            if 10^uint8(ext_call.return_data[0]) > -1:
                revert with 'NH{q', 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            if not Mask(112, 0, ext_call.return_data[0]) / x * w:
                revert with 'NH{q', 18
            if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / x * w and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / x * w:
                revert with 'NH{q', 17
            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / x * w * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
        y = 10
        z = 1
        idx = uint8(ext_call.return_data[0])
        while idx > 1:
            if y > -1 / y:
                revert with 'NH{q', 17
            if not bool(idx):
                y = y * y
                z = z
                idx = uint255(idx) * 0.5
                continue 
            y = y * y
            z = z * y
            idx = uint255(idx) * 0.5
            continue 
    else:
        if arg1 != stor2:
            if address(ext_call.return_data[0]) == arg1:
                if not uint8(ext_call.return_data[0]):
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not uint8(ext_call.return_data[0]):
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                        if 10^uint8(ext_call.return_data[0]) > -1:
                            revert with 'NH{q', 17
                        if not 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                            revert with 'NH{q', 18
                        return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                    s = 10
                    t = 1
                    idx = uint8(ext_call.return_data[0])
                    while idx > 1:
                        if s > -1 / s:
                            revert with 'NH{q', 17
                        if not bool(idx):
                            s = s * s
                            t = t
                            idx = uint255(idx) * 0.5
                            continue 
                        s = s * s
                        t = t * s
                        idx = uint255(idx) * 0.5
                        continue 
                    if t > -1 / s:
                        revert with 'NH{q', 17
                    if not t * s:
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[32]) / t * s / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if s > -1 / s:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = t * s
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 'NH{q', 17
                if not t * s:
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / t * s)
                u = 10
                v = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if u > -1 / u:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        u = u * u
                        v = v
                        idx = uint255(idx) * 0.5
                        continue 
                    u = u * u
                    v = v * u
                    idx = uint255(idx) * 0.5
                    continue 
                if v > -1 / u:
                    revert with 'NH{q', 17
                if not v * u:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / t * s:
                    revert with 'NH{q', 18
                return (Mask(112, 0, ext_call.return_data[32]) / v * u / Mask(112, 0, ext_call.return_data[0]) / t * s)
            if address(ext_call.return_data[0]) != arg1:
                return 0
            if not uint8(ext_call.return_data[0]):
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]))
                s = 10
                t = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if s > -1 / s:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = t * s
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 'NH{q', 17
                if not t * s:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]):
                    revert with 'NH{q', 18
                return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]))
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
                s = 10
                t = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if s > -1 / s:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        s = s * s
                        t = t
                        idx = uint255(idx) * 0.5
                        continue 
                    s = s * s
                    t = t * s
                    idx = uint255(idx) * 0.5
                    continue 
                if t > -1 / s:
                    revert with 'NH{q', 17
                if not t * s:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                return (Mask(112, 0, ext_call.return_data[0]) / t * s / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]))
            s = 10
            t = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if s > -1 / s:
                    revert with 'NH{q', 17
                if not bool(idx):
                    s = s * s
                    t = t
                    idx = uint255(idx) * 0.5
                    continue 
                s = s * s
                t = t * s
                idx = uint255(idx) * 0.5
                continue 
            if t > -1 / s:
                revert with 'NH{q', 17
            if not t * s:
                revert with 'NH{q', 18
            if not uint8(ext_call.return_data[0]):
                if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                    revert with 'NH{q', 18
                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                    revert with 'NH{q', 18
                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / t * s)
            u = 10
            v = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if u > -1 / u:
                    revert with 'NH{q', 17
                if not bool(idx):
                    u = u * u
                    v = v
                    idx = uint255(idx) * 0.5
                    continue 
                u = u * u
                v = v * u
                idx = uint255(idx) * 0.5
                continue 
            if v > -1 / u:
                revert with 'NH{q', 17
            if not v * u:
                revert with 'NH{q', 18
            if not Mask(112, 0, ext_call.return_data[32]) / t * s:
                revert with 'NH{q', 18
            return (Mask(112, 0, ext_call.return_data[0]) / v * u / Mask(112, 0, ext_call.return_data[32]) / t * s)
        if address(ext_call.return_data[0]) == stor2:
            if not uint8(ext_call.return_data[0]):
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 'NH{q', 17
                if not x * w:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not uint8(ext_call.return_data[0]):
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
                if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                    if 10^uint8(ext_call.return_data[0]) > -1:
                        revert with 'NH{q', 17
                    if not 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 18
                    if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                        revert with 'NH{q', 17
                    return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
                w = 10
                x = 1
                idx = uint8(ext_call.return_data[0])
                while idx > 1:
                    if w > -1 / w:
                        revert with 'NH{q', 17
                    if not bool(idx):
                        w = w * w
                        x = x
                        idx = uint255(idx) * 0.5
                        continue 
                    w = w * w
                    x = x * w
                    idx = uint255(idx) * 0.5
                    continue 
                if x > -1 / w:
                    revert with 'NH{q', 17
                if not x * w:
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[0]) / x * w / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
            w = 10
            x = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if w > -1 / w:
                    revert with 'NH{q', 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = x * w
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 'NH{q', 17
            if not x * w:
                revert with 'NH{q', 18
            if not uint8(ext_call.return_data[0]):
                if not Mask(112, 0, ext_call.return_data[32]) / x * w:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[32]) / x * w:
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w:
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[32]) / x * w * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
            y = 10
            z = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if y > -1 / y:
                    revert with 'NH{q', 17
                if not bool(idx):
                    y = y * y
                    z = z
                    idx = uint255(idx) * 0.5
                    continue 
                y = y * y
                z = z * y
                idx = uint255(idx) * 0.5
                continue 
            if z > -1 / y:
                revert with 'NH{q', 17
            if not z * y:
                revert with 'NH{q', 18
            if not Mask(112, 0, ext_call.return_data[32]) / x * w:
                revert with 'NH{q', 18
            if Mask(112, 0, ext_call.return_data[0]) / z * y / Mask(112, 0, ext_call.return_data[32]) / x * w and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[0]) / z * y / Mask(112, 0, ext_call.return_data[32]) / x * w:
                revert with 'NH{q', 17
            return (Mask(112, 0, ext_call.return_data[0]) / z * y / Mask(112, 0, ext_call.return_data[32]) / x * w * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
        if address(ext_call.return_data[0]) != stor2:
            return 0
        if not uint8(ext_call.return_data[0]):
            if not uint8(ext_call.return_data[0]):
                if not Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
            w = 10
            x = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if w > -1 / w:
                    revert with 'NH{q', 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = x * w
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 'NH{q', 17
            if not x * w:
                revert with 'NH{q', 18
            if not Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 18
            if Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]):
                revert with 'NH{q', 17
            return (Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
            if 10^uint8(ext_call.return_data[0]) > -1:
                revert with 'NH{q', 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            if not uint8(ext_call.return_data[0]):
                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
            if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
                if 10^uint8(ext_call.return_data[0]) > -1:
                    revert with 'NH{q', 17
                if not 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 18
                if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                    revert with 'NH{q', 17
                return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
            w = 10
            x = 1
            idx = uint8(ext_call.return_data[0])
            while idx > 1:
                if w > -1 / w:
                    revert with 'NH{q', 17
                if not bool(idx):
                    w = w * w
                    x = x
                    idx = uint255(idx) * 0.5
                    continue 
                w = w * w
                x = x * w
                idx = uint255(idx) * 0.5
                continue 
            if x > -1 / w:
                revert with 'NH{q', 17
            if not x * w:
                revert with 'NH{q', 18
            if not Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            if Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 17
            return (Mask(112, 0, ext_call.return_data[32]) / x * w / Mask(112, 0, ext_call.return_data[0]) / 10^uint8(ext_call.return_data[0]) * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
        w = 10
        x = 1
        idx = uint8(ext_call.return_data[0])
        while idx > 1:
            if w > -1 / w:
                revert with 'NH{q', 17
            if not bool(idx):
                w = w * w
                x = x
                idx = uint255(idx) * 0.5
                continue 
            w = w * w
            x = x * w
            idx = uint255(idx) * 0.5
            continue 
        if x > -1 / w:
            revert with 'NH{q', 17
        if not x * w:
            revert with 'NH{q', 18
        if not uint8(ext_call.return_data[0]):
            if not Mask(112, 0, ext_call.return_data[0]) / x * w:
                revert with 'NH{q', 18
            if Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / x * w and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / x * w:
                revert with 'NH{q', 17
            return (Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[0]) / x * w * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
        if bool(bool(uint8(ext_call.return_data[0]) < 78)) or bool(bool(uint8(ext_call.return_data[0]) < 32)):
            if 10^uint8(ext_call.return_data[0]) > -1:
                revert with 'NH{q', 17
            if not 10^uint8(ext_call.return_data[0]):
                revert with 'NH{q', 18
            if not Mask(112, 0, ext_call.return_data[0]) / x * w:
                revert with 'NH{q', 18
            if Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / x * w and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / x * w:
                revert with 'NH{q', 17
            return (Mask(112, 0, ext_call.return_data[32]) / 10^uint8(ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) / x * w * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
        y = 10
        z = 1
        idx = uint8(ext_call.return_data[0])
        while idx > 1:
            if y > -1 / y:
                revert with 'NH{q', 17
            if not bool(idx):
                y = y * y
                z = z
                idx = uint255(idx) * 0.5
                continue 
            y = y * y
            z = z * y
            idx = uint255(idx) * 0.5
            continue 
    if z > -1 / y:
        revert with 'NH{q', 17
    if not z * y:
        revert with 'NH{q', 18
    if not Mask(112, 0, ext_call.return_data[0]) / x * w:
        revert with 'NH{q', 18
    if Mask(112, 0, ext_call.return_data[32]) / z * y / Mask(112, 0, ext_call.return_data[0]) / x * w and ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s > -1 / Mask(112, 0, ext_call.return_data[32]) / z * y / Mask(112, 0, ext_call.return_data[0]) / x * w:
        revert with 'NH{q', 17
    return (Mask(112, 0, ext_call.return_data[32]) / z * y / Mask(112, 0, ext_call.return_data[0]) / x * w * ext_call.return_data[18 len 14] / v * u / ext_call.return_data[50 len 14] / t * s)
}



}
